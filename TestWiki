
## #1 Option to manually input synchronization value.
When the program has to be restarted several times due to other errors, it would save time if we could skip the synchronization step, by just manually typing in the synchronization value of the last run.

#### 2011-04-29, 20:37:25 - Csaba Pinter
component_id: changed from "None" to "TrackedUltrasoundCapturing"

#### 2011-04-29, 22:41:39 - Tamas Ungi
summary: changed from "TrackedUltrasoundCapturing: Option to manually input synchronization value." to "Option to manually input synchronization value."

#### 2011-05-12, 03:57:30 - Tamas Heffter
You can set synchronization value at USDataCollectionConfig.xml by changing the ImageAcqusition tag LocalTimeOffset attribute. 
For example, if you have -234ms video offset, you have to edit config file like: LocalTimeOffset='-0.234'

#### 2011-05-12, 03:57:30 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2011-07-08, 19:10:41 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:41 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2013-04-09, 17:01:32 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-07-02, 14:31:14 - Amir Khojaste
(In r:2890|plus:2890) re #1: single wall config file updated

#### 2013-07-02, 14:35:05 - Adam Rankin
Issue Type: changed from null to "Enhancement"

#### 2013-07-02, 14:35:05 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #2 Add discard buffer button.
When the image collection needs to be restarted, we currently save the buffer into a garbage file. It would be quicker to press a reset buffer button.

#### 2011-04-29, 20:38:57 - Csaba Pinter
component_id: changed from "None" to "App-TrackedUltrasoundCapturing"

#### 2011-04-29, 22:41:53 - Tamas Ungi
summary: changed from "TrackedUltrasoundCapturing: Add discard buffer button." to "Add discard buffer button."

#### 2011-05-07, 19:52:30 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-07, 19:53:52 - Tamas Heffter
(In r:32) Fixed #2 Add discard buffer button.
Added 'Reset Buffer' button to TrackedUltrasoundCapturing

#### 2011-05-07, 19:53:52 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-07, 19:53:52 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:41 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:41 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #3 DRB visibility feedback in Recording phase
It would be better to list the active DRBs in the Recording phase, and show individually a VISIBLE or NOT VISIBLE label next to them.
When both the reference and the probe are moving, it's not always obvious which DRB went out of view.


#### 2011-04-29, 22:42:57 - Tamas Ungi
description: changed from "It would be better to list ..." to "It would be better to list ..."

#### 2011-07-19, 17:37:11 - Csaba Pinter
Fixed in #65

#### 2011-07-19, 17:37:11 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-19, 17:37:11 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-07-19, 20:11:17 - Tamas Heffter
Need to fix it in TrackedUltrasoundCapturing as well.

#### 2011-07-19, 20:11:17 - Tamas Heffter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-07-19, 20:11:17 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-07-19, 20:13:30 - Csaba Pinter
ToolStateDisplayWidget from CommonWidgets project has to be used, see ConfigurationToolbox in fCal for example.

#### 2011-07-22, 14:45:29 - Csaba Pinter
Updating tickets (#3)



#### 2011-07-22, 14:45:29 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2"

#### 2011-07-26, 23:09:46 - Tamas Heffter
Duplicated ticket

#### 2011-07-26, 23:09:46 - Tamas Heffter
status: changed from "New" to "Invalid"


## #4 Mysterious ERROR messages
I don't know how to reproduce this, but sometimes the application stops tracking and ERROR messages are scrolling fast in the console window. The program cannot get out of this state, only be restart.
Later, I'm planning to do a screenshot of this error...

#### 2011-04-29, 22:42:12 - Tamas Ungi
summary: changed from "Misterious ERROR messages" to "Mysterious ERROR messages"

#### 2011-07-08, 19:32:14 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:14 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:22:49 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 20:22:49 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 20:22:49 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-09-23, 15:18:54 - Csaba Pinter
Cannot reproduce it any more

#### 2011-09-23, 15:18:54 - Csaba Pinter
status: changed from "Test" to "Invalid"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #5 Put Ascension3DG trakSTAR and medSAFE libs to the PLTools


#### 2011-05-20, 20:32:02 - Tamas Ungi
We don't have the medSAFE libraries. The trakSTAR is there.

#### 2011-05-20, 20:32:02 - Tamas Ungi
status: changed from "New" to "Invalid"

#### 2011-07-08, 19:10:41 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:41 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #6 PlusApp build failed in static mode 
PlusApp build failed in static mode:
- Build ITK and VTK in static mode
- Build Plus in static mode
- Build PlusApp => vtkPlusCommon link failure 


#### 2011-05-03, 16:17:36 - Tamas Ungi
Tamas Ungi tried it on PANCREAS computer with static ITK 3.20 and static VTK 5.6. It compiled will without any errors or unexpected messages.

#### 2011-05-03, 16:17:36 - Tamas Ungi
assigned_to_id: changed from null to "heffter"

#### 2011-05-03, 16:17:36 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:41 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:41 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #7 Create superbuild for Plus
Use ExternalProject_Add for ITK, VTK, QT, OpenIGTLink, Ulterius libraries as in Slicer3

For more information: 
http://www.cmake.org/cmake/help/cmake-2-8-docs.html#module:ExternalProject

#### 2011-04-30, 18:45:19 - Tamas Heffter
description: changed from "Use ExternalProject_Add for..." to "Use ExternalProject_Add for..."

#### 2011-04-30, 20:46:48 - Tamas Heffter
(In r:7) Partially fixed #7 Create superbuild for Plus

#### 2011-04-30, 20:46:48 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-04-30, 20:47:17 - Tamas Heffter
Commit #7
Added CMake based find package to Plus library 

#### 2011-04-30, 20:47:17 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-04-30, 20:59:00 - Tamas Heffter
(In r:7)
Added CMake based find package to Plus library

#### 2011-05-05, 19:06:50 - Tamas Heffter
(in r:12)
- Added external project add for ITK, VTK, OpenIGTLink, PLTools, PlusLib

#### 2011-05-06, 17:20:06 - Tamas Heffter
(In r:17) re #7: Create superbuild for Plus
Control Ulterius SDK major version from PlusBuild


#### 2011-05-06, 21:19:42 - Tamas Heffter
(In r:18) re #7: Create superbuild for Plus
Force PlusLib to use itk, vtk, OpenIGTLink from PlusBuild build process 

#### 2011-05-06, 21:20:51 - Tamas Heffter
(In r:19) re #7: Create superbuild for Plus
Force PlusApp to use PlusLib from the PlusBuild build process 

#### 2011-05-06, 21:28:55 - Tamas Heffter
(In r:20) re #7: Create superbuild for Plus
Fixed QT binary requirements of PlusLib tests 

#### 2011-05-07, 14:11:54 - Tamas Heffter
(In r:28) re #7: Create superbuild for Plus
Force PlusApp to use PlusLib from the PlusBuild build process 

#### 2011-05-07, 14:12:44 - Tamas Heffter
(In r:29) re #7: Create superbuild for Plus
Removed Slicer module install option 

#### 2011-05-07, 18:43:23 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-09, 05:59:55 - Andras Lasso
(In r:38) re #7: Added some more search paths for svn, git, and QT; and added warnings if assembla account info is not specified.

#### 2011-05-09, 14:18:51 - Andras Lasso
Tried and it works for me on both Windows 7 and XP. Very good!

The only problem was that git sometimes couldn't update the repository: built in debug mode fine, then changed build configuration to release, started the build and there were multiple errors (could not delete itk library, not a git repository, ...); after restarting the build a few times and forcing a rebuild on failed projects fixed the problem. Maybe it's the fault of the git implementation in cygwin? If others have this problem as well then we should find out something.

Need to update the build instructions on the wiki: the superbuild method should be the primary, supported building method.

#### 2011-05-11, 22:52:21 - Tamas Heffter
(In r:43) re #7: Create superbuild for Plus
Fixed PlusApp packaging 


#### 2011-05-11, 22:58:48 - Tamas Heffter
(In r:44) re #7: Create superbuild for Plus
Removed PlusLib packaging 


#### 2011-05-16, 17:54:15 - Tamas Heffter
component_id: changed from "None" to "PlusBuild"

#### 2011-05-16, 17:54:15 - Tamas Heffter
milestone_id: changed from null to "Standalone iCAL application ready for roadshow"

#### 2011-05-21, 19:02:13 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #8 Convert sequence metafile to Transform Data
Sequence-metafile converter should be able to create bmp+transforms from the mha files in the following  format:


~~~~

# ================================ #
# Transform Data of Captured Image #
# ================================ #
# THIS FILE CONTAINS THE REAL-TIME TRANSFORM DATA FOR THE CAPTURED IMAGE.
# DATA IS RECORDED IN THE FOLLOWING FORMAT:
# [FORMAT: Quaternions(Angle - in Degrees, Qx, Qy, Qz) Position(x, y, z)]
# THIS FILE IS AUTO-GENERATED BY THE PROGRAM.  DO NOT EDIT!

# NAME OF THE CAPTURED IMAGE WITH PATH
./Data/CapturedImageID_NO_0000.bmp

# TRANSFORM: FROM THE US PROBE FRAME TO THE TRACKER FRAME
178.731    0.0205251  0.0127761  0.999708  -0.397232  0.057291  -2.54513

# TRANSFORM: FROM THE DRB REFERENCE FRAME TO THE TRACKER FRAME
138.226    0.000154532  0.042437  0.999099  -0.421666  -0.0404242  -2.52015


~~~~



#### 2011-05-05, 21:45:26 - Tamas Heffter
(In r:14) Fixed #8: Convert sequence metafile to Transform Data
Added two new arguments to set the tool to reference and reference to tracker transform names in the metafile: 
--tool-to-reference-name
--reference-to-tracker-name

#### 2011-05-05, 21:45:26 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-11, 14:21:10 - Tamas Heffter
Hi Tomi,

Tamas and I just did one round of freehand calibration using the converted data, but we found the transform data was all recorded in millimeters (Tx, Ty, Tz).  This caused huge errors in calibration because the original program assumes all transformations are in meters, :-).

Could you kindly help us convert the transform to meters for the same dataset (fcal-data02-24bit)?

Thanks a lot,

Cheers,

- Thomas

#### 2011-05-11, 14:21:10 - Tamas Heffter
status: changed from "Fixed" to "Accepted"

#### 2011-05-11, 15:40:32 - Tamas Heffter
(In r:41) Fixed #8: Convert sequence metafile to Transform Data
Save translations in meter 

#### 2011-05-11, 15:40:32 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-05-11, 16:32:56 - Tamas Heffter
(In r:42) Fixed #8: Convert sequence metafile to Transform Data
Save translations in meter 

#### 2011-05-13, 16:54:43 - Tamas Heffter
* Add image orientation cmd line argument to the converter
* Export images respect to the image orientation 
For more information: https://www.assembla.com/wiki/show/plus/Ultrasound_image_orientation


#### 2011-05-13, 16:54:43 - Tamas Heffter
status: changed from "Fixed" to "Accepted"

#### 2011-05-15, 03:47:44 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #9 vtkUSCalibrationControllerTest1 Error: unable to find PhantomDefinition
vtkUSCalibrationControllerTest1 error: 
Unable to read the phantom definition file: d:\\devel\\Plus-bin\\bin\\config\\PhantomDefinition_iCal_1.0.xml

- Create a new member variable for PhantomDefinition file name with Set/Get macros. 
- Move the above code snippet into a separate function to parse the xml. 
- Call the phantom definition parser from Initialize() function 
- Add a new input argument to vtkUSCalibrationControllerTest1 to read PhantomDefinition file from file. 
- Set the PhantomDefinitionFileName from vtkUSCalibrationControllerTest1 
- Change vtkUSCalibrationControllerTest1 to get  phantom definition as an argument (from the PlusLib data folder)


~~~~

// Read and parse phantom definition file
  const char* phantomDefinitionFile =  segmentationParameters->GetAttribute('PhantomDefinition'); 
  if ( phantomDefinitionFile != NULL )
  {
    vtkSmartPointer<vtkXMLDataElement> phantomDefinition = vtkXMLUtilities::ReadElementFromFile(phantomDefinitionFile);

    if (phantomDefinition == NULL) { //TODO if file does not exist then try concatenating the directory from this->ConfigurationFileName and the last part of phantomDefinitionFile
      LOG_ERROR('Unable to read the phantom definition file: ' << phantomDefinitionFile); 
      return;
    }

    // Load type
    vtkSmartPointer<vtkXMLDataElement> description = phantomDefinition->FindNestedElementWithName('Description'); 
    if (description == NULL) {
      LOG_ERROR('Phantom description not found!');
      return;
    } else {
      const char* type =  description->GetAttribute('Type'); 
      if ( type != NULL ) {
        if (STRCASECMP('Double-N', type) == 0) {
          this->GetSegParameters()->mFiducialGeometry = SegmentationParameters::CALIBRATION_PHANTOM_6_POINT;
        } else if (STRCASECMP('U-Shaped-N', type) == 0) {
          this->GetSegParameters()->mFiducialGeometry = SegmentationParameters::TAB2_5_POINT;
        }
      } else {
        LOG_ERROR('Phantom type not found!');
      }
    }

    // Load geometry
    vtkSmartPointer<vtkXMLDataElement> geometry = phantomDefinition->FindNestedElementWithName('Geometry'); 
    if (geometry == NULL) {
      LOG_ERROR('Phantom geometry information not found!');
      return;
    } else {
      this->GetSegParameters()->mNWires.clear();

      // Finding of NWires and extracting the endpoints
      int numberOfGeometryChildren = geometry->GetNumberOfNestedElements();
      for (int i=0; i<numberOfGeometryChildren; ++i) {
        vtkSmartPointer<vtkXMLDataElement> nWireElement = geometry->GetNestedElement(i);

        if ((nWireElement == NULL) || (STRCASECMP('NWire', nWireElement->GetName()))) {
          continue;
        }

        NWire nWire;

        int numberOfWires = nWireElement->GetNumberOfNestedElements();

        if (numberOfWires != 3) {
          LOG_WARNING('NWire contains unexpected number of wires - skipped');
          continue;
        }

        for (int j=0; j<numberOfWires; ++j) {
          vtkSmartPointer<vtkXMLDataElement> wireElement = nWireElement->GetNestedElement(j);

          if (wireElement == NULL) {
            LOG_WARNING('Invalid Wire description in NWire - skipped');
            break;
          }

          Wire wire;

          const char* wireName =  wireElement->GetAttribute('Name'); 
          if ( wireName != NULL )
          {
            strcpy_s(wire.name, 128, wireName);
          }
          if (! wireElement->GetVectorAttribute('EndPointFront', 3, wire.endPointFront)) {
            LOG_WARNING('Wrong wire end point detected - skipped');
            continue;
          }
          if (! wireElement->GetVectorAttribute('EndPointBack', 3, wire.endPointBack)) {
            LOG_WARNING('Wrong wire end point detected - skipped');
            continue;
          }

          nWire.wires[j] = wire;
        }
        
        this->GetSegParameters()->mNWires.push_back(nWire);
      }
    }
  }

  // Compute error boundaries based on error percents and the NWire definition (supposing that the NWire is regular - parallel sides)
  // Line length of an N-wire: the maximum distance between its wires' front endpoints
  double maxLineLengthSquared = -1.0;
  double minLineLengthSquared = FLT_MAX;
  std::vector<NWire> nWires = this->GetSegParameters()->mNWires;

  for (std::vector<NWire>::iterator it = nWires.begin(); it != nWires.end(); ++it) {
    Wire wire0 = it->wires[0];
    Wire wire1 = it->wires[1];
    Wire wire2 = it->wires[2];

    double distance01Squared = vtkMath::Distance2BetweenPoints(wire0.endPointFront, wire1.endPointFront);
    double distance02Squared = vtkMath::Distance2BetweenPoints(wire0.endPointFront, wire2.endPointFront);
    double distance12Squared = vtkMath::Distance2BetweenPoints(wire1.endPointFront, wire2.endPointFront);
    double lineLengthSquared = std::max( std::max(distance01Squared, distance02Squared), distance12Squared );

    if (maxLineLengthSquared < lineLengthSquared) {
      maxLineLengthSquared = lineLengthSquared;
    }
    if (minLineLengthSquared > lineLengthSquared) {
      minLineLengthSquared = lineLengthSquared;
    }
  }

  this->GetSegParameters()->mMaxLineLenMm = sqrt(maxLineLengthSquared) * (1.0 + (maxLineLengthErrorPercent / 100.0));
  this->GetSegParameters()->mMinLineLenMm = sqrt(minLineLengthSquared) * (1.0 - (maxLineLengthErrorPercent / 100.0));
  LOG_DEBUG('Line length - computed min: ' << sqrt(minLineLengthSquared) << ' , max: ' << sqrt(maxLineLengthSquared) << ';  allowed min: ' << this->GetSegParameters()->mMinLineLenMm << ', max: ' << this->GetSegParameters()->mMaxLineLenMm);

  // Distance between lines (= distance between planes of the N-wires)
  double maxNPlaneDistance = -1.0;
  double minNPlaneDistance = FLT_MAX;
  int numOfNWires = nWires.size();
  double epsilon = 0.001;

  // Compute normal of each NWire and evaluate the other wire endpoints if they are on the computed plane
  std::vector<vtkSmartPointer<vtkPlane>> planes;
  for (int i=0; i<numOfNWires; ++i) {
    double normal[3];
    vtkTriangle::ComputeNormal(nWires.at(i).wires[0].endPointFront, nWires.at(i).wires[0].endPointBack, nWires.at(i).wires[2].endPointFront, normal);

    vtkSmartPointer<vtkPlane> plane = vtkSmartPointer<vtkPlane>::New();
    plane->SetNormal(normal);
    plane->SetOrigin(nWires.at(i).wires[0].endPointFront);
    planes.push_back(plane);

    double distance1F = plane->DistanceToPlane(nWires.at(i).wires[1].endPointFront);
    double distance1B = plane->DistanceToPlane(nWires.at(i).wires[1].endPointBack);
    double distance2B = plane->DistanceToPlane(nWires.at(i).wires[2].endPointBack);

    if (distance1F > epsilon || distance1B > epsilon || distance2B > epsilon) {
      LOG_ERROR('NWire number ' << i << ' is invalid: the endpoints are not on the same plane');
    }
  }

  // Compute distances between each NWire pairs and determine the smallest and the largest distance
  for (int i=numOfNWires-1; i>0; --i) {
    for (int j=i-1; j>=0; --j) {
      double distance = planes.at(i)->DistanceToPlane(planes.at(j)->GetOrigin());

      if (maxNPlaneDistance < distance) {
        maxNPlaneDistance = distance;
      }
      if (minNPlaneDistance > distance) {
        minNPlaneDistance = distance;
      }
    }
  }

  this->GetSegParameters()->mMaxLinePairDistMm = maxNPlaneDistance * (1.0 + (maxLinePairDistanceErrorPercent / 100.0));
  this->GetSegParameters()->mMinLinePairDistMm = minNPlaneDistance * (1.0 - (maxLinePairDistanceErrorPercent / 100.0));
  LOG_DEBUG('Line pair distance - computed min: ' << minNPlaneDistance << ' , max: ' << maxNPlaneDistance << ';  allowed min: ' << this->GetSegParameters()->mMinLinePairDistMm << ', max: ' << this->GetSegParameters()->mMaxLinePairDistMm);

  //TODO Test if it matches the predefined errors in case of iCal phantom (create phantom definition for it)

~~~~




#### 2011-05-06, 20:36:15 - Tamas Heffter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-05-06, 20:36:15 - Tamas Heffter
description: changed from "vtkUSCalibrationControllerT..." to "vtkUSCalibrationControllerT..."

#### 2011-05-09, 18:19:11 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-05-09, 19:59:55 - Csaba Pinter
I couldn't really get this:
- Call the phantom definition parser from Initialize() function
because vtkCalibrationController's Initialize function only instantiates members, no configuration reading is done there, they are called separately.

But the other requests I did, and the parser function is called from vtkCalibrationController::ReadCalibrationControllerConfiguration

#### 2011-05-09, 20:01:04 - Csaba Pinter
(In r:39) Fixed #9 - Phantom definition file path has its own member variable in vtkCalibrationController and a separate function does its reading and parsing


#### 2011-05-09, 20:01:04 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-05-10, 17:22:50 - Tamas Heffter
vtkUSCalibrationControllerTest still failing: 
url:http://crunch.cs.queensu.ca/CDash/testDetails.php?test=2481&build=952

#### 2011-05-10, 17:22:50 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-05-12, 21:26:14 - Csaba Pinter
(In r:48) Fixed #9 - Flag added for enabling config file path overriding according to other config files

#### 2011-05-12, 21:26:14 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #10 HTTPS authentication for assembla
Need to find a good solution for HTTPS authentication in the superbuild. 
Currently we have to set the username and password within cmake configure process as a plain string field to check out sources from Assembla, so all the login information will be stored in the CMakeCache file as plain text, without any encryption. 


#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:13:31 - Csaba Pinter
Not needed any more because of the perklab_anonymous user

#### 2011-08-23, 20:13:31 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #11 QTest build error on qtOpenIGTLinkBroadcasterTest1
PlusLib\\src\\DataCollection\  esting\\qtOpenIGTLinkBroadcasterTest1.cxx(4) : fatal error C1083: Cannot open include file: 'QTest': No such file or directory

#### 2011-05-07, 17:58:11 - Tamas Ungi
QTest not used anymore.

#### 2011-05-07, 17:58:11 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #12 Add OpenIGTLink broadcasting feature
Add a class that can read the latest image+transform from a vtkDataCollector, and sends these two types of data to a list of specified OpenIGTLink servers (e.g. Slicer).

#### 2011-05-07, 17:51:08 - Tamas Ungi
status: changed from "New" to "Accepted"

#### 2011-05-07, 23:24:12 - Tamas Ungi
(In r:33) re #12 OpenIGTLink broadcasting of probe transform works with Slicer.

#### 2011-05-08, 00:18:12 - Tamas Ungi
(In r:34) re #12 Broadcasting of images run, but image content is all zeros.

#### 2011-05-08, 00:49:29 - Tamas Ungi
(In r:35) re #12 OpenIGTLink broadcasting of tracked image slices work.

#### 2011-05-20, 20:29:00 - Tamas Ungi
(In r:73) re #12 Improved testing.

#### 2011-07-16, 00:08:16 - Tamas Ungi
status: changed from "Accepted" to "Test"

#### 2011-07-22, 14:44:03 - Csaba Pinter
Updating tickets (#12)



#### 2011-07-22, 14:44:03 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2"

#### 2011-08-13, 04:07:33 - Tamas Ungi
(In r:572) re #12: Updated test to actually do OpenIGTLink communication.

#### 2011-08-13, 17:47:05 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-24, 12:55:24 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #13 Fix failed UsFidSegTests
The following failed tests were removed from nightly builds: 

* UsFidSegTest_CALIBRATION_PHANTOM_6_POINT 
* UsFidSegTest_TAB2_5_POINT_1 
* UsFidSegTest_TAB2_5_POINT_2 
* UsFidSegTest_TAB2_5_POINT_3 



#### 2011-05-07, 18:42:20 - Tamas Heffter
(In r:31) re #13 Fix failed UsFidSegTests
Failed UsFidSegTests were removed from CMake file 

#### 2011-05-07, 18:42:20 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-07, 18:42:46 - Tamas Heffter
assigned_to_id: changed from "heffter" to null

#### 2011-07-19, 18:08:09 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #14 Some executables crash after the main return command in static mode
When PlusLib is built in static mode, some programs e.g. VolumeReconstructor, OpenIGTLinkBroadcaster crash on exit.
Running in Debug mode shows that the program crash happens after the last return call in the main function.

#### 2011-07-08, 19:35:05 - Csaba Pinter
We don't support static mode builds

#### 2011-07-08, 19:35:05 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #15 When opening PLUS project with DevEnv_Debug.bat, OpenIGTLink.dll is not found.
I see it's commented out from the bat file. Can we just uncomment it?

#### 2011-05-08, 14:19:39 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-08, 14:46:24 - Tamas Heffter
(In r:36) Fixed #15> When opening PLUS project with DevEnv_Debug.bat, OpenIGTLink.dll is not found.

#### 2011-05-08, 14:46:24 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #16 vtkSavedDataVideoSource doesn't read the spacing and origin.
I tried to get the origin and spacing of the saved data (in the .mha file) by calling:
DataCollector->GetVideoSource()->GetDataOrigin()
DataCollector->GetVideoSource()->GetDataSpacing()
And the returned values were not correct (not the same as in the mha file.
Could you please set these values when the buffer metafile is read in the vtkSavedDataVideoSource?

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:18:23 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 20:18:23 - Csaba Pinter
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-09-06, 16:29:51 - Andras Lasso
(In r:694) Fixed #16: DataOrigin and DataSpacing members were removed from the PlusVideoSource class, as the video source provide image information in pixels only. DataOrigin and DataSpacing would not allow full positioning the image anyway (it cannot frscribe frames with arbitrary orientation).

#### 2011-09-06, 16:29:51 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #17 OpenIGTLink linker error within PlusApp
Add find_package(OpenIGTLink) to PlusLib use file. 

#### 2011-05-08, 14:49:56 - Tamas Heffter
(In r:37) Fixed #17: OpenIGTLink linker error within PlusApp

#### 2011-05-08, 14:49:56 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #18 SavedDataTracker cannot play back recorded video+tracking mha files
I had to create a separate tracker buffer metafile manually to be able to replay the saved tracked ultrasound.

#### 2011-05-21, 20:14:47 - Tamas Ungi
(In r:83) fixed #18 Handling of missing frame number and timestamp.

#### 2011-05-21, 20:14:47 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2011-05-21, 20:14:47 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #19 Plus application does not start on Windows 7
When trying to run a plus application (such as TrackedUltrasoundCapturing.exe) it gives the error: 'The application was unable to start correctly (0xc0000022). Click OK to close the application.'

It is caused by having read-only NTFS security attributes set on the dlls in PLTools.

#### 2011-05-11, 14:30:21 - Andras Lasso
summary: changed from "Plus application does not stat on Windows 7" to "Plus application does not start on Windows 7"

#### 2011-05-11, 14:32:04 - Andras Lasso
(In r:40) Fixed #19: Don't use cygwin for svn and git (it sets NTFS security attributes to read-only, which prevents execution of dlls in PLTools)

#### 2011-05-11, 14:32:04 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-05-11, 14:35:36 - Andras Lasso
Also updated the wiki (https://www.assembla.com/spaces/plus/wiki/Plus_Superbuild/) to make sure that not the cygwin svn/git binaries are used.

Tested various supported SVN packages described on http://subversion.apache.org/packages.html#windows. SlikSVN seems to be the best as it is actively maintained, has recent versions for 32-bit and 64-bit Windows, and the download doesn't require registration.



#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #20 Add function to get tracking with calibration from vtkDataCollector


#### 2011-05-12, 03:59:58 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-13, 18:33:03 - Tamas Heffter
By default vtkDataCollector will get transforms without calibration, but you can enable calibrated transforms with calibratedTransform = true flag, like: 
* Without calibration: vtkDataCollector::GetTrackedFrame(trackedFrame)
* With calibration: vtkDataCollector::GetTrackedFrame(trackedFrame, true)

#### 2011-05-13, 18:34:26 - Tamas Heffter
(In r:52) Fixed #20: Add function to get tracking with calibration from vtkDataCollector


#### 2011-05-13, 18:34:26 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:42 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #21 Move sync from TrackedUltrasoundCapturing::SynchronizeFrameToTracker() to DataCollector::Synchronize()


#### 2011-05-12, 19:29:24 - Tamas Heffter
(In r:45) re #21: Move sync from TrackedUltrasoundCapturing::SynchronizeFrameToTracker() to DataCollector::Synchronize()
- Moved Sync from TrackedUltrasoundCapturing to DataCollector
- Changed DataCollector DumpBuffer functions to use vtkTrackedFrameList 
- Fixed vtkDataCollectorSynchronizerTest according to modifications 
- Changed vtkDataCollectorTrackingTest according to modifications
- Added Progress notification to DataCollector


#### 2011-05-12, 19:46:58 - Tamas Heffter
(In r:46) Fixed #21: Move sync from TrackedUltrasoundCapturing::SynchronizeFrameToTracker() to DataCollector::Synchronize()
- Moved Sync from TrackedUltrasoundCapturing to DataCollector


#### 2011-05-12, 19:46:58 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #22 TrackedUltrasoundCapturing : Save the last used config file path to registry 
TrackedUltrasoundCapturing should save the last used config file path into the registry and use it on next start. 

#### 2011-07-08, 23:06:00 - Csaba Pinter
component_id: changed from "None" to "PlusApp-CommonWidgets"

#### 2011-07-08, 23:06:00 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 23:06:00 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-08, 23:17:45 - Csaba Pinter
(In r:240) Fixed #22 - Selected configuration directory path is saved to registry (HKEY_CURRENT_USER\\Software\\PerkLab\\Common\\ConfigurationDirectory)

#### 2011-07-08, 23:17:45 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-08, 23:17:45 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #23 Add image orientation field to sequence metafile 
Add *UltrasoundImageOrientation* field to itkMetaImageSequenceIO.
For more information check: url:https://www.assembla.com/wiki/show/plus/Ultrasound_image_orientation

#### 2011-05-13, 16:51:27 - Tamas Heffter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-05-13, 16:56:56 - Tamas Heffter
component_id: changed from "None" to "PlusLib"

#### 2011-05-15, 03:45:51 - Tamas Heffter
(In r:64) re #23: Add image orientation field to sequence metafile


#### 2011-05-15, 03:47:13 - Tamas Heffter
(In r:65) Fixed #23: Add image orientation field to sequence metafile
Ability to convert images to the us image orientations 


#### 2011-05-15, 03:47:13 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #24 Rename Plus project to PlusLib
Change CMake project name from Plus to PlusLib

#### 2011-05-13, 20:18:56 - Tamas Heffter
(In r:53) re #24: Rename Plus project to PlusLib
Plus renamed to PlusLib 

#### 2011-05-13, 20:18:56 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-13, 20:19:38 - Tamas Heffter
(In r:54) re #24: Rename Plus project to PlusLib
Changed Plus variables to PlusLib 


#### 2011-05-13, 20:20:18 - Tamas Heffter
(In r:55) Fixed #24: Rename Plus project to PlusLib



#### 2011-05-13, 20:20:18 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-13, 20:39:31 - Tamas Heffter
(In r:56) re #24: Rename Plus project to PlusLib
removed cygwin from path


#### 2011-05-13, 20:39:51 - Tamas Heffter
(In r:57) re #24: Rename Plus project to PlusLib
removed cygwin from path


#### 2011-05-14, 13:50:47 - Tamas Heffter
(In r:61) re #24: Rename Plus project to PlusLib
Fixed LIBRARY_OUTPUT_PATH


#### 2011-05-14, 17:02:42 - Tamas Heffter
(In r:62) re #24: Rename Plus project to PlusLib
Fixed DevEnv PlusLib path


#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2016-03-04, 12:11:15 - widger
Issue Type: changed from null to "Enhancement"

#### 2016-03-04, 12:11:15 - widger
milestone_id: changed from "Release Plus-1.2.0" to "Plus-2.3.0"

#### 2016-03-04, 12:11:30 - widger
milestone_id: changed from "Plus-2.3.0" to null


## #25 Change USDataCollection XML config file 
- Create individual config file for each device set
- Change USDataCollection XML config file to the following scheme: 


~~~~

<USDataCollection v1ersion='1.0'>
    <DeviceSet 
        Name='SonixTouch L14-5 probe with NDI Certus optical tracker' 
        Description='' 
        />

    <Tracker Type='CertusTracker' BufferSize='1000' Frequency='25' LocalTimeOffset='0.0' ReferenceToolName='Reference' DefaultToolName='Probe' >
        
        <Tool Name='Probe' PortNumber='1' SendTo='130.15.7.20:15454'>
        <Calibration 
                MatrixName='StylusTipToStylus' 
                MatrixValue='1 0 0 0...' 
                Date='2011.05.02'
                Error=''
                />
        </Tool>
        
        <Tool Name='Reference' PortNumber='2' SendTo='130.15.7.20:15455'>
        </Tool>

        <Tool Name='Stylus' PortNumber='3' SendTo='130.15.7.20:15456' >
            <Calibration 
                MatrixName='StylusTipToStylus' 
                MatrixValue='1 0 0 0...' 
                Date='2011.05.02'
                Error=''
                />
        </Tool>

        <Tool Name='Needle' PortNumber='3' CalibrationMatrixName='NeedleTipToNeedle' CalibrationMatrixValue='1 0 0 0...' SendTo='130.15.7.20:15454' > 
            <Calibration 
                    MatrixName='StylusTipToStylus' 
                    MatrixValue='1 0 0 0...' 
                    Date='2011.05.02'
                    Error=''
                    />
        </Tool>        
    </Tracker>

    <ImageAcqusition Type='SonixVideo' 
            BufferSize='200' 
            FrameSize='640 480 1' 
            FrameRate='30' 
            SmoothingFactor='0.001' 
            LocalTimeOffset='0.0'
            IP='127.0.0.1' 
            ImagingMode='0' 
            AcquisitionDataType='4' 
            Depth='-1' 
            Sector='-1' 
            Gain='-1' 
            DynRange='-1' 
            Zoom='-1' 
            Frequency='-1' 
            Timeout='-1' 
            CompressionStatus='0' 
            />

    <Synchronization Type='ChangeDetection' 
            SynchronizationTimeLength='30' 
            MinNumOfSyncSteps='5' 
            ThresholdMultiplier='5'

            NumberOfAveragedTransforms='20' 
            MinTransformThreshold='2.0' 
            MaxTransformDifference='2.0' 

            NumberOfAveragedFrames='6' 
            MinFrameThreshold='200.0' 
            MaxFrameDifference='10.0' 
            />
</USDataCollection>

~~~~



#### 2011-05-16, 17:46:39 - Tamas Heffter
(In r:66) re #25: Change USDataCollection XML config file
- Changed vtkDataCollector XML reader 
- Added new example for USDataCollectionConfig: USDataCollectionConfig_SonixTouch_L14-5_NDICertus.xml

#### 2011-05-16, 17:48:10 - Tamas Heffter
(In r:67) re #25: Change USDataCollection XML config file
- Changed vtkDataCollector:GetMainToolNumber to vtkDataCollector:GetDefaultToolPortNumber

#### 2011-05-16, 17:48:37 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-17, 15:14:28 - Tamas Heffter
(In r:68) re #25: Change USDataCollection XML config file


#### 2011-05-17, 16:36:37 - Tamas Heffter
(In r:69) re #25: Change USDataCollection XML config file
Added GetReferenceTool method to get reference tool port number from the ReferenceToolName xml tag 

#### 2011-05-17, 21:40:42 - Tamas Heffter
(In r:71) re #25: Change USDataCollection XML config file
Fixed tests

#### 2011-05-18, 16:20:05 - Tamas Heffter
(In r:72) re #25: Change USDataCollection XML config file
Removed reference tool selection from the GUI

#### 2011-05-20, 21:28:04 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-07-08, 18:53:20 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 20:36:50 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #26 Phantom registration sometimes fails
Phantom registration automatic test fails sometimes, because the computed values are off. The odd thing is that the generated input should be always the same, but it still fails about 1 out of 4 runs.

#### 2011-07-22, 16:19:23 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-23, 00:46:36 - Csaba Pinter
(In r:358) Fixed #26: When FakeTracker is active, then acquisition waits for the tracker to change state after setting the new point index. Apparently this waiting time was too tight (1sec/frequency), so I added 10% more to let it surely change state. Now it passed 25 out of 25 trials

#### 2011-07-23, 00:46:36 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #27 TrackedUltrasoundCapturing: Select device set from GUI 
According to the new configuration file, user should select a device set from a drop down list (or set the configuration file). 
- Remove tool selector from the GUI

#### 2011-07-22, 14:52:28 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-26, 22:58:41 - Tamas Heffter
(In r:405) Fixed #27: TrackedUltrasoundCapturing: Select device set from GUI
Fixed #77: Remove tool selection combos from TrackedUltrasoundCapturing GUI
Fixed #55: TrackedUSCapturing should display error message when there is an error instead of crashin

#### 2011-07-26, 22:58:41 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #28 Stylus calibration result in DataCollection config
fCal Phantom Registration module should use the calibration from USDataCollection_... config file instead of the previous separate calibration result file.

Also, vtkPhantomRegistrationTest no longer needs the additional cmd line argument --input-stylus-calibration-xml-file-name, it should be read from the file mentioned above

#### 2011-07-08, 20:03:50 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-18, 19:53:09 - Csaba Pinter
Also, all calibration results be read from the Data collection (ImageToProbe too).

The configuration data handling should happen as described in #92

#### 2011-07-21, 16:28:27 - Csaba Pinter
Change test baseline to the new result file too

#### 2011-07-27, 17:24:39 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-29, 01:59:31 - Csaba Pinter
(In r:441) Fixed #28, Re #190: vtkFreehandController loads and holds the unified configuration file (2 added); StylusCalibrationController uses the unified file for loading and saving; vtkDataCollector has a new function which reads configuration from vtkXMLDataElement; tests fixed according to the new name of the ConfigurationFileName (not InputConfigurationFileName); Wrong stylusToStylustipTransform name renamed to stylusTipToStylusTransform; Major and Minor versions as integers added to PlusConfigure; Comments in tool definitions corrected

#### 2011-07-29, 01:59:31 - Csaba Pinter
status: changed from "New" to "Fixed"


## #29 Video sources: check if the data received has the same size in bytes as expected
- In all video source, we should check the received frame sizes
- If the size is different copy only the minimum of (sz, buffer size) or just fill the buffer with a solid color

#### 2011-07-08, 19:18:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 21:20:22 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-08, 21:21:45 - Tamas Heffter
status: changed from "Accepted" to "New"

#### 2011-07-20, 18:23:52 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-20, 18:29:36 - Tamas Heffter
Already checked at AddTimeStampedItem function when we add new frames into the buffer. 

#### 2011-07-20, 18:29:36 - Tamas Heffter
status: changed from "Accepted" to "Invalid"


## #30 Calibrator should check the frame size in the buffer
Calibrator should check whether the frame size is the same as we have in the configuration file or not. 
If the sizes are different we have to send an ERROR message with the actual and the expected frame sizes. 

#### 2011-05-18, 15:58:15 - Tamas Heffter
description: changed from "Calibrator should check whe..." to "Calibrator should check whe..."

#### 2011-05-21, 18:20:16 - Tamas Heffter
(In r:79) re #30: Calibrator should check the frame size in the buffer

#### 2011-05-21, 18:20:16 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-21, 20:11:52 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-21, 22:55:25 - Tamas Heffter
(In r:84) Fixed #30: Calibrator should check the frame size in the buffer

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #31 Phantom registration result in phantom definition file
Phantom registration result transformation should be saved in phantom definition file in Registration tag

#### 2011-07-08, 20:03:50 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-21, 16:28:44 - Csaba Pinter
Change test baseline to the new result file too

#### 2011-07-27, 17:21:05 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-29, 15:42:44 - Csaba Pinter
priority: changed from "Low (4)" to "Normal (3)"

#### 2011-07-29, 22:21:46 - Csaba Pinter
(In r:450) Fixed #31: Phantom definition and registration are now loaded from and saved to unified configuration file; vtkPhantomRegistrationTest fixed; vtkXMLDataElement* changed everywhere to vtkSmartPointer<~>

#### 2011-07-29, 22:21:46 - Csaba Pinter
status: changed from "New" to "Fixed"


## #32 vtkStepperCalibrationController: Make LSQRMinimizer more robust
In case of error LSQRMinimizer should return with false 

#### 2011-05-20, 19:55:12 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-20, 19:55:12 - Tamas Heffter
milestone_id: changed from null to "Standalone iCAL application ready for roadshow"

#### 2011-05-20, 19:55:12 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-05-20, 21:19:59 - Tamas Heffter
(In r:74) Fixed #32: vtkStepperCalibrationController: Make LSQRMinimizer more robust

#### 2011-05-20, 21:19:59 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-05-21, 13:58:17 - Tamas Heffter
(In r:75) Fixed #32: vtkStepperCalibrationController: Make LSQRMinimizer more robust
Fixed suggested modifications 

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #33 vtkStepperCalibrationController: read wire distances from phantom design
In vtkStepperCalibrationController::ConstrLinEqForSpacingCalc we need to read the wire distances from the phantom design file. 

#### 2011-07-22, 14:52:19 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-22, 20:34:54 - Tamas Heffter
Already fixed. 

#### 2011-07-22, 20:34:54 - Tamas Heffter
status: changed from "New" to "Invalid"


## #34 Create rotation axis calibration report 
vtkStepperCalibrationController should generate report after rotation axis calibration 

#### 2011-05-22, 00:15:14 - Tamas Heffter
(In r:85) Fixed #34: Create rotation axis calibration report

#### 2011-05-22, 00:15:14 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-22, 00:15:14 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-27, 16:34:29 - Tamas Heffter
image:aXR1hOIh8r4j_geJe5cbCb Rotation axis calibration error plot - X axis

#### 2011-05-27, 16:34:29 - Tamas Heffter
Attachment added: "x_PlotProbeRotationAxisCalibrationError.jpg"

#### 2011-05-27, 16:34:29 - Tamas Heffter
image:aX258uIh8r4j_geJe5cbCb Rotation axis calibration error plot - Y axis

#### 2011-05-27, 16:34:29 - Tamas Heffter
Attachment added: "y_PlotProbeRotationAxisCalibrationError.jpg"

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #35 Create rotation encoder calibration report 
vtkStepperCalibrationController should generate report after rotation encoder calibration 

#### 2011-05-20, 19:55:47 - Tamas Heffter
component_id: changed from "None" to "PlusLib"

#### 2011-05-20, 19:55:47 - Tamas Heffter
milestone_id: changed from null to "Standalone iCAL application ready for roadshow"

#### 2011-05-24, 21:27:03 - Tamas Heffter
image:crql7eHKWr4igNeJe4gwI3 Probe rotation encoder calibration plot

#### 2011-05-24, 21:27:03 - Tamas Heffter
Attachment added: "PlotProbeRotationEncoderCalibrationError.jpg"

#### 2011-05-24, 21:29:16 - Tamas Heffter
(In r:90) Fixed #35: Create rotation encoder calibration report

#### 2011-05-24, 21:29:16 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-24, 21:29:16 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:43 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #36 Create spacing calculation report 
vtkStepperCalibrationController should generate a report after spacing calculation 

#### 2011-05-25, 22:13:52 - Tamas Heffter
image:bfY50MHXWr4i15eJe5cbLr Spacing calculation error histogram

#### 2011-05-25, 22:13:52 - Tamas Heffter
Attachment added: "PlotSpacingCalculationErrorHistogram.jpg"

#### 2011-05-25, 22:16:43 - Tamas Heffter
(In r:91) Fixed #36: Create spacing calculation report

#### 2011-05-25, 22:16:43 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-25, 22:16:43 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-26, 14:03:34 - Tamas Heffter
(In r:92) Fixed #36: Create spacing calculation report

#### 2011-05-26, 14:19:11 - Andras Lasso
What is on the x axis? Could you add an x title?

#### 2011-05-27, 13:14:01 - Tamas Heffter
status: changed from "Fixed" to "Accepted"

#### 2011-05-27, 16:44:48 - Tamas Heffter
(In r:98) Fixed #36: Create spacing calculation report
Added X title to the graph 

#### 2011-05-27, 16:44:48 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #37 Create center of rotation calculation report 
vtkStepperCalibrationController should generate a report after center of rotation calculation 

#### 2011-05-27, 16:26:52 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-05-27, 16:26:52 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-06-01, 14:31:39 - Tamas Heffter
(In r:118) re #37: Create center of rotation calculation report
Added vtkTable based report saving

#### 2011-06-01, 14:34:02 - Tamas Heffter
(In r:119) re #37: Create center of rotation calculation report
Added initial gnuplot script for center of rotation calculation error plot

#### 2011-06-01, 14:36:44 - Tamas Heffter
The gnuplot script need to change in order to display the error for each wire (#1, #3, #4, #6). 
=> Need to find a good way to display the center of rotations in different Z positions (e.g 3D representation with splot). 

#### 2011-07-22, 14:50:11 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-08-15, 06:08:19 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #38 Create CAD model about probe calibration coordinate systems
-all the coordinate frames that are used in the software should be included (such as ProbeHome)
-all the stepper axes should be included (2 translation and 1 rotation)
-there are no xyz labels on the coordinate system axes
-it seems that the coordinate axes are just drawn in 2D, which limits the use of the model (the main advantage of a 3D model is that we can freely rotate and zoom it to visualize any coordinate system)
-3D model is needed, not just a 2D snapshot (and it should be uploaded to svn to USTemplateCalibration\\docs\\iCAL\\CoordinateSystems instead of being sent in email)



#### 2011-05-26, 15:35:46 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-08, 20:03:51 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-27, 17:29:03 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 17:43:19 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-19, 19:23:06 - Csaba Pinter
(In r:765) Re #38: fCal coordinate systems

#### 2011-09-19, 19:26:33 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-20, 22:20:22 - Csaba Pinter
(In r:768) Re #38: Coordinate system part corrected (there was a cutout on one of the axes)

#### 2011-09-20, 22:58:13 - Csaba Pinter
(In r:769) Fixed #38: Annotations are fixed to the objects

#### 2011-09-20, 22:58:13 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-09-20, 22:59:09 - Csaba Pinter
image:aMHKqi49Wr4krLacwqjQWU

#### 2011-09-20, 22:59:09 - Csaba Pinter
Attachment added: "iCal_CoordinateRepresentation.png"

#### 2011-09-20, 22:59:10 - Csaba Pinter
file:aMLukm49Wr4krLacwqjQWU

#### 2011-09-20, 22:59:10 - Csaba Pinter
Attachment added: "iCal_CoordinateRepresentation.pdf"

#### 2011-09-20, 22:59:10 - Csaba Pinter
image:aMVmis49Wr4krLacwqjQWU

#### 2011-09-20, 22:59:10 - Csaba Pinter
Attachment added: "FreehandCalibration_CoordinateRepresentation.png"

#### 2011-09-20, 22:59:10 - Csaba Pinter
file:aMYksC49Wr4krLacwqjQWU

#### 2011-09-20, 22:59:10 - Csaba Pinter
Attachment added: "FreehandCalibration_CoordinateRepresentation.pdf"

#### 2011-09-23, 22:20:02 - Andras Lasso
iCAL image coordinate system is left-handed. Should be right-handed.

#### 2011-09-23, 22:20:02 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2011-09-26, 16:11:23 - Csaba Pinter
image:aT32o66fOr4jXtacwqjQWU

#### 2011-09-26, 16:11:23 - Csaba Pinter
Attachment added: "iCal_CoordinateRepresentation.png"

#### 2011-09-26, 16:11:23 - Csaba Pinter
file:aT8aLu6fOr4jXtacwqjQWU

#### 2011-09-26, 16:11:23 - Csaba Pinter
Attachment added: "iCal_CoordinateRepresentation.pdf"

#### 2011-09-26, 21:19:23 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #39 Compensate stepper rotation axis misalignment
Compensate stepper rotation axis misalignment

#### 2011-05-20, 20:06:05 - Tamas Heffter
- Added clustered center of rotation computation
- Added new clustering algorithm 
- Added rotation axis computation with outliers removal

#### 2011-05-20, 20:08:42 - Tamas Heffter
Need to add a define to turn on/off the rotation axis compensation in vtkAMSTracker, since we are not sure about the enhancements. 

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:21:04 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 20:21:04 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-10-07, 17:31:55 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:31:55 - Csaba Pinter
status: changed from "Test" to "Invalid"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #40 DataCollector: allow device definition using device name in Certus
Allow device definition using device name (not just port number)

#### 2011-07-08, 18:53:06 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-09, 17:55:54 - Tamas Heffter
No need to allow device definition using device name in Certus since we defined the new data collection config files (#25) 

#### 2011-07-09, 17:55:54 - Tamas Heffter
status: changed from "New" to "Invalid"


## #41 Replace includes with forward declarations in header files
Replace #include ...
with
class ...

(and add the include to the src only)

#### 2011-05-20, 20:16:36 - Tamas Heffter
Look for solution for vtkObjectMacro with forward declaration (vtkSetCxxObjectMacro)

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-10-13, 22:38:35 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-14, 00:08:24 - Tamas Heffter
(In r:937) re #325: DataCollector should return a trackedFrameList of a time period
re #41: Replace includes with forward declarations in header files

#### 2011-10-14, 00:09:59 - Tamas Heffter
(In r:938) re #41: Replace includes with forward declarations in header files
Changed TrackedFrameList::ValidateData interface 

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-11-28, 18:25:14 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-12-11, 21:37:02 - Adam Rankin
Issue Type: changed from null to "Enhancement"

#### 2012-12-11, 21:37:02 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2014-06-05, 02:00:26 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-02, 00:49:45 - Andras Lasso
re #41: Fixed forward declarations (and somewhat cleaned up the global namespace) in CalibrationAlgo/PatternLocAlgo
Commit: r:3769|plus:3769

#### 2014-10-02, 00:49:45 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-10-02, 00:50:01 - Andras Lasso
re #41: Fixed forward declarations (and somewhat cleaned up the global namespace) in CalibrationAlgo/PatternLocAlgo
Commit: r:3770|plus:3770

#### 2014-10-02, 13:10:40 - Andras Lasso
re #41: Fixed build error
Commit: r:3772|plus:3772

#### 2014-10-02, 20:19:38 - Andras Lasso
re #41: Changed all includes to forward declarations wherever it was possible
Commit: r:3780|plus:3780

#### 2014-10-02, 20:20:24 - Andras Lasso
re #41: Changed all includes to forward declarations wherever it was possible

Also moved some device-specific SDK includes into the .cxx file from the .h file.
Commit: r:3781|plus:3781

#### 2014-10-02, 21:23:52 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-02, 21:37:18 - Andras Lasso
re #41: Fixed linux build error

Commit: r:3785|plus:3785

#### 2014-10-03, 12:18:58 - Andras Lasso
re #41: Fixed build error
Commit: r:3789|plus:3789

#### 2014-10-03, 23:39:37 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-10-04, 03:07:43 - Andras Lasso
re #41: Fixed build warning
Commit: r:3796|plus:3796


## #42 BrachyTRUSCalibrator should use mm instead of meter 
* Change BrachyTRUSCalibrator to use mm instead of meter 
* Remove ConvertVtkMatrixToVnlMatrixInMeter from calibration controller: 
Currently the ConvertVtkMatrixToVnlMatrixInMeter method only converts the translation part to meter, not the whole matrix.  
Need to remove m from the calibration algorithm altogether (and always use mm).

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:12:54 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 20:12:54 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.4"

#### 2011-09-23, 15:21:38 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release - Before Hopkins"

#### 2011-09-27, 15:59:21 - Csaba Pinter
(In r:816) Fixed #42, Re #231: Calibrator uses millimeter everywhere now; Baselines had to be replaced with their mm variants; Unused get function deleted from vtkCalibrationController; Notification about missing last used device set in application config file changed to debug message

#### 2011-09-27, 15:59:21 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #43 Change rotation averaging in synchronizer
Use vtkQuaternionInterpolator for averaging rotations in vtkDataCollectorSynchronizer::ComputeTransformThreshold
Due to this problem, currently synchronization is possible with translation only.

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-06-01, 13:20:11 - Andras Lasso
No needed anymore because the synchronizer has been replaced by the new, correlation-based temporal calibration method.

#### 2012-06-01, 13:20:11 - Andras Lasso
status: changed from "New" to "Invalid"


## #44 Fix vtkDataCollectorSynchronizerTest
* Write the result of vtkDataCollectorSynchronizerTest to an xml config file.
* Compare the result to a baseline 
* Check robustness of the synchronizer by run it with different parameters

#### 2011-07-22, 14:52:05 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:34:06 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-27, 17:24:27 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-29, 15:43:03 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:06:20 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:20 - Csaba Pinter
status: changed from "New" to "Fixed"


## #46 Change SequenceMetafileConverter behavior
Add the following arguments to SequenceMetafileConverter:
--output-sequence-file-extension ([ mha | mhd ]; default: mha)
--max-number-of-frames-in-seq-metafile (default: 500)

If the number of frames reached the max-number-of-frames-in-seq-metafile than the converter should save the files into a single sequence metafile. 

The converter should decide to add increasing numbers to the file name if it has to write more frames than max-number-of-frames-in-seq-metafile. 

The final SequenceMetafile output name should look like this: 
output-folder / output-sequence-file-name [0001] . output-sequence-file-extension

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-03, 15:04:53 - Tamas Heffter
(In r:488) Fixed #46: Change SequenceMetafileConverter behavior
Fixed extension problem, now the converter checks the --output-sequence-file-name parameter's extension 

#### 2011-08-03, 15:04:53 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-08-03, 15:04:53 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-08-03, 15:10:45 - Tamas Heffter
(In r:489) Fixed #46: Change SequenceMetafileConverter behavior
Added --max-number-of-frames-in-seq-metafile argument 

#### 2011-08-03, 15:11:03 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.1 - Before Vancouver"


## #47 vtkSonixVideoSource2: Don’t use magic numbers in config file
Don’t use magic numbers (i.e., instead of ImagingMode=”1” use ImagingMode=”B-MODE”)

#### 2011-07-22, 14:50:49 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-08-23, 19:59:35 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:59:35 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-23, 19:59:35 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-25, 22:48:28 - Tamas Heffter
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-08-25, 23:56:03 - Andras Lasso
Fixed in changeset 641.

Supported ImagingMode values:
* BMode
* RfMode

Supported AcquisitionDataType values:
* BPost
* RF
 

#### 2011-08-25, 23:56:03 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #48 Ignore data that was acquired during high-speed motion
Due to jitter in image and position data acquisition rate (which is inevitable if using a non-real-time operating system) there is always some temporal desynchronization of the data sources. Temporal desynchronization leads to spatial errors, the larger the the speed of motion, the larger the spatial error.

To limit the maximum possible error due to temporal desynchronization all the data that is acquired during high-speed motion (when the probe was moved faster than a threshold speed) should be ignored for operations that require high accuracy (such as calibration, validation, volume reconstruction).

Threshold should be set manually in the acquisition configuration (or optionally, computed automatically from the acquisition rate jitter).

#### 2011-05-20, 20:37:10 - Tamas Heffter
The implementation should go to vtkTrackedFrameList::ValidateSpeed() 

#### 2011-06-07, 22:56:32 - Tamas Heffter
When returning a synchronized frame compute and return the motion speed ( translation, rotation) as well. Then caller can decide if the frame is reliable or not. If not reliable then it can drop it and maybe display a warning (move the probe slower).

#### 2011-07-22, 14:49:22 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-07-22, 14:49:40 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-07-29, 04:49:30 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-08-05, 13:56:17 - Tamas Heffter
Create new speed validation function for vtkTrackedFrameList::ValidateData



~~~~
vtkTrackedFrameList::ValidateSpeed
{
dT=abs(T1-T2)
dPos = PlusMath::GetPositionDifference
dAngle = PlusMath::GetOrientationDifference

Vpos = dt/dPos
V=angle = dt/dPos

(Vpos > vMax1 || Vangle > vMax2 )
{
return false; 
}

return true; 
}

~~~~



#### 2011-08-05, 13:56:17 - Tamas Heffter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-08-08, 13:53:13 - Csaba Pinter
(In r:536) Re #48: vtkTrackedFrameList::ValidateSpeed implemented using fix thresholds (reading from configuration file will be needed); PlusLogger indentation changed so that timestamps always have the same width (so the messages in the log will be aligned)

#### 2011-08-08, 13:54:01 - Csaba Pinter
(In r:537) Re #48: TODO comment added - review needed here

#### 2011-08-08, 14:20:12 - Csaba Pinter
(In r:538) Re #48: Using the input frame instead of the last two in the list (as it was in the pseudo code)

#### 2011-08-08, 14:22:58 - Csaba Pinter
Tomi:
* Please review my changes here and approve if they are OK
* Note: There is a possible source of error here: the speed is computed from the data of the parameter frame and the last added frame, and it computes the average speed since the last added frame. If we decide to add or not to add according to this, the new frame is not added until the average speed decreases below the threshold
* Note2: Maybe the ValidateData should return false once it encounters an error in one of the validate functions, so that it does not have to run the rest (eg. if the timestamp if not valid, it runs all the other validate functions as well, although the first criterium would be enough to drop the frame)

#### 2011-08-08, 14:22:58 - Csaba Pinter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-08-08, 14:22:58 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-08-08, 14:43:18 - Andras Lasso
The trackedFrame is typically somewhat lags behind the latestFrame. This is necessary because this is the only way to ensure that the corresponding video frame has been acquired and tracking data after the video frame has also been acquired (needed for position interpolation). Therefore, the speed shall be measured by comparing the position and timestamp difference of trackedFrame and one frame before trackedFrame (or even better: trackedFrame-1 and trackedFrame+1). 

A few other comments:
* fabs should be used for both orientation and position or neither of them (double velocityPosition = diffPosition / diffTime; double velocityOrientation = fabs( diffOrientation / diffTime ))
* Remove (or change to LOG_TRACE): LOG_WARNING('---- VelocityPosition = ... 
* Add units: PlusMath::GetOrientationDifferenceDeg, diffOrientationDeg, MaxVelocityPositionMmPerSec, MaxVelocityOrientationDegPerSec
* Have a PLUS_STATUS return value for indicating whether there was an error computing the velocity and a separate parameter (such as bool &isSpeedAcceptable) for the return value





#### 2011-08-08, 15:04:40 - Csaba Pinter
(In r:539) Re #48: Debug logging removed; fabs is applied to position too

#### 2011-08-09, 14:06:58 - Tamas Heffter
You can measure the difference between the last saved tracked frame and the latest frame in the buffer like this: 
fabs(LastFrameInListTimestamp - NewFrameTimestamp)/fabs(lastFrameInListFrameIndex - NewFrameIndex).
For this, we should guarantee that the frame indexes are always increasing 

Or, just compare the two last frames in the buffer. For this, probably it would be easier to implement it in the TrackerBuffer, like GetFrameSpeed(BufferUidType uid, double &speed) and add the speed as a member to TrackedFrame class. 

#### 2011-08-09, 14:11:12 - Csaba Pinter
The ValidateData is used to decide if the just aquired frame would be added to the list or not. If I compare the last two frames in the buffer, then if the speed was too high once, it would never add a frame from that time on.
We have two choices: separate the speed validation from the rest of the validations, or use the just acquired frame and the last frame in the buffer.

#### 2011-08-13, 18:06:20 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:20 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2012-07-03, 18:35:56 - Csaba Pinter
(In r:1864|plus:1864) Test #48: VolumeReconstructor tests save mha files; Baselines changed accordingly

#### 2012-07-03, 18:35:56 - Csaba Pinter
status: changed from "Fixed" to "Test"

#### 2012-07-03, 18:52:21 - Andras Lasso
State changed to Test due to a typo in a commit comment when committing changes for #483. Restore state to Fixed.

#### 2012-07-03, 18:52:21 - Andras Lasso
status: changed from "Test" to "Fixed"


## #49 vtkVolumeReconstructor: Save volume as metafile
In the metafile the frames should be in LPS anatomical orientation, then the Slicer can open it in RAS.

#### 2011-07-08, 19:32:15 - Csaba Pinter
Updating tickets (#4, #10, #16, #39, #41, #42, #43, #45, #46, #49)

After roadshow version

#### 2011-07-08, 19:32:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-12-17, 20:54:25 - Tamas Heffter
status: changed from "New" to "Invalid"


## #50 Merge realtime and offline config arguments in CalibrationController config file 
* Remove NumberOfImagesToUse and StartingIndex tags in offline mode, read the number of frames from metafile => no need to control the number of frames 


#### 2011-07-22, 14:50:26 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-07-29, 15:45:24 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-04, 16:20:36 - Tamas Heffter
(In r:514) Fixed #50: Merge realtime and offline config arguments in CalibrationController config file
- Removed CalibrationMode and EnableVisualization attributes
- Merged OFFLINE and REALTIME arguments
- Changed PlusConfigurations to the modifications take effect 
- StepperCalibration renamed to StepperInitialization (reset then set 0 encoder values)

#### 2011-08-04, 16:20:36 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2017-05-26, 23:17:08 - Andras Lasso
re #50: Fixed linux build error (filenames are case sensitive)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/57153bb15393689920787fe609bb8c4b27016ef5|plus:57153bb153


## #51 Clean up VolumeReconstructor
- Clean up volume reconstructor 
- Read frames by vtkTrackedFrameList  

#### 2011-05-21, 15:37:51 - Tamas Heffter
(In r:76) re #51: Clean up VolumeReconstructor

#### 2011-05-21, 15:38:30 - Tamas Heffter
(In r:77) Fixed #51: Clean up VolumeReconstructor

#### 2011-05-21, 15:38:30 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-21, 18:03:23 - Tamas Heffter
(In r:78) Fixed #51: Clean up VolumeReconstructor

#### 2011-05-21, 18:20:47 - Tamas Heffter
(In r:80) Fixed #51: Clean up VolumeReconstructor

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2013-11-27, 19:48:13 - Andras Lasso
(In r:3003|plus:3003) re #51: Added debug-level log if a frame is skipped from volume reconstruction due to invalid ImageToReference transform

#### 2013-11-27, 23:04:26 - Andras Lasso
(In r:3005|plus:3005) re #51: Modified CreateSliceModels so that it can generate slice models even if image data is unavailable


## #52 Change default options of PlusBuild
- Missing PLUSBUILD_ASSEMBLA_USERNAME and PLUSBUILD_ASSEMBLA_PASSWORD should generate error message
- Turn off PLUSBUILD_USE_PLTools by default 
- Turn off all third-party dependent build options by default


#### 2011-05-21, 19:01:38 - Tamas Heffter
(In r:81) Fixed #52: Change default options of PlusBuild

#### 2011-05-21, 19:01:38 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #53 Always save timestamp to sequence metafile
Always add Timestamp field to sequence metafile for each frame (to keep track the speed too)

#### 2011-05-21, 19:48:44 - Tamas Heffter
(In r:82) Fixed #53: Always save timestamp to sequence metafile

#### 2011-05-21, 19:48:44 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #54 Fix failed vtkDataCollectorTest2
http://crunch.cs.queensu.ca/CDash/testDetails.php?test=3041&build=1020


#### 2011-05-24, 16:47:32 - Tamas Heffter
summary: changed from "Fixed failed vtkDataCollectorTest2" to "Fix failed vtkDataCollectorTest2"

#### 2011-05-24, 16:47:54 - Tamas Heffter
(In r:88) Fixed #54: Fix failed vtkDataCollectorTest2

#### 2011-05-24, 16:47:54 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #55 TrackedUSCapturing should display error message when there is an error instead of crashing
The TrackedUSCapturing application shall not crash if something fails, but print a meaningful error message in a popup window/status window (not just the log window).
Check especially the following cases:
* configuration xml cannot be parsed
* cannot connect to video
* cannot connect to tracker

#### 2011-07-22, 14:47:06 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:36:45 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-26, 22:58:41 - Tamas Heffter
(In r:405) Fixed #27: TrackedUltrasoundCapturing: Select device set from GUI
Fixed #77: Remove tool selection combos from TrackedUltrasoundCapturing GUI
Fixed #55: TrackedUSCapturing should display error message when there is an error instead of crashin

#### 2011-07-26, 22:58:41 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #56 Need to show very visibly if tracking was lost during recording
Need to show very visibly if tracking was lost during recording, because it means that there are missing frames. Showing it only in the log window is not enough.
There could be a status window showing:
Acuired frames: 156
Missing tracking information: 13

#### 2011-07-22, 14:53:09 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:33:46 - Csaba Pinter
Duplicate of other tickets

#### 2011-07-22, 16:33:46 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #57 Need a clear buffer button
Currently (maybe this is not the latest version) it's necessary to save the image sequence to clear the image buffer. Need a button to clear the buffer at any time.

#### 2011-05-26, 13:18:35 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-05-26, 14:51:24 - Andras Lasso
If the issue is a duplicate then it's better to set it to Invalid instead of Fixed.
Fixed means something has changed in the software, it's a new feature, bugfix, etc.
Invalid means that the ticket itself is the problem and no code change is necessary.

#### 2011-05-27, 13:13:13 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-05-27, 13:13:17 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #58 Show the current time offset on the GUI
The LocalTimeOffset was set to -0.200 in the xml file, but in the GUI still 0.0 was shown (instead of -200ms). In the log window it was correct.

#### 2011-07-22, 14:47:19 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:35:04 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-26, 20:42:08 - Tamas Heffter
Already fixed. 

#### 2011-07-26, 20:42:08 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #59 Volume reconstruction toolbox for fCal
User interface and connecting the processing algorithms for Volume reconstruction toolbox in fCal

#### 2011-07-08, 20:03:51 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 23:53:13 - Csaba Pinter
(In r:353) Re #59: VolumeReconstruction toolbox controller; Corrected ultrasound image orientation for the SonixRP and SonixTouch (UF instead of MF)

#### 2011-07-22, 23:57:46 - Csaba Pinter
(In r:354) Re #59: Fix progress message

#### 2011-07-22, 23:58:13 - Csaba Pinter
(In r:355) Fixed #59: Volume reconstruction toolbox

#### 2011-07-22, 23:58:13 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-07-22, 23:59:38 - Csaba Pinter
Test needed for volume reconstruction controller (if we have a good the calibration, we can make a baseline for this)

#### 2011-07-22, 23:59:38 - Csaba Pinter
status: changed from "Fixed" to "Test"

#### 2011-07-23, 00:36:08 - Csaba Pinter
(In r:356) Re #59: missing LOG_TRACE's added

#### 2011-07-27, 22:23:21 - Csaba Pinter
We agreed that a slider for the contouring threshold is not crucial now

#### 2011-07-27, 22:23:21 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #60 New config file structure handling in fCal
For connecting to devices:
- Looking for device sets in the configuration directory, populating combobox with them
- After selecting the desired device set, click connect button
- After connecting, only description is available, no more changes for devices (except if error occurred during connection, then the combobox and the connect button is enabled again)

For calibration results:
- Stylus calibration result has to be stored in the device set configuration file (Tool named 'Stylus', Calibration child, MatrixValue field). Date and error too!
- Phantom registration result in the phantom definition file (Geometry -> Registration). Date and error too!

#### 2011-05-26, 15:28:25 - Csaba Pinter
For development purposes, a keyboard combo might be needed for re-connecting according to the changed config file (or re-enabling the connection-related widgets - also re-parse the directory)

#### 2011-06-22, 02:30:59 - Csaba Pinter
(In r:173) re #60: Parse up selected configuration directory, populate combobox with config files, on selecting a file, description is shown, connect button connects to device set (note: previous commit also belongs to this issue, my bad)


#### 2011-06-22, 02:31:06 - Csaba Pinter
(In r:174) re #60: Parse up selected configuration directory, populate combobox with config files, on selecting a file, description is shown, connect button connects to device set (note: previous commit also belongs to this issue, my bad)


#### 2011-06-22, 02:31:09 - Csaba Pinter
(In r:175) re #60: Parse up selected configuration directory, populate combobox with config files, on selecting a file, description is shown, connect button connects to device set (note: previous commit also belongs to this issue, my bad)


#### 2011-06-22, 13:09:04 - Csaba Pinter
Something has to be done with the device set combobox, since it is too narrow to display the whole names.
Options:
- Find a way to make the drop-down window wider
- Make it a table instead
- Modal window
- ?

#### 2011-06-22, 20:35:07 - Andras Lasso
The device set could have a short name (that appears in the listbox) and a full description could appear in a multi-line textbox below the listbox (and/or as a tooltip) for the selected item.

#### 2011-06-22, 21:59:51 - Csaba Pinter
Yes, it is already that way, but still, the names (eg. 'Tracking and video data is read from sequence metafile.') are sometimes too long to fit in the combobox in that narrow toolbox.
I could also make the toolbox resizeable by adding a splitter between it and the canvas, but I wouldn't do that if it was up to me.
For now, I leave it this way, and add a ticket when everything else is done in this one, and we can discuss it when you get back to Kingston.

#### 2011-06-23, 02:09:07 - Csaba Pinter
(In r:176) re #60: Disable connect button after connecting and re-enable it when selecting another device set from the list; Functions added into stylus calibration for later use (when we decided the exact config file behavior - eg. which classes hold which parts of the data collection configuration and who does the I/O)


#### 2011-06-23, 02:09:11 - Csaba Pinter
(In r:177) re #60: Disable connect button after connecting and re-enable it when selecting another device set from the list; Functions added into stylus calibration for later use (when we decided the exact config file behavior - eg. which classes hold which parts of the data collection configuration and who does the I/O)


#### 2011-07-08, 18:43:39 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-18, 19:55:22 - Csaba Pinter
The handling of the configuration file is basically ready.

The storing of the calibration and registration results are followed in tickets #28 and #31

#### 2011-07-18, 19:55:22 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #61 Stylus model and orientation transform from config file
Stylus model should be read from STL file, the path of which is defined in the configuration file (the device set file), and its orientation transform matrix too.
If they are not present then the stylus appears as a dot and the orientation is identity.
(Used to be Mantis item 296)

#### 2011-07-08, 20:03:51 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-23, 01:23:30 - Csaba Pinter
The STL file name can be found in the tool definition file
Instead of displaying the dot, it could be good to display the stylus that is assembled from vtk primitives (as before for all stylus)

#### 2011-07-27, 22:25:35 - Csaba Pinter
Revisions 397 and 402

#### 2011-07-27, 22:25:35 - Csaba Pinter
status: changed from "New" to "Fixed"


## #62 TrackedUltrasoundCapturing: Capture video without tracking device
TrackedUltrasoundCapturing should be able to capture video without tracking device
- If there is no tracker, sych should be disabled
- If there is no tracker, 4x4 matrix should be hidden 

#### 2011-05-26, 18:24:03 - Tamas Heffter
description: changed from "TrackedUltrasoundCapturing ..." to "TrackedUltrasoundCapturing ..."

#### 2011-05-26, 22:20:28 - Tamas Heffter
If there is no tracker, position, status and speed validation should be disabled

#### 2011-05-27, 03:05:09 - Tamas Heffter
(In r:95) re #62: TrackedUltrasoundCapturing: Capture video without tracking device
Fixed saved dataset mode, too. 

#### 2011-05-27, 03:07:10 - Tamas Heffter
(In r:96) Fixed #62: TrackedUltrasoundCapturing: Capture video without tracking device

#### 2011-05-27, 03:07:10 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:44 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #63 Axis actor displaying in fCal
Optional displaying of axis actors (for the different coordinate systems) - if checking the Axis display checkbox, they appear.

#### 2011-07-08, 18:47:31 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-11, 22:23:42 - Csaba Pinter
Show devices checkbox on Freehand Calibration toolbox
If checked, it shows all the devices that could be loaded according to the device set configuration file (tool definition configuration files are found based on the tool name and type, which contains information about the device model file and the transforms needed for visualizing them)

#### 2011-07-12, 20:13:44 - Csaba Pinter
(In r:258) re #63: Device visualization basics ready (fixes needed); vtkFileFinder added for finding (configuration and model) files; ConfigurationDirectory moved from vtkFreehandController to vtkFileFinder; Registration matrix name corrected in phantom definitions and (yet the only) tool definition; vtkTrackerTool now finds and parses tool definition file

#### 2011-07-12, 20:15:04 - Csaba Pinter
(In r:259) re #63: Basics for device visualization is ready (fixes needed); Phantom definition entry removed from freehand calibration toolbox (readed from calibration configuration)

#### 2011-07-19, 20:45:51 - Csaba Pinter
(In r:317) Re #63: Fix camera setting for image visualization

#### 2011-07-24, 15:14:27 - Csaba Pinter
(In r:378) Re #63: Improvements on Device visualisation in fCal; bugfix on changing tabs

#### 2011-07-24, 15:14:47 - Csaba Pinter
(In r:379) Re #63: Improvements on Device visualisation in fCal

#### 2011-07-25, 20:06:04 - Csaba Pinter
(In r:387) Re #63: Improvements on device visualization (actor transform matrix computations)

#### 2011-07-26, 15:09:44 - Csaba Pinter
(In r:397) Re #63: Improvements on device visualization (loading and transforming models)

#### 2011-07-26, 16:28:48 - Csaba Pinter
(In r:400) Re #63: Fixes in Device visualization in fCal

#### 2011-07-26, 20:20:14 - Csaba Pinter
(In r:402) Re #63: Improvements on device visualization (loading and transforming models); Example stylus model added

#### 2011-07-26, 23:07:40 - Tamas Heffter
Updating tickets (#63, #104)



#### 2011-07-26, 23:07:40 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.0" to "Release Plus-1.2.1 - Before Vancouver"

#### 2011-08-01, 16:14:16 - Csaba Pinter
Basically it works, but there is an issue that needs discussion.

We agreed that in the tool definitions, we have one Calibration element, which is the StylusTipToStylus in the case of a stylus, and ImageToProbe in the case of a probe. But a probe has another calibration: the ProbeToProbeReference. We have to find a way to integrate it into our configuration file (in the tool definition section)

#### 2011-08-01, 17:13:34 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-08-01, 17:13:55 - Csaba Pinter
status: changed from "Fixed" to "Accepted"

#### 2011-08-03, 14:14:15 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-08-03, 19:42:27 - Csaba Pinter
Probe MotelToTool transform is not entirely accurate, but the visualization works fine. This probe model to tool registration has to be done each time the DRB is moved

#### 2011-08-03, 19:42:27 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #64 Configurable number of acquired points for fCal stylus calibration
Add the possibility to configure the number of acquired positions for stylus calibration

#### 2011-07-08, 20:03:51 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-19, 19:29:41 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-19, 20:25:36 - Csaba Pinter
(In r:316) Fixed #64: Stylus calibration number of points can be set from Configuration toolbox; LOG_TRACEs added to many places; Possibility added to Configuration to change log level; spacer removed from the bottom of device set selector widget because it will be in a layout anyway (it just added unnecessary empty space)

#### 2011-07-19, 20:25:36 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-07-26, 23:06:17 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:17 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #65 Display the states of all tools in fCal
Find a good way to let the user know the status of all the tools present in fCal

#### 2011-07-08, 18:43:52 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-16, 17:45:38 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-17, 22:47:43 - Csaba Pinter
(In r:304) re #65: ToolStateDisplayWidget first working version

#### 2011-07-18, 19:09:28 - Csaba Pinter
(In r:308) Fixed #65: ToolStateDisplayWidget final

#### 2011-07-18, 19:09:28 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #66 Add image orientation selection to TrackedUltrasoundCapturing GUI
User should be able to select image orientation from the GUI. 

#### 2011-07-08, 19:25:50 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-08, 19:25:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-09, 18:01:43 - Tamas Heffter
No need to select image orientation from the GUI, the device set should define the correct image orientation (#23). 

#### 2011-07-09, 18:01:43 - Tamas Heffter
status: changed from "New" to "Invalid"


## #67 Sequence metafile converted does not change orientation field
After converting an image from UF to MN, the image orientation field still shows UF, while the orientation of the images inside are already MN

#### 2011-07-08, 19:26:37 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-08, 19:26:37 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-09, 18:04:50 - Tamas Heffter
Solved when we decided to use MF orientation as the internal US image orientation (see #87). 

#### 2011-07-09, 18:04:50 - Tamas Heffter
status: changed from "New" to "Invalid"


## #68 Add version info to PlusLib 
Add version information to  c:\\devel\\Plus-BUILD\\PlusLib\\src\\PlusConfigure.h.in to be able to get PlusLib version from code. 



#### 2011-05-27, 14:36:39 - Tamas Heffter
(In r:97) Fixed #68: Add version info to PlusLib

#### 2011-05-27, 14:36:39 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #69 SavedDataTracker cannot play back data when Status field missing


#### 2011-05-28, 22:22:02 - Tamas Ungi
(In r:100) fixed #69 If Status is not found in the buffer file, it is replaced with OK status.

#### 2011-05-28, 22:22:02 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #70 Event cannot be handled: Device not connected
Currently, vtkDataCollector::Connect() function calls 'exit( EXIT_FAILURE )' if the video source or the tracker cannot be initialized. This doesn't allow application developers to fully control when to close the application. The 'exit' or 'return' functions shouldn't be allowed anywhere in PlusLib, because the prevent error handling at the application level.

#### 2011-07-08, 19:27:36 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-08, 19:27:36 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-18, 19:12:58 - Csaba Pinter
Already fixed.
I checked the code of exit calls and they are only called in the applications (eg VolumeReconstructor)

#### 2011-07-18, 19:12:58 - Csaba Pinter
status: changed from "New" to "Invalid"


## #71 Implement error handling in vtkOpenIGTLinkBroadcaster


#### 2011-05-31, 00:08:16 - Tamas Ungi
(In r:109) test #71 Using error codes + error string.

#### 2011-05-31, 00:08:16 - Tamas Ungi
status: changed from "New" to "Test"

#### 2011-07-22, 14:47:53 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-08-13, 17:46:54 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-24, 12:54:08 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #72 SegmentationParameters definition in the configuration file is ambiguous
Name of segmentation parameters in the xml config file are not easy to understand. Need to change the names to contain unit (pixel, mm, percent, etc.) and to make the definition more clear, such as:

FrameSize='820 616' => this shall not be an input parameter (it's a very basic property of the input image)
ScalingEstimation='0.078' => ApproximateImageSpacing
SearchRegionX='27 793' => SearchRegionTopLeftPixels (not just rename but reorganization of the 4 values)
SearchRegionY='27 589' => SearchRegionBottomRightPixels (not just rename but reorganization of the 4 values)
ThresholdImageTop='10.0' => ThresholdImagePercentTopHalfFrame
ThresholdImageBottom='10.0' => ThresholdImagePercentBottomHalfFrame
FindLines3PtDist='5.3' => CollinearPointsMaxDistanceFromLineMm

Make SearchRegion optional, so that when it is not specified the full image is used as search region.

Need to fix it as early as possible, in all the configuration files.

#### 2011-05-31, 15:37:26 - Andras Lasso
description: changed from "Name of segmentation parame..." to "Name of segmentation parame..."

#### 2011-05-31, 15:38:30 - Andras Lasso
description: changed from "Name of segmentation parame..." to "Name of segmentation parame..."

#### 2011-07-08, 19:28:48 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-11, 16:18:36 - Andras Lasso
Probably the cleanest is to define the search region by two points (top-left and bottom-right) because then the two points can be simply transformed with the image (when it is transformed to the standard MF orientation). See #121.

#### 2011-07-11, 16:19:08 - Andras Lasso
Please describe the meaning of these values on the wiki. If you are not sure about something you can ask me.

#### 2011-07-22, 16:38:13 - Csaba Pinter
assigned_to_id: changed from null to "lassoan"

#### 2011-07-27, 17:26:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 17:45:19 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-01, 18:52:14 - Andras Lasso
Issue Type: changed from null to "Enhancement"

#### 2011-09-01, 18:53:00 - Andras Lasso
assigned_to_id: changed from "lassoan" to "pinter"

#### 2011-09-04, 21:13:55 - Csaba Pinter
(In r:680) Re #72: FrameSize has been removed from config files, it became an additional parameter of idPatternRecognition::RecognizePattern function; FidLabelling renamed to FidLabeling (although according to the dictionaries 'labelling' is also correct, 'labeling' is more common - got 10 times as many results in google, and auto spelling check also finds 'labelling' incorrect)

#### 2011-09-04, 21:15:22 - Csaba Pinter
(In r:681) Re #72: SegmentationParameterDialog changed (FrameSize is a parameter of RecognizePattern, and renaming FidLabelling to FidLabeling)

#### 2011-09-04, 21:37:57 - Csaba Pinter
(In r:682) Re #72: ThresholdImage parameter renamed to ThresholdImagePercent (bottom and top were already unified); FindLines3PtDist renamed to CollinearPointsMaxDistanceFromLineMm

#### 2011-09-04, 21:38:40 - Csaba Pinter
(In r:683) Fixed #72: Changes according to segmentation parameter renaming (ThresholdImagePercent and CollinearPointsMaxDistanceFromLineMm)

#### 2011-09-04, 21:38:40 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #73 Segmentation crashes if search region is too big
Segmentation crashes if search region is too big in SegImpl::dilate... (and maybe in other similar morphological operator functions). Need to make these methods more robust by adding more checking or replace all the operators by ITK implementations.


#### 2011-07-08, 19:29:47 - Csaba Pinter
assigned_to_id: changed from null to "alexis.boucharin"

#### 2011-07-08, 19:29:47 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-15, 16:07:04 - Alexis Boucharin
milestone_id: changed from "Release Plus-1.2.1" to "Release Plus-1.2.2"

#### 2011-08-04, 15:49:09 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-08-04, 17:13:17 - Alexis Boucharin
(In r:517) Fixed #73 If the search region is too big along one edge of the image, it is set to the biggest possible value (which depends on barSize).

#### 2011-08-04, 17:13:17 - Alexis Boucharin
status: changed from "Accepted" to "Fixed"


## #74 Show calibration results in fCal
Seeing the current transform matrices would be a very important troubleshooting and diagnostics feature.
Show also PRE and LRE (in mm)

#### 2011-07-08, 19:30:50 - Csaba Pinter
Logging could be enough

#### 2011-07-08, 19:30:50 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-08, 19:30:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-08, 20:05:33 - Csaba Pinter
...of the calibration result

#### 2011-07-27, 17:28:46 - Andras Lasso
description: changed from "Seeing the current transfor..." to "Seeing the current transfor..."

#### 2011-07-27, 17:28:46 - Andras Lasso
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-27, 17:28:46 - Andras Lasso
summary: changed from "Show current transform matrices in fCal" to "Show calibration results in fCal"

#### 2011-07-28, 04:22:03 - Csaba Pinter
Fixed in rev 415 (my commit message did not work for some reason)

#### 2011-07-28, 04:22:03 - Csaba Pinter
status: changed from "New" to "Fixed"


## #75 Image orientation tag is undefined for acuired image sequences
Image orientation tag is undefined (XX) for acuired image sequences. Probably the config xml file should contain the image orientation tag that shall be written into the acuired file (the value may depend on the US system, image acquisition method, probe type, etc.).

#### 2011-07-08, 19:33:28 - Csaba Pinter
Add image orientation to the config XML files

#### 2011-07-08, 19:33:28 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-08, 19:33:28 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-09, 18:00:25 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1" to "Release Plus-1.2.0"

#### 2011-07-09, 18:00:25 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-09, 18:59:15 - Tamas Heffter
(In r:246) Fixed #75 Image orientation tag is undefined for acuired image sequences
Added UsImageOrientation tag to xml files 

#### 2011-07-09, 18:59:15 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #76 Ascension3DGTracker failed to initialize tools 

* Ascension3DGTracker should read superclass configuration: Superclass::ReadConfiguration(config);
* Need to set the maximum number of tools that the class could handle 


#### 2011-06-02, 00:24:47 - Tamas Heffter
(In r:121) Fixed #76: Ascension3DGTracker failed to initialize tools

#### 2011-06-02, 00:24:47 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-06-02, 00:31:29 - Tamas Heffter
(In r:122) re #76: Ascension3DGTracker failed to initialize tools
Disabled tool selection combo boxes 

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #77 Remove tool selection combos from TrackedUltrasoundCapturing GUI
Remove the following UI elements from TrackedUltrasoundCapturing: 
MainToolComboBox, MainToolTransformName, ReferenceToolComboBox, ReferenceToolTransformName

#### 2011-07-22, 14:48:02 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:34:14 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-26, 14:48:24 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-26, 22:58:41 - Tamas Heffter
(In r:405) Fixed #27: TrackedUltrasoundCapturing: Select device set from GUI
Fixed #77: Remove tool selection combos from TrackedUltrasoundCapturing GUI
Fixed #55: TrackedUSCapturing should display error message when there is an error instead of crashin

#### 2011-07-26, 22:58:41 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-26, 23:06:18 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:18 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #78 Add PLUS_USE_SLICER flag to PlusBuild
- Add an option to build Plus with Slicer and use the already compiled ITK, VTK, OpenIGTLink projects
- Exclude Qt from PlusLib if it's possible 

#### 2011-06-05, 04:36:06 - Tamas Heffter
(In r:127) Fixed #78: Add PLUS_USE_SLICER flag to PlusBuild

#### 2011-06-05, 04:36:06 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-06-05, 17:01:23 - Andras Lasso
Great, thanks! Tested on Windows7 with both Slicer3 and Slicer4 and it worked well.

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2014-02-07, 20:36:36 - Andras Lasso
re #78: Fixed finding of QT path when using Slicer (and CMake could find a some different QT path already)
Commit: r:3150|plus:3150

#### 2015-09-16, 21:35:37 - Andras Lasso
re #78: Fix building with Slicer build tree when using VTK6
Commit: r:4357|plus:4357

#### 2015-09-16, 21:36:50 - Andras Lasso
re #78: Removed unnecessary log message
Commit: r:4358|plus:4358

#### 2015-09-17, 03:21:01 - Adam Rankin
re #78 enabling compressed nrrd read/write when PLUSBUILD_USE_Slicer is chosen
Commit: r:4359|plus:4359

#### 2015-09-17, 14:06:51 - Adam Rankin
re #78 Accounting for errno under linux platform (all platforms really)
Commit: r:4360|plus:4360


## #79 Revise video and tracking buffer 
Remove Seek, AutoAdvance, Play functions from the buffers, and clean up the unnecessary codes. 
Write pointer should point to the next field in the buffer and the read pointer should count from (write pointer - 1) if number of items larger than 0. 

#### 2011-06-04, 00:13:31 - Tamas Heffter
Seek the buffer without seek function within VolumeReconstruction\\vtkFreehandUltrasound2Helper.h

~~~~
// if we are not doing a real time reconstruction, sleep for a millisecond
    // to give the main application thread some time, and seek to the next video frame
    if (!self->RealTimeReconstruction)
      {
      vtkSleep(0.001);

      if (video)
        {
        if (--self->ReconstructionFrameCount == 0)
          {
          return NULL;
          }
    //TODO: seek the buffer without seek function 
        //video->Seek(1);
        }
      }

~~~~



#### 2011-06-04, 01:54:29 - Tamas Heffter
1.
Having a unique frame ID (uid) could be useful. The ID starts from 0 when the buffer is created and it increases when a new frame is added. It is never reset (even when the buffer is emptied). This way you can just notify all interested components about a new frame acquisition by  publishing this unique frame ID, and the component can retrieve the frame by referring to that using this ID. If the frame is not available anymore it can be detected easily.
-If we just have the index in the buffer (0..buffersize-1) then it's not easy to detect if the frame is still/already available or not.
-If we just have a relative index (relative to the last acquired frame) then if we acquire a new image we no longer have an up-to-date reference. So, it's not a reliable reference.
 
2.
The public interface for accessing the buffer could be:
typedef long int FrameUidType;
enum FrameStatus { FRAME_OK, FRAME_NOT_AVAILABLE_YET, FRAME_NOT_AVAILABLE_ANYMORE };
FrameStatus GetLatestFrame(): get the most recent data, e.g., for visualization (we don't care when exactly it was acquired we just want to show it)
FrameStatus GetFrame (FrameUidType uid): get a frame using the unique identifier
FrameStatus GetFrame(Timestamp ts): get a frame by timestamp
 
3.
For display there is no need to do any synchronization (I don't know if we do any), just show the latest image at the latest position (it might be too complex to implement a waiting mechanism for the matching data and the result might be just larger visible lag for the user).
 
4.
For processing (e.g., saving synchronized image+tracker data) it's important to check if the frame and transform are already acquired. This can be verified by the return value of the GetFrame(timestamp) and GetTransform(timestamp) methods. These methods shall return FRAME_NOT_YET_AVAILABLE and TRANSFORM_NOT_YET_AVAILABLE status when requesting a data with a timestamp that is later than the last acquired item to prevent extrapolation. Then the caller method can detect the error and either retry the request after some delay (or just display/log the error, work with the latest available data and let the user to change the data collection settings to prevent this happening again).

#### 2011-06-05, 22:42:37 - Tamas Heffter
(In r:131) re #79: Remove seek and play from video and tracker buffer
Video buffer ready

#### 2011-06-12, 03:53:12 - Tamas Heffter
(In r:143) re #79: Remove seek and play from video and tracker buffer
Changed video buffer to vtkTimestampedCircularBuffer

#### 2011-06-12, 05:01:42 - Tamas Heffter
(In r:144) re #79: Remove seek and play from video and tracker buffer
Fixed GetFrameRate parameters 

#### 2011-06-12, 05:04:11 - Tamas Heffter
(In r:145) re #79: Remove seek and play from video and tracker buffer
Adopted modifications about buffer changes

#### 2011-06-12, 05:14:00 - Tamas Heffter
(In r:146) re #79: Remove seek and play from video and tracker buffer
Renamed vtkVideoBuffer2 to vtkVideoBuffer

#### 2011-06-12, 05:14:33 - Tamas Heffter
(In r:147) re #79: Remove seek and play from video and tracker buffer
Renamed vtkVideoBuffer2 to vtkVideoBuffer

#### 2011-06-15, 15:06:42 - Tamas Heffter
(In r:150) re #79: Remove seek and play from video and tracker buffer
Fixed negative buffer index problem 

#### 2011-06-15, 23:58:21 - Tamas Heffter
(In r:152) re #79: Remove seek and play from video and tracker buffer
Fixed video timestamp problem 

#### 2011-06-18, 19:57:13 - Tamas Heffter
(In r:162) re #79: Remove seek and play from video and tracker buffer
Fixed image not available yet problem 

#### 2011-06-29, 23:43:02 - Tamas Heffter
(In r:181) re #79: Remove seek and play from video and tracker buffer
Fixed comments after code review

#### 2011-06-29, 23:48:51 - Tamas Heffter
Fixed comments after code review: 
DataCollector
 
Is the DataCollector supposed to be thread-safe? If yes, then there must not be any member variable like this->CurrentVideoBufferItem, because e.g., the PlusStatus vtkDataCollector::GetMostRecentTimestamp(double &ts)method can be called from multiple threads at the same time and after you call this->GetVideoSource()->GetBuffer()->GetLatestVideoBufferItem(this->CurrentVideoBufferItem)on one thread, the other thread can overwrite the this->CurrentVideoBufferItem. The temporary buffer item must not be a member variable but a local variable (on stack) or an input variable (from the method that calls vtkDataCollector::GetMostRecentTimestamp). The same applies to MostRecentFrameBufferIndex (it shall not be a member variable because it can be changed at any time by another thread).

Copying the total buffer (including the image data) just to get the timestamp is too expensive. It would be much more efficient if the buffer could directly return the most recent timestamp.
 
Replace vtkDataCollector::TrackingOnly by and vtkDataCollector::VideoOnly by TrackingEnabled and VideoEnabled (and change the program logic accordingly). TrackingOnly and VideoOnly names are really bad, because they can describe a contradictory state (if both are true) and very confusing (TrackingOnly refers to the availability video signal; VideoOnly refers to the tracking).
 
#define SYNCHRO_SIGNAL_NOGATING 1
#define SYNCHRO_SIGNAL_FAKE 2
#define SYNCHRO_SIGNAL_HEART 3
#define SYNCHRO_SIGNAL_USB 4
Replace these #defines by an enum (or remove? they don't seem to be used)
 
#define SYNCHRO_VIDEO_NTSC 1
#define SYNCHRO_VIDEO_PAL 2
Replace these #defines by an enum (or remove? they don't seem to be used)
 
virtual PlusStatus Synchronize(const bool saveSyncData = false);
save to where?
I guess we usually know if we want to save/discard the result after the sync is complete.
 
DumpTrackerToMetafile
Write would be more appropriate than Dump
 
DumpVideoBufferToMetafile
Write would be more appropriate than Dump
 
                // Description:
                // Get frame data with timestamp
                virtual PlusStatus GetFrameWithTimestamp(vtkImageData* frame, double& frameTimestamp);  
Is timestamp an input or an output variable? If it's not input then which frame do you get with this?
 
virtual int GetNextActiveToolNumber();
It's unclear what you can use this method for. Just for getting the next available tool after the current one? Is there a method to set the current tool?
Same for Previous.
 
int vtkDataCollector::GetNextActiveToolNumber()
The implementation logic is so complex that I'm not sure if it's correct.
Why we need the loop variable instead of just returning with error if nextToolNumber >= numberOfTools?
 
int vtkDataCollector::GetNextActiveToolNumber()
Return with an error code instead of a special value (-1) to signal error. It would make the error handling more clear. Why don't we return with error if there is no more active tools (instead of returning with the default port number)? Especially because the default port might not even be active.
 
DumpBufferSize
WriteBufferSize would be nicer.
 
vtkSetMacro(Initialized,bool);
I don't think this should be protected.
 
virtual PlusStatus ReadConfiguration();
From where? At least it should be documented what does it do (but a more descriptive name would be even better).
 
All member variable shall be deleted in the destructor, a couple of them might not be deleted now (CurrentVideoBufferItem, ConfigFileName, etc.)
 
void vtkDataCollector::PrintSelf(ostream& os, vtkIndent indent)
Isn't there anything to be printed?
 
 
if ( this->GetTracker() != NULL )
      {
            if ( !this->GetTracker()->Connect() )
            {
                  LOG_ERROR('Unable to initialize tracker!');
                  return PLUS_FAIL;
            }
      }
It's better to return immediately if you encounter an error:
if ( this->GetTracker() == NULL )
      {
                                log error
                                return with error
                }
 
PlusStatus vtkDataCollector::Connect()
Why don't we use the VideoEnabled and TrackerEnabled flags here?
 
 
this->GetVideoSource()->Record();
this->GetTracker()->StartTracking();
These names are inconsistend. Both should be Record() or they should be StartVideo() and StartTracking()
 
// reserve enough transformation capacity for each tool
this->ToolTransMatrices.clear();
...
I guess this should be done before starting tracking
 
PlusStatus vtkDataCollector::Start()
What happens if we started already? Shouldn't we check for that?
 
PlusStatus vtkDataCollector::CopyTrackerBuffer( vtkTrackerBuffer* trackerBuffer, int toolNumber )
{
...
      if ( trackerBuffer == NULL )
      {
            trackerBuffer = vtkTrackerBuffer::New();
      }
I don't understand why you do this. Noone will be able to access trackerBuffer after you return this method, so it'll leak. If the calling method didn't provide a memory address where the results can be copied (trackerBuffer==NULL) then the method should simple return with failure.
Same for tracker.
 
PlusStatus vtkDataCollector::DumpTrackerToMetafile( vtkTracker* tracker, const char* outputFolder, const char* metaFileName, bool useCompression /*= false*/ )
Do you use any member variable? If not then it should be a static method.
 
const int percent = floor( (100.0*i) / (1.0*numberOfItems));
Compute percent only if you use it (move it into the nested if block).
 
PlusStatus vtkDataCollector::Synchronize( const bool saveSyncData /*=false*/ )
Saving the buffers to metafiles should depend on current log level (should be done only if it's at least debug level).
 
vtkDataCollector::GetMainToolName
this->GetTracker()->GetTool(this->GetDefaultToolPortNumber())
The names should be consistent Main/Default (I would prefer default).
 
startTime != -1.0
It's unreliable to compare a floating point variable to a constant (it may be possible that the constant cannot be exactly represented by the variable, e.g., it's not -1 but -0.99999999999999 and so the comparison can fail). A solution could be to remove the default parameter and require the caller to provide the parameter.
 
void vtkDataCollector::ConvertVtkImageToItkImage(vtkImageData* inFrame, TrackedFrame::ImageType* outFrame)
Add comments about why the flipping is necessary.
 
vtkMatrix4x4* vtkDataCollector::GetToolTransMatrix( unsigned int toolNumber/* = 0 */)
int vtkDataCollector::GetToolFlags( unsigned int toolNumber/* = 0 */)
I would prefer to have proper error code return instead of merging the output value with the status code.
 
-----------------------------------------------------------
 
vtkTimestampedCircularBuffer
 
template<class BufferItemType>
void vtkTimestampedCircularBuffer<BufferItemType>::SetBufferSize(int bufsize)
Why don't you use error code when the method fails?
 
std::deque<BufferItemType*> BufferItemContainer;
Why didn't you use std::deque<BufferItemType> BufferItemContainer? You could have avoided the allocation/deallocation magic in void vtkTimestampedCircularBuffer<BufferItemType>::SetBufferSize(int bufsize).
 
BufferItemType* vtkTimestampedCircularBuffer<BufferItemType>::GetBufferItem(const int bufferIndex)
{
      if (this->GetBufferSize() <= 0
            || bufferIndex >= this->GetBufferSize()
            || bufferIndex < 0 )
      {
            return NULL;
      }
Log error when return with NULL
 
void vtkTimestampedCircularBuffer<BufferItemType>::DeepCopy(vtkTimestampedCircularBuffer<BufferItemType>* buffer)
You have a pointer vector, so you need to copy each element by value (creating a new object & copy the contents of each BufferItem). Even better, use just a std::deque<BufferItemType> BufferItemContainer, then copy would be trivial.
 
void vtkTimestampedCircularBuffer<BufferItemType>::DeepCopy(vtkTimestampedCircularBuffer<BufferItemType>* buffer)
Need to lock while doing the copy, otherwise you might get inconsistent content in the copied object.
 
void vtkTimestampedCircularBuffer<BufferItemType>::DeepCopy(vtkTimestampedCircularBuffer<BufferItemType>* buffer)
Need to lock while changing all the values.
 
double vtkTimestampedCircularBuffer<BufferItemType>::GetFrameRate(bool ideal /*=false*/)
return 1 not needed
 
--------------------------------
 
VideoBuffer
 
VideoBufferItem::VideoBufferItem(const VideoBufferItem &videoItem)
...
if (!videoItem.GetFrame()->CopyData(this->Frame->GetVoidPointer(0), this->Frame->GetFrameExtent(), this->Frame->GetFrameExtent(), this->Frame->GetPixelFormat()))
Why don't you just use the videoItem's DeepCopy?
 
PlusStatus VideoBufferItem::DeepCopy(VideoBufferItem* videoItem)
...
if (!videoItem.GetFrame()->CopyData(this->Frame->GetVoidPointer(0), this->Frame->GetFrameExtent(), this->Frame->GetFrameExtent(), this->Frame->GetPixelFormat()))
Why don't you just use the videoItem's DeepCopy?
 
PlusStatus SetFrame(unsigned char *imageDataPtr,
            const int frameSizeInPx[3],
            const int numberOfBitsPerPixel,
            const int   numberOfBytesToSkip );
Shall the caller delete the buffer or the VideoBufferItem will do that? Need to document who has the ownership to the imageDataPtr buffer after this call.
 
PlusStatus SetFrame(vtkVideoFrame2* frame);
Need to document who has the ownership to the imageDataPtr buffer after this call.
 
PlusStatus SetFrame(vtkImageData* frame);
Need to document who has the ownership to the imageDataPtr buffer after this call.
 
while (--rows >= 0)
Why dont' you just wrote a usual for loop (for (r=0; r<rows; r++) )?
You saved the creation of an extra index variable (that's negligible) but made the code more difficult to read.
Also, the current implementation crashes if rows is an unsigned integer and the initial value of rows is 0.
 
vtkVideoBuffer::~vtkVideoBuffer()
{
      this->FrameFormat->Delete();
}
Safer to check for NULL before delete and set to NULL after delete.
 
vtkVideoBuffer::~vtkVideoBuffer()
Why don't you delete VideoBuffer in the destructor?
 
// Update video buffer
virtual void UpdateBuffer();
What does this method do?? Update the name and/or documentation.
 
LOG_DEBUG( 'vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!');
return PLUS_FAIL;
Why just LOG_DEBUG?
 
LOG_WARNING( 'vtkVideoBuffer: Failed to get pointer to video buffer object from the video buffer for the new frame!');
return PLUS_FAIL;
Why just LOG_WARNING?
 
PlusStatus vtkVideoBuffer::AddItem(unsigned char *imageDataPtr,
This method seems to be unsafe. You expect this sequence of operation:
1. New frame is prepared in the buffer:  this->VideoBuffer->PrepareForNewFrame(filteredTimestamp, itemUid, bufferIndex) != PLUS_SUCCESS )
2. Set the timestamp value for the latest  frame: newObjectInBuffer->SetFilteredTimestamp(filteredTimestamp);
3. DataCollector retrieves the timestamp of the latest frame
However, the 1 (acquisition thread), 3 (rendering thread), 2 (acquisition thread) order can occur just as well and I think in this case you return an incorrect timestamp value. I would introduce a FinalizeNewFrame method that signals that the new frame has been fully set up. Check all the public methods of the buffer whether they work correctly if you call them after prepare but before finalize (especially GetLatestItemUidInBuffer and GetOldestItemUidInBuffer).


#### 2011-06-29, 23:48:55 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-06-29, 23:49:37 - Tamas Heffter
(In r:182) re #79: Remove seek and play from video and tracker buffer
Fixed comments after code review

#### 2011-06-30, 20:14:58 - Tamas Heffter
(In r:188) re #79: Remove seek and play from video and tracker buffer
Fixed comments after code review

#### 2011-07-08, 18:50:34 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 21:23:52 - Tamas Heffter
summary: changed from "Remove seek and play from video and tracker buffer " to "Revise video and tracking buffer "

#### 2011-07-08, 21:24:23 - Tamas Heffter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-09, 01:46:55 - Tamas Heffter
(In r:241) re #79 Revise video and tracking buffer - Fixed code review comment 
int vtkTimestampedCircularBuffer<BufferItemType>::GetBufferIndex( const BufferItemUidType uid )
Use proper return status instead of hiding the error code in special values (not just here, everywhere).
E.g., current code crashes at the BufferItemContainer[bufferIndex] call in  ItemStatus vtkTimestampedCircularBuffer<BufferItemType>::GetFilteredTimeStamp(const BufferItemUidType uid, double &filteredTimestamp)if the uid is removed from the buffer after the GetFrameStatus check (you don't lock the buffer, so nothing prevents the item from being overwritten).

#### 2011-07-12, 23:08:13 - Tamas Heffter
(In r:261) re #79: Revise video and tracking buffer
Changed Tracker buffer to use the timestamped circular buffer 

#### 2011-07-12, 23:09:40 - Tamas Heffter
(In r:262) re #79: Revise video and tracking buffer
Changed Tracker buffer to use the timestamped circular buffer 
Fixed #123 Spelling error

#### 2011-07-14, 22:41:12 - Tamas Heffter
(In r:271) re #79: Revise video and tracking buffer
Added vtkTimestampedCircularBuffer filtered timestamp generation 

#### 2011-07-15, 00:08:55 - Tamas Heffter
(In r:272) re #79: Revise video and tracking buffer
Added vtkTimestampedCircularBuffer filtered timestamp generation 

#### 2011-07-15, 12:33:33 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-07-20, 18:29:54 - Tamas Heffter
status: changed from "Test" to "Fixed"

#### 2017-09-15, 19:28:15 - Andras Lasso
re #79: Fixed position of reconstructed volume sent over OpenIGTLink

The regression was introduced when an attempt was made to use some utility methods in OpenIGTLinkIO.

For now, this change is reverted but in the long term the method should be reqritten to use the OpenIGTLinkIO utility method.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/301bee9f2cfbd85d0c9ef55e093b4ca3cd889fcb|plus:301bee9f2c


## #80 Report VTK errors with the Plus logging macros
Replace vtkOutputWindow with a custom vtkPlusOutputWindow (similar to vtkFileOutputWindow) that reports the vtk error and warning messages with  the Plus logging macros.
Then the regexp to check  the test outputs can be restricted to search for [ERROR] or <ERROR> instead of ERROR (to catch only real Plus error messages).

#### 2011-07-22, 14:48:15 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-11-04, 15:23:02 - Csaba Pinter
Already fixed

#### 2011-11-04, 15:23:02 - Csaba Pinter
status: changed from "New" to "Invalid"


## #81 vtkICCapturingSource2: Set NumberOfScalarComponents
vtkICCapturingSource2 should set/get NumberOfScalarComponents (aka the BitsPerPixel) from the device. 


#### 2011-07-07, 16:24:10 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-08, 14:38:54 - Tamas Heffter
(In r:231) re #87 Use MF as internal ultrasound orientation everywhere in the code
Child - Fixed #86 Change vtkVideoFrame custom image container to itkImageData
Child - Fixed #81 vtkICCapturingSource2: Set NumberOfScalarComponents

#### 2011-07-08, 14:38:54 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-07-08, 14:38:54 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #82 Function that prints the parameters of a transformation matrix
A function is needed in PlusCommon, that calculates and prints the translation, rotation, scaling and shearing parameters from a vtkMatrix4x4, to be able to easily assess a result matrix

#### 2011-06-30, 16:22:21 - Csaba Pinter
vtkDataCollectorSynchronizer::IsTransformBelowThreshold function contains code like that that can be used

#### 2011-07-08, 20:03:51 - Csaba Pinter
Updating tickets (#28, #31, #59, #61, #64, #82, #38)



#### 2011-07-08, 20:03:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-27, 17:30:11 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-05, 14:11:13 - Csaba Pinter
(In r:523) Fixed #82: PlusMath::GetTransformParametersString function created, and used in vtkFreehandCalibrationController when printing the results

#### 2011-08-05, 14:11:13 - Csaba Pinter
status: changed from "New" to "Fixed"


## #83 Don't discard unsaved frames in case of memory allocation error
Pop up an error message if the tracked data saving was unsuccessful and do not discard the data from the local buffer, we don't want to lose the data. 
Maybe we should try to allocat smaller portion of memory. 

#### 2011-07-22, 14:48:47 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-26, 14:18:30 - Tamas Heffter
Duplicated ticket

#### 2011-07-26, 14:18:30 - Tamas Heffter
status: changed from "New" to "Fixed"


## #84 Building problem
Hi there,

I'm trying to build the PlusBuild. Cmake successfully made the Plus-bin folder but when I try to build the ALL_BUILD project in Visual Studio 2008 I get the following two errors:

Error  1  error PRJ0019: A tool returned an error code from 'Performing configure step for 'PlusLib''  PlusLib
Error  2  error PRJ0019: A tool returned an error code from 'Performing configure step for 'PlusApp''  PlusApp

Any ideas about what the problem might be? 

Thanks in advance,
Mohammad

#### 2011-06-29, 00:42:41 - Andras Lasso
Could you please attach the BuildLog.htm file (it's in ...\\PlusLib.dir\elease\\BuildLog.htm or ...\\PlusLib.dir\\Debug\\BuildLog.htm)?

If you fully configure the project in CMake then configure step shouldn't be needed in Visual Studio. What output is displayed in CMake when you generate the project? (you can just start CMake and press Generate button, no problem that you've already generated the project)


#### 2011-06-29, 00:53:30 - Mohammad Najafi
file:a037bkOEOr4lVReJe4gwI3

#### 2011-06-29, 00:53:30 - Mohammad Najafi
Attachment added: "BuildLog.htm"

#### 2011-06-29, 00:57:29 - Mohammad Najafi
Hi,
This is the output of the Cmake:
Configuring done
Generating done
So it shows no signs of problem. right?

Thanks

#### 2011-06-29, 01:24:06 - Andras Lasso
CMake configure step seems OK, but the BuildLog.htm shows the details of the error:
CMake Error: The following variables are used in this project, but they are set to NOTFOUND.
Please set them or make sure they are set and tested correctly in the CMake files:
NDIOAPI_INCLUDE_DIR

So, the problem is that you enabled Certus tracking, but the NDI libraries were not defined. At Queen's we store the NDI libraries in a separate repository (PLTools) and they are discovered automatically.

Do you see the NDIOAPI_INCLUDE_DIR variable in CMake if you set the PlusLib-bin directory as 'Where to build libraries'?
- If you see the NDIOAPI_INCLUDE_DIR variable, then set it as follows:
        NDIOAPI_INCLUDE_DIR -> Path to the NDI oapi SDK include directory. (it contains ndopto.h)
        FIND_PATH(NDIOAPI_BINARY_DIR -> Path to the NDI oapi SDK binary directory.' (it contains oapi.dll)
- If you don't see the variable, you need to ask help from Tomi Heffter (he either gives you access right to the PLTools repository or fix the CMake files to make the variable visible).


#### 2011-06-29, 17:34:34 - Tamas Heffter
Mohammad, 

Please accept the invitation to the PLTools project and check the PLUSBUILD_USE_PLTools check box in CMake and build the PlusBuild again. 


#### 2011-06-29, 17:36:02 - Andras Lasso
assigned_to_id: changed from null to "mnajafi"

#### 2011-06-29, 17:36:02 - Andras Lasso
status: changed from "New" to "Test"

#### 2011-06-29, 21:18:07 - Mohammad Najafi
Problem solved!

Thanks

#### 2011-06-29, 21:19:28 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #85 Error display method
Change the way errors are displayed from modal windows to a slicer-like method

#### 2011-07-08, 18:43:33 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 20:47:30 - Csaba Pinter
StatusIcon in CommonWidgets project waas added in revision 193

#### 2011-07-08, 20:47:30 - Csaba Pinter
status: changed from "New" to "Fixed"


## #86 Change vtkVideoFrame custom image container to itkImageData
Use itkImage instead of unsigned char *Array to clearly define image storage. 
This case, we don't have to duplicate memory for video buffer writing into metafile. 
 
Remove the following memory allocation from vtkDataCollector::WriteVideoBufferToMetafile method: 

~~~~
        // Allocate memory for new frame
        int* videoFrameSize = videoBuffer->GetFrameFormat()->GetFrameSize(); 
        TrackedFrame::ImageType::Pointer frame = TrackedFrame::ImageType::New(); 
        TrackedFrame::ImageType::SizeType size = {videoFrameSize[0], videoFrameSize[1]};
        TrackedFrame::ImageType::IndexType start = {0,0};
        TrackedFrame::ImageType::RegionType region;
        region.SetSize(size);
        region.SetIndex(start);
        frame->SetRegions(region);
        frame->Allocate();


~~~~



#### 2011-07-07, 16:21:36 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-08, 14:38:54 - Tamas Heffter
(In r:231) re #87 Use MF as internal ultrasound orientation everywhere in the code
Child - Fixed #86 Change vtkVideoFrame custom image container to itkImageData
Child - Fixed #81 vtkICCapturingSource2: Set NumberOfScalarComponents

#### 2011-07-08, 14:38:54 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-07-08, 14:38:54 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-08, 19:10:45 - Csaba Pinter
Updating tickets (#78, #11, #23, #76, #1, #2, #5, #6, #7, #8, #9, #15, #17, #18, #19, #20, #21, #24, #30, #32, #34, #35, #36, #51, #52, #53, #54, #57, #62, #68, #69, #81, #84, #86)

Fixed tickets moved to the first (Assembla) Release

#### 2011-07-08, 19:10:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"


## #87 Use MF as internal ultrasound orientation everywhere in the code
After reading from file or acquiring from device, we have to convert it to MF.

Saving happens always in MF orientation.

#### 2011-07-08, 14:37:57 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-08, 14:38:54 - Tamas Heffter
(In r:231) re #87 Use MF as internal ultrasound orientation everywhere in the code
Child - Fixed #86 Change vtkVideoFrame custom image container to itkImageData
Child - Fixed #81 vtkICCapturingSource2: Set NumberOfScalarComponents

#### 2011-07-08, 14:44:39 - Tamas Heffter
(In r:232) re #87 Use MF as internal ultrasound orientation everywhere in the code
Fixed apps to use the new internal MF orientation 

#### 2011-07-08, 19:33:51 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-08, 21:01:40 - Tamas Heffter
(In r:234) re #87 Use MF as internal ultrasound orientation everywhere in the code
Used US_IMAGE_ORIENTATION enums everywhere

#### 2011-07-08, 21:02:40 - Tamas Heffter
(In r:235) re #87 Use MF as internal ultrasound orientation everywhere in the code
Used US_IMAGE_ORIENTATION enums everywhere
Exit SequenceMetafileConverter in case of any error. 

#### 2011-07-09, 19:41:45 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-18, 16:35:47 - Tamas Heffter
(In r:305) Fixed #87: Use MF as internal ultrasound orientation everywhere in the code


#### 2011-07-18, 16:37:37 - Tamas Heffter
(In r:306) Fixed #87: Use MF as internal ultrasound orientation everywhere in the code
Fixed vtk to itk converter 
Fixed live data conversion 



## #88 Improve StatusIcon functionality
* Make the icon toggleable so that is does not disappear on leve event
* Change the colors
* Enable filtering on types of messages
* Make it resizeable


#### 2011-07-06, 18:30:57 - Csaba Pinter
After toggliing, a header would appear so that the user can move it anywhere. After toggling back, the window resumes its original behavior (show on entering widget and hide on leaving)

#### 2011-07-08, 19:35:33 - Csaba Pinter
Updating tickets (#88, #90)

After roadshow version

#### 2011-07-08, 19:35:33 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-26, 19:37:02 - Csaba Pinter
Toggling done in #215

#### 2013-05-15, 19:58:12 - Adam Rankin
Issue Type: changed from null to "Enhancement"

#### 2013-05-15, 19:58:12 - Adam Rankin
assigned_to_id: changed from "pinter" to null

#### 2014-06-04, 20:15:35 - Andras Lasso
Make the icon toggleable so that is does not disappear on leve event => done
Change the colors => no problems with the colors
Enable filtering on types of messages => we can change log level, it's enough
Make it resizeable => done

So, the status icon is good as is.

#### 2014-06-04, 20:15:35 - Andras Lasso
status: changed from "New" to "Invalid"


## #89 Check X and Y axes' ortogonality in calibration result matrix
Compute dot product of X and Y axis vector, and if it is greater than 0 (some epsilon) than give a warning about it

#### 2011-07-22, 14:49:15 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-08-04, 20:51:50 - Csaba Pinter
(In r:522) Fixed #89: If dot product of X and Y axis vectors in the calibration result is greater than 0.001 then give a warning; FreehandController parameter reading fixed (it left uninitialized members before); Compilation warning fixed

#### 2011-08-04, 20:51:50 - Csaba Pinter
status: changed from "New" to "Fixed"


## #90 Add automated tests for GUI components
See this open-source project (developed at MIT) for automated GUI testing: http://sikuli.org/
There is also some work about its CMake integration: http://www.insight-journal.org/browse/publication/822

We may have higher-priority tasks right now, but we have to keep this in mind and try GUI testing as soon as we can.

#### 2011-07-06, 15:41:24 - Csaba Pinter
Tomi's comment: 'We had a chance to see it during the project week. It has some disadvantages (e.g. it depends on the screen size, so they are using pixel positions instead of windows id to click on an object)...'

I think those disadvantages make this almost unusable (if we change even the spacing in our Qt forms, then we have to modify all the tests related to those pages), but maybe it can do better than only clicking to (X,Y) positions, we will look into it.

#### 2011-07-06, 16:04:02 - Csaba Pinter
I took a deper look at Sikuli, and I think it can be quite good actually!
Instead of clicking to pixel positions, it uses screenshots to determine the point where to click, so it tolerates all kinds of re-ordering and layout changing. It even has some tolerance for appearance changes, since it uses an algorithm that matches the screenshot in our script to the actual screen, and it returns with the best match, so it doesn't need to be identical.
So it's even simpler to use than the keyword-driven testing, which is considered to be state-of-the-art.
I think it's worth a try.

#### 2011-07-08, 19:35:33 - Csaba Pinter
Updating tickets (#88, #90)

After roadshow version

#### 2011-07-08, 19:35:33 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2016-07-13, 16:55:26 - Adam Rankin
Closing as invalid as it is a duplicate of an active normal priority ticket.

#### 2016-07-13, 16:55:26 - Adam Rankin
status: changed from "New" to "Invalid"


## #91 Synchronization crashes with TrackedUltrasound capturing 


#### 2011-07-08, 18:48:25 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-09, 19:01:49 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-09, 19:04:02 - Tamas Heffter
(In r:247) re #91 Synchronization crashes with TrackedUltrasound capturing
Lock buffer on Clear()
If the buffer is empty RequestData can return immediately 

#### 2011-07-09, 19:04:53 - Tamas Heffter
(In r:248) re #91 Synchronization crashes with TrackedUltrasound capturing
Fixed display log level issue 

#### 2011-07-09, 19:11:02 - Tamas Heffter
If the video buffer empty, the ImageActor crashes. 
*How to reproduce:* 
# Start TrackedUltrasoundCapturing app
# Go to Sync window
# Click on start sync then cancel and immediately start again 
=> vtkOpenGLImageActor::MakeDataSuitable will crash ( this->Input->GetScalarPointerForExtent NULL )

#### 2011-07-15, 15:58:32 - Tamas Heffter
(In r:278) Fixed #91: Synchronization crashes with TrackedUltrasound capturing

#### 2011-07-15, 15:58:32 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #92 Finalize configuration file structure
Also edit the wiki page

#### 2011-07-18, 15:49:10 - Csaba Pinter
With Tomi we agreed in the following:
* Phantom registration result should go to the PhantomDefinition file under Geometry/Registration tag
* Other tool calibrations (ImageToProbe, StylusTipToStylus etc.) go in the USDataCollectionConfig under the Tool/Calibration tag (indicating date and error)
* The configuration data should be represented mainly (from the initial loading) by vtkXMLDataElement objects, which are passed to the proper class (eg. vtkDataCollector wants the Tracker to save its configuration. It passes the data element that contains the Tracker tag to the tracker, which further distributes the Tool tags to the TrackerTools. No  member variables should be used)

#### 2011-07-18, 15:49:10 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-18, 15:49:10 - Csaba Pinter
status: changed from "New" to "Fixed"


## #99 Move back PlusApp to PlusLib solution


#### 2011-07-09, 13:47:36 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-09, 14:27:18 - Tamas Heffter
(In r:244) re #99 Move back PlusApp to PlusLib solution
Included PlusLib projects as an external project for PlusApp

#### 2011-07-10, 02:51:28 - Csaba Pinter
I tried to build it after updating the plus build, but it failed (a tool 
returned an error code from 'Performing configure step fpr PlusApp', and 
PlusLib too). Then I tried with a clean build, and I still get these errors.



#### 2011-07-10, 04:52:07 - Tamas Heffter
(In r:252) re #99 Move back PlusApp to PlusLib solution
Fixed vtkImageAcquisition project path

#### 2011-07-10, 04:54:38 - Tamas Heffter
Can you tell me more details about the config step error? I've tested it on two different machine (there was only a project path issue that I've already fixed). 

#### 2011-07-10, 14:20:36 - Csaba Pinter
The problem was that I didn't check the PlusBuild_use_PLTools in CMake. But if it prevents the build to succeed, do we really need that option? It's like we could ckeck build_will_fail

#### 2011-07-12, 16:40:30 - Tamas Heffter

1. Move all INCLUDE_EXTERNAL_MSPROJECT to their own CMake project files like: 
~~~~

PlusLib_EXTERNAL_MSPROJECT( ${PlusLib_EXTERNAL_MSPROJECT} ProjName vcprojFile ProjDepends) 
~~~~

2. Include the external projects in the PlusLib Use file. 

#### 2011-07-15, 12:28:20 - Tamas Heffter
(In r:275) re #99: Move back PlusApp to PlusLib solution
Added MS project includes to PlusLib CMake files with an INCLUDE_PLUSLIB_MS_PROJECTS macro

#### 2011-07-15, 12:29:56 - Tamas Heffter
(In r:276) Fixed #99: Move back PlusApp to PlusLib solution

#### 2011-07-15, 12:29:56 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #100 Run fCAL test to provide baseline accuracy for the freehand calibration


#### 2011-07-15, 15:17:47 - Tamas Heffter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 03:34:57 - Thomas Kuiran Chen
- Finished 50 independent, real-time calibration trials with SonixTOUCH SDK and the latest image setting 820x616.
- Currently performing statistical analysis on the extracted error reports from the calibration results.

#### 2011-07-22, 03:34:57 - Thomas Kuiran Chen
status: changed from "New" to "Test"

#### 2011-07-27, 17:23:18 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-07-29, 13:46:38 - Thomas Kuiran Chen
All statistical analysis were completed with the 50 real-time, independent fCAL trials. 

Averaged PRE = 1.08 mm, standard deviation = 0.86 mm. 

#### 2011-07-29, 13:46:38 - Thomas Kuiran Chen
status: changed from "Test" to "Fixed"


## #101 Calibration phantom with 3 N-Wires
Generalization of vtkProbeCalibrationAlgo is needed.

Possibilities:
* U-shape
* Triangle
* 3 parallel levels with different x-offset (no new phantom needed, just new wiring)

#### 2011-07-22, 14:54:42 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2012-01-03, 15:42:17 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2012-01-03, 15:42:17 - Csaba Pinter
component_id: changed from "None" to "PlusLib"

#### 2012-01-03, 15:42:17 - Csaba Pinter
description: changed from "Possibilities:
* U-shape
* ..." to "Generalization of vtkProbeC..."

#### 2012-01-03, 15:42:17 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to null

#### 2012-01-03, 15:42:17 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2012-01-10, 19:13:03 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-01-10, 20:22:59 - Tamas Heffter
Csaba, is it out of scope now? 

#### 2012-01-10, 20:24:50 - Csaba Pinter
No it's now a duplicate. I created the generalization ticket (see associations) because it appeared that this ticket is only about the phantom re-wiring.
Hence the title of that ticket is more talkative, I kept that one instead of this.

#### 2012-01-10, 22:25:56 - Tamas Heffter
Ok, thanks! 

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #102 Shipment of water bucket and stand from AMS to Queen's


#### 2011-07-15, 15:16:40 - Tamas Heffter
Everything (demo stand, Terason, CIVCO stepper) will be shipped to Queen's by July 22.


#### 2011-07-15, 15:17:16 - Tamas Heffter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 03:30:58 - Thomas Kuiran Chen
Jennifer has shipped the following package on July-20-2011 via FedEx International Priority:
1.  AMS calibration stand and small water tank;
2.  Terason transrectal biplane imaging system installed on laptop;
3.  CIVCO digitally encoded stepper.

Package in two pieces, total weight: 29.9 kg.

FedEx Tracking Number: 794991867736 (master) and 794991867758 (2nd).

Estimated delivery: Jul 22, 2011 by 5:00 PM.

#### 2011-07-22, 03:30:58 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:18 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:18 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #103 Terason SDK integration
Only if there is time to do it; using frame grabber would suffice otherwise

#### 2011-07-19, 16:11:01 - Csaba Pinter
Entry from Mantis (for the record):

Subject: Re: FW: Questions about iCAL testing at AMS
Date: Tue, 15 Feb 2011 15:35:41 -0600
From: Paul Neubauer <pauln@acousticmed.com>
To: clifb@acousticmed.com

Clif,

We have an ISO CDROM image file of the Terason SDK that includes a standard Terason Version 4.0 application that Chris Alex used to write a Terason RF frame data capture application. It is about 50MB in size and can be sent through the AMS SVN web server. If there is any Terason API information that we have it should be in this file.

Have a very good day,
Paul

#### 2011-07-22, 14:58:33 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2014-06-05, 01:30:57 - Andras Lasso
We don't plan to implement this unless there is a request for it.

#### 2014-06-05, 01:30:57 - Andras Lasso
status: changed from "New" to "Invalid"


## #104 Fix image/position sync
*Final synchronization with multiple triggers, the difference should be under -20..+30msec
*Check on the same PC, with Ulterius 2.x+, check SonixTouch with Ulterius on localhost

Previous discussion can be found in Mantis:
http://crunch.cs.queensu.ca/mantis/view.php?id=221

#### 2011-07-15, 15:22:31 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-07-15, 15:22:31 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.2.0"

#### 2011-07-19, 05:51:45 - Andras Lasso
(In r:314) re #104: Added an option (--output-fiducial-positions-file) to UsFidSegTest to save timestamped wire position data into a csv file

#### 2011-07-19, 12:39:03 - Andras Lasso
Detailed testing (using an oscillating positioning stage) on one data set shows that there is no variable delay in neither the video nor the tracker data (using the Ulterius interface, running Plus on a separate PC at about 15fps).

See a comparison of the position vs. time curves on the attached 2011-07-15_time-synch-test-compareVideoTracker.pdf  file.

The full data set can be found on the image server (s:\\data\  rackedUltrasoundValidation\\2011-07-15_time-synch-test).


#### 2011-07-19, 12:39:25 - Andras Lasso
file:aIXaxgSGqr4jpXeJe5cbLr

#### 2011-07-19, 12:39:25 - Andras Lasso
Attachment added: "2011-07-15_time-synch-test-compareVideoTracker.pdf"

#### 2011-07-19, 12:47:02 - Andras Lasso
Tamas, please acquire a few more data sets and check the position vs. time curves. Maybe also ask Tomi to do a few more tests with different settings (various fps, trackers, ulterius/framegrabber, same/different PC, etc.).

If the curves are as nice as in the 2011-07-15_time-synch-test data set then we can move on to tuning the synchronization algorithm (maybe we can add a calibration phantom based sync algo (that optimizes the correlation between reported position info in the tracker and video stream).


#### 2011-07-19, 12:47:02 - Andras Lasso
assigned_to_id: changed from "heffter" to "ungi"

#### 2011-07-26, 23:07:41 - Tamas Heffter
Updating tickets (#63, #104)



#### 2011-07-26, 23:07:41 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.0" to "Release Plus-1.2.1 - Before Vancouver"

#### 2011-07-27, 17:26:43 - Andras Lasso
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-30, 20:31:34 - Tamas Heffter
Our tests with positioning table and fCal calibration phantom showed that the video offset is constant  on a specific device set. 
The video offset with SonixVideo and NDI Certus tracker running on SonixTouch, using  L14-5 probe is: -0.1908 s (std: 0.0165s). 
The video offset with SonixVideo and Ascension tracker running on SonixTouch, using  L14-5 probe is: -0.2976s (std: 0.0086s). 



#### 2011-07-30, 20:31:34 - Tamas Heffter
status: changed from "New" to "Fixed"


## #105 Optical tracker iCal calibration
Fix DRB on the TRUS probe and run iCal; validate stepper tracking

#### 2011-07-22, 14:54:53 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-10-07, 17:38:08 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:38:08 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #106 Phantom design for sagittal calibration


#### 2011-07-08, 20:18:47 - Csaba Pinter
Postponed after image QA measurements

#### 2011-07-08, 20:19:00 - Csaba Pinter
summary: changed from "Phantom design" to "Phantom design for sagittal calibration"

#### 2011-07-22, 14:55:00 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-08-23, 19:59:09 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:59:09 - Csaba Pinter
assigned_to_id: changed from null to "thomasckr"

#### 2011-08-23, 19:59:09 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 16:38:20 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 16:38:20 - Csaba Pinter
status: changed from "New" to "Invalid"


## #107 Clean up segmentation code
Re-organize the code to be more sensible and object-oriented
* std::vector instead of fixed-length C-arrays
* classes instead of structures and global functions
* Good names for variables
* etc.

#### 2011-07-15, 15:03:26 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #108 Create an image with the segmented fiducial positions
3D fiducial display in Slicer was too heavy for the computer


## #110 Come up with an alternative design that does not have the sagging
* Discussion with Bruce -> Support mechanism and balancing with bubble
* Andras -> Counterweight on the other side of the template holder


#### 2011-07-22, 14:55:39 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-08-23, 19:51:32 - Csaba Pinter
Narrow and compact design, shorter wires, US absorbing material on the inner walls, rubber sheet by the tunnel

#### 2011-08-23, 19:51:32 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:51:50 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:02:05 - Csaba Pinter
assigned_to_id: changed from "thomasckr" to "pinter"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 17:34:25 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:34:25 - Csaba Pinter
status: changed from "New" to "Invalid"


## #112 iCal MedPhys journal publication


#### 2011-07-08, 20:29:16 - Csaba Pinter
First without all the specifics

#### 2011-07-15, 15:01:12 - Tamas Heffter
Already in the submission stage. Just need a list of recommended reviewers from Clif.

#### 2011-07-15, 15:18:06 - Tamas Heffter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-18, 16:49:55 - Thomas Kuiran Chen
Dear All,

Our iCAL manuscript has been successfully submitted to Med. Phys. (ID #11-811).  Enclosed, please find the confirmation letter from the Med. Phys. Editorial and the final submission proof in PDF (36 pages, merged in Med. Phys. review format).  Thanks to all for the kind help and effects to make this happen!

-------- Original Message --------
Subject: 11-811 Manuscript Passed Initial QC
Date: Mon, 18 Jul 2011 12:13:59 -0400
From: journal@aapm.org
To: thomas.kuiran.chen@gmail.com

Dear Mr. Chen,

On July 18, 2011, the manuscript entitled 'Automated Intraoperative Calibration for Prostate Cancer Brachytherapy' by Thomas Kuiran Chen, Tamas Heffter, Andras Lasso, Csaba Pinter, Purang Abolmaesumi, E. Burdette, and Gabor Fichtinger was approved by the staff.

The manuscript has been assigned the Paper #: 11-811.

Sincerely,

William R. Hendee, Ph.D, Editor
Medical Physics
AAPM
One Physics Ellipse
College Park, MD 20740 

#### 2011-07-18, 16:49:55 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:18 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:18 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #113 Stepper calibration paper


#### 2011-07-08, 20:28:55 - Csaba Pinter
Need patent submission first

#### 2011-07-08, 20:28:55 - Csaba Pinter
assigned_to_id: changed from "thomasckr" to null

#### 2011-07-08, 20:28:55 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.0" to null

#### 2011-07-22, 14:56:03 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-10-07, 17:37:43 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:37:43 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #114 Integrate communication protocol for the CIVCO stepper
Previous comments can be found here:
http://crunch.cs.queensu.ca/mantis/view.php?id=230

#### 2011-07-08, 20:43:18 - Csaba Pinter
Communication protocol (API) for the CIVCO stepper - Clif (I don't really know what it means, it was like this in the meeting minutes)

#### 2011-07-27, 17:27:07 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-07-28, 05:21:06 - Tamas Heffter
(In r:420) re #114: Integrate communication protocol for the CIVCO stepper
Renamed AMSStepper to CmsBrachyStepper
Added vtkBrachyTracker basics 

#### 2011-07-28, 05:34:08 - Tamas Heffter
(In r:421) re #114: Integrate communication protocol for the CIVCO stepper
Renamed AMSTracking to BrachyTracking

#### 2011-07-28, 05:39:35 - Tamas Heffter
(In r:422) re #114: Integrate communication protocol for the CIVCO stepper
Removed vtkStepperWin32Header.h

#### 2011-07-28, 17:44:39 - Tamas Heffter
(In r:427) re #114: Integrate communication protocol for the CIVCO stepper
Created BrachyStepper abstract class

#### 2011-07-28, 17:48:39 - Tamas Heffter
(In r:428) re #114: Integrate communication protocol for the CIVCO stepper
Changed DataCollection config file for steppers 

#### 2011-07-28, 19:26:00 - Tamas Heffter
(In r:430) re #114: Integrate communication protocol for the CIVCO stepper
Added SEI to BrachyStepper

#### 2011-07-28, 23:09:22 - Tamas Heffter
(In r:432) re #114: Integrate communication protocol for the CIVCO stepper
Added CIVCO_SEI_BINARY_DIR to devenv and use files 

#### 2011-07-28, 23:09:39 - Tamas Heffter
(In r:433) re #114: Integrate communication protocol for the CIVCO stepper
Added CIVCO_SEI_BINARY_DIR to devenv files 

#### 2011-07-29, 04:46:30 - Tamas Heffter
(In r:444) re #114: Integrate communication protocol for the CIVCO stepper
Added CivcoBrachyTest
ED2 communication done

#### 2011-07-29, 04:48:13 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-29, 17:41:03 - Tamas Heffter
(In r:445) re #114: Integrate communication protocol for the CIVCO stepper
Added SEISrv32.exe to package

#### 2011-07-29, 17:58:42 - Tamas Heffter
(In r:446) re #114: Integrate communication protocol for the CIVCO stepper
Fixed package generation (Added missing dlls)

#### 2011-07-30, 07:23:52 - Tamas Heffter
(In r:454) re #114: Integrate communication protocol for the CIVCO stepper
Added IEEE Standard 754 floating point to double conversion 
Fixed probe position and rotation encoder request 

#### 2011-07-30, 14:28:56 - Tamas Heffter
(In r:456) Fixed #114: Integrate communication protocol for the CIVCO stepper
Added PlusStatus for communication protocol controlling functions 

#### 2011-07-30, 14:28:56 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #115 Remove vtkSonixVideoSource and vtkICCapturingSource from repository
Remove vtkSonixVideoSource and vtkICCapturingSource from repository
Rename vtkSonixVideoSource2 to vtkSonixVideoSource 
Rename vtkICCapturingSource2 to vtkICCapturingSource 



#### 2011-07-08, 21:06:58 - Tamas Heffter
(In r:236) re #115 Remove vtkSonixVideoSource and vtkICCapturingSource from repository

#### 2011-07-08, 21:18:52 - Tamas Heffter
(In r:237) re #115 Remove vtkSonixVideoSource and vtkICCapturingSource from repository

#### 2011-07-08, 21:19:16 - Tamas Heffter
(In r:238) Fixed #115 Remove vtkSonixVideoSource and vtkICCapturingSource from repository

#### 2011-07-08, 21:19:16 - Tamas Heffter
status: changed from "New" to "Fixed"


## #116 Change image reader in segmentation test
Change the image reader from the current itk::ImageFileReader to our sequence metafile reader, so that it will be in the same oriantation as during the calibration.
Also the calibration configuration files have to be changed so that the SearchRegionY is inverted (as the image itself)

#### 2011-07-09, 03:04:37 - Tamas Heffter
(In r:243) Fixed #116: Change image reader in segmentation test

#### 2011-07-09, 03:04:37 - Tamas Heffter
status: changed from "New" to "Fixed"


## #117 vtkVolumeReconstructor should wait between each AddTrackedFrame
vtkVolumeReconstructor should wait between each AddTrackedFrame for proper timestamps

#### 2011-07-09, 01:50:32 - Tamas Heffter
(In r:242) Fixed #117: vtkVolumeReconstructor should wait between each AddTrackedFrame

#### 2011-07-09, 01:50:32 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-11, 16:26:20 - Andras Lasso
This is OK for a quick fix, but it must not remain like this! Waiting 0.001 means 1000fps - this might lead to unexpected results due to smoothing of the data. Also, you don't want to artificially slow down the execution of the algorithm.

Instead of using the current timestamps, use the timestamps that are in the input file. If timestamps are not available then you should just generate some generic timestamp values (e.g., by assuming a generic 15fps or so frame rate).

#### 2011-07-11, 16:26:20 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2011-07-15, 00:11:20 - Tamas Heffter
(In r:273) re #117: vtkVolumeReconstructor should wait between each AddTrackedFrame

#### 2011-07-15, 00:11:41 - Tamas Heffter
(In r:274) Fixed #117: vtkVolumeReconstructor should wait between each AddTrackedFrame

#### 2011-07-15, 00:11:41 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-15, 21:31:00 - Tamas Heffter
(In r:281) Fixed #117: vtkVolumeReconstructor should wait between each AddTrackedFrame
Fixed failed test 

#### 2011-07-15, 21:40:51 - Tamas Heffter
(In r:282) Fixed #117: vtkVolumeReconstructor should wait between each AddTrackedFrame
Fixed failed test 

#### 2011-07-15, 21:41:02 - Tamas Heffter
(In r:283) Fixed #117: vtkVolumeReconstructor should wait between each AddTrackedFrame
Fixed failed test 


## #118 DataCollector GetOutput should return MF oriented image 


#### 2011-07-09, 14:49:17 - Tamas Heffter
(In r:245) Fixed #118 DataCollector GetOutput should return MF oriented image
Added MF orientation to Synthetic dataset 

#### 2011-07-09, 14:49:17 - Tamas Heffter
status: changed from "New" to "Fixed"


## #119 Use STL binary search in vtkTimestampedCircularBuffer<BufferItemType>::GetItemUidFromTime
ItemStatus vtkTimestampedCircularBuffer<BufferItemType>::GetItemUidFromTime(const double time, BufferItemUidType& uid )
No need to reimplement such things. You can simply use STL search methods: http://www.cplusplus.com/reference/algorithm/binary_search/

#### 2011-07-09, 19:40:00 - Tamas Heffter
In order to use STL binary search, we need to define our iterator to be able to iterate over buffer items. This is a circular buffer, so we cannot just use the deque iterator (e.g. begin  should be the OldestItem and the end should be the LatestItem) to iterate over the items (it's not sorted, we don't want to sort it or make a copy from the whole buffer). 
Do you think it will worth it? 


#### 2014-05-28, 03:57:27 - Andras Lasso
We already do a binary search in vtkTimestampedCircularBuffer<BufferItemType>::GetItemUidFromTime, so using the STL algorithm does not seem to have any particular advantage.

#### 2014-05-28, 03:57:27 - Andras Lasso
status: changed from "New" to "Invalid"


## #120 iCAL calibration result is wrong with the new xml-based phantom description
After changing the code to use the new xml-based phantom description for the transrectal probe iCAL calibration, the error metrics (PRE, PLE, etc.) show significant calibration errors.

Example:

vtkUSCalibrationControllerTest-Exact results:

mAbsPRE3DAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PRE3D_X_mean, PRE3D_X_rms, PRE3D_X_std ]
[ vector 3 - 5:  PRE3D_Y_mean, PRE3D_Y_rms, PRE3D_Y_std ]
[ vector 6 - 8:  PRE3D_Z_mean, PRE3D_Z_rms, PRE3D_Z_std ]
[ vector 9    :  Validation data confidence level ]
0.000505969, 0.00053443, 0.000172306
0.00076793, 0.000882256, 0.000434922
0.013049, 0.0150545, 0.00751728

mAbsPRE3DAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PRE3D_X_mean, PRE3D_X_rms, PRE3D_X_std ]
[ vector 3 - 5:  PRE3D_Y_mean, PRE3D_Y_rms, PRE3D_Y_std ]
[ vector 6 - 8:  PRE3D_Z_mean, PRE3D_Z_rms, PRE3D_Z_std ]
[ vector 9    :  Validation data confidence level ]
0.000505969, 0.00053443, 0.000172306
0.00076793, 0.000882256, 0.000434922
0.013049, 0.0150545, 0.00751728

[ vector 0 - 1:  LRE_X_mean,   LRE_X_std   ]
[ vector 2 - 3:  LRE_Y_mean,   LRE_Y_std   ]
[ vector 4 - 5:  LRE_EUC_mean, LRE_EUC_std ]
[ vector 6    :  Validation data confidence level ]
mNWire1AbsLREAnalysisInUSProbeFrame = 
0.000459499, 0.000136956
0.00965265, 0.00942824
1.00009, 9.61223e-005
0.95

mNWire3AbsLREAnalysisInUSProbeFrame = 
0.000511535, 0.000154451
0.00968898, 0.00941081
1.00009, 9.63115e-005
0.95

mNWire4AbsLREAnalysisInUSProbeFrame = 
0.0404367, 0.000433424
0.00975678, 0.00946064
1.00091, 9.7118e-005
0.95

mNWire6AbsLREAnalysisInUSProbeFrame = 
0.0397447, 0.000400001
0.00971178, 0.009481
1.00088, 9.70975e-005
0.95

mPLDEAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PLDE_mean, PLDE_rms, PLDE_std ]
[ vector 3    :  Validation data confidence level ]
0.00331488, 0.0037751, 0.00180875



#### 2011-07-09, 21:30:11 - Andras Lasso
(In r:250) re #120: Fixed the calibration algorithm (some position vectors didn't have the 1 in the last element of vector and front/back, top/bottom intersection points were still used)


#### 2011-07-09, 21:39:33 - Andras Lasso
After the fix the errors are small:

mAbsPRE3DAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PRE3D_X_mean, PRE3D_X_rms, PRE3D_X_std ]
[ vector 3 - 5:  PRE3D_Y_mean, PRE3D_Y_rms, PRE3D_Y_std ]
[ vector 6 - 8:  PRE3D_Z_mean, PRE3D_Z_rms, PRE3D_Z_std ]
[ vector 9    :  Validation data confidence level ]
0.000297941, 0.000375485, 0.000228818
9.56437e-005, 0.00011664, 6.68499e-005
0.000902614, 0.00103325, 0.000503556

mAbsPRE3DAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PRE3D_X_mean, PRE3D_X_rms, PRE3D_X_std ]
[ vector 3 - 5:  PRE3D_Y_mean, PRE3D_Y_rms, PRE3D_Y_std ]
[ vector 6 - 8:  PRE3D_Z_mean, PRE3D_Z_rms, PRE3D_Z_std ]
[ vector 9    :  Validation data confidence level ]
0.000297941, 0.000375485, 0.000228818
9.56437e-005, 0.00011664, 6.68499e-005
0.000902614, 0.00103325, 0.000503556

[ vector 0 - 1:  LRE_X_mean,   LRE_X_std   ]
[ vector 2 - 3:  LRE_Y_mean,   LRE_Y_std   ]
[ vector 4 - 5:  LRE_EUC_mean, LRE_EUC_std ]
[ vector 6    :  Validation data confidence level ]
mNWire1AbsLREAnalysisInUSProbeFrame = 
0.000295838, 0.000216629
0.000251708, 0.000130573
0.000438492, 0.000149901
0.95

mNWire3AbsLREAnalysisInUSProbeFrame = 
0.000273261, 0.00013419
0.000542226, 9.02907e-005
0.000620949, 9.60143e-005
0.95

mNWire4AbsLREAnalysisInUSProbeFrame = 
0.000421614, 0.000267974
0.000140315, 9.62425e-005
0.000452612, 0.00027137
0.95

mNWire6AbsLREAnalysisInUSProbeFrame = 
0.000300818, 0.000201332
0.00031743, 0.000102007
0.000470879, 0.00014278
0.95

mPLDEAnalysis4ValidationPositionsInUSProbeFrame = 
[ vector 0 - 2:  PLDE_mean, PLDE_rms, PLDE_std ]
[ vector 3    :  Validation data confidence level ]
0.000364799, 0.000425332, 0.000218987




#### 2011-07-09, 21:44:16 - Andras Lasso
(In r:251) re #120: Added some more logs (more transforms, frame number, etc.) to TRUS calibrator algorithm


#### 2011-07-09, 22:01:49 - Andras Lasso
The results seem good, but there are minor differences compared to the baseline (probably due to segmentation differences) and large differences (probably due to standardization of the image orientation). 

Tomi, please review the results and update the baseline.


#### 2011-07-09, 22:01:49 - Andras Lasso
assigned_to_id: changed from "lassoan" to "heffter"

#### 2011-07-13, 18:29:57 - Andras Lasso
(In r:264) re #120: Fixed UsFidSeg algorithm (list of lines were not cleared after segmenting a frame) and improved its performance. Now there is no more test timeouts on the dashboard.

#### 2011-07-14, 21:57:14 - Andras Lasso
(In r:270) re #120: Calibration results are now almost exactly the same, there is only 180deg rotation and image translations (that's probably normal) and there is a mismatch in TransformProbeHomeToTemplateHolderHome (that's probably an error).

#### 2011-07-15, 15:14:26 - Tamas Heffter
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-07-16, 03:21:54 - Andras Lasso
(In r:290) Fixed #120: Fixed warning by lowering the required minimum rotation clusters (as the current test data has only 1 cluster).
It would be better to use a test data with more rotation clusters => added #137 to track this.


#### 2011-07-16, 03:21:54 - Andras Lasso
status: changed from "New" to "Fixed"


## #121 Fiducial segmentation clipping rectangle is expected in MF orientation
Fiducial segmentation clipping rectangle is expected in MF orientation, instead of the native orientation of the image. This is quite error-prone, as the user may set the clipping rectangle using values got from an external program (such as imagej), which does not reorient the image to MF.

Need to apply the same transform to the clipping rectangle coordinates as the transform that is applied to the image (transform from native orientation to standard MF orientation).

#### 2011-07-15, 15:21:24 - Tamas Heffter
We don't know what is the orientation of the input image, so the best bet is to define the ROI in the default (MF) orientation in the config xml file.

#### 2011-07-15, 15:21:24 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #122 Migrate wiki pages from BMC wiki
* http://media.cs.queensu.ca/media/wiki/index.php/PlusIntro - Also update according to the new (superbuild) structure
* http://media.cs.queensu.ca/media/wiki/index.php/TrackedUltrasoundTutorial
* http://media.cs.queensu.ca/media/wiki/index.php/OpticalTrackerTutorial

#### 2011-07-11, 17:56:25 - Andras Lasso
The first one seems out of date. Isn't there an actual version already in the Plus wiki? (Superbuild)
The second is the old obsolete system. We shouldn't use it once the new system works. And it doesn't use Plus at all.
The third one may go without any change...


#### 2011-07-22, 16:37:41 - Csaba Pinter
assigned_to_id: changed from null to "ungi"

#### 2011-07-27, 17:25:36 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 17:44:47 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:05:09 - Csaba Pinter
assigned_to_id: changed from "ungi" to "Simrin"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-28, 22:21:10 - Andras Lasso
status: changed from "New" to "Fixed"


## #123 Spelling error 
When you close the TrackedUltrasoundCapturing program the verification window should say 'Do you.....' but it is currently saying 'Dou you....' :)

#### 2011-07-12, 23:09:40 - Tamas Heffter
(In r:262) re #79: Revise video and tracking buffer
Changed Tracker buffer to use the timestamped circular buffer 
Fixed #123 Spelling error

#### 2011-07-12, 23:09:40 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-13, 00:07:19 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.2.0"


## #124 Fix package generation
- Add QtOpenGL4.dll to the package
- Add all configuration files to the package


#### 2011-07-15, 12:54:22 - Tamas Heffter
(In r:277) Fixed #124: Fix package generation

#### 2011-07-15, 12:54:22 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-07-16, 02:52:39 - Tamas Heffter
(In r:287) re #124: Fix package generation
Added PLUSLIB_SCRIPTS_DIR and GNUPLOT_BIN_DIR to PlusLib use file

#### 2011-07-16, 02:53:20 - Tamas Heffter
(In r:288) re #124: Fix package generation
Fixed gnuplot and scripts install 


## #125 Add an option to save the raw (non-synchronized) tracking and video data
Add an option to save the raw (non-synchronized) tracking and video data. This would be especially useful for non-repeatable data acquisitions, such as cadaver or human data.

#### 2013-04-23, 03:34:11 - Adam Rankin
This has been addressed by the vtkVirtualDiscCapture which captures an individual channel.

@lassoan Do you agree?

#### 2013-04-23, 03:34:11 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-23, 03:34:11 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-23, 03:34:14 - Adam Rankin
Issue Type: changed from null to "Enhancement"

#### 2013-04-23, 03:34:14 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.0"

#### 2013-04-23, 12:13:37 - Andras Lasso
I agree. This feature is available now.

#### 2013-04-23, 12:36:46 - Adam Rankin
status: changed from "Test" to "Fixed"


## #126 SPIE paper about point-to-line registration


#### 2011-07-24, 02:15:45 - Andras Lasso
(In r:371) re #126: Added several comments. I can review the next version tomorrow at about 8pm.

#### 2011-07-25, 02:39:46 - Andras Lasso
(In r:381) re #126: Added new comments.

#### 2011-07-27, 17:25:26 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-03, 14:29:02 - Alexis Boucharin
status: changed from "New" to "Fixed"


## #127 Reorganize fiducial segmentation algorithm classes


#### 2011-07-18, 19:36:31 - Andras Lasso
Move SegmentImageSequence method to UltraSoundFiducialSegmentation so that it can be used in both UsFidSegTest.cpp and FiducialPointSeg.cxx.

#### 2011-07-18, 19:37:31 - Andras Lasso
Rename cpp files to cxx

#### 2011-07-27, 17:25:17 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-04, 17:53:00 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-08-13, 17:47:37 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-19, 21:12:20 - Alexis Boucharin
(In r:619) Fixed #127 Major changes. The whole fiducial pattern recognition has been reorganized into several, proper classes. Lot of changes made in the files using them as well. 

#### 2011-08-19, 21:12:20 - Alexis Boucharin
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #128 Test fCal application
Synchronization does not work yet (but the datacollector reads the time offset from the config file).
Calibration results are shown in the logs.

#### 2011-07-19, 17:39:00 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-21, 16:30:50 - Csaba Pinter
(In r:337) re #128: Phantom registration fixed (transforms were concatenated in the wrong order); PhantomOrigin renamed to Phantom in the phantom definition file (the coordinate system had already the name Phantom in the other parts of the code and the coord. systems model)

#### 2011-07-25, 18:17:38 - Csaba Pinter
(In r:383) Re #128: Phantom registration fixed (model could not been loaded, session stylus calibration data was not found when changing device set between the steps, fake tracker did not stop properly)

#### 2011-07-25, 18:18:03 - Csaba Pinter
(In r:384) Re #128: Phantom registration fixed (session stylus calibration data was not found when changing device set between the steps)

#### 2011-07-25, 23:33:49 - Csaba Pinter
(In r:392) Re #128: Fix temporal calibration

#### 2011-07-25, 23:34:31 - Csaba Pinter
(In r:393) Re #128: Fix temporal calibration

#### 2011-07-26, 17:54:40 - Csaba Pinter
Freehand probe calibration now works normally.

(Other bugs are being found and fixed but testing in general shouldn't be a ticket, this one was only for the calibration)

#### 2011-07-26, 17:54:40 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #129 Point to line registration for 2 N-Wires (6points)
point to line registration for 2 N-Wires (6points). This is to have results to submit for SPIE paper.

#### 2011-07-15, 19:54:26 - Alexis Boucharin
priority: changed from "Highest (1)" to "High (2)"

#### 2011-07-27, 17:31:29 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-03, 14:29:32 - Alexis Boucharin
status: changed from "New" to "Invalid"


## #130 Generalization of segmentation to handle n fiducial points per line
Generalization of segmentation to handle N fiducial points per line. First step of the generalization of the algorithm, will need to update the line creation part (how ? 2 points lines to 3 points lines to ... to N-points lines ?).

#### 2011-08-04, 17:50:09 - Alexis Boucharin
summary: changed from "Generalization of segmentation to handle N fiducial points per line" to "Generalization of segmentation to handle n fiducial points per line"

#### 2011-08-13, 17:46:27 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 16:10:58 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-10-07, 16:11:15 - Alexis Boucharin
status: changed from "Accepted" to "Test"

#### 2011-10-27, 17:10:18 - Alexis Boucharin
(In r:1015) Fixed #130: Segmentation algorithm can find any number of collinear points
Fixed #131: It supports now NWire (for calibration phantom) and CoplanarParallelWires (for CIRS phantom etc.)
re #132: Almost complete, need to add test and test data

#### 2011-10-27, 17:10:18 - Alexis Boucharin
status: changed from "Test" to "Fixed"


## #131 Different wire patterns implementation.
Different wire pattern implementation. Parent class WirePattern with subclasses: NWires and ParallelLines. Will need to update the phantom configuration file to match these.

#### 2011-08-13, 17:45:58 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 16:11:04 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-10-07, 16:11:28 - Alexis Boucharin
status: changed from "Accepted" to "Test"

#### 2011-10-27, 17:10:18 - Alexis Boucharin
(In r:1015) Fixed #130: Segmentation algorithm can find any number of collinear points
Fixed #131: It supports now NWire (for calibration phantom) and CoplanarParallelWires (for CIRS phantom etc.)
re #132: Almost complete, need to add test and test data

#### 2011-10-27, 17:10:18 - Alexis Boucharin
status: changed from "Test" to "Fixed"


## #132 Point to line registration for multiple WirePatterns
Point to line registration for multiple WirePatterns. Registration of all fiducial points of all WirePatterns structures in the phantom. Final step of the generalization.

#### 2011-08-04, 17:34:55 - Alexis Boucharin
milestone_id: changed from "Release Plus-1.2.2 - Before AMS" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 16:11:08 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-10-07, 16:11:32 - Alexis Boucharin
status: changed from "Accepted" to "Test"

#### 2011-10-27, 17:10:18 - Alexis Boucharin
(In r:1015) Fixed #130: Segmentation algorithm can find any number of collinear points
Fixed #131: It supports now NWire (for calibration phantom) and CoplanarParallelWires (for CIRS phantom etc.)
re #132: Almost complete, need to add test and test data

#### 2011-10-28, 16:07:39 - Alexis Boucharin
(In r:1041) Fixed #132 The test for the CIRS phantom is implemented, the data is uploaded and the baseline is created.

#### 2011-10-28, 16:07:39 - Alexis Boucharin
status: changed from "Test" to "Fixed"

#### 2011-10-29, 01:12:41 - Tamas Heffter
(In r:1059) New #132: Test removed until not fixed 
http://crunch.cs.queensu.ca/CDash/testDetails.php?test=27157&build=3384

#### 2011-10-29, 01:12:41 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-10-29, 14:02:24 - Tamas Heffter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-04, 16:06:11 - Alexis Boucharin
(In r:1121) Fixed #132 The configuration file has been set properly and the CIRS phantom test is back on track.

#### 2011-11-04, 16:06:11 - Alexis Boucharin
status: changed from "New" to "Fixed"


## #133 Automatic detection of threshold parameters.
Automatic detection of threshold parameters. This will allow a more precise set of parameters for thresholds and tolerances, and will be obtain as an input as a maximum angular movement.

#### 2011-07-15, 18:07:49 - Alexis Boucharin
milestone_id: changed from "Release Plus-1.2.2" to "Release Plus-1.2.1"

#### 2011-07-15, 19:54:37 - Alexis Boucharin
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-27, 17:29:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-08, 14:24:24 - Alexis Boucharin
priority: changed from "High (2)" to "Normal (3)"

#### 2011-08-13, 17:45:32 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 15:36:33 - Csaba Pinter
Updating tickets (#182, #133)



#### 2011-10-07, 15:36:33 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Next"

#### 2011-11-04, 20:14:59 - Alexis Boucharin
I will no longer have time to work on this. The minTheta and maxTheta from the maximum probe rotation have already been implemented. The config files are the ones ending by SegParamFromPhantomDef.

#### 2011-11-04, 20:14:59 - Alexis Boucharin
assigned_to_id: changed from "alexis.boucharin" to null

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-06-01, 13:18:44 - Andras Lasso
Current segmentation algorithm implementation is satisfactory.

#### 2012-06-01, 13:18:44 - Andras Lasso
status: changed from "New" to "Invalid"


## #134 VolumeReconstructor doesn't read ClipRectangle info
Line 'vtkSetVector4Macro(ClipRectangle,double);'
in vtkFreehandUltrasound2.h is never called. How is clipping rectangle used then?

#### 2011-07-16, 01:23:55 - Tamas Ungi
That line is in fact called, but clipping rectangle is not properly defined.

#### 2011-07-16, 01:23:55 - Tamas Ungi
status: changed from "New" to "Invalid"

#### 2011-07-22, 03:31:32 - Tamas Heffter
(In r:339) Fixed #134: Change buffer timestamp filtering

#### 2011-07-22, 03:31:32 - Tamas Heffter
status: changed from "Invalid" to "Fixed"

#### 2011-07-22, 03:32:06 - Tamas Heffter
status: changed from "Fixed" to "New"

#### 2011-07-22, 16:28:17 - Csaba Pinter
Tomi accidentally put it to fixed, set back to invalid 

#### 2011-07-22, 16:28:17 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #135 VolumeReconstruction creates empty volumes.
This error has appeared recently. Probably due to a recent modification in PlusLib.

#### 2011-07-16, 03:01:56 - Tamas Ungi
Volume extents seem to be correct. Volume is positioned where the slices should be.

#### 2011-07-19, 22:04:27 - Tamas Ungi
(In r:319) re #135 Fixed crash in Debug mode.

#### 2011-07-20, 18:34:37 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.2.1"

#### 2011-07-20, 18:34:50 - Tamas Heffter
component_id: changed from "None" to "PlusApp-VolumeReconstructor"

#### 2011-07-20, 21:27:42 - Andras Lasso
(In r:326) Fixed #135: The volume is not empty any more (the non-calibrated ToolToRef matrix was used for the reconstruction instead of the ImageToRef; also modified TrackerBufferItem GetMatrix to always provide only a copy of the transform matrix, instead of exposing the pointer to the matrix)

#### 2011-07-20, 21:27:42 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-07-20, 21:28:54 - Andras Lasso
(In r:327) Fixed #135: The volume is not empty any more (the non-calibrated ToolToRef matrix was used for the reconstruction instead of the ImageToRef; also modified TrackerBufferItem GetMatrix to always provide only a copy of the transform matrix, instead of exposing the pointer to the matrix)

#### 2011-07-26, 23:06:18 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:18 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #136 Change saved data tracker and video to loop over buffer
Compute item timestamp like this: 
itemTimestamp = loopStartTime + (actualTimestamp - startTimestamp) % loopTime 

#### 2011-07-16, 01:41:26 - Tamas Heffter
milestone: changed from null to "Release Plus-1.2.0"

#### 2011-07-16, 01:44:27 - Tamas Heffter
(In r:286) Fixed #136: Change saved data tracker and video to loop over buffer

#### 2011-07-16, 01:44:27 - Tamas Heffter
status: changed from "New" to "Fixed"


## #137 Add iCAL test data set with more rotation clusters
To more thoroughly test the center of rotation calibration: add iCAL test data set with more rotation clusters and also increase the MinNumberOfRotationClusters attribute in *USCalibrationConfig.xml* and *USCalibrationConfig_FrameGrabber.xml* accordingly.

#### 2011-07-22, 14:56:18 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-07-29, 15:46:05 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-13, 17:44:29 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-10-14, 14:49:04 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:04 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-21, 15:43:15 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2011-11-25, 15:45:43 - Csaba Pinter
Moved to iCalBrachy #49

#### 2011-11-25, 15:45:43 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-11-25, 15:45:47 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:02 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #138 Need a calibration test for fCAL
The vtkFreehandCalibrationTest has not been completed yet. It should be completed and added to the list of tests.

#### 2011-07-16, 03:46:12 - Andras Lasso
(In r:291) re #138: Removed fCAL test, as it was incomplete and just polluted the dashboard.

#### 2011-07-16, 03:46:12 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-07-22, 14:56:46 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-27, 17:22:55 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-29, 15:43:33 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-07-29, 15:43:33 - Csaba Pinter
priority: changed from "Low (4)" to "Normal (3)"

#### 2011-08-05, 13:57:20 - Tamas Heffter
assigned_to_id: changed from "lassoan" to "pinter"

#### 2011-08-05, 15:05:16 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-05, 17:41:13 - Csaba Pinter
(In r:525) Fixed #138: Exact and threshold test added for Freehand calibration

#### 2011-08-05, 17:41:13 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #139 Merge top and bottom image threshold image segmentation parameters
There used to be a separate threshold value for the top half and the bottom half of the image (because it was difficult to find a single threshold value that worked well for the whole image for gel-based phantoms). We don't support the gel-based phantom any more, so there is no need for these two different thresholds. CIRS phantom is gel-based but it has lines in the whole image region anyway, so two thresholds wouldn't really help - needs experiments to determine what kind of thresholding could work.

Rename ThresholdImageTop to ThresholdImage. Delete ThresholdImageBottom. In the code and all the config files as well.


#### 2011-07-22, 14:57:00 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-08-03, 14:53:05 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-08-03, 15:13:32 - Alexis Boucharin
(In r:490) Fixed #139 Deleted ThresholdImageBottom, updated ThresholdImageTop to ThresholdImage.

#### 2011-08-03, 15:13:32 - Alexis Boucharin
status: changed from "Accepted" to "Fixed"


## #140 Code review needed in vtkCalibrationController.cxx
I have fixed a compile error, but I'm not sure the original code functionality was restored. Tests run with success, but somebody please review the code and check if the if-else cases still do what they should.

#### 2011-07-18, 20:39:58 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #141 Move image origin to center of the nearest line
Ultrasonix uses an image coordinate system where the origin is the middle of the row nearest to the transducer. This has an advantage that scaling the image (e.g. changing the depth) doesn't change the origin location. So just by knowing the scaling rate, Image-To-Probe calibrations can be computed, and don't have to be recalculated with a calibration phantom. We may want to switch to this coordinate system at some point.

#### 2011-07-22, 14:57:44 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2015-06-06, 13:27:03 - Andras Lasso
Introduced the Transducer coordinate system. Used in Ultrasonix video source already for depth-independent calibration.

#### 2015-06-06, 13:27:03 - Andras Lasso
status: changed from "New" to "Fixed"


## #142 Trying to delete vtkSmartPointer object with non-null reference count in fCal
On exiting fCal, the message in the title comes up. It has to be fixed (finding the objects in question and nulling them out)

#### 2011-07-19, 16:09:41 - Csaba Pinter
summary: changed from "Trying to delete vtkSmartPointer object witn non-null reference count in fCal" to "Trying to delete vtkSmartPointer object with non-null reference count in fCal"

#### 2011-07-22, 14:58:13 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-07-29, 15:50:14 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-29, 16:00:01 - Csaba Pinter
* Don't use Register on SmartPointers
* Instead of returning with pointers, use parameters passed as reference

#### 2011-08-13, 17:44:36 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-16, 18:08:32 - Csaba Pinter
(In r:604) Fixed #142: The explicit deleting of vtkFreehandCalibrationController stayed in the code even after making it a vtkObject and created as a vtkSmartPointer. That explicit delete was the source of this warning

#### 2011-08-16, 18:08:32 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:50 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:50 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #143 Link error in vtkMicronTracker
Migrated issue from Mantis (134)
There were no comments or description

#### 2011-07-19, 16:34:02 - Csaba Pinter
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-22, 14:58:54 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2012-06-01, 13:24:34 - Andras Lasso
MicronTracker files builds fine now.

#### 2012-06-01, 13:24:34 - Andras Lasso
status: changed from "New" to "Invalid"


## #144 vtkDataCollection: Get the available ICCapturing properties from the device 
Migrated from Mantis (216)

Description:
Get the available ICCapturing properties from the device and save it into a container.
In the configuration file we should be able to chose these properties (maybe we should use enum?) 

For additional information check the:
- CD that we have,
- Attached vc9 samples
- wiki page: http://www.imagingcontrol.com/en_US/library/cpp/


#### 2011-07-22, 16:23:31 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2014-06-05, 01:59:51 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 18:50:52 - Andras Lasso
ICCapturing device works as is. Reopen the ticket if a specific need emerges.

#### 2014-09-27, 18:50:52 - Andras Lasso
status: changed from "New" to "Invalid"


## #145 Review source code copyright notices
Migrated from Mantis (220)

Identify open source/restricted components and apply copyright notices to the files accordingly.

First determine for each directory if it's open source, internal, or confidential and review it with Andras. 

#### 2011-07-22, 16:23:41 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2014-06-05, 02:01:29 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 19:49:42 - Andras Lasso
Everything looks good now.

#### 2014-09-27, 19:49:42 - Andras Lasso
status: changed from "New" to "Invalid"


## #146 Add Matrox imaging support
Migrated from Mantis (136)

Add Matrox imaging support to the project:
(the following files needed)
- USVR\  runk\\4DUltrasound-WithGating\\VTKLibs\obartsVTK\\vtkRobartsVideo\\vtkMILVideoSource.cxx
- USVR\  runk\\4DUltrasound-WithGating\\VTKLibs\obartsVTK\\vtkRobartsVideo\\vtkMILVideoSource.cxx
- USVR\  runk\\4DUltrasound-WithGating\\VTKLibs\obartsVTK\\vtkRobartsVideo\\vtkMILVideoSource.h
- USVR\  runk\\4DUltrasound-WithGating\\VTKLibs\obartsVTK\\vtkRobartsVideo\\vtkMILVideoSource2.cxx
- USVR\  runk\\4DUltrasound-WithGating\\VTKLibs\obartsVTK\\vtkRobartsVideo\\vtkMILVideoSource2.h

vtkCalibrationManager.cxx already has the dependency, follow the same idea:

#ifdef VTK_USE_MATROX_IMAGING
#include 'vtkMILVideoSource2.h'
#endif 

#### 2011-07-19, 17:14:27 - Csaba Pinter
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-22, 16:23:53 - Csaba Pinter
milestone: changed from null to "Release Plus-Future"

#### 2011-08-23, 19:43:09 - Csaba Pinter
Instead of this, we will develop Video for Windows support

#### 2011-08-23, 19:43:09 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:04 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:04 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #147 Subtract the mean acquisition time difference from the sync offset
Migrated from Mantis (290)

Subtract the mean acquisition time difference from the sync offset
meanVideoOffset = meanVideoOffset - meanAcqTimeDifference;
(For more details see attached document) 

#### 2011-07-19, 17:16:46 - Csaba Pinter
description: changed from "Subtract the mean acquisiti..." to "Migrated from Mantis (290)
..."

#### 2011-07-22, 16:29:49 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:49 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-05-22, 22:08:11 - Andras Lasso
The new correlation-based temporal calibration does not need this offset.

#### 2012-05-22, 22:08:11 - Andras Lasso
status: changed from "New" to "Invalid"


## #148 Integrate communication protocol for multiple steppers 
Migrated from Mantis (230)

There are 4 stepper that can be potentially supported:
-black 'target guide' (that we currently have and already supported): template in-out positioning axis is encoded
-motorized stepper (is the same as the black “target guide” stepper?)
-green AccuSeed: template in-out positioning axis is encoded
-CIVCO steppers?

AMS should provide information about hardware/software interfaces to these steppers. 

#### 2011-07-22, 16:30:55 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:34:39 - Csaba Pinter
Invalid due to duplication

#### 2011-07-22, 16:34:39 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-07-26, 23:06:19 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:19 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #149 Installer: change CMake NSIS template to save config files into AppData folder
The installer should copy the config files into the User AppData folder to be able to save the calibration results into those files (specially in Windows 7 where we don't have write access to the Program Files directory). 
For more information and howto: 
http://www.cmake.org/pipermail/cmake/2007-January/012649.html
http://nsis.sourceforge.net/Working_Out_Shell_Folder_Locations



#### 2011-07-19, 17:19:17 - Tamas Heffter
description: changed from "The installer should copy t..." to "The installer should copy t..."

#### 2013-12-22, 04:25:54 - Andras Lasso
Issue Type: changed from null to "Enhancement"

#### 2013-12-22, 04:25:54 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-22, 04:26:03 - Andras Lasso
status: changed from "New" to "Invalid"


## #150 Use stream instead of sprintf
Migrated from Mantis (186)

Remove SNPRINTF macro from all of PlusLib and PlusApp

#### 2011-07-22, 16:29:50 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-09-11, 20:21:53 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2012-09-11, 20:21:53 - Csaba Pinter
component_id: changed from "None" to "PlusLib"

#### 2012-09-11, 20:21:53 - Csaba Pinter
description: changed from "Migrated from Mantis (186)
..." to "Migrated from Mantis (186)
..."

#### 2012-12-11, 21:36:59 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-04-23, 03:32:59 - Adam Rankin
Did you guys want this to apply to the whole codebase? Because the scope of the ticket has been addressed.

#### 2013-04-23, 13:10:33 - Andras Lasso
Printf should be removed from all PlusLib and PlusApp, to be consistent (otherwise it may creep back through copy-paste, etc). If there is any special case where printf is beneficial then it may be acceptable, but should be explained in a comment.

#### 2013-04-23, 15:02:17 - Adam Rankin
description: changed from "Migrated from Mantis (186)
..." to "Migrated from Mantis (186)
..."

#### 2013-05-21, 19:55:12 - Adam Rankin
(In r:2796|plus:2796) re #150 removing printf from files, broke fcsv test, fixing shortly

#### 2013-05-21, 19:55:12 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-05-21, 21:44:36 - Adam Rankin
(In r:2797|plus:2797) test #150 fixed fcsv test, re-wrote fcsv reader/writer from C to C++

#### 2013-05-21, 21:44:36 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-07-15, 02:16:39 - Adam Rankin
(In r:2933|plus:2933) fixed #150 removed last traces of printf from the PLUS library and Plus Apps

#### 2013-07-15, 02:16:39 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-07-15, 02:20:34 - Adam Rankin
@lassoan Still traces of it in GrabbieLib, not sure if you want me to clean that up as well.

#### 2013-07-15, 02:56:36 - Andras Lasso
Thanks! Having printf in GrabbieLib is not an issue (people won't copy code from GrabbieLib to Plus, so Plus will remain consistent) and it's better to keep GrabbieLib modifications at the minimum, as it's difficult for us to test it.


## #151 Clean up quaternion to matrix conversion
Migrated from Mantis (252)

Currently there are 3-4 different ways for converting quaternion to matrix:
-convertTransform2HomoMatrix
-vtkQuaternionToMatrix3x3 in USTemplateCalibration
-vtkMath::vtkQuaternionToMatrix3x3
-vtkTransform::RotateWXYZ
(a reference implementation in Matlab is available here: http://www.csse.uwa.edu.au/~pk/Research/MatlabFns/Rotations/quaternion2matrix.m) [^]

Use only one implementation (preferably one that is implemented in VTK) and remove all the others.
If the VTK implementation is buggy (the normalization in vtkMath::vtkQuaternionToMatrix3x3 is suspicious) then a bug report shall be filed for VTK. 


vtkMath::vtkQuaternionToMatrix3x3 should be used;

WARNING There is a bug that it has to be normalized, else it does not work (it is fixed in VTK but for safety normalization should be done) 

#### 2011-07-22, 16:29:50 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 01:59:56 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 20:06:39 - Andras Lasso
Only vtkMath::QuaternionToMatrix3x3 is used now.

#### 2014-09-27, 20:06:39 - Andras Lasso
status: changed from "New" to "Invalid"


## #152 Use internal logging instead of vtk logging
Migrated from Mantis (241)

Change all
- vtkError to LOG_ERROR
- vtkWarning to LOG_WARNING
and use LOG_INFO and LOG_DEBUG for tracing the code within Plus libraries. 

#### 2011-07-22, 16:29:50 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-02-23, 22:11:05 - Andras Lasso
Removed VTK logging macros from Plus source code (and also redirected all VTK logs to the Plus logger).

#### 2012-02-23, 22:11:05 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-02-23, 22:11:26 - Andras Lasso
Issue Type: changed from null to "Enhancement"


## #153 Fix large variation in temporal calibration 
Migrated from Mantis (221)

Temporal calibration (computation of time difference between US and tracker data) has large variation, up to +/-0.15 seconds.
First step of the analysis would be to check timestamps in each data flow (US and tracker) and see what is the variation in the time difference between the timestamps.




- Check CreateTimeStampForFrame when log in remotely
- Check jitter plot
- Add frame index to buffer (SonixVideo)
- Check CreateTimeStampForFrame when missing frame timestamps
- Check synchronization when missing frame timestamps
- Try it with compression 


On CISC/HEART the resolution of the system clock was around 15 ms and using 20ms sleep interval effect around 30 ms sleep (after 10s stabilization) and inaccurate frame rate.
So we decided to use accurate timer (windows multimedia timer, using 1ms resolution) which solved the stepper acquisition rate difference within 2s ( see Sleep_vs_AccurateTimer.xls) on expected time interval.


If image acquisition through ulterius interface on a separate machine has too large variation in frame delay then the image acquisition could be performed on the ultrasonix PC:

Using Ulterius 2.x the images can be transferred through shared memory instead of TCP/IP:
http://www.ultrasonix.com/wikisonix/index.php?title=Ulterius_Data_Acquisition#Shared_Memory [^]

Alternatively, the Porta SDK can be used for real-time acquisition:
'When more flexibility is required, the Ulterius package is suggested, as data can be transferred to a client program in real-time through a TCP/IP or shared memory interface. When even more flexibility and real-time functionality is needed, Porta is the logical next step, as callbacks that link directly to the cine buffer are available, as well as real-time processed image access (ie. scan converted and post-process filtered data). '
http://www.ultrasonix.com/wikisonix/index.php?title=Porta [^]

If none of the above options work then it could be possible to use more advanced synchronization methods (using the BNC sync inputs/ouputs on the Ultrasonix system). However, such a configuration would be quite complex and device-specific. Compared to that using a framegrabber seems to be a better option (simpler, much less device-dependent, although slightly worse image quality).


Refresh iCAL demo application instructions
Print min max avg numOfResults to iCALDemo after DataCollectorSync 

#### 2011-07-19, 17:22:10 - Csaba Pinter
From: Andras Lasso [mailto:lasso@cs.queensu.ca]
Sent: Monday, March 14, 2011 5:18 PM
To: 'Tamas Heffter'
Cc: 'Csaba Pinter'
Subject: FW: Optotrak

Please follow-up on this mailing thread regarding temporal calibration using Optotrak+Ultrasonix. You can remind them if they don’t reply within 1-2 weeks.
Andras

From: Parvin Mousavi [mailto:pmousavi@cs.queensu.ca]
Sent: Thursday, March 10, 2011 4:55 PM
To: 'Andrew Wiles'; 'Jeff Stanley'
Cc: lasso@cs.queensu.ca
Subject: RE: Optotrak

Thank you Andrew. I will wait to hear from Jeff and will be in touch with you further re. temporal calibration. We are currently using two connected Ultrasonix RP systems so one of our staff is working on this.

Best
Parvin

From: Andrew Wiles [mailto:awiles@ndigital.com]
Sent: Thursday, March 10, 2011 4:47 PM
To: Jeff Stanley; Parvin Mousavi
Cc: lasso@cs.queensu.ca
Subject: Re: Optotrak

Hi Parvin,
 
Yeah, it was too bad we didn't get a chance to chat at SPIE. Both Jeff and I were extremely busy this year, but that is a good thing.
 
I think Jeff Stanley is the best person to talk to about the communication methods. I have copied him on this email. He'll get back to you as soon as he can. Once that is sorted out, we can both help you out with the temporal calibration, but as I found at Robarts this is really tricky. However, this problem may be better solved with the Ultrasonix system since you have direct access to the API.
 
Cheers.
Andrew
 
---------------------------------------------------------------
1981-2011: Celebrating 30 Years of Innovation
Follow us on Twitter: @NDIMedResearch
Andrew D. Wiles, PhD, PEng
Research Scientist, Medical Division
NDI
103 Randall Drive
Waterloo, ON, Canada, N2V 1C5
Telephone: +1 (519) 884-5142 ext. 314
Toll Free: +1 (877) 634-6340
Global: ++ (800) 634-634-00
Facsimile: +1 (519) 884-5184
Website: www.ndigital.com

 
--------------------


>>> 'Parvin Mousavi' <pmousavi@cs.queensu.ca> 3/10/2011 4:36 PM >>>
Hi Andrew,

It was nice seeing you at SPIE; it was too bad that I didn’t get a chance to talk to you more – it was a very packed and short trip for me.

I am wondering if you could advise us on the following , or let us know who we should talk to at NDI:

1) We recently purchased an ultrasonix Touch and would like to connect our Optorak to the machine. We do not have a PCI card, and are not sure if we can install one. Could you please advise us on other possible options of networked and direct connection of the tracker to the US machine.
2) We have had problems with temporal calibration while collecting US volumes. It appears that we have delays of between 100 to 500 ms. We are working on our software components to try and address this but I am wondering if this could be related to the hardware at all. We have had this issue for the last year or even two but students have found shortcuts to address it temporarily. We need a better solution now.

Thank you for your help,
Parvin

Parvin Mousavi, PhD
Associate Professor
School of Computing
c/appt Electrical & Computer Eng.
Queen’s University
Kingston ON K7P3G2
Canada
medi.cs.queensu.ca 

#### 2011-07-22, 16:29:15 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:32:58 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-27, 23:45:07 - Tamas Heffter
(In r:416) re #153:
- Fixed frame access without interpolation (now it's possible to get a frame by time, with/without interpolation)
- Cleaned up Tracking member variable setting in vtkTracker (now child classes don't set the Tracking member)


#### 2011-07-28, 11:38:14 - Andras Lasso
Plus report 'Difference between unfiltered timestamp (...) and filtered timestamp (...) is larger than the threshold (0.5)' which then causes 'Failed to create filtered timestamp for buffer item with item index: ... ' error. This happens in about 10% of the acquisitions.

By investigating two cases, both seems a valid reason:

1. When the Sonix reaches a certain frameIndex (e.g., 1446) it restarts the frameIndex from 0. Probably it is normal. We don't know when to expect the restart, so we cannot really detect if it's a normal or an error case. (05_Heart_SonixVideo_Buffer.png)

2. Sometimes a tracker frame is delayed and we miss a couple of tracker frames. This is clearly an error case and we shouldn't use the delayed position. (06_Heart_NDI_Certus_Buffer_01.png)

We have two options:

A. Ignore the error and use the unfiltered timestamps as valid timestamps. In this case we may use invalid tracker data (the position is correct, but belongs to a very different time position). Outlier detection in the calibration may detect this, but it may still cause problems in other applications (such as volume reconstruction).

B. Don't ignore the errors and drop the frames where the timestamp doesn't seem to be correct. In this case we lose about 6 video frames at each frame index restart (in case of frame averaging = 20). We may change the error message to warning.

Option B seems safer, as it prevents delayed items getting into the buffer with incorrect timestamps. The side effect is to lose about 6/1500 = 0.4% of the video frames, which seem to be acceptable.


#### 2011-07-28, 11:39:09 - Andras Lasso
image:a0-NQyUq4r4ilyeJe4gwI3 Timestamps and frame indexes when Sonix restarts frame indexing

#### 2011-07-28, 11:39:09 - Andras Lasso
Attachment added: "05_Heart_SonixVideo_Buffer.png"

#### 2011-07-28, 11:40:11 - Andras Lasso
image:bAebrAUq4r4iy2eJe5cbLr Timestamps and frame indexes when certus tracker item is delayed

#### 2011-07-28, 11:40:11 - Andras Lasso
Attachment added: "06_Heart_NDI_Certus_Buffer_01.png"

#### 2011-07-28, 12:36:21 - Andras Lasso
(In r:423) re #153: Changed timestamp filering errors to warnings (it may happen sometimes and it's not a problem, but if it happens too frequently then it's important to know about it)

#### 2011-07-28, 14:02:49 - Tamas Heffter
_1. When the Sonix reaches a certain frameIndex (e.g., 1446) it restarts the frameIndex from 0. Probably it is normal. We don't know when to expect the restart, so we cannot 
really detect if it's a normal or an error case. (05_Heart_SonixVideo_Buffer.png)_

We could avoid this by just always increase the last frame number by the frame difference, so we will always get a monotone increasing frame index.  



~~~~
if ( currentFrameNumber > LastFramenumber )
{
  Frameindex += (currentFrameNumber - LastFramenumber)
}
else
{
  // Frame indexing restarted
  Frameindex += currentFrameNumber; 
}
LastFramenumber = currentFrameNumber;

~~~~

 

#### 2011-07-30, 20:33:46 - Tamas Heffter
Our tests with positioning table and fCal calibration phantom showed that the video offset is constant on a specific device set.
The video offset with SonixVideo and NDI Certus tracker running on SonixTouch, using L14-5 probe is: -0.1908 s (std: 0.0165s).
The video offset with SonixVideo and Ascension tracker running on SonixTouch, using L14-5 probe is: -0.2976s (std: 0.0086s).

#### 2011-07-30, 20:33:46 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-31, 03:06:28 - Andras Lasso
Updated (more reliable) results after fixing the alignment computation algorithm:
The video offset with SonixVideo and NDI Certus tracker running on SonixTouch, using L14-5 probe is: -0.2126 s (std: 0.0050s).



## #154 Serial communication using CablesToGo USB2Serial converter randomly fails on Windows 7
Migrated from Mantis (282)

In iCALDemo on Windows7 sometimes the position information just stops to come.

On Win7 AmsStepperTest sometimes has 'Wrong answer received' error and then doesn't quit. After unplugging the USB to serial converter the program quits. We might need to kill the AccurateTimer or do something with the serial port connection. 

Test using the new driver on Win7 and Windows Server 2008 (HEART) (driver has to be installed) 

#### 2011-07-19, 17:34:16 - Csaba Pinter
description: changed from "In iCALDemo on Windows7 som..." to "Migrated from Mantis (282)
..."

#### 2011-07-22, 16:28:50 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2"

#### 2011-07-29, 15:51:30 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-29, 15:53:47 - Csaba Pinter
Test iCal on Windows 7.
If it keeps failing then check for a later driver

#### 2011-07-29, 15:54:19 - Csaba Pinter
(Use CMSBrachyStepperTest)

#### 2011-08-10, 21:29:13 - Csaba Pinter
I started iCalBrachy on my laptop (Windows 7) and tried to connect to the stepper via the Serial2USB adaptor cable. Most of the time it could not even connect to the stepper. If it did, after a few seconds it disconnected and when tried to reconnect, it failed. 
This symptom appeared with all the 3 drivers I used (from the original install CD we found at AMS; a 2010/-7 PL2303 driver from Prolific homepage; the latest - 2011/05 - PL2303).
Using the downloaded drivers also resulted in blue screen in several cases (I think eventually it happens no matter what). The original driver did it too but less frequently.
My conclusion is that we should use Windows XP for now as the operating system for testing/presenting iCal, and try to download different drivers along with contacting the manufacturer with this problem.

#### 2011-08-10, 21:29:13 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-16, 14:00:42 - Csaba Pinter
Paul Neubauer reminded me that the existing registry values prevent the good drivers from installing properly. So I deleted these entries before installing the proper driver (both the description and the driver is in PLTools). I used iCalBrachy around fifteen times, and I got 1 blue screen crash, and no other symptoms. I think we can use this driver on Windows 7. Of course this blue screen thing is not good, but maybe it is even more rare than this.

Now the ImagingSource driver for the framegrabber is the bigger source of problems, because it keeps the application from closing (not even with task manager or process explorer). When this happens, the cable must be removed abd plugged back in. The image provided by this driver (x64) is also grainy.

#### 2011-08-16, 14:00:42 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-08-18, 19:14:40 - Csaba Pinter
After crashing with blue screen:
- Crash dump files are in c:\\Windows\\Minidump
- Install Windows SDK (http://msdn.microsoft.com/en-us/windows/bb980924)
- Open WinDbg program from Start Menu
- Set http://msdl.microsoft.com/download/symbols in the Symbol File Paths window
- Open Crash Dump -> select file

Other cable models:
http://www.newegg.com/Product/ProductList.aspx?Submit=ENE&DEPA=0&Order=BESTMATCH&Description=usb+to+rs232+cable

It would be useful to try other drivers like Sabrend, Bytecc etc.

#### 2011-08-18, 19:20:59 - Csaba Pinter
file:a0o82CYC8r4l9weJe5cbLr: Crash dump of the crash using Cables2Go cable and Bytecc driver (which was the best so far)

#### 2011-08-18, 19:20:59 - Csaba Pinter
Attachment added: "081811-20030-01_text.txt"

#### 2011-08-23, 17:32:27 - Csaba Pinter
Using the Bytecc cable and driver, we did not experience problems for 4 hours continuous running on Windows 7

#### 2011-08-23, 17:32:27 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #155 VolumeReconstructor crashes if ImageToProbe calibration matrix is the identity matrix in the input config file 
Migrated from Mantis (294)

The memory for output volume is not allocated in the case described in the Summary. Config file to reproduce the error attached. 

#### 2011-07-22, 16:26:52 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:33:08 - Csaba Pinter
assigned_to_id: changed from null to "ungi"

#### 2011-07-27, 17:22:35 - Andras Lasso
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-29, 15:40:53 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 17:43:27 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-26, 15:54:54 - Csaba Pinter
milestone: changed from null to "Release - MICCAI"

#### 2011-08-26, 15:55:06 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-26, 15:55:06 - Csaba Pinter
assigned_to_id: changed from "ungi" to "lassoan"

#### 2011-09-01, 18:40:51 - Andras Lasso
When the calibration matrix is identity then the pixel spacing is 1.0, which results in a large output image. Crash occurs because memory allocation of this large image fails.

#### 2011-09-01, 18:40:51 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-09-01, 18:45:38 - Andras Lasso
(In r:667) Fixed #155. VolumeReconstructor doesn't crash anymore if memory allocation fails (bad_alloc exception is caught, NULL checks are added)

#### 2011-09-01, 18:45:38 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2011-09-01, 18:46:03 - Andras Lasso
(In r:668) Re #155. VolumeReconstructor doesn't crash anymore if memory allocation fails (bad_alloc exception is caught, NULL checks are added)

#### 2011-09-23, 14:41:36 - Csaba Pinter
Updating tickets (#155, #288, #202, #284)



#### 2011-09-23, 14:41:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #156 Compare current stepper calibration result with different approaches
Migrated from Mantis (301)

Compare current stepper calibration result with different approaches:
- Iterative: Calculate rotation axis direction with translation axis compensation and calculate translation axis direction multiple times
- Non-linear optimizer: Calculate rotation and translation axis orientation all together 

#### 2011-07-22, 16:29:50 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-10-07, 17:35:46 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:35:46 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:05 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:05 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #157 Slicer Module for Fiducial Segmentation algorithm
Slicer Module for Fiducial Segmentation algorithm, this is mainly for demonstration purpose for the SPIE abstract. The code is not up to date and needs to be modified to include the latest features.

#### 2011-07-19, 20:43:37 - Alexis Boucharin
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:19 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:19 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #158 Change SonixVideo image orientation to MF 
Ulterius SDK sends the US frames in MF orientation

#### 2011-07-20, 14:28:01 - Tamas Heffter
(In r:320) Fixed #158: Change SonixVideo image orientation to MF

#### 2011-07-20, 14:28:01 - Tamas Heffter
status: changed from "New" to "Fixed"


## #159 TrackedUltrasoundCapturing: Don't clear buffer if the saving was failed


#### 2011-07-20, 19:22:32 - Tamas Heffter
(In r:323) re #159: TrackedUltrasoundCapturing: Don't clear buffer if the saving was failed

#### 2011-07-20, 19:22:55 - Tamas Heffter
(In r:324) Fixed #159: TrackedUltrasoundCapturing: Don't clear buffer if the saving was failed

#### 2011-07-20, 19:22:55 - Tamas Heffter
status: changed from "New" to "Fixed"


## #160 Calculate landmark registration error in phantom definition toolbox
After registration, it would be useful to see the registration error (it can reveal an error during acquisition).
To do that, we need to multiply the result matrix with fixed points and compute distance between the got point and the acquired one.

#### 2011-07-22, 16:29:50 - Csaba Pinter
Updating tickets (#147, #150, #151, #152, #156, #160)



#### 2011-07-22, 16:29:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-11-18, 16:48:33 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release - Next"

#### 2011-12-01, 23:46:09 - Csaba Pinter
(In r:1258) Test #395; Test #160: Phantom registration fixed; Error computation added to vtkPhantomRegistrationAlgo; PhantomDefinition/Geometry/Registration element deleted from configuration files (CoordinateDefinitions element is used instead)

#### 2011-12-01, 23:46:09 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-12-01, 23:46:09 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-12-13, 19:35:52 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:02 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #161 Fix Ascension tracker 
Ascension tracker should set this->Tracking after successful connection to tracker. 
 

#### 2011-07-21, 01:41:28 - Tamas Heffter
(In r:328) Fixed #161: Fix Ascension tracker


#### 2011-07-21, 01:41:28 - Tamas Heffter
status: changed from "New" to "Fixed"


## #162 Add full support for VS2010
Currently Visual Studio 2010 is not fully supported. It has the following limitations:
* Dependencies for PlusApp cannot be generated (therefore PlusApp cannot be built). Possible solution: merge PlusApp and PlusLib.
* VS2010 require ITK3.20 (however, ITK3.20 has a vnl_lsqr implementation that is more sensitive to poor scaling of the A matrix row/columns, which can cause problems e.g., at the timestamp filtering)
* If linking against Qt-4.7.3 pre-built binaries, then the application does not start in debug mode. Workaround: copy msvcrt debug dlls (Qt4.7.3_vcdebug_privateassembly.zip) into C:\\Qt\\4.7.3\\bin.
* If linking against Qt-4.7.3 pre-built binaries, then the application crashes when Qt STL support functions are used (such as QString::toStdString(), see http://www.vtk.org/Bug/view.php?id=11748). Workaround: don't use any Qt STL functions (replace toStdString() by toAscii().data() and fromStdString by .c_str()), more safely even disable STL support in VTK; maybe use a more recent Qt pre-built binary that is built with VS2010 runtime dlls.


#### 2011-07-25, 23:50:01 - Andras Lasso
description: changed from "Currently Visual Studio 201..." to "Currently Visual Studio 201..."

#### 2011-08-15, 20:56:56 - Andras Lasso
description: changed from "Currently Visual Studio 201..." to "Currently Visual Studio 201..."

#### 2011-08-15, 20:57:34 - Andras Lasso
file:aY7EYKX4er4i0EeJe5cbCb: VS2008 msvcrt debug dlls for Qt4.7.3

#### 2011-08-15, 20:57:34 - Andras Lasso
Attachment added: "Qt4.7.3_vcdebug_privateassembly.zip"

#### 2011-10-26, 04:14:58 - Andras Lasso
Issue Type: changed from null to "Enhancement"

#### 2011-10-26, 12:09:24 - Andras Lasso
description: changed from "Currently Visual Studio 201..." to "Currently Visual Studio 201..."

#### 2011-10-26, 13:39:12 - Andras Lasso
(In r:1001) re #162: Replaced QString toStdString() by toAscii().data() & fromStdString to .c_str() to avoid application crash on VS2010


#### 2011-10-26, 13:39:12 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-10-26, 13:41:25 - Andras Lasso
description: changed from "Currently Visual Studio 201..." to "Currently Visual Studio 201..."

#### 2012-04-19, 20:06:31 - Tamas Heffter
(In r:1629) re #162: Added ICCapturing 3.2 support with VS2010 dlls, set ITK git tag to v3.20.1 if the selected compiler is VS2010 

#### 2012-04-19, 20:14:09 - Tamas Heffter
(In r:1630) re #162: Updated cmake list file to use the new FindICCapturing module. Fixed warnings in ICCapturingListener project 

#### 2012-04-19, 20:19:14 - Tamas Heffter
(In r:1631) re #162: Changed FindICCapturing.cmake to handle spaces in path 

#### 2012-04-19, 20:19:46 - Tamas Heffter
description: changed from "Currently Visual Studio 201..." to "Currently Visual Studio 201..."

#### 2012-04-20, 13:31:42 - Andras Lasso
(In r:1633) re #162: Changed ITK version to v3.20.1 for all compilers (to avoid fragmentation of Plus releases)

#### 2012-04-20, 14:11:07 - Andras Lasso
Tomi, please fix the followings:
* update the ImagingControl driver in PlusLib/tools
* update PlusBuild to look for the ImagingControl driver in PlusLib/tools (you can remove 3.1 to keep the checkout size smaller), probably you have to move FindICCapturing.cmake to PlusLib (or you can just hardcode the paths, as we know that the drivers are available in PlusLib/tools for sure)
* change the build settings to enable support for ImagingControl by default (I've turned it off because now it requires PLTools)

thanks!

#### 2012-04-20, 14:40:17 - Tamas Heffter
Unfortunately you cannot just download the new ImagingControl library from the website, you have to write to the support with the serial number. So do you still want me to put it under PlusLib/tools if it's not freely available? 


#### 2012-04-20, 14:57:12 - Andras Lasso
If it's not freely downloadable anymore then keep the current implementation (find at PlusBuild level, store driver in PLTools, disabled ICCapturing by default) and remove the old driver from PlusLib/tools.


#### 2012-04-20, 15:23:54 - Tamas Heffter
Ok! Thanks

#### 2012-04-20, 15:29:22 - Tamas Heffter
http://www.imagingcontrol.com/en_US/blog/permalink/a16d5b0785d02e1c749c72607f5d158a/
Please take a look at it here, tell you the truth I cannot tell you the status. It's freely available, but need to send a request and no more license file needed. 

#### 2012-04-20, 15:40:19 - Andras Lasso
I think after your changes it's easier to just remove the old version from PlusLib/tools. We should also remove our license number from the PlusLib repository if it's not needed anymore.

#### 2012-04-20, 15:50:16 - Tamas Heffter
Ok, after I finished with it, could you test it with the real hardware? 


#### 2012-04-20, 16:00:26 - Andras Lasso
Yes, of course.

#### 2012-04-20, 16:04:50 - Tamas Heffter
(In r:1634) Re #162: removed Imaging control libraries from tools 

#### 2012-04-20, 16:57:35 - Tamas Heffter
(In r:1636) Re #162: Removed license key dependency from ICCapturing library 

#### 2013-05-06, 15:13:59 - Adam Rankin
The only remaining issue is the dependencies for PlusApp?

Does ITK 4.4.0 resolve the ITK issue?

#### 2013-05-09, 16:30:50 - Andras Lasso
ITK-3.20 issue is not relevant anymore (Plus-2.x uses ITK4)
Qt toStdString() and fromStdString is not used anymore.

Remaining issues:
* Dependencies for PlusApp cannot be generated (therefore PlusApp cannot be built). Possible solution: merge PlusApp and PlusLib. => This was a problem about 1-2 years ago in CMake - it may have been fixed already
* If linking against Qt-4.7.3 pre-built binaries, then the application does not start in debug mode. Workaround: copy msvcrt debug dlls (Qt4.7.3_vcdebug_privateassembly.zip) into C:\\Qt\\4.7.3\\bin. => This has to be revisited when the officially supported Qt version will be changed in Plus (it will happen when the supported Qt version is changed in Slicer)


#### 2013-05-15, 19:58:18 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2014-02-20, 19:01:55 - Ahmet Cakir
re #162: Fixed linker error (QLabel::setAlignment was not found) by removing alignment property from the UI file
Commit: r:3176|plus:3176

#### 2014-02-20, 19:01:55 - Ahmet Cakir
assigned_to_id: changed from null to "ckrahmet"

#### 2014-10-01, 12:57:07 - Andras Lasso
Project dependencies are generated correctly now (with CMake-3.0).
Recent Qt versions (e.g., Qt-4.8.5) has more recent vc debug dlls.

So, there are no more known limitations with VS2010.

Plus can be built with VS2012, too.

#### 2014-10-01, 12:57:07 - Andras Lasso
assigned_to_id: changed from "ckrahmet" to "lassoan"

#### 2014-10-01, 12:57:07 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2014-10-01, 12:57:19 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"


## #163 Image capturing disconnects due to invalid timestamp 
Image capturing disconnects when anything is changed on the Ultrasound Machine (ie. Gain or focus) because the timestamp becomes invalid. 

#### 2011-07-22, 16:25:51 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.1"

#### 2011-07-22, 16:32:50 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-29, 15:36:54 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-30, 20:52:53 - Tamas Heffter
The Ultrasonix device resets the frame counter if any imaging parameter change happens on the console and it results frame filtering loss (and shows warning messages) until we reach the required number of frames for filtering. There is no more disconnection, no need for change. 

#### 2011-07-30, 20:52:53 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #164 Change buffer timestamp filtering
Change buffer item timestamp filtering: 
- Use LSQR minimization to fit a line to the last NumberOfAveragedItems unfiltered timestamp and compute the filtered timestamp like this: 
filteredTimestamp = timeOffset + itemIndex * framePeriod;



#### 2011-07-22, 03:30:48 - Tamas Heffter


~~~~
% unfilteredts, numberOfAveragedPeriods=20
function [filteredTs]=tsfilter2(frameNumbers, unfilteredTs, numberOfAveragedPeriods)
sampleNum=length(unfilteredTs);
filteredTs=zeros(sampleNum,1);
filteredTs(1:numberOfAveragedPeriods)=unfilteredTs(1:numberOfAveragedPeriods);
% The initial estimated frame period is computed by averaging the first
% numberOfAveragedPeriods frame periods
A=ones(numberOfAveragedPeriods,2);
b=ones(numberOfAveragedPeriods,1);
for i = (numberOfAveragedPeriods+1) : sampleNum
    A(:,2)=frameNumbers(i-numberOfAveragedPeriods:i-1);
    b=unfilteredTs(i-numberOfAveragedPeriods:i-1);
   
    x=lsqr(A,b,1e-8,10);
    timeOffset=x(1);
    framePeriod=x(2);   
    
    filteredTs(i) = timeOffset + frameNumbers(i) * framePeriod;
end

~~~~



#### 2011-07-22, 03:30:48 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-07-22, 03:34:12 - Tamas Heffter
(In revision url:https://www.assembla.com/code/plus/subversion/changesets/339|339) Fixed #134: Change buffer timestamp filtering

#### 2011-07-22, 03:34:12 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-07-22, 03:34:13 - Tamas Heffter
(In revision url:https://www.assembla.com/code/plus/subversion/changesets/339|339) Fixed #134: Change buffer timestamp filtering

#### 2011-07-22, 20:09:19 - Tamas Heffter
(In r:343) Fixed #164: Change buffer timestamp filtering
- Optimized matrix and vector allocation 
- Added nightly test 

#### 2011-07-22, 20:15:21 - Tamas Heffter
(In r:345) Fixed #164: Change buffer timestamp filtering
- Fixed nightly test to read metafile from PlusLibData folder

#### 2011-07-26, 14:49:16 - Andras Lasso
Building with VS2010 requires ITK3.20. However, in ITK3.20 the LSQR algorithm has changed (due to licensing issues), and the new algorithm tend to fail (doesn't converge with sufficient accuracy), most probably due to the large difference in the A matrix values (norm of column 1 is much larger than the norm of column 2).

#### 2011-07-26, 14:49:16 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-07-26, 14:49:16 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2011-07-26, 18:50:40 - Andras Lasso
(In r:401) Fixed #164: Use linear regression (ordinary least squares estimation) to determine the filtered timestamp. Fixed frame numbers in saved data video&tracker (always sample the saved data with a constant rate and always increase frame numbers by one) - this fixes the vtkDataCollectorTest2 error (Difference between unfiltered timestamp and filtered timestamp is larger than the threshold).

#### 2011-07-26, 18:50:40 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #165 New phantom for AMS roadshow
Using the metal bucket
Printing the iCal inner part

#### 2011-07-27, 17:31:12 - Andras Lasso
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-07-29, 13:48:56 - Thomas Kuiran Chen
The AMS shipment just arrived on Thursday afternoon.  

Will start the new phantom design based on the measured dimensions of the AMS demo stand and water bucket.

#### 2011-07-29, 13:48:56 - Thomas Kuiran Chen
status: changed from "New" to "Accepted"

#### 2011-08-12, 13:36:17 - Thomas Kuiran Chen
iCalB 1.0 phantom all ready:
- tapped with supporting metal poles at Hole B;
- N-wires with the same geometric specs as iCal Dry phantom;
- Added an extra wire at the same region as the template A7 origin (reference point).
- Located a new water bucket that can fit snugly with both the AMS stand and iCalB 1.0 phantom, as well as a larger/taller bucket as a back up.  (Note: the size of the bucket is still not ideal at the moment).
- Imaging with the iCalB 1.0 phantom has shown positive results with clear visibility of all wires.
- Uploaded CAD STL to SVN. 

#### 2011-08-12, 13:36:17 - Thomas Kuiran Chen
status: changed from "Accepted" to "Fixed"


## #166 Prepare support material for RadVision GUI toolkits decision


#### 2011-07-29, 15:51:38 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-12, 20:59:45 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-12, 22:23:05 - Csaba Pinter
file:cMafcYXter4lKHeJe4gwI3

#### 2011-08-12, 22:23:05 - Csaba Pinter
Attachment added: "Qt_VS_WPF.xlsx"

#### 2011-08-12, 22:23:38 - Csaba Pinter
Also prepare material for the rest of the discussions described in
https://www.assembla.com/spaces/plus/wiki/RadVision_discussion

#### 2011-08-13, 18:06:21 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:21 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #167 Gather useful tools and make them recognizable
Gather the useful tools (eg. itkMetaImageSequenceIOTest3, DiagDataCollection), and either rename them to be recognizable, or create a wiki pace for them indicating which is good for what and how to use them

#### 2011-07-29, 15:34:50 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-29, 15:34:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-10-07, 15:51:49 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release - Next"

#### 2012-01-20, 20:08:58 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:53 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:53 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-23, 23:28:31 - Andras Lasso
(In r:1652) Fixed #167: Made a couple of diagnostic and test tools more usable

#### 2012-04-23, 23:28:31 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-04-23, 23:28:49 - Andras Lasso
Added a wiki page describing the most useful tools:
https://www.assembla.com/spaces/plus/wiki/Diagnostic_and_test_tools


#### 2012-04-23, 23:28:49 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"


## #168 Error in tracker buffer transform interpolation 


#### 2011-07-22, 23:34:03 - Tamas Heffter
(In r:352) re #168: Error in tracker buffer transform interpolation
Added TransformInterpolationTest 

#### 2011-07-22, 23:34:03 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-07-22, 23:34:18 - Tamas Heffter
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-07-23, 08:26:23 - Andras Lasso
(In r:359) re #168: Probably fixed the interpolation errors. Need to test.
* Cleaned up transform interpolation: ignore invalid transforms (out of view, timeout, etc.) when finding the two source transforms, use a new; cleaner SLERP interpolation code for rotation matrix interpolation; 
* Fixed vtkTimestampedCircularBuffer::GetLatestItemUidInBuffer(): Previously it returned LatestItemUid, which is actually the next UID to be inserted into the buffer (so it was not yet in the buffer). Now it returns NextItemUid-1.
* vtkTimestampedCircularBuffer::LatestItemUid was renamed to NextItemUid, as it is the UID of the next item.
* Read frame status (if available) from metafile in vtkTrackedFrameList::ReadFromSequenceMetafile


#### 2011-07-23, 08:29:10 - Andras Lasso
Tomi, please test it and fix any problems you find related to this issue.

#### 2011-07-23, 08:29:10 - Andras Lasso
assigned_to_id: changed from "lassoan" to "heffter"

#### 2011-07-23, 08:29:10 - Andras Lasso
status: changed from "New" to "Test"

#### 2011-07-23, 14:54:08 - Tamas Heffter
(In r:361) re #168: Error in tracker buffer transform interpolation
* Moved Slerp to PlusMath 
* Fixed error with LatestItemUid (changed to prefix incrementation)
* Return ITEM_UNKNOWN_ERROR if time difference larger than MaxAllowedTimeDifference during interpolation and report it as ERROR

#### 2011-07-23, 20:22:25 - Tamas Heffter
(In r:368) re #168: Error in tracker buffer transform interpolation 
Changed GetMostRecentTimestamp to have time for interpolation 

#### 2011-07-23, 23:02:04 - Tamas Heffter
(In r:370) Fixed #168: Error in tracker buffer transform interpolation 


#### 2011-07-23, 23:02:04 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #169 Move segmentation parameter computation to SegmentationParameters class
We should only read the parameters from the XML file then set them to SegmentationParameters class and all the other computation shall be done there. 
The best would be if we could move the xml reading part to SegmentationParameters class also (all class should read their own configuration file). 
Then we should only call 


~~~~

vtkSmartPointer<vtkXMLDataElement> segmentationParameters; 
this->GetSegParameters()->ReadSegmentationParameters(segmentationParameters);
vtkSmartPointer<vtkXMLDataElement> phantomDefinition = vtkXMLUtilities::ReadElementFromFile(this->PhantomDefinitionFileName);
this->GetSegParameters()->ReadPhantomDefinition(phantomDefinition);
this->GetSegParameters()->ComputeParameters(); 
this->GetSegParameters()->UpdateParameters(); 

~~~~

 
Move the following computation to SegmentationParameters::UpdateParameters() 

~~~~
  // Compute error boundaries based on error percents and the NWire definition (supposing that the NWire is regular - parallel sides)
  // Line length of an N-wire: the maximum distance between its wires' front endpoints
  double maxLineLengthSquared = -1.0;
  double minLineLengthSquared = FLT_MAX;
  std::vector<NWire> nWires = this->GetSegParameters()->GetNWires();

  for (std::vector<NWire>::iterator it = nWires.begin(); it != nWires.end(); ++it) {
    Wire wire0 = it->wires[0];
    Wire wire1 = it->wires[1];
    Wire wire2 = it->wires[2];

    double distance01Squared = vtkMath::Distance2BetweenPoints(wire0.endPointFront, wire1.endPointFront);
    double distance02Squared = vtkMath::Distance2BetweenPoints(wire0.endPointFront, wire2.endPointFront);
    double distance12Squared = vtkMath::Distance2BetweenPoints(wire1.endPointFront, wire2.endPointFront);
    double lineLengthSquared = std::max( std::max(distance01Squared, distance02Squared), distance12Squared );

    if (maxLineLengthSquared < lineLengthSquared) {
      maxLineLengthSquared = lineLengthSquared;
    }
    if (minLineLengthSquared > lineLengthSquared) {
      minLineLengthSquared = lineLengthSquared;
    }
  }

  this->GetSegParameters()->SetMaxLineLenMm(sqrt(maxLineLengthSquared) * (1.0 + (this->GetSegParameters()->GetMaxLineLengthErrorPercent() / 100.0)));
  this->GetSegParameters()->SetMinLineLenMm(sqrt(minLineLengthSquared) * (1.0 - (this->GetSegParameters()->GetMaxLineLengthErrorPercent() / 100.0)));
  LOG_DEBUG('Line length - computed min: ' << sqrt(minLineLengthSquared) << ' , max: ' << sqrt(maxLineLengthSquared) << ';  allowed min: ' << this->GetSegParameters()->GetMinLineLenMm() << ', max: ' << this->GetSegParameters()->GetMaxLineLenMm());

  // Distance between lines (= distance between planes of the N-wires)
  double maxNPlaneDistance = -1.0;
  double minNPlaneDistance = FLT_MAX;
  int numOfNWires = nWires.size();
  double epsilon = 0.001;

  // Compute normal of each NWire and evaluate the other wire endpoints if they are on the computed plane
  std::vector<vtkSmartPointer<vtkPlane>> planes;
  for (int i=0; i<numOfNWires; ++i) {
    double normal[3];
    vtkTriangle::ComputeNormal(nWires.at(i).wires[0].endPointFront, nWires.at(i).wires[0].endPointBack, nWires.at(i).wires[2].endPointFront, normal);

    vtkSmartPointer<vtkPlane> plane = vtkSmartPointer<vtkPlane>::New();
    plane->SetNormal(normal);
    plane->SetOrigin(nWires.at(i).wires[0].endPointFront);
    planes.push_back(plane);

    double distance1F = plane->DistanceToPlane(nWires.at(i).wires[1].endPointFront);
    double distance1B = plane->DistanceToPlane(nWires.at(i).wires[1].endPointBack);
    double distance2B = plane->DistanceToPlane(nWires.at(i).wires[2].endPointBack);

    if (distance1F > epsilon || distance1B > epsilon || distance2B > epsilon) {
      LOG_ERROR('NWire number ' << i << ' is invalid: the endpoints are not on the same plane');
    }
  }

  // Compute distances between each NWire pairs and determine the smallest and the largest distance
  for (int i=numOfNWires-1; i>0; --i) {
    for (int j=i-1; j>=0; --j) {
      double distance = planes.at(i)->DistanceToPlane(planes.at(j)->GetOrigin());

      if (maxNPlaneDistance < distance) {
        maxNPlaneDistance = distance;
      }
      if (minNPlaneDistance > distance) {
        minNPlaneDistance = distance;
      }
    }
  }

  this->GetSegParameters()->SetMaxLinePairDistMm(maxNPlaneDistance * (1.0 + (this->GetSegParameters()->GetMaxLinePairDistanceErrorPercent() / 100.0)));
  this->GetSegParameters()->SetMinLinePairDistMm(minNPlaneDistance * (1.0 - (this->GetSegParameters()->GetMaxLinePairDistanceErrorPercent() / 100.0)));
  LOG_DEBUG('Line pair distance - computed min: ' << minNPlaneDistance << ' , max: ' << maxNPlaneDistance << ';  allowed min: ' << this->GetSegParameters()->GetMinLinePairDistMm() << ', max: ' << this->GetSegParameters()->GetMaxLinePairDistMm());


~~~~



#### 2011-07-23, 20:26:11 - Alexis Boucharin
(In r:369) fixed #169 Move segmentation parameter computation to SegmentationParameters class.

#### 2011-07-23, 20:26:11 - Alexis Boucharin
status: changed from "New" to "Fixed"

#### 2011-07-26, 23:06:19 - Tamas Heffter
Updating tickets (#157, #169, #26, #27, #55, #56, #58, #64, #77, #102, #112, #135, #148)



#### 2011-07-26, 23:06:19 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.0"


## #170 vtkDataCollectorTest2 test fails on some machines
vtkDataCollectorTest2 test fails on some machines, such as PROSTATE. It's 100% reproducible on some machines and never appears on others.

#### 2011-07-24, 07:15:31 - Andras Lasso
(In r:372) Fixed #170: Fixed the failing tests. The problem was that the LSQR line fitting sometimes did not converge (resulted several second error). If the LSQR optimizer was forced to perform more iterations then the problem didn't appear. So, it seems that the stopping conditions for the optimization are not computed very robustly. Solution: increased the number of averaged elements to 20 (from 10) and added an additional check of the filtered and unfiltered timestamp difference (if the difference is too big then an error is logged and the element is discarded).

#### 2011-07-24, 07:15:31 - Andras Lasso
status: changed from "New" to "Fixed"


## #171 In vtkDataCollectorTest2 the AveragedItemsForFiltering element is not set properly
In vtkDataCollectorTest2 the AveragedItemsForFiltering element is read from the config file but then it is not actually used (the number of averaged elements is always the default). It's not a huge problem for the test (although misleading), but maybe it's wrong also in other circumstances as well.


#### 2011-07-24, 13:28:01 - Tamas Heffter
(In r:376) re #171: In vtkDataCollectorTest2 the AveragedItemsForFiltering element is not set properly
- Fixed vtkTimestampedCircularBuffer DeepCopy function 
- Call DeepCopy on LocalBuffers in case of SavedDatasets to copy all settings 
- Renamed GetDefaultTool function to GetDefaultToolNumber 
- Added GetDefaultTool function 
- Fixed vtkNDICertusTracker statuses 

#### 2011-07-24, 13:28:35 - Tamas Heffter
(In r:377) Fixed #171: In vtkDataCollectorTest2 the AveragedItemsForFiltering element is not set properly
- Renamed GetDefaultTool function to GetDefaultToolNumber 
- Added GetDefaultTool function 


#### 2011-07-24, 13:28:35 - Tamas Heffter
status: changed from "New" to "Fixed"


## #172 Difference between unfiltered timestamp and unfiltered timestamp is larger then the threshold
difference between unfiltered timestamp and unfiltered timestamp is larger then the threshold. Probably the LSQR minimization failed to converge - when program starts
Failed to create filtered timestamp for buffer item with item index 39262...VTKTrackerBuffer.cxx-during phantom registration


#### 2011-07-25, 17:28:41 - Csaba Pinter
assigned_to_id: changed from "pinter" to null

#### 2011-07-25, 17:28:41 - Csaba Pinter
summary: changed from "fCal testing errors" to "Difference between unfiltered timestamp and unfiltered timestamp is larger then the threshold"

#### 2011-07-29, 15:34:13 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-29, 15:34:13 - Csaba Pinter
component_id: changed from "PlusApp-fCal" to "PlusLib"

#### 2011-07-29, 15:34:13 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-07-29, 15:34:13 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-08-13, 14:43:40 - Andras Lasso
The problem has been already fixed in #164

#### 2011-08-13, 14:43:40 - Andras Lasso
status: changed from "Test" to "Invalid"


## #173 SONIX no connection
current exam has not been assigned to a patient. would you like to assign the exam to a patient record. - the freeze button is unable to unfreeze on the ultrasound machine while this dialog box is showing 

#### 2011-07-25, 18:19:14 - Csaba Pinter
According to Mattea and Simrin the dialog box mentioned above shows up from time to time no matter what

#### 2011-07-29, 15:31:09 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 20:32:56 - Csaba Pinter
This should appear in the fCal or Tracked Ultrasound Capturing howto

#### 2011-08-26, 15:23:34 - Csaba Pinter
A wiki entry is need that describes how to solve this issue

#### 2011-08-26, 15:23:34 - Csaba Pinter
assigned_to_id: changed from null to "Simrin"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-21, 15:43:40 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-10-28, 21:29:13 - Andras Lasso
Added the note to the https://www.assembla.com/spaces/plus/wiki/Tracked_ultrasound_collection wiki page.

#### 2011-10-28, 21:29:13 - Andras Lasso
assigned_to_id: changed from "Simrin" to "lassoan"

#### 2011-10-28, 21:29:13 - Andras Lasso
status: changed from "New" to "Fixed"


## #174 Contouring threshold slider into VolumeReconstruction toolbox
Contouring threshold should be interactively changeable with a slider instead of the recently used fixed number

#### 2011-07-29, 15:29:33 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-07-29, 15:29:33 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-07-29, 15:29:33 - Csaba Pinter
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-12-13, 19:41:16 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to null

#### 2012-01-20, 20:07:16 - Csaba Pinter
priority: changed from "Low (4)" to "Normal (3)"

#### 2012-01-20, 20:07:21 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:53 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:53 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:20 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-29, 19:46:15 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2012-06-29, 19:46:15 - Csaba Pinter
assigned_to_id: changed from "rankin" to "pinter"

#### 2012-06-29, 19:46:15 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-06-29, 20:31:12 - Csaba Pinter
(In r:1856|plus:1856) Test #174: Slider added for changing contouring threshold based on which the surface is displayed on the canvas

#### 2012-06-29, 20:31:12 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-06, 19:49:23 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #175 One configuration file by using links
It would be good to use only one configuration file for everything, because it is easier to load and transfer.
However, maintaining several big all-in-one configuration files containing mainly the same information (redundantly) is difficult.
This is why is would be useful to use links, so that the root configuration file can refer to external configuration files (so we can keep the files separately, much like we do now)

#### 2011-07-29, 15:27:16 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2011-08-23, 20:23:42 - Csaba Pinter
We decided not to use links, only one unified config file

#### 2011-08-23, 20:23:42 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 20:23:42 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:40:05 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:05 - Tamas Heffter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.3.0 - Open source"


## #176 Load all tools from sequence metafile
vtkSavedDataTracker now only loads the default tool from the sequence metafile, although there can be more tools, which can be important for an operation

#### 2011-07-29, 15:25:00 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-07-29, 15:25:00 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-30, 15:10:51 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:51 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-21, 15:44:55 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2011-11-10, 00:18:53 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"

#### 2011-11-10, 00:18:53 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-11-11, 00:16:27 - Andras Lasso
(In r:1168) Fixed #176: Now vtkSavedDataTracker can load all the tools from a sequence metafile. It requires tool definition in the config file (Name, Type, and PortNumber attributes are enough: e.g., <Tracker ...> <Tool Name='ToolToTrackerTransform' Type='Probe' PortNumber='0' /> </Tracker>). The Tool Name should match the frame field name (e.g., if the transform in the sequence metafile is Seq_Frame0001_ToolToTrackerTransform = 0.438936... then the Tool Name in the config file shall be ToolToTrackerTransform)

#### 2011-11-11, 00:16:27 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2011-11-11, 00:22:54 - Andras Lasso
Issue Type: changed from null to "Enhancement"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #177 Crash on exit due to tracker thread still running
On exiting the fCal app, it crashes almost every time, and it is due to the tracking thread trying to access the already undefined tracker instance. Maybe it would be good to undo deleting the terminate thread codes?

#### 2011-07-28, 05:01:28 - Tamas Heffter
Already fixed in  https://www.assembla.com/code/plus/subversion/changesets/416. 
Please test it. 

#### 2011-07-28, 05:01:28 - Tamas Heffter
assigned_to_id: changed from null to "pinter"

#### 2011-07-28, 05:01:28 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-07-28, 05:01:57 - Tamas Heffter
component_id: changed from "None" to "PlusLib"

#### 2011-07-28, 05:01:57 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.2.1 - Before Vancouver"

#### 2011-08-01, 17:14:38 - Csaba Pinter
I found no crashes like this in course of my tests today

#### 2011-08-01, 17:14:38 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #178 vtkAccurateTimer::GetSystemTime() should return the  elapsed time since class instantiation
vtkAccurateTimer::GetSystemTime() should return the  elapsed time since class instantiation, because usually we need only time difference. 

#### 2011-07-26, 13:25:40 - Tamas Heffter
(In r:395) Fixed #178: vtkAccurateTimer::GetSystemTime() should return the elapsed time since class instantiation
- Added GetInternalSystemTime() for elapsed time since last reboot
- Changed GetSystemTime() to return elapsed time since class instantiation


#### 2011-07-26, 13:25:40 - Tamas Heffter
status: changed from "New" to "Fixed"


## #179 Add line number to LOG_INFO messages if log level is larger than LOG_INFO


#### 2011-07-26, 13:33:05 - Tamas Heffter
(In r:396) Fixed #179: Add line number to LOG_INFO messages if log level is larger than LOG_INFO

#### 2011-07-26, 13:33:05 - Tamas Heffter
status: changed from "New" to "Fixed"


## #180 Change tracking buffer to not interpolate data in a range that contains invalid items
If one of the two frames that should be used for pose interpolation is invalid (e.g., tracker out of view) then don't interpolate just drop the frame (and the corresponding video frame).

#### 2011-07-26, 22:35:45 - Andras Lasso
(In r:404) Fixed #180: Now only allow tracking data interpolation if there are a valid element before and after the requested time

#### 2011-07-26, 22:35:45 - Andras Lasso
status: changed from "New" to "Fixed"


## #181 Create a command line OpenIGTLinkBroadcaster application
When we want to use Sonix Touch with GPS, but run the Plus Apps from another computer, the tracking should be broadcasted to that other computer with minimal overhead. An OpenIGTLinkTracker should be implemented too for the receiving side.

#### 2011-07-27, 16:04:23 - Tamas Ungi
status: changed from "New" to "Test"

#### 2011-08-03, 19:44:38 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:01:11 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-24, 12:54:39 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #182 Create OpenIGTLink receiving interface for data collector
When we read the tracker through network, Sonix Touch GPS data will be sent through OpenIGTLink.

#### 2011-07-27, 17:34:24 - Andras Lasso
priority: changed from "Normal (3)" to "High (2)"

#### 2011-08-03, 19:44:45 - Csaba Pinter
milestone_id: changed from "Release Plus-1.2.1 - Before Vancouver" to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:00:51 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-26, 15:48:14 - Csaba Pinter
milestone: changed from null to "Release - MICCAI"

#### 2011-09-23, 14:36:36 - Csaba Pinter
Updating tickets (#294, #182, #206, #272)



#### 2011-09-23, 14:36:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-09-28, 20:21:59 - Tamas Ungi
(In r:834) re #182: Class skeleton added.

#### 2011-09-30, 15:00:18 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 15:13:34 - Csaba Pinter
Data collector extension that collects broadcasted synchronized data

#### 2011-10-07, 15:14:22 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-10-07, 15:19:28 - Csaba Pinter
priority: changed from "High (2)" to "Normal (3)"

#### 2011-10-07, 15:19:28 - Csaba Pinter
summary: changed from "Create OpenIGTLinkTracker" to "Create OpenIGTLink receiving interface for data collector"

#### 2011-10-07, 15:36:33 - Csaba Pinter
Updating tickets (#182, #133)



#### 2011-10-07, 15:36:33 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-07-04, 21:32:22 - Andras Lasso
The functionality is implemented in PlusServer and the vtkOpenIGTLinkVideoSource and vtkOpenIGTLinkTracker classes.

#### 2012-07-04, 21:32:22 - Andras Lasso
status: changed from "New" to "Invalid"


## #183 DeviceSetSelectorWidget connection failed code doesn't work
On connection failed, the widget still displays disconnect text (and also you have to click on disconnect and connect again) 

#### 2011-07-27, 17:32:06 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-07-27, 17:34:47 - Andras Lasso
priority: changed from "Low (4)" to "High (2)"

#### 2011-07-28, 17:38:59 - Csaba Pinter
(In r:426) Fixed #183: TrackedUltrasoundCapturing returns with error if any of the operations have failed (it does not sets the success flag to true on any successful sub-tasks); DeviceSetSelectorWidget just emits the signals on connect/disconnect and the GUI changes take effect on setting the success flag (according to the current state)

#### 2011-07-28, 17:38:59 - Csaba Pinter
status: changed from "New" to "Fixed"


## #184 Build error in PlusLib during PlusBuild
When I follow the build instructions on the Wiki, building of ALL_BUILD of PlusBuild.sln results:
7>c:\\devel\\plusbuild\\pluslib\\src\\imageacquisition\\vtkvideosource2.cxx(698) : error C4716: 'vtkVideoSource2::GenerateVideoDataAcquisitionReport' : must return a value
And as a consequence, most projects in PlusLib and PlusApp are not built correctly because of linking errors.
This only happens when I start from an empty directory. When I update an existing project, it builds successfully.


#### 2011-07-27, 12:56:33 - Tamas Ungi
It seems that currently, PlusLib can only be build if PLUS_PRINT_VIDEO_TIMESTAMP_DEBUG_INFO is defined. Because of the error described above. Could somebody fix this?

#### 2011-07-27, 12:56:33 - Tamas Ungi
priority: changed from "Normal (3)" to "High (2)"

#### 2011-07-27, 16:00:33 - Tamas Heffter
(In r:411) Fixed #184: Build error in PlusLib during PlusBuild
This was a CMake bug in version 2.8.2
We don't need these defines anymore so just delete them: 
Removed PLUS_PRINT_SYNC_DEBUG_INFO, PLUS_PRINT_VIDEO_TIMESTAMP_DEBUG_INFO, PLUS_PRINT_TRACKER_TIMESTAMP_DEBUG_INFO options from build. 

#### 2011-07-27, 16:00:33 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-07-27, 16:00:33 - Tamas Heffter
status: changed from "New" to "Fixed"


## #185 Exception during Phantom Registration
Error: TrackedFramePositionFinder: Unable to find base frame transform name for tracked frame validation [in d:\\devel\\plus_assembla\\pluslib\\src\\imageacquisition\\vtkTrackedFrameList.h (148) ]

First got the error when the Phantom Registration was started (we were using the session data, and the US machine button was frozen). We then tried to reproduce the error: freezing the US machine manually during the calibration didn't cause the error. Next we tried using the session data and the same error appeared in the middle of the calibration. Another try using the session data and the calibration completed  successfully. 

The log file for when the error occurred during the calibration is attached.

#### 2011-07-27, 13:45:42 - Csaba Pinter
description: changed from "Error: TrackedFramePosition..." to "Error: TrackedFramePosition..."

#### 2011-07-27, 13:45:42 - Csaba Pinter
summary: changed from "Exception during Phantom Calibration " to "Exception during Phantom Registration"

#### 2011-07-29, 15:24:09 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-04, 18:26:53 - Csaba Pinter
According to a discussion with Tomi, I'll implement a way to save raw buffer data from fCal when this error occurs so that we can reproduce it easily (or other errors we get). 

#### 2011-08-04, 18:26:53 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-04, 20:01:12 - Csaba Pinter
(In r:520) Re #185: Function created that dumps buffers into a given directory

#### 2011-08-04, 20:01:33 - Csaba Pinter
(In r:521) Re #185: Feature created that saves raw buffer data into files when user presses Ctrl+D when Configuration toolbox is active

#### 2011-08-05, 18:25:02 - Csaba Pinter
Duplicate of #210, which has a more suitable ticket name

#### 2011-08-05, 18:25:02 - Csaba Pinter
status: changed from "Accepted" to "Invalid"


## #186 Show currently used temporal calibration offset in fCal


#### 2011-07-28, 04:21:16 - Csaba Pinter
Fixed in rev 415 (my commit message did not work for some reason)

#### 2011-07-28, 04:21:16 - Csaba Pinter
status: changed from "New" to "Fixed"


## #187 Rename freehandcalibration to fCal


#### 2011-07-31, 16:31:27 - Csaba Pinter
(In r:467) Fixed #187: FreehandCalibration renamed to fCal

#### 2011-07-31, 16:31:27 - Csaba Pinter
status: changed from "New" to "Fixed"


## #188 Add possibility to write raw buffers to file in fCal
if cannot implement it, then we have to use diagdatacollector

#### 2011-07-27, 19:07:05 - Tamas Heffter
(In r:413) re #188: Add possibility to write raw buffers to file in fCal
- Added DataCollector::Synchronize save sync buffer only 
- Added some log messages 

#### 2011-07-27, 19:08:25 - Tamas Heffter
Please set output folder for the raw buffers from vtkFreehandCalibrationController: 
controller->GetDataCollector()->Synchronize( './', true );

#### 2011-07-27, 19:08:25 - Tamas Heffter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-07-28, 04:21:50 - Csaba Pinter
Fixed in rev 415 (my commit message did not work for some reason)

#### 2011-07-28, 04:21:50 - Csaba Pinter
status: changed from "New" to "Fixed"


## #189 Save calibration result matrix into xml file
read complete input xml config file, update calibration results in the xml tree, then write to file

#### 2011-07-27, 22:58:01 - Csaba Pinter
Also load and apply (show devices checkbox should be enabled if image to probe transform is not identity, and visualization should work with sequence metafile or fake tracker)

#### 2011-07-27, 22:58:01 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-07-29, 22:51:48 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-07-29, 22:54:13 - Csaba Pinter
status: changed from "Fixed" to "Accepted"

#### 2011-07-31, 04:57:49 - Csaba Pinter
(In r:463) Fixed #189: vtkFreehandCalibrationController::SaveCalibrationResults function saves ImageToProbe transform back to input configuration file (ruins indentation); Re #190: USDataCollection element check moved to vtkDataCollector; Tests fixed

#### 2011-07-31, 04:57:49 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #190 Create one configuration file that can be used for fCal, 3D reconstruction, and TrackedUltrasoundCapturing


#### 2011-07-29, 01:58:53 - Csaba Pinter
(In r:440) Re #190: DeviceSetSelectorWidget can parse up new unified configuration files with PlusConfiguration root element name (also configuration directory set to vtkFileFinder for the other toolboxes); Transform name change (stylustipToStylusTransform) applied to the toolboxes

#### 2011-07-29, 01:59:31 - Csaba Pinter
(In r:441) Fixed #28, Re #190: vtkFreehandController loads and holds the unified configuration file (2 added); StylusCalibrationController uses the unified file for loading and saving; vtkDataCollector has a new function which reads configuration from vtkXMLDataElement; tests fixed according to the new name of the ConfigurationFileName (not InputConfigurationFileName); Wrong stylusToStylustipTransform name renamed to stylusTipToStylusTransform; Major and Minor versions as integers added to PlusConfigure; Comments in tool definitions corrected

#### 2011-07-29, 15:41:36 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-07-29, 21:34:08 - Csaba Pinter
(In r:448) Re #190: The formerly separate tracker tool definition has been merged into in USDataCollection/Tracker; StylusCalibrationTest fixed

#### 2011-07-29, 21:36:46 - Csaba Pinter
(In r:449) Re #190: Date removed from the name of the new config files

#### 2011-07-29, 22:33:09 - Csaba Pinter
(In r:451) Re #190: Fixed compilation errors due to deleted default tool in PlusApp

#### 2011-07-29, 23:39:55 - Csaba Pinter
(In r:452) Re #190: General tracker tool added (scalpel, bone, etc.); vtkStylusCalibrationTest and vtkPhantomRegistrationTest fixed

#### 2011-07-30, 00:04:59 - Csaba Pinter
(In r:453) Re #190: Tests fixed (vtkDataCollectorTest*)

#### 2011-07-30, 13:46:12 - Csaba Pinter
(In r:455) Re #190: vtkStylusCalibrationTest and vtkPhantomRegistrationTest fixed (they did not delete the test result file before writing - so they wanted to add their results to the former, completely different test file structure)

#### 2011-07-30, 20:21:37 - Csaba Pinter
(In r:459) Re #190: calibration and volume reconstruction is read now from unified configuration; new configuration files added for all the tests (the old ones for stylus calibration and phantom registration deleted); 

#### 2011-07-30, 20:29:17 - Csaba Pinter
(In r:460) Video time offset added to configuration file; Re #190: New configuration files for the test cases added

#### 2011-07-31, 04:55:43 - Csaba Pinter
(In r:462) Re #190: Error check added to TrackedUltrasoundCapturing

#### 2011-07-31, 04:57:49 - Csaba Pinter
(In r:463) Fixed #189: vtkFreehandCalibrationController::SaveCalibrationResults function saves ImageToProbe transform back to input configuration file (ruins indentation); Re #190: USDataCollection element check moved to vtkDataCollector; Tests fixed

#### 2011-07-31, 14:34:14 - Csaba Pinter
(In r:465) Re #190: SonixTouch+GPS configuration file added

#### 2011-08-02, 19:57:36 - Csaba Pinter
(In r:487) Re #190: Phantom definition loading is automated like the other configuration elements; Window title changed to fCal too

#### 2011-08-03, 15:52:47 - Csaba Pinter
(In r:496) Re #190: Volume reconstructor's configuration reading fixed; Save calibration result changed (to new file containing date and time)

#### 2011-08-03, 15:53:04 - Csaba Pinter
(In r:497) Re #190: Volume reconstructor's configuration reading fixed; Save calibration result changed (to new file containing date and time)

#### 2011-08-03, 20:41:17 - Csaba Pinter
component_id: changed from "None" to "PlusLib"

#### 2011-08-03, 20:41:17 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #191 Error when Reset button clicked after Phantom Registration is completed
The reset button works during the phantom registration, but if it is clicked when the calibration is complete (to do another calibration), the following error occurs:

Initializing probe visualization failed in vtkFreehandCalibrationController.cxx (342)

#### 2011-07-27, 21:18:15 - Csaba Pinter
description: changed from "The reset button works duri..." to "The reset button works duri..."

#### 2011-07-27, 21:18:15 - Csaba Pinter
summary: changed from "Error when Reset button clicked after Phantom Calibration is completed" to "Error when Reset button clicked after Phantom Registration is completed"

#### 2011-07-29, 15:10:22 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.1 - Before Vancouver"

#### 2011-08-01, 16:28:05 - Csaba Pinter
This issue must have been solved earlier, since it does not come up on taking the actions in the description.

There are bugs related to the Reset functions in the Freehand Calibration toolbox though, so I'll fix them and commit under this ticket.

#### 2011-08-01, 16:28:05 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-01, 17:03:53 - Csaba Pinter
(In r:474) Re #191: Reset function fixed in vtkFreehandCalibrationController; unified config file fixed and one added for SonixRP

#### 2011-08-01, 17:12:48 - Csaba Pinter
(In r:476) Fixed #191: Bugs in Reset functions in freehand calibration toolbox fixed

#### 2011-08-01, 17:12:48 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #192 Always show devices in fCal
Show devices function should be globally running regardless of the program state. The devices with valid matrices, models and tracking data should be displayed at all times

#### 2011-08-08, 19:24:22 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-08, 20:19:11 - Csaba Pinter
New architecture is needed for fCal to be able to do this centralized displaying nicely

#### 2011-08-09, 18:34:42 - Csaba Pinter
file:a_SwgoWRyr4jsneJe5cbCb: Initial plan for fCal architecture 2.0

#### 2011-08-09, 18:34:42 - Csaba Pinter
Attachment added: "fCal_Architecture_2.0.pptx"

#### 2011-08-09, 18:36:06 - Csaba Pinter
According to a brainstorming with Andras and Tamas, we need a bigger meeting to discuss the needed refactoring of the TrusCalibration and fCal projects

#### 2011-08-09, 18:43:22 - Csaba Pinter
(In r:544) Re #192, Re #231: Branch created for the refactoring related to these tickets. The commited code does not compile! It was the first approach of reorganizing fCal and it contains the main ideas

#### 2011-08-13, 18:00:31 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-09-14, 20:56:56 - Csaba Pinter
(In r:734) Re #231, Re #192: New architecture created for fCal: the TrusCalibration/*Controller classes and so the AbstractToolboxController class deleted, algorithms created instead of them (vtkPivotCalibrationAlgo and vtkPhantomRegistrationAlgo; vtkFreehandCalibrationController remained until refactoring the calibration code - this is why progress and segmented point visualization does not work during calibration)

#### 2011-09-14, 20:59:04 - Csaba Pinter
(In r:735) Re #231, Fixed #192: New architecture created for fCal: vtkToolVisualizer is responsible for all 3D visualizations instead of *Controller classes; AbstractToolbox moved to app; *Toolbox classes do the whole job now (handling events, state, calling the algo classes)

#### 2011-09-14, 20:59:04 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #193 Use perklab_anonymous user for PlusBuild
PlusBuild should use perklab_anonymous user for assembla authentication. 
Add Plus revision selection possibility (just to be able to manage stable Plus releases). 
Always use PLTools with PlusBuild

#### 2011-07-28, 02:01:00 - Tamas Heffter
description: changed from "PlusBuild should use perkla..." to "PlusBuild should use perkla..."

#### 2011-07-28, 03:25:23 - Tamas Heffter
(In r:418) Fixed #193: Use perklab_anonymous user for PlusBuild
PlusBuild uses perklab_anonymous user for assembla authentication.
Added Plus revision selection possibility (just to be able to manage stable Plus releases).
Changed to always use PLTools with PlusBuild

#### 2011-07-28, 03:25:23 - Tamas Heffter
status: changed from "New" to "Fixed"


## #194 Clean up vtkFreehandCalibrationController
* It shares many functions with vtkProbeCalibrationController. They should have a common base class (eg. vtkProbeCalibrationBase), and only contain the code that is different
* Review TODOs in the code and fix them

#### 2011-07-29, 15:08:53 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 20:33:26 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-09-19, 14:27:57 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-20, 14:19:24 - Csaba Pinter
(In r:767) Re #194: Unnecessary includes removed from vtkProbeCalibrationController.cxx

#### 2011-09-21, 16:28:19 - Csaba Pinter
(In r:772) Re #194: Pattern recognition gets TrackedFrame as input and writes the output in its FiducialPointsCoordinatePx member. vtkCalibrationController does not need the SegmentImage functions any more

#### 2011-09-21, 16:28:54 - Csaba Pinter
(In r:773) Re #194: Segmentation is done by the FidPatternRecognition class instead of vtkCalibrationController in SegmentationParameterDialog

#### 2011-09-21, 16:58:00 - Csaba Pinter
(In r:774) Re #194: Build errors fixed (all the tests passed so I assumed everything is OK. Maybe the executables should be deleted in the beginning of BuildAndTest.bat in order that the tests fail if there are some build errors)

#### 2011-09-21, 18:12:22 - Csaba Pinter
(In r:775) Re #194: Read phantom geometry moved from vtkCalibrationController to FidPatternRecognition; UsFidSegTest now uses FidPatternRecognition instead of vtkCalibrationController for segmentation

#### 2011-09-21, 20:39:20 - Csaba Pinter
(In r:777) Re #194: ProgramFolderPath and OutputPath removed from vtkCalibrationController - vtkPlusConfig is used instead; vtkPlusConfig include added to PlusConfigure

#### 2011-09-21, 20:39:40 - Csaba Pinter
(In r:778) Re #194: vtkPlusConfig include added to PlusConfigure

#### 2011-09-21, 20:51:46 - Csaba Pinter
(In r:779) Re #194: Fixed errors (same thing as this morning)

#### 2011-09-21, 21:00:42 - Csaba Pinter
(In r:780) Re #194: vtkPlusConfig include added to PlusConfigure

#### 2011-09-21, 22:08:31 - Csaba Pinter
(In r:781) Re #194: Phantom model loading moved from vtkCalibrationController to iCalBrachy (that was the one thing that needed that from there); Changed a warning to info when there was no previously loaded device sets; 

#### 2011-09-21, 22:08:57 - Csaba Pinter
(In r:782) Re #194: Little clean-up in DeviceSetSelectorWidget

#### 2011-09-22, 14:56:17 - Csaba Pinter
(In r:788) Re #194: Removed ConfigurationData and ConfigurationFileName members and ReadConfiguration functions that take file name as input

#### 2011-09-22, 16:04:24 - Csaba Pinter
(In r:789) Re #194: Matrix type conversions moved to PlusMath; Unused tracked frame creator functions deleted from vtkCalibrationController

#### 2011-09-22, 17:41:04 - Csaba Pinter
(In r:791) Re #194: In case of unsuccessful segmentation, the TrackedFrame will get an empty vtkPoints instead of NULL, so it can be determined if no segmentation was run or it was just failed

#### 2011-09-23, 22:02:20 - Csaba Pinter
(In r:793) Re #194: vtkProbeCalibrationController and vtkFreehandCalibrationController unified in vtkCalibrationController; CalibrationMode enum removed - it is taken care by the application; UltrasoundImageOrigin member removed from vtkCalibrationController and the tag with the same name from the baseline result files; Probe element added to trus test config files to be able to write the result in the probe calibration matrix

#### 2011-09-23, 22:03:25 - Csaba Pinter
(In r:794) Fixed #194: Calibration sequence moved from the calibration controller to the application

#### 2011-09-23, 22:03:25 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #195 Move the phantomtoimage tranform matrix into Phantom defintion file 
Move the phantomtoimage tranform matrix into Phantom defintion file instead of Configuration file.

#### 2011-08-04, 15:01:35 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-08-04, 15:11:12 - Alexis Boucharin
(In r:513) Fixed #195 The image to phantom tranform matrix is now in the phantom definition part of the configuration file (it makes more sense).

#### 2011-08-04, 15:11:12 - Alexis Boucharin
status: changed from "Accepted" to "Fixed"


## #196 Need to take out any information/details of stepper QA/compensation in our  current iCAL roadshow demo
Requested by PARTEQ and Clif for IP protection, we need to take out any information/details of stepper QA/compensation in our 
current iCAL demo program. 

As conquered by previous discussion with PARTEQ, Clif and Gabor, we would still perform Stepper QA/Compensation beforehand, but hidden from the user in the background and saved in a config file for iCAL to preload.  We will not mention the information at all during roadshow.

#### 2011-07-29, 14:54:42 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-18, 05:48:07 - Tamas Heffter
status: changed from "New" to "Fixed"


## #197 Prepare a large (4x4 feet) color poster to showcase iCAL
We will prepare a large (4x4 feet) color poster to showcase iCAL in the roadshow..  
- This is to draw nice attention to iCAL with a high-level overview and highlights on potential clinical and commercial merits.
- The poster can be printed (charged to an account) either by the department or in Queen's Medical Imaging service.  However, we need to give at least a week time for the printing and that depends on the current schedules of the printing service as well as the potential CUPE labor strike status.

#### 2011-07-29, 14:47:35 - Csaba Pinter
assigned_to_id: changed from null to "thomasckr"

#### 2011-08-13, 19:22:16 - Csaba Pinter
The poster needs a big hanging board to display.  Typically it is set up on the walls in a conference presentation.  But for our roadshow, there are no walls available to hang it (recall last time at AMS), so it is a bit impractical to have a poster presentation.  I have therefore abandoned this format for the roadshow.

I have added the poster contents to the powerpoint presentations and will present it with my 17 inch laptop.


#### 2011-08-13, 19:22:16 - Csaba Pinter
status: changed from "New" to "Fixed"


## #198 A one-page iCAL Technology Bulletin in PDF for distributions.
A one-page iCAL Technology Bulletin in PDF - this will 
serve as an advertisement for iCAL technology in brief, 
commercialization terms.  We can distribute it to roadshow hosts and 
interested parties beforehand.

As Clif stressed out, this is not a sales brochure and we do not
want to offer the technology to others.  PTI will sell iCAL when it is
'product ready',

#### 2011-07-29, 14:44:34 - Csaba Pinter
Can be done at AMS with Clif's help

#### 2011-07-29, 14:44:34 - Csaba Pinter
assigned_to_id: changed from null to "thomasckr"

#### 2011-08-12, 13:40:24 - Thomas Kuiran Chen
Discussed with Clif, at this moment we are not advising commercialization or sales of the iCAL system.  AMS will market and sell iCAL after the product ready state.  So we will not send out E-fliers at this time.

- Thomas 

#### 2011-08-12, 13:40:24 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"


## #199 A brief Power-Point Presentation of iCAL
A few-page Power-point Presentation that summarizes the technical 
aspects of iCAL - this will cover some more details that accompany our roadshow demo.

#### 2011-07-29, 14:37:50 - Csaba Pinter
assigned_to_id: changed from null to "thomasckr"

#### 2011-08-12, 13:28:56 - Thomas Kuiran Chen
Done with all new results/photos updated.

- Thomas

#### 2011-08-12, 13:28:56 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"


## #200 Checklist for the AMS trip
On the wiki
* Things to take with us: equipment, documents for the customs; do we have to ship anything?
* Things to take care of (vehicle, hotel etc.)

#### 2011-08-12, 13:37:59 - Thomas Kuiran Chen
Done.  

See FedEx shipping preparation ticket.

#### 2011-08-12, 13:37:59 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"


## #201 Identify tools with type instead of name
Instead of identifying the stylus using the Name='Stylus' attribute in the Tool element, we should use the StylusTool='StylusLonger' in the Tracker element (just like ReferenceTool and DefaultTool)

#### 2011-07-29, 15:23:37 - Csaba Pinter
Tool should have attributes like Name='LinearProbe' Type='Probe' Model='L14-5' (so maybe Type can act as identifier instead of the custom attributes in the element Tracker

#### 2011-08-04, 22:19:57 - Csaba Pinter
Instead of this, we decided to use the already existing Type attribute, so the tool is identified using the Type='Stylus' attribute. vtkTracker parses the string and converts it to enum like TRACKER_TOOL_STYLUS, which we use from that on throughout the program.

#### 2011-08-04, 22:19:57 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #202 VolumeReconstructor handles N-F coordinates the wrong way
Currently, to have the images in the correct orientation in the output volume, the usual UltrasoundImageOrientation=MF in the recorded files has to be changed to MN. Regardless of the ImageFlipped value in the volume reconstructor config file, the 'vtkOptimizedInsertSlice' function (in file vtkFreehandUltrasound2Helper.h) puts the MF images to the volume upside down (N to F). Although in this function the 'flipped' variable is still set correctly according the 'ImageFlipped' value in the config file.

#### 2011-08-23, 19:20:56 - Csaba Pinter
Volume reconstruction worked well using optical tracker and fCal (and also with vtkVolumeReconstructor), but failed using EM tracker

#### 2011-08-23, 19:20:56 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-23, 19:20:56 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-26, 15:24:41 - Csaba Pinter
assigned_to_id: changed from null to "ungi"

#### 2011-08-26, 15:51:16 - Csaba Pinter
Reverse any hardcoded temporary fixes that are done for MICCAI

#### 2011-08-26, 15:54:32 - Csaba Pinter
milestone: changed from null to "Release - MICCAI"

#### 2011-08-26, 15:55:18 - Csaba Pinter
assigned_to_id: changed from "ungi" to "lassoan"

#### 2011-09-01, 21:36:12 - Andras Lasso
An additional problem found: the reconstructed volume is not always exactly the same. It may be due to different timestamps, interpolation, ...?

#### 2011-09-01, 22:12:42 - Andras Lasso
(In r:669) re #202: Added tests for volume reconstruction (not all of them are activated)

#### 2011-09-02, 23:41:55 - Andras Lasso
(In r:672) re #202: Removed image flip options (always assume MF input image), added a simplified volume reconstructor (vtkVolumeReconstructorFilter), which will eventually replace the current overly complicated reconstructors

#### 2011-09-03, 17:16:10 - Andras Lasso
(In r:676) re #202: use the new, simplified volume reconstructor (vtkVolumeReconstructorFilter) in vtkVolumeReconstructorTest1

#### 2011-09-05, 16:25:47 - Andras Lasso
(In r:685) re #202: Fixed image orientation problem in volume reconstruction (a VTK image was expected but with MF orientation, while VTK images are normally in MN orientation, due to VTK image orientation convention). Simplified VolumeReconstruction configuration in the XML. Added option to run FULL, PARTIAL, or NONE optimization. Temporarily turned off multithreading for vtkVolumeReconstructorTest2&3 because multithreading causes minor random differences in the output image.

#### 2011-09-05, 19:07:03 - Andras Lasso
(In r:687) re #202: VolumeReconstructor now uses VolumeReconstructionFilter instead of the FreeHand classes

#### 2011-09-05, 19:41:40 - Andras Lasso
(In r:688) re #202: Deleted old volume reconstructor classes (they were too complicated, if the removed functionalities - such as ECG-gated multi-phase volume reconstruction - are needed again they can be reimplemented on the current, much simpler design, where the volume reconstruction is completely decoupled from the data acquisition)

#### 2011-09-05, 22:20:27 - Andras Lasso
(In r:689) re #202: Separated hole filling from slice pasting into volume

#### 2011-09-05, 22:31:41 - Andras Lasso
(In r:690) re #202: Deleted references to unused headers

#### 2011-09-05, 22:32:52 - Andras Lasso
(In r:691) re #202: Updated VolumeReconstructor to work with the reworked reconstructor classes

#### 2011-09-05, 22:49:42 - Andras Lasso
(In r:692) re #202: Added option to export volume reconstructor alpha channel

#### 2011-09-06, 16:08:40 - Andras Lasso
(In r:693) Fixed #202: Updated documentation of reworked volume reconstruction classes

#### 2011-09-06, 16:08:40 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-09-23, 14:41:36 - Csaba Pinter
Updating tickets (#155, #288, #202, #284)



#### 2011-09-23, 14:41:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #203 Fix VolumeReconstruction config file saving
Although it is not used recently, it should be fixed.

Also test reading of ECG-related parameters

#### 2011-08-23, 19:37:24 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:37:24 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 01:59:39 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-28, 17:01:56 - Andras Lasso
Volume reconstruction parameters cannot be modified or separately saved in fCal now.

#### 2014-09-28, 17:01:56 - Andras Lasso
status: changed from "New" to "Invalid"


## #204 Calibration phantom stl file missing from the package
When the Plus Apps are installed from a generated package (with the PACKAGE VS project), fCal cannot be used, because the phantom model stl file is missing. I think it should be put in the package.

#### 2011-08-05, 14:11:50 - Csaba Pinter
status: changed from "New" to "Fixed"


## #205 New config files missing from the PACKAGE
The new PlusConfiguration_... config files are missing from the package. Maybe they should be the only ones in the installer packages now, and the old ones should be removed.

#### 2011-08-05, 14:12:08 - Csaba Pinter
status: changed from "New" to "Fixed"


## #206 Create OpenIGTLink interface to control Plus functions


#### 2011-08-01, 00:01:35 - Tamas Ungi
(In r:472) re #206: WIP. New files added for the OpenIGTLink interface.

#### 2011-08-01, 17:16:03 - Tamas Ungi
(In r:477) re #206: Added a program to simulate the Slicer side of the interface (server).

#### 2011-08-13, 17:47:59 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-22, 05:11:59 - Tamas Ungi
(In r:622) re #206: Organize files and classes.

#### 2011-08-22, 05:12:31 - Tamas Ungi
(In r:623) re #206: Organize files and classes.

#### 2011-08-25, 04:07:25 - Tamas Ungi
(In r:631) re #206: Added test for server.

#### 2011-08-25, 23:17:39 - Tamas Ungi
(In r:643) re #206: WIP.

#### 2011-08-26, 04:48:38 - Tamas Ungi
(In r:647) re #206: Request-response with example strings work.

#### 2011-08-26, 15:48:01 - Csaba Pinter
milestone: changed from null to "Release - MICCAI"

#### 2011-08-29, 12:04:42 - Tamas Ungi
(In r:655) re #206: Client added. Not implemented.

#### 2011-08-31, 17:59:57 - Tamas Ungi
(In r:664) re #206: Command class structure added with one example command.

#### 2011-08-31, 20:43:56 - Tamas Ungi
(In r:665) re #206: Command factory added.

#### 2011-09-09, 23:51:11 - Tamas Ungi
(In r:716) re #206: Request-response deleted. Messages with no feedback started to be implemented.

#### 2011-09-10, 03:13:00 - Tamas Ungi
(In r:722) re #206: Server receives messages but hangs if no client messages come.

#### 2011-09-10, 16:29:34 - Tamas Ungi
(In r:723) re #206: WIP

#### 2011-09-12, 05:18:40 - Tamas Ungi
(In r:728) re #206: Server does not get messages for some reason now.

#### 2011-09-12, 22:16:17 - Tamas Ungi
(In r:729) re #206: MessageQueue added, not used yet.

#### 2011-09-14, 07:08:13 - Tamas Ungi
(In r:732) re #206: WIP

#### 2011-09-14, 18:36:10 - Tamas Ungi
(In r:733) re #206: Client to server command sending works. Next, the command buffer has to be placed in the server.

#### 2011-09-16, 11:31:48 - Tamas Ungi
(In r:747) re #206: WIP

#### 2011-09-20, 12:22:08 - Tamas Ungi
(In r:766) re #206: Server buffers commands, which can later be executed. Server stopping still missing.

#### 2011-09-23, 14:36:36 - Csaba Pinter
Updating tickets (#294, #182, #206, #272)



#### 2011-09-23, 14:36:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-09-29, 12:31:57 - Tamas Ungi
(In r:840) re #206: Timeout usage added.

#### 2011-09-29, 14:41:56 - Tamas Ungi
(In r:841) re #206: Number of queued messages can be get.

#### 2011-09-29, 20:28:44 - Tamas Ungi
(In r:842) re #206: Stop DataCollector command added.

#### 2011-09-30, 15:10:52 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:52 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-04, 23:21:03 - Tamas Ungi
(In r:882) re #206: Broadcaster now sends synchronized data.

#### 2011-10-07, 15:33:20 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-07, 15:33:31 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-10-29, 16:23:08 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #207 No phantom image during phantom registration 
Registration completes, but the phantom doesn't appear on the screen during the phantom registration or after 'Register' is clicked. The phantom definition xml we used was: PhantomDefinition_fCal_1.0_Wiring_1.0.xml in PlusApp version 485. 

#### 2011-08-02, 18:36:15 - Csaba Pinter
It is because the old type (separate) phantom definition was loaded (and so it failed to load). Instead, the new unified configuration file has to be used in that field too.

#### 2011-08-02, 18:36:15 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-08-02, 18:37:31 - Csaba Pinter
The automatic detection of the already loaded phantom definition would solve this confusion (just like it already works in case of all other file selection fileds)

#### 2011-08-02, 18:37:31 - Csaba Pinter
status: changed from "Invalid" to "Accepted"

#### 2011-08-04, 15:50:49 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #208 If new device set is selected, then every toolbox should reset
So that the user does not have to press Reset in every toolbox manually, as he has to start over everything anyway (the existing session data is invalid with the new device set)

#### 2011-08-03, 14:58:43 - Csaba Pinter
summary: changed from "If new device set is selected, then every toolbox should reset" to "Bug: If new device set is selected, then every toolbox should reset"

#### 2011-08-13, 18:04:31 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:04:43 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-16, 17:39:59 - Csaba Pinter
Updating tickets (#212, #234, #237, #208, #233)



#### 2011-08-16, 17:39:59 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-16, 17:41:08 - Csaba Pinter
summary: changed from "Bug: If new device set is selected, then every toolbox should reset" to "If new device set is selected, then every toolbox should reset"

#### 2011-08-18, 23:48:46 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-29, 19:36:57 - Csaba Pinter
(In r:657) Re #208: Status flag added to functions in PhantomRegistrationController; Calibrated config files deleted; Title and description corrected in config files

#### 2011-08-29, 19:38:40 - Csaba Pinter
(In r:658) Re #208: Toolboxes are reset when devices are disconnected

#### 2011-08-29, 19:59:15 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #209 Stylus has wrong transformation 
The stylus' position in the software does not match the position on the phantom - it appears further away.

#### 2011-08-04, 14:29:31 - Csaba Pinter
Automatic transfer of the calibration matrices is misleading. It says 'using session data' even if it comes from the original config file that contains an identity matrix. I'm going to make a fix so that the read transform is not transferred if its date is empty (when the program saves a matrix it fills the date, and the original config files contain empty dates)

#### 2011-08-04, 14:29:31 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-04, 16:31:30 - Csaba Pinter
(In r:515) Test configuration device set names have 'TEST' for easier distinction; Re #209: Completed calibrations save their results automatically into session configuration data

#### 2011-08-04, 16:32:55 - Csaba Pinter
(In r:516) Device set selector does not display old-style (separate) config files; Re #209 Detecting results in session configuration data fixed; Saving results changed (default file name offered but can be changed)

#### 2011-08-04, 17:53:28 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:35:48 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:48 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #210 TrackedFramePositionFinder cannot find base transform name after the tools were out of view
Sometimes after the tools were out of view for a couple of seconds, the application starts dumping error messages very quickly and indefinitely (see attached log)

#### 2011-08-04, 18:26:39 - Csaba Pinter
According to a discussion with Tomi, I'll implement a way to save raw buffer data from fCal when this error occurs so that we can reproduce it easily (or other errors we get).

#### 2011-08-04, 18:26:39 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-05, 18:50:42 - Csaba Pinter
* I asked Simrin reproduce the error with the raw buffer data saving feature ready. She managed to reproduce it running on SonixTouch, but saving the buffers after it failed (Unable to allocate memory for image sequence : Failed to allocate memory for image. [in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkTrackedFrameList.cxx(588)] - see \\\\image\\shared_data\\scratch\\fCalTesting\  est1 folder).
If we tried saving the buffer before this error, it worked.
* May be important: when Simrin ran the tests on my laptop, none of the usual errors came up (neither this, nor 
#212) out of more than ten tries, while on SonixTouch, the error was relatively easy to reproduce (she got the error about once out of 5)
* Easiest way to reproduce this on SonixTouch (so far): load a config file with already calibrated stylus and registered phantom. Start freehand calibration (skip temporal). After acquiring some images, hide the reference (eg. with your hand) for about 30 seconds, then continue acquisition. The application should throw errors continuously like in the attached log file.

#### 2011-08-05, 18:50:42 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-05, 18:50:42 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 17:54:26 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-10-03, 20:05:31 - Csaba Pinter
I could not reproduce this error. It may mean it was fixed by the latest timestamp filtering changes.

#### 2011-10-03, 20:05:31 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-10-03, 20:37:47 - Csaba Pinter
assigned_to_id: changed from "pinter" to null

#### 2011-10-14, 14:49:04 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:04 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-29, 14:04:00 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #211 Stylus Transform incorrect in 'Show Devices' function of Phantom Calibration
When Show Devices is being used the Stylus is not correctly oriented in the window. It appears further from the phantom then it should.

#### 2011-08-04, 16:12:28 - Csaba Pinter
It was probably caused by not loading the correct stylus calibration, but without log file attached or a more detailed description I cannot reproduce it.
Please attach a log file for each submitted bug

#### 2011-08-04, 16:12:28 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #212 Run time exception when Phantom Calibration is Reset and Rerecorded 
We ran through the application step by step. After we finished the phantom calibration, show devices was selected and deselected. Phantom calibration was then reset followed by resetting temporal calibration (this also occurs if temporal calibration is not reset). Start was selected from the Phantom Calibration and either during or after the recording was completed, a run time exception occurred. 

#### 2011-08-04, 18:52:58 - Mattea Welch
This also happens if show devices is not selected and deselected. You get the same run time error either during or after the second recording if you reset right after the first recording and don't show the devices. 

#### 2011-08-16, 17:39:59 - Csaba Pinter
Updating tickets (#212, #234, #237, #208, #233)



#### 2011-08-16, 17:39:59 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-16, 17:40:36 - Csaba Pinter
summary: changed from "Bug: Run time exception when Phantom Calibration is Reset and Rerecorded " to "Run time exception when Phantom Calibration is Reset and Rerecorded "

#### 2011-08-23, 19:21:45 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-29, 21:10:04 - Csaba Pinter
The exception did not happen after thorough testing.

(I assumed 'Phantom Calibration' means Freehand Calibration)

#### 2011-08-29, 21:10:04 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #213 Add tracked ultrasound acquisition functionality to fCal
* New toolbox named 'Acquisition', which handles the recording (Record, Clear buffer, Save, just like in TrackedUltrasoundCapturing)
* The volume reconstruction tab changes a little. It needs an input image and a volume reconstruction configuration just like now, but if we acquired data beforehand, the input image field offers the list of recently saved metafiles (done using Acquisition). The user can still select an input image from the hard drive instead of the just recorded image

#### 2011-08-05, 19:52:55 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-23, 19:36:08 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:36:08 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.4"

#### 2011-10-03, 21:06:55 - Csaba Pinter
A new idea:
A toolbar at the top of the toolboxes, that is always accessable, which can handle the recording and saving among other global tasks (like show devices).

#### 2011-10-12, 16:17:23 - Csaba Pinter
(In r:926) Re #213: VolumeReconstructionController deleted, its content moved to VolumeReconstructionToolbox (and vtkToolVisualizer takes care of displaying the results)

#### 2011-10-12, 16:22:44 - Csaba Pinter
(In r:927) Re #213: VolumeReconstructionToolbox is alive again. It is not working though, as there is a crash in vtkPasteSliceIntoVolume::InsertSliceThreadFunction function. First the scalar types do not match then there is a crash around the garbage collection (no decent call stack is present so I could only guess) (ticket #326)

#### 2011-10-13, 16:15:02 - Csaba Pinter
(In r:929) Fixed #326, Re #213: VolumeReconstructionToolbox in fCal works fine now

#### 2011-10-21, 15:45:25 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2011-10-28, 15:05:30 - Csaba Pinter
Enable sequence metafile saving functionality set the range, compression etc

#### 2011-11-08, 22:23:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-08, 22:26:40 - Csaba Pinter
description: changed from "* Volume Reconstruction too..." to "* New toolbox named 'Acquis..."

#### 2011-11-10, 23:42:37 - Csaba Pinter
(In r:1167) Re #213 - WIP - Capturing toolbox added (does not work properly yet)

#### 2011-11-11, 22:23:56 - Csaba Pinter
(In r:1171) Re #213: Bug fixed - vtkDataCollector::GetTrackedFrameList added no frames when the maxNumberOfFrames was set to -1 (which is the default value and means that all frames must be added)

#### 2011-11-11, 22:24:25 - Csaba Pinter
(In r:1172) Re #213: Capturing toolbox in fCal is fully functional

#### 2011-11-11, 23:12:27 - Csaba Pinter
(In r:1173) Re #213: WIP Image name combobox added to Volume reconstruction toolbox

#### 2011-11-12, 01:38:15 - Andras Lasso
I've tested it with SonixTouch+Ascension and it seem to work! It's really impressive that you could implement all this in such a short time!

There were a few warnings (duplicate frames, recording cannot keep up with acquisition, ...) but I'm sure that it won't be to difficult to get rid of those.


#### 2011-11-12, 01:38:15 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-11-15, 22:19:07 - Csaba Pinter
(In r:1179) Re #213: Volume reconstruction toolbox works fine; Standardized comments in CommonWidgets

#### 2011-11-16, 16:49:10 - Csaba Pinter
(In r:1180) Re #213: Sampled tracked frame getter function (GetTrackedFrameListSampled) added to vtkDataCollector

#### 2011-11-16, 16:51:10 - Csaba Pinter
(In r:1181) Test #213: Instead of throwing away skipped frames after acquiring all available frames in CapturingToolbox in fCal, only the needed frames are recorded in the first place, thus reducing needed computation time; Image directory added as default location for saving reconstructed volumes

#### 2011-11-16, 16:51:10 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-11-16, 21:15:50 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #214 StatusIcon: don't use singleton 
This class is not a real singleton, so don't use it like that. 

You can create an PlusLogger::AddDisplayMessageCallbackFunction(DisplayMessageCallbackPtr cb) function with a list of m_DisplayMessageCallbackFunctions and send the messages to all instances. 



#### 2011-08-06, 16:14:19 - Csaba Pinter
assigned_to_id: changed from "pinter" to null

#### 2011-08-08, 14:24:45 - Csaba Pinter
Yep, it was ugly, sorry about that...it was the quickest way to do that in a hurry...

It could store all the instances and call the proper function for each from the static callback function.

#### 2011-08-13, 18:04:13 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 20:33:48 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-25, 22:12:13 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-25, 22:24:44 - Csaba Pinter
(In r:639) Re #214: PlusLogger is now sub-class of vtkObject. It invokes events for displaying log messages (eg. via StatusIcon)

#### 2011-08-25, 22:25:50 - Csaba Pinter
(In r:640) Fixed #214: StatusIcon is not semi-singleton class any more. It adds an observer to PlusLogger, that invokes an event, whose listener calls the AddMessage function with the proper parameters.

#### 2011-08-25, 22:25:50 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #215 StatusIcon: After opening the statusIcon widget change the icon back to green
If we change the status icon back to green after we open it, than user will be notified again if error happens (like in Slicer). 
Also, we could display a balloon if we get an ERROR - TBD. 

#### 2011-08-15, 17:44:02 - Csaba Pinter
Or maybe we can add a 'Reset' button to it when we have the functionality mentioned in #88 (the toggle possibility), and so resetting would not be automatic, the user could decide instead

#### 2011-08-23, 19:29:07 - Csaba Pinter
* Show window on click instead of hover (change to green)
* No line wrap (vertical and also horizontal scrollbar)


#### 2011-08-23, 19:29:07 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:29:07 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-23, 19:29:19 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 19:29:33 - Csaba Pinter
component_id: changed from "None" to "PlusApp-CommonWidgets"

#### 2011-08-26, 18:48:36 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-26, 19:36:36 - Csaba Pinter
(In r:650) Fixed #215: StatusIcon now appears on left mouse button click instead of hover and disappears the same way or closing the window. The window is movable and resizable. The text editor does not wrap the lines

#### 2011-08-26, 19:36:36 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #216 Setup Terason US machine with the laptop and frame grabber
Setup test environment in 757 with the bucket 

#### 2011-08-12, 15:10:47 - Csaba Pinter
status: changed from "New" to "Fixed"


## #217 Add wires to iCalB 1.0 demo phantom 
The phantom is on Tomi's desk at 747 

#### 2011-08-12, 02:10:24 - Tamas Heffter
status: changed from "New" to "Fixed"


## #218 Unified config file for frame grabber and CmsTracker
Create configuration file for Terason (frame grabber) + black stepper (like PlusLib\\data\\ConfigFiles\\PlusConfiguration_SonixTouch_BlackTargetGuideStepper_iCal_1.0.xml)

#### 2011-08-07, 17:05:29 - Tamas Heffter
assigned_to_id: changed from "thomasckr" to null

#### 2011-08-08, 14:31:33 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-08, 14:31:33 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-08, 15:58:28 - Csaba Pinter
(In r:540) Re #218, Re #219: Files have been created. To do: check input image orientation (it is UF now like with SonixTouch), measure LocalTimeOffset, refine segmentation parameters;  Indentation fixed in some other configuration files

#### 2011-08-11, 15:29:14 - Csaba Pinter
(In r:551) Re #218, Re #219: Framegrabber properties fixed in config files (calibration still has to be checked); Calibration tests fixed

#### 2011-08-12, 14:12:38 - Csaba Pinter
(In r:565) Fixed #218, Re #219: Config file for Terason and CMS stepper works; number of images to acuired parameter increased from test value to final

#### 2011-08-12, 14:12:38 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #219 Unified config file for frame grabber and Civco stepper
Create configuration file for Terason (frame grabber) + civco stepper (like PlusLib\\data\\ConfigFiles\\PlusConfiguration_SonixTouch_CivcoStepper_iCal_1.0.xml)

#### 2011-08-07, 17:05:36 - Tamas Heffter
assigned_to_id: changed from "thomasckr" to null

#### 2011-08-08, 14:31:27 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-08, 14:31:27 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-08, 15:58:28 - Csaba Pinter
(In r:540) Re #218, Re #219: Files have been created. To do: check input image orientation (it is UF now like with SonixTouch), measure LocalTimeOffset, refine segmentation parameters;  Indentation fixed in some other configuration files

#### 2011-08-09, 13:47:50 - Tamas Heffter
It should be MF orientation to avoid letters flipping. We need to add another wire to the phantom to make sure it's in the correct orientation (the user can easily change the image orientation from the US console). 

#### 2011-08-11, 15:29:14 - Csaba Pinter
(In r:551) Re #218, Re #219: Framegrabber properties fixed in config files (calibration still has to be checked); Calibration tests fixed

#### 2011-08-12, 14:12:38 - Csaba Pinter
(In r:565) Fixed #218, Re #219: Config file for Terason and CMS stepper works; number of images to acuired parameter increased from test value to final

#### 2011-08-12, 22:21:38 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #220 Test iCalBrachy with SonixTouch and black target guide stepper in REALTIME mode


#### 2011-08-09, 19:44:02 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-09, 19:44:02 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-10, 15:48:23 - Csaba Pinter
(In r:546) Re #220: Error check and ModelTemplate.xml fix; Correct config files

#### 2011-08-10, 21:22:38 - Csaba Pinter
iCalBrachy works well under Windows XP. Under Windows 7 the Serial2USB adaptor does not work properly (see #154)
There are some bugs though to be fixed (#233 and #234).

#### 2011-08-10, 21:22:38 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #221 Test iCalBrachy with SonixTouch and Civco stepper in REALTIME mode


#### 2011-08-13, 18:06:21 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:21 - Csaba Pinter
status: changed from "New" to "Fixed"


## #222 Test iCalBrachy with Terason and black target guide stepper in REALTIME mode


#### 2011-08-11, 17:57:31 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-11, 17:57:31 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-11, 20:52:31 - Csaba Pinter
(In r:553) Re #222: Updated config file for framegrabber+Terason
Increased max rotation speed to 10deg/sec

#### 2011-08-11, 20:57:47 - Csaba Pinter
(In r:554) Re #222: Renamed framegrabber to Terason framegrabber

#### 2011-08-11, 23:14:20 - Csaba Pinter
(In r:559) Re #222: Removed 'unified' prefix from the name and description in the rest of the config files

#### 2011-08-13, 18:06:21 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:21 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #223 Test iCalBrachy with Terason and Civco stepper in REALTIME mode


#### 2011-08-13, 18:06:21 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:21 - Csaba Pinter
status: changed from "New" to "Fixed"


## #224 Add the latest iCalB 1.0 stl file to repository
 Need to add the latest iCalB 1.0 stl file to repository (the one has letters on the front of the phantom) to iCALBrachy\\docs\\CAD\\Phantom\\iCalB-1.0 

#### 2011-08-08, 14:39:23 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-08, 14:39:23 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-08, 16:00:10 - Csaba Pinter
Carolyn in HMRC has the final STL only (because she was the one who put the letters on in the end). Once she sends Thomas the file, I'll add it to SVN

#### 2011-08-08, 16:37:45 - Csaba Pinter
Added in revision 49

#### 2011-08-08, 16:37:45 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #225 Register iCalB 1.0 phantom model to phantom origin
We should compute the iCalB 1.0 phantom model to phantom transform (Top left tiny hole on the phantom is the origin)
Add the computed transforms to the unified configuration file

#### 2011-08-08, 14:39:36 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-08, 14:39:36 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-08, 16:00:41 - Csaba Pinter
We need the final STL to be able to register properly

#### 2011-08-11, 20:46:32 - Csaba Pinter
1 0 0  0.7
0 0 -1 48.6
0 1 0  51.3

#### 2011-08-11, 20:46:32 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-08-11, 20:47:10 - Csaba Pinter
file:av1MlsXfSr4kAeeJe5cbCb: Model2Phantom transform TFM file

#### 2011-08-11, 20:47:10 - Csaba Pinter
Attachment added: "Model2PhantomTransform.tfm"

#### 2011-08-11, 20:47:11 - Csaba Pinter
file:awpidqXfSr4kAeeJe5cbCb: Recorded fiducial list

#### 2011-08-11, 20:47:11 - Csaba Pinter
Attachment added: "Recorded.fcsv"

#### 2011-08-11, 20:47:11 - Csaba Pinter
file:awxdzKXfSr4kAeeJe5cbCb: Defined fiducial list

#### 2011-08-11, 20:47:11 - Csaba Pinter
Attachment added: "Defined.fcsv"

#### 2011-08-11, 21:27:46 - Csaba Pinter
(In r:556) Fixed #225: Proper Model2Phantom transforms added to configuration files using the iCalB phantom; 'Unified' prefix removed from configuration file names and descriptions


## #226 iCalBrachy temporal calibration timestamp filtering problem
The temporal calibration seems to have some problem because of the timestamp filtering (need more investigation)

#### 2011-08-11, 23:07:15 - Andras Lasso
(In r:558) Fixed #226: reduced MinFrameThreshold from 200 to 10. Max difference was about 50, and 200 was the threshold, so the video change was not detected.
Reduced synchronization acquisition time from 30sec to 15sec, as it was not possible to save 30sec video data to file and enough synchronization points can be done in 15 seconds.

#### 2011-08-11, 23:07:15 - Andras Lasso
status: changed from "New" to "Fixed"


## #227 iCalBrachy stepper initialization has timestamp filtering warnings
During stepper initialization we have a few lines of warnings -> timestamp filtering again (should we just hide these messages?)

#### 2011-08-11, 20:35:48 - Andras Lasso
(In r:552) Fixed #227: Verified the warnings and they are valid (the timestamps are inaccurate and so the item shall be ignored) but it may be normal to happen sometimes. Therefore, modified the logging to just log it as debug information and not as error/warning.
Fixed synchronization start time computation. The frame corresponding to the computed start time was not available anymore in the buffer (due to some inaccuracy in estimating the necessary buffer size). Use just the frames that are actually in the buffer to avoid having this error.
Fixed a couple of other warning messages.

#### 2011-08-11, 20:35:48 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-08-11, 21:07:01 - Andras Lasso
(In r:555) Fixed #227: Committed missing modification


## #228 Tap the two mounting holes of iCalB 1.0 phantom to affix the stainless poles to mount the phantom onto the stepper
To tap the two mounting holes of iCalB 1.0 phantom with the standard 10-32' NF tapper chamfer tap.  The tap will make threads to affix the mounting poles to secure the phantom onto the stepper.
 
Will need to visit the Mechanical Workshop of the Department of Mechanical and Material Engineering to borrow the tools for the job.

- Thomas


#### 2011-08-12, 02:10:44 - Tamas Heffter
status: changed from "New" to "Fixed"


## #229 Test ticket for checking watchers' ticket rights
If this appears, watchers now have the right to submit (and edit) tickets

#### 2011-08-09, 13:24:30 - perklab_dashboard
If this appears, watchers have the rights to edit

#### 2011-08-09, 13:24:30 - perklab_dashboard
component_id: changed from "None" to "PlusLib"

#### 2011-08-09, 13:24:30 - perklab_dashboard
description: changed from "If this appears, watchers n..." to "If this appears, watchers n..."

#### 2011-08-09, 13:24:30 - perklab_dashboard
summary: changed from "Test ticket for checking watchers' rights" to "Test ticket for checking watchers' ticket rights"

#### 2011-08-09, 13:24:30 - perklab_dashboard
status: changed from "New" to "Accepted"

#### 2011-08-09, 13:24:58 - perklab_dashboard
If this appears, watchers have the right to set to invalid

#### 2011-08-09, 13:24:58 - perklab_dashboard
status: changed from "Accepted" to "Invalid"

#### 2011-08-09, 13:25:12 - perklab_dashboard
assigned_to_id: changed from null to "perklab_anonymous"

#### 2011-08-09, 13:25:12 - perklab_dashboard
status: changed from "Invalid" to "Accepted"

#### 2011-08-09, 13:28:35 - Csaba Pinter
Summary: Watchers now have the rights to submit and edit, but not to delete tickets

#### 2011-08-09, 13:28:35 - Csaba Pinter
assigned_to_id: changed from "perklab_anonymous" to "pinter"

#### 2011-08-09, 13:28:35 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-09, 13:28:35 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #230 Add another wire to iCalB 1.0 to identify image orientation 
Using frame grabber, this is the only way we can identify the correct MF US image orientation 

#### 2011-08-12, 02:10:59 - Tamas Heffter
status: changed from "New" to "Fixed"


## #231 Refactoring of TrusCalibration and fCal projects
Some refactoring is needed in the TrusCalibration and fCal projects:
* vtkDataCollector reads from file and contains the configuration vtkXMLDataElement. It should be done by the applications (eg. so that VolumeReconstructor does not have to get its configuration from DataCollector)
* vtkDataCollector should have a thinner and more convenient public interface for acquisition
* fCal should be reorganized according to the ticket #192 (see details there)

A meeting needs to be scheduled after the AMS trip (Aug 23 the earliest)

#### 2011-08-09, 18:43:22 - Csaba Pinter
(In r:544) Re #192, Re #231: Branch created for the refactoring related to these tickets. The commited code does not compile! It was the first approach of reorganizing fCal and it contains the main ideas

#### 2011-08-09, 18:43:22 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-13, 18:03:13 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 16:19:34 - Csaba Pinter
Temporary note for the meeting - link to my architecture plan:
http://dl.dropbox.com/u/3143581/fCal_Architecture_2.0.pptx

#### 2011-09-06, 15:25:20 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-14, 20:56:56 - Csaba Pinter
(In r:734) Re #231, Re #192: New architecture created for fCal: the TrusCalibration/*Controller classes and so the AbstractToolboxController class deleted, algorithms created instead of them (vtkPivotCalibrationAlgo and vtkPhantomRegistrationAlgo; vtkFreehandCalibrationController remained until refactoring the calibration code - this is why progress and segmented point visualization does not work during calibration)

#### 2011-09-14, 20:59:04 - Csaba Pinter
(In r:735) Re #231, Fixed #192: New architecture created for fCal: vtkToolVisualizer is responsible for all 3D visualizations instead of *Controller classes; AbstractToolbox moved to app; *Toolbox classes do the whole job now (handling events, state, calling the algo classes)

#### 2011-09-14, 20:59:55 - Csaba Pinter
(In r:736) Re #231: Working branch not needed any more

#### 2011-09-14, 21:12:13 - Csaba Pinter
(In r:737) Re #231: Comments added

#### 2011-09-14, 21:12:22 - Csaba Pinter
(In r:738) Re #231: Comments added

#### 2011-09-23, 22:07:04 - Csaba Pinter
Transform name changes in the TRUS probe calibration code (for the record):
* TransformImageToTemplate -> SAME
* TransformImageHomeToUserImageHome -> TransformImageToUserImage
* TransformUserImageHomeToProbeHome -> TransformUserImageToProbe
* TransformProbeHomeToProbe -> TransformProbeToReference
* TransformProbeToUserImage -> DELETED
* TransformUserImageToImage -> DELETED
* TransformProbeHomeToTemplateHolderHome -> TransformReferenceToTemplateHolderHome
* TransformTemplateHolderHomeToTemplateHome -> TransformTemplateHolderToTemplate
* TransformTemplateHolderHomeToPhantomHome -> TransformTemplateHolderToPhantom
* TransformTemplateHolderHomeToTemplateHolder -> DELETED
* TransformTemplateHomeToTemplate -> SAME

#### 2011-09-24, 18:25:33 - Csaba Pinter
(In r:801) Re #231: Remove unused code from Phantom and BrachyTRUSCalibrator; Changed system log file output to LOG_DEBUG; Changed try-catch to LOG_ERROR and return

#### 2011-09-24, 18:54:29 - Csaba Pinter
(In r:803) Re #231: EnableSystemLog memners deleted (from config files too) since it will be determined by the verbose level; USImageFrameOriginInPixels member deleted from Phantom class (it was only used for the center of rotation in iCal which already had a CenterOfRotationPx member in vtkCalibrationController

#### 2011-09-24, 19:02:48 - Csaba Pinter
(In r:804) Re #231: Removed second interface for addDataPositionsPerImage and addValidationPositionsPerImage functions from BrachyTRUSCalibrator since they were not used anywhere and they were almost identical to the functions with the other parameter list

#### 2011-09-24, 19:54:47 - Csaba Pinter
(In r:805) Re #231: Further clarification and shortening of BrachyTRUSCalibrator; IO function moved to vtkProbeCalibrationControllerIO

#### 2011-09-26, 14:38:48 - Csaba Pinter
(In r:807) Re #231: Further thinning of Phantom class (removing unnecessary parts)

#### 2011-09-26, 15:00:03 - Csaba Pinter
(In r:808) Re #231: Further thinning of Phantom class (removing unnecessary parts)

#### 2011-09-26, 16:00:28 - Csaba Pinter
(In r:809) Re #231: Further thinning of Phantom class (removing unnecessary parts)

#### 2011-09-26, 17:49:44 - Csaba Pinter
(In r:810) Re #231: Changing cerr to Plus log in BrachyTRUSCalibrator; Further thinning of Phantom class (removing unnecessary parts)

#### 2011-09-26, 21:17:42 - Csaba Pinter
(In r:811) Re #231: Moved contents of BrachyTRUSCalibrator and Phantom classes to vtkCalibrationController; the now unnecessary files deleted

#### 2011-09-27, 15:59:21 - Csaba Pinter
(In r:816) Fixed #42, Re #231: Calibrator uses millimeter everywhere now; Baselines had to be replaced with their mm variants; Unused get function deleted from vtkCalibrationController; Notification about missing last used device set in application config file changed to debug message

#### 2011-09-27, 20:25:24 - Csaba Pinter
(In r:823) Re #231: Removed code that logged useless data; Other logging clarified

#### 2011-10-07, 19:23:59 - Csaba Pinter
(In r:904) Change default frame transform names in calibration baselines so that the tests work until #310 and #311 are done; Re #231: Unused members mUSBeamWidthEuclideanMagAtDataPositions and mUSBeamWidthEuclideanMagAtValidationPositions removed from vtkCalibrationController class; Computing beamwidth weight became simpler and the code for it is in one function now

#### 2011-10-11, 19:15:05 - Csaba Pinter
(In r:920) Re #231: DoOfflineCalibration function moved from vtkCalibrationController to the (vtkFreehandCalibrationTest)

#### 2011-10-12, 14:37:11 - Csaba Pinter
(In r:925) Re #231: Return value check instead of try-catch in vtkCalibrationController

#### 2011-10-13, 22:04:46 - Csaba Pinter
(In r:935) Re #231: Parallel method for calibration implemented in vtkCalibrationController. Calibrate function gets two already segmented tracked frame lists, and it uses them to calibrate. AddTrackedFrameData and PopulateSegmentedFiducialsToDataContainer functions will not needed any more after this method is used in every application and test that calibrates

#### 2011-10-13, 22:05:54 - Csaba Pinter
(In r:936) Re #231: New calibration method implemented in fCal. It acquires the tracked frames, segments them, and passes the two (validation and calibration) tracked frame lists to the calibrator (instead of calling AddTrackedFrameData for each acquired frame and let the vtkCalibrationController segment them)

#### 2011-10-14, 14:49:04 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:04 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-14, 20:45:15 - Csaba Pinter
(In r:940) Re #231: vtkFreehandCalibrationTest changed to use the new calibration (load and segment the tracked frame lists and just add those to the vtkCalibrationController); The baseline had to be changed because now we use all images in the sequence metafiles, not just the specified number (I tested the matching by cropping the result tracked frame lists and adding them to the calibrator, and it gave exactly the same result); UltrasoundImageDimensions was removed from the result according to our discussion with Tomi (that value is not automatically set by the calibrator any more and checking it explicitly does not really make sense);

#### 2011-10-14, 20:45:41 - Csaba Pinter
(In r:941) Re #231: Error check added for the calibration function call

#### 2011-10-14, 22:01:42 - Csaba Pinter
(In r:942) Re #231: vtkUSCalibrationControllerTest1 changed to use the new calibration (load and segment the tracked frame lists and just add those to the vtkCalibrationController); The baseline had to be changed because now we use all images in the sequence metafiles, not just the specified number (I tested the matching by cropping the result tracked frame lists and adding them to the calibrator, and it gave exactly the same result)

#### 2011-10-14, 22:50:24 - Csaba Pinter
(In r:943) Re #231: resetDataContainers function was made public for iCal

#### 2011-10-19, 14:05:59 - Csaba Pinter
(In r:961) Re #231: Unused AddPositionsPerImage function (that used positions instead of a TrackedFrame) removed from vtkCalibrationController

#### 2011-10-20, 20:19:47 - Csaba Pinter
(In r:967) Re #231: vtkCalibrationController::Calibrate function created that uses only a range from the input tracked frame lists

#### 2011-10-25, 14:59:37 - Tamas Heffter
(In r:981) re #231: Removed unused functions from vtkCalibrationController and updated config files 
virtual PlusStatus GetWirePosInTemplateCoordinate( int wireNum, double* wirePosInTemplate ); 
PlusStatus GenerateProbeCalibrationReport( vtkHTMLGenerator* htmlReport, vtkGnuplotExecuter* plotter, const char* gnuplotScriptsFolder);
virtual void SaveSegmentedWirePositionsToFile(); 
char* CalibrationSegWirePosInfoFileName; 
bool EnableSegmentedWirePositionsSaving; 

#### 2011-10-25, 15:33:33 - Tamas Heffter
(In r:982) re #231: Removed calibration data saving from calibration controller (the applications should control the data saving instead of the algorithm)
Removed unused flags from config files.

#### 2011-10-26, 21:07:55 - Csaba Pinter
(In r:1008) Re #231: Unused member SegmentedFrameContainer removed

#### 2011-10-27, 16:05:40 - Csaba Pinter
(In r:1013) Re #231: Unused members and functions removed from vtkCalibrationController (ones related to ImageDataInfoContainer, TrackedFrameListContainer and configuration data); fCal-related config file versions invreased to 1.3, removed unused elements and added fCal application configuration

#### 2011-10-27, 16:06:36 - Csaba Pinter
(In r:1014) Re #231: fCal application configuration is read by the toolboxes (number of needed data for freehand and stylus calibration)

#### 2011-10-27, 17:14:12 - Csaba Pinter
(In r:1016) Re #231: ReadFreehandCalibrationConfiguration function removed from vtkCalibrationController; ImageDataType enum removed from PlusCommon.h

#### 2011-10-27, 17:15:12 - Csaba Pinter
(In r:1017) Re #231: Read calibration result in FreehandCalibrationToolbox; ReadCalibrationConfiguration changed to ReadSegmentationParameters in FreehandCalibrationToolbox because nothing else remained in calibration and it is easier to understand

#### 2011-10-27, 21:45:39 - Csaba Pinter
(In r:1024) Re #231: Pattern recognition removed from vtkCalibrationController. Instead, the vector of NWires are passed to the calibration function. The tests are changed accordingly

#### 2011-10-27, 21:46:16 - Csaba Pinter
(In r:1025) Re #231: Changes in fCal due to removal of pattern recognition removed from vtkCalibrationController. Instead, the vector of NWires are passed to the calibration function.

#### 2011-10-27, 21:55:57 - Csaba Pinter
(In r:1026) Re #231: vtkCalibrationController renamed to vtkProbeCalibrationAlgo

#### 2011-10-27, 21:56:07 - Csaba Pinter
(In r:1027) Re #231: vtkCalibrationController renamed to vtkProbeCalibrationAlgo

#### 2011-10-27, 22:05:28 - Csaba Pinter
Added tickets about further cleaning up (#351, #352), but refactoring is now ready

#### 2011-10-27, 22:05:28 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #232 Integrate TemplateModel config file
TemplateModel configuration file is still a separate file, and its path is read from the unified XML (USCalibrationConfig/ProbeCalibration element). It would be better if it would be a part of the new unified structure and not just referenced by path and filename

#### 2011-08-13, 18:03:46 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #233 iCalBrachy crashes if does not find ModelTemplate.xml


#### 2011-08-13, 17:51:58 - Csaba Pinter
iCal should load it after selecting through GUI (if not selected then don't display); also remove from USCalibration element of the unified config

#### 2011-08-13, 17:52:09 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-16, 17:39:59 - Csaba Pinter
Updating tickets (#212, #234, #237, #208, #233)



#### 2011-08-16, 17:39:59 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-16, 17:41:17 - Csaba Pinter
summary: changed from "Bug: iCalBrachy crashes if does not find ModelTemplate.xml" to "iCalBrachy crashes if does not find ModelTemplate.xml"

#### 2011-08-23, 20:34:20 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-23, 20:35:41 - Csaba Pinter
Add the content of this file into the unified PlusConfiguration files (related to iCalBrachy)

#### 2011-08-25, 22:04:20 - Tamas Heffter
(In r:638) re #267: Remove visualization component from calibration controller 
Fixed #233: Template model integration into configuration file 

#### 2011-08-25, 22:04:20 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #234 Half of ImageCanvas becomes white in iCalBrachy
I don't know how to reproduce it but I submit this ticket to be aware of this issue.

#### 2011-08-10, 21:49:47 - Tamas Heffter
Can it be the iCal phantom STL model? 

#### 2011-08-10, 22:30:20 - Csaba Pinter
I don't think so, because the white part is only on the image canvas, it is not like another object was in the front of it.

I forgot to write here, but several seconds after it happened, the application crashed. Andras told that it looks like a memory allocation issue (he was there, saw it).

#### 2011-08-13, 14:46:12 - Andras Lasso
This problem may be due to failed thread creation:

The vtkImageFlip creates threads for the threaded image algorithm every time in UsImageConverterCommon::ConvertItkImageToVtkImage(const ImageType::Pointer& inFrame, vtkImageData* outFrame) function:
Do you think we need to change this? Any idea? Should we just flip the image by copying the memory? Can you investigate this? 

  // VTK convention is for the image voxel index (0,0,0) to be the lower-left corner of the image, so we need to flip it
  vtkSmartPointer<vtkImageFlip> flipY = vtkSmartPointer<vtkImageFlip>::New(); 
  flipY->SetFilteredAxis(1); 
  flipY->SetInput( importer->GetOutput() ); 
  flipY->Update(); 


Here it is the call stack: 

>  vtkCommon.dll!vtkMultiThreader::SingleMethodExecute()  Line 285  C++
   vtkFiltering.dll!vtkThreadedImageAlgorithm::RequestData(vtkInformation * request=0x246d1df0, vtkInformationVector * * inputVector=0x703d23b8, vtkInformationVector * outputVector=0x23ca1fd0)  Line 291 + 0xe bytes  C++
   vtkFiltering.dll!vtkImageAlgorithm::ProcessRequest(vtkInformation * request=0x246d1df0, vtkInformationVector * * inputVector=0x703d23b8, vtkInformationVector * outputVector=0x23ca1fd0)  Line 94 + 0x1e bytes  C++
   vtkFiltering.dll!vtkExecutive::CallAlgorithm(vtkInformation * request=0x246d1df0, int direction=1, vtkInformationVector * * inInfo=0x703d23b8, vtkInformationVector * outInfo=0x23ca1fd0)  Line 747 + 0x21 bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::ExecuteData(vtkInformation * request=0x246d1df0, vtkInformationVector * * inInfo=0x703d23b8, vtkInformationVector * outInfo=0x23ca1fd0)  Line 507 + 0x1d bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::ProcessRequest(vtkInformation * request=0x246d1df0, vtkInformationVector * * inInfoVec=0x703d23b8, vtkInformationVector * outInfoVec=0x23ca1fd0)  Line 279 + 0x1e bytes  C++
   vtkFiltering.dll!vtkStreamingDemandDrivenPipeline::ProcessRequest(vtkInformation * request=0x246d1df0, vtkInformationVector * * inInfoVec=0x703d23b8, vtkInformationVector * outInfoVec=0x23ca1fd0)  Line 202 + 0x14 bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::UpdateData(int outputPort=0)  Line 449 + 0x28 bytes  C++
   vtkFiltering.dll!vtkStreamingDemandDrivenPipeline::Update(int port=0)  Line 246 + 0x1c bytes  C++
   vtkFiltering.dll!vtkExecutive::Update()  Line 315 + 0x11 bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::Update()  Line 313  C++
   vtkFiltering.dll!vtkStreamingDemandDrivenPipeline::Update()  Line 227  C++
   vtkFiltering.dll!vtkAlgorithm::Update()  Line 1167 + 0x1a bytes  C++
   vtkPlusCommon.dll!UsImageConverterCommon::ConvertItkImageToVtkImage(const itk::SmartPointer<itk::Image<unsigned char,2> > & inFrame={...}, vtkImageData * outFrame=0x0afd7ed8)  Line 449 + 0x29 bytes  C++
   vtkDataCollection.dll!vtkDataCollector::RequestData(vtkInformation * __formal=0x0cdcc940, vtkInformationVector * * inputVector=0x0cd34578, vtkInformationVector * outputVector=0x0cd72ab8)  Line 1443 + 0x3b bytes  C++
   vtkFiltering.dll!vtkImageAlgorithm::ProcessRequest(vtkInformation * request=0x0cdcc940, vtkInformationVector * * inputVector=0x0cd34578, vtkInformationVector * outputVector=0x0cd72ab8)  Line 94 + 0x1e bytes  C++
   vtkFiltering.dll!vtkExecutive::CallAlgorithm(vtkInformation * request=0x0cdcc940, int direction=1, vtkInformationVector * * inInfo=0x0cd34578, vtkInformationVector * outInfo=0x0cd72ab8)  Line 747 + 0x21 bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::ExecuteData(vtkInformation * request=0x0cdcc940, vtkInformationVector * * inInfo=0x0cd34578, vtkInformationVector * outInfo=0x0cd72ab8)  Line 507 + 0x1d bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::ProcessRequest(vtkInformation * request=0x0cdcc940, vtkInformationVector * * inInfoVec=0x0cd34578, vtkInformationVector * outInfoVec=0x0cd72ab8)  Line 279 + 0x1e bytes  C++
   vtkFiltering.dll!vtkStreamingDemandDrivenPipeline::ProcessRequest(vtkInformation * request=0x0cdcc940, vtkInformationVector * * inInfoVec=0x0cd34578, vtkInformationVector * outInfoVec=0x0cd72ab8)  Line 202 + 0x14 bytes  C++
   vtkFiltering.dll!vtkDemandDrivenPipeline::UpdateData(int outputPort=0)  Line 449 + 0x28 bytes  C++
   vtkFiltering.dll!vtkDataObject::UpdateData()  Line 1088 + 0x1b bytes  C++
   vtkRendering.dll!vtkImageActor::RenderOpaqueGeometry(vtkViewport * viewport=0x0ae2a5d8)  Line 253 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderer::UpdateGeometry()  Line 632 + 0x2e bytes  C++
   vtkRendering.dll!vtkOpenGLRenderer::DeviceRender()  Line 247 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderer::Render()  Line 345 + 0x12 bytes  C++
   vtkRendering.dll!vtkRendererCollection::Render()  Line 51 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderWindow::DoStereoRender()  Line 710  C++
   vtkRendering.dll!vtkRenderWindow::DoFDRender()  Line 676 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderWindow::DoAARender()  Line 563 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderWindow::Render()  Line 376 + 0x12 bytes  C++
   vtkRendering.dll!vtkRenderWindowInteractor::Render()  Line 159 + 0x18 bytes  C++
   QVTK.dll!QVTKWidget::paintEvent(QPaintEvent * __formal=0x015eacf4)  Line 464 + 0x12 bytes  C++
   QtGuid4.dll!QWidget::event(QEvent * event=0x015eacf4)  Line 8347  C++
   QVTK.dll!QVTKWidget::event(QEvent * e=0x015eacf4)  Line 397 + 0xf bytes  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x0afa9d60, QEvent * e=0x015eacf4)  Line 4445 + 0x11 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x0afa9d60, QEvent * e=0x015eacf4)  Line 4410 + 0x10 bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x0afa9d60, QEvent * event=0x015eacf4)  Line 732 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::sendSpontaneousEvent(QObject * receiver=0x0afa9d60, QEvent * event=0x015eacf4)  Line 218 + 0x38 bytes  C++
   QtGuid4.dll!QWidgetPrivate::drawWidget(QPaintDevice * pdev=0x0afa9d68, const QRegion & rgn={...}, const QPoint & offset={...}, int flags=3, QPainter * sharedPainter=0x00000000, QWidgetBackingStore * backingStore=0x00000000)  Line 5433 + 0xe bytes  C++
   QtGuid4.dll!QWidgetPrivate::repaint_sys(const QRegion & rgn={...})  Line 1615  C++
   QtGuid4.dll!QWidgetPrivate::syncBackingStore()  Line 1809  C++
   QtGuid4.dll!QWidget::event(QEvent * event=0x1c3492e0)  Line 8494  C++
   QVTK.dll!QVTKWidget::event(QEvent * e=0x1c3492e0)  Line 397 + 0xf bytes  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x0afa9d60, QEvent * e=0x1c3492e0)  Line 4445 + 0x11 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x0afa9d60, QEvent * e=0x1c3492e0)  Line 4410 + 0x10 bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x0afa9d60, QEvent * event=0x1c3492e0)  Line 732 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::sendEvent(QObject * receiver=0x0afa9d60, QEvent * event=0x1c3492e0)  Line 215 + 0x39 bytes  C++
   QtCored4.dll!QCoreApplicationPrivate::sendPostedEvents(QObject * receiver=0x00000000, int event_type=0, QThreadData * data=0x0ae217a0)  Line 1373 + 0xd bytes  C++
   QtCored4.dll!qt_internal_proc(HWND__ * hwnd=0x000203f8, unsigned int message=1025, unsigned int wp=0, long lp=0)  Line 506 + 0x10 bytes  C++
   user32.dll!7e418734()   
   [Frames below may be incorrect and/or missing, no symbols loaded for user32.dll]  
   user32.dll!7e418816()   
   user32.dll!7e4189cd()   
   user32.dll!7e418a10()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 807  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 1170 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 925  C++
   iCalBrachy.exe!iCalBrachyMainWindow::UpdateWidgets()  Line 372 + 0x1f bytes  C++
   iCalBrachy.exe!iCalBrachyMainWindow::qt_metacall(QMetaObject::Call _c=InvokeMetaMethod, int _id=0, void * * _a=0x015ed64c)  Line 130 + 0x8 bytes  C++
   QtCored4.dll!QMetaObject::metacall(QObject * object=0x015efcf0, QMetaObject::Call cl=InvokeMetaMethod, int idx=31, void * * argv=0x015ed64c)  Line 238  C++
   QtCored4.dll!QMetaObject::activate(QObject * sender=0x0afbc670, const QMetaObject * m=0x67344b58, int local_signal_index=0, void * * argv=0x00000000)  Line 3272 + 0x27 bytes  C++
   QtCored4.dll!QTimer::timeout()  Line 134 + 0x12 bytes  C++
   QtCored4.dll!QTimer::timerEvent(QTimerEvent * e=0x015edc50)  Line 273  C++
   QtCored4.dll!QObject::event(QEvent * e=0x015edc50)  Line 1176  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x0afbc670, QEvent * e=0x015edc50)  Line 4445 + 0x11 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x0afbc670, QEvent * e=0x015edc50)  Line 3845 + 0x10 bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x0afbc670, QEvent * event=0x015edc50)  Line 732 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::sendEvent(QObject * receiver=0x0afbc670, QEvent * event=0x015edc50)  Line 215 + 0x39 bytes  C++
   QtCored4.dll!QEventDispatcherWin32Private::sendTimerEvent(int timerId=33554435)  Line 639 + 0x10 bytes  C++
   QtCored4.dll!qt_internal_proc(HWND__ * hwnd=0x000203f8, unsigned int message=275, unsigned int wp=33554435, long lp=0)  Line 498  C++
   user32.dll!7e418734()   
   user32.dll!7e418816()   
   user32.dll!7e4189cd()   
   user32.dll!7e418a10()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 807  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 1170 + 0x15 bytes  C++
   QtCored4.dll!QEventLoop::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 150  C++
   QtCored4.dll!QEventLoop::exec(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 201 + 0x2d bytes  C++
   QtCored4.dll!QCoreApplication::exec()  Line 1009 + 0x15 bytes  C++
   QtGuid4.dll!QApplication::exec()  Line 3720  C++
   iCalBrachy.exe!main(int argc=1, char * * argv=0x0ad3fee8)  Line 15 + 0x8 bytes  C++
   iCalBrachy.exe!__tmainCRTStartup()  Line 586 + 0x19 bytes  C
   iCalBrachy.exe!mainCRTStartup()  Line 403  C
   kernel32.dll!7c817077() 



#### 2011-08-13, 14:46:12 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-08-13, 14:46:12 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-08-14, 00:10:24 - Andras Lasso
It's a memory leak problem. Perfmon reports about 1.9GB virtual memory usage when the crash occurs.
It requires about 70 minutes continuous running (just connecting to CMS + framegrabber).

#### 2011-08-14, 04:49:07 - Tamas Heffter
(In r:575) re #234: Removed memory leak in logging (the string buffer was freezed instead of unfreezed, which caused memory leak when any message was logged)

#### 2011-08-16, 05:12:55 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2011-08-16, 15:28:35 - Andras Lasso
Pleaes let me know if you still experience this problem.

#### 2011-08-16, 15:28:35 - Andras Lasso
assigned_to_id: changed from "lassoan" to "heffter"

#### 2011-08-16, 17:39:59 - Csaba Pinter
Updating tickets (#212, #234, #237, #208, #233)



#### 2011-08-16, 17:39:59 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-16, 17:40:49 - Csaba Pinter
summary: changed from "Bug: Half of ImageCanvas becomes white in iCalBrachy" to "Half of ImageCanvas becomes white in iCalBrachy"

#### 2011-08-23, 17:29:41 - Tamas Heffter
During 3 days of demo at AMS we didn't experience this problem, so I close it as fixed. 

#### 2011-08-23, 17:29:41 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #235 Need to define error thresholds for calibration
Like LRE should be less than 1mm 
 

#### 2011-08-14, 04:34:02 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-08-15, 06:09:46 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #236 save calibration error for ImageToProbe calibration 
We have LREx and LREy for each wire, we need to save a common calibration error into config file


#### 2011-08-12, 03:21:27 - Tamas Heffter
(In r:560) Fixed #236: Calibration results saved to configuration file 

#### 2011-08-12, 03:21:27 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-08-12, 03:21:27 - Tamas Heffter
status: changed from "New" to "Fixed"


## #237 Image acquisition freezes in iCalBrachy
About every 2nd time, when Start button is clicked, the image freezes until cancelled and restarted. Before clicking Start, the image moves as anticipated (if the stepper translation is changed, eht image changes accordingly), but when the user clicks Start, it stops.

#### 2011-08-13, 18:03:02 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-14, 04:17:50 - Tamas Heffter
It can be the UI refreshing problem. Sometimes, in the progress bar notification event the process request call didn't process QTimer timeout events, therefore the UI won't refresh.  

#### 2011-08-16, 17:40:00 - Csaba Pinter
Updating tickets (#212, #234, #237, #208, #233)



#### 2011-08-16, 17:40:00 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-16, 17:40:58 - Csaba Pinter
summary: changed from "Bug: Image acquisition freezes in iCalBrachy" to "Image acquisition freezes in iCalBrachy"

#### 2011-08-23, 17:32:16 - Tamas Heffter
milestone_id: changed from "Release Plus-1.2.2 - Before AMS" to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 20:37:09 - Csaba Pinter
Add 'this' pointer to the function pointer, and call the refresh function from there

#### 2011-08-23, 20:37:09 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-21, 16:31:39 - Csaba Pinter
Moved to iCalBrachy

#### 2011-10-21, 16:31:39 - Csaba Pinter
status: changed from "New" to "Invalid"


## #238 Progress bar of Image to Probe calibration in iCalBrachy
It is misleading that the calibration and the validation has its own progress bar. It would be better if there was one (like (acquiredCalibrationFrames + acquiredValidationFrames) / (neededCalibrationFrames + neededValidationFrames)

#### 2011-08-13, 18:02:40 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:06:21 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:21 - Csaba Pinter
status: changed from "New" to "Fixed"


## #239 AMS Roadshow Schedule Aug 14-20, 2011
Confirm and generate the final, consolidated AMS Roadshow Schedule Aug 14-20, 2011.
- Shift the CIVCO demo to Thursday when CIVCO VP visits AMS.
- Pending confirmation from Clif about the availability of  Med Physicist(s) and Clinician(s). 

#### 2011-08-13, 18:02:21 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:06:22 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:22 - Csaba Pinter
status: changed from "New" to "Fixed"


## #240 Preparation of US Custom Documents and FedEx Shipping from Queen's to AMS
Prepare all US Custom Documents for FedEx Shipping from Queen's to AMS
1. Commercial Invoice
- This is to declare the commercial value of the equipment shipped to AMS.
2. Statement Regarding the Importation of Radio Frequency Devices Capable of Causing Harmful Interference.
- This is to certify the RF safe requirement in meeting the US RF Device Regulations (FCC744).
3. US Department of Homeland Security - Declaration of Free Entry
- This is to provide evidence that will allow free entry of the equipments to USA without Tax and Duties (so that we will not be charged for tax at US Custom).

Two boxes to be shipped by FedEx Express Priority USA:
- Picked by 3PM, Friday, Aug 12, 2011, at Queen's.
- Estimated delivery by 10AM, Monday, Aug 15, 2011, at AMS.

Note: the same set of forms need to be prepared when we returned to Canada, in order to avoid duties/taxes at re-entry.

- Thomas 

#### 2011-08-13, 18:02:13 - Csaba Pinter
milestone: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-13, 18:06:22 - Csaba Pinter
Updating tickets (#221, #222, #223, #239, #240, #48, #166, #44, #238)



#### 2011-08-13, 18:06:22 - Csaba Pinter
status: changed from "New" to "Fixed"


## #241 DeviceSetSelector widget: Disable connect/disconnect button until connected


#### 2011-08-12, 15:30:38 - Csaba Pinter
(In r:566) Fixed #241: Connect button stays disabled until connection succeeds or fails; description text changes accordingly to the last event

#### 2011-08-12, 15:30:38 - Csaba Pinter
status: changed from "New" to "Fixed"


## #242 Read velocity thresholds from config file 


#### 2011-08-12, 22:22:05 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-08-12, 22:20:32 - Csaba Pinter
(In r:568) Fixed #242: SpeedThresholdPositionMm and SpeedThresholdOrientationAngle attributes are read from vtkTrackedFrameList; added to config files; vtkTrackedFrameList::ValidateData returns the first time a validate subtask returns with false

#### 2011-08-12, 22:21:07 - Csaba Pinter
(In r:569) Re #242: TrackedUltrasoundCapturing reads config files for ctkTrackedFrameList


## #243 Rename ImageAcqusition element to ImageAcquisition in configuration files
It is only a typo

#### 2011-08-23, 19:32:50 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:32:50 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-23, 19:32:50 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 19:33:29 - Csaba Pinter
description: changed from "It is only a type-o" to "It is only a typo"

#### 2011-08-24, 15:55:49 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-08-24, 16:54:15 - Tamas Heffter
(In r:630) Fixed #243: Rename ImageAcqusition element to ImageAcquisition in configuration files

#### 2011-08-24, 16:54:15 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:51 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:51 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #244 Add icon to all calibration tool bar 
Before calibration, it can be a white sphere or something, just to emphasize the tool bar. 

#### 2011-08-14, 04:33:27 - Tamas Heffter
status: changed from "New" to "Fixed"


## #245 Fix report generation


#### 2011-08-15, 06:09:06 - Tamas Heffter
status: changed from "New" to "Fixed"


## #246 Add slider and open file dialog to view and save results page in OFFLINE mode
Display selected frames in Offline mode

#### 2011-08-13, 17:59:22 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-13, 17:59:22 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-14, 04:29:36 - Tamas Heffter
Fixed transform, need to test it on different data sets. 

#### 2011-08-14, 04:29:36 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-08-16, 15:58:26 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #247 Change baseline for iCal calibration tests
The current baseline sequence metafiles contain raw encoder values as ToolToTrackerTransform (which is not true) and do not contain real transformations

#### 2011-08-23, 19:32:09 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:32:09 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-08-23, 19:32:09 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-21, 16:29:46 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-21, 16:29:46 - Csaba Pinter
status: changed from "New" to "Invalid"


## #248 Add Refresh Folder button to DeviceSetSelectorWidget
Add a button (with a refresh icon) to the Device set selector, that refreshes the folder: parses the files in the currently selected directory again. It's good if we added or modified a config file in that directory

#### 2011-08-23, 19:30:07 - Csaba Pinter
Issue Type: changed from null to "Enhancement"

#### 2011-08-23, 19:30:07 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-26, 20:35:48 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-26, 20:37:28 - Csaba Pinter
(In r:653) Fixed #248: Refresh folder button added to DeviceSetSelectorWidget

#### 2011-08-26, 20:37:28 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #249 vtkAccurate timer hangs on tracking thread
During data collection, sometimes the tracking thread hangs in vtkAccurateTimer wait function at *SuspendThread(tHandle);*   line (screenshoot attached from visual studio)
The following output genereated because of this error: 

[ERROR]   [1450.695000]  Failed to get most recent timestamp from the buffer! [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1276)]
[ERROR]   [1450.699000]  Unable to get tracked frame from data collector! [in ..\\..\\..\\iCalBrachy\\src\\iCALDemo\\iCAL.cxx(265)]
[ERROR]   [1450.731000]  Failed to get video buffer timestamp from UID: 19914 [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1007)]
[ERROR]   [1450.736000]  Failed to get most recent timestamp from the buffer! [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1276)]
[ERROR]   [1450.741000]  Unable to get tracked frame from data collector! [in ..\\..\\..\\iCalBrachy\\src\\iCALDemo\\iCAL.cxx(265)]
[ERROR]   [1450.747000]  Failed to get video buffer timestamp from UID: 19914 [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1007)]
[ERROR]   [1450.751000]  Failed to get most recent timestamp from the buffer! [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1276)]

#### 2011-08-16, 15:25:26 - Andras Lasso
(In r:601) re #249: Added vtkAccurateTimerTest for testing vtkAccurateTimer delays and potential thread hangs

#### 2011-08-16, 15:26:31 - Andras Lasso
I've tried to reproduce the problem by calling AccurateTimer::Delay from 8 threads with different timeout values and there was no thread hangs in 6 hours.

Maybe the thread was not actually hanging (the delay is implemented by suspending the thread until the requested wait time is reached) or the hang is cause by some circular dependency or unlocked synchronization objects.

To be able to continue the investigation please let me know how to reproduce the problem.


#### 2011-08-16, 15:26:31 - Andras Lasso
assigned_to_id: changed from "lassoan" to "heffter"

#### 2011-08-16, 15:44:41 - Andras Lasso
(In r:602) re #249: Added vtkAccurateTimerTest for testing vtkAccurateTimer delays and potential thread hangs - added missing file

#### 2011-08-16, 17:32:40 - Andras Lasso
(In r:603) re #249: Added some more checks to vtkAccurateTimer to avoid thread hangs (if the thread is not yet suspended when wake-up is attempted then retry the wake-up later)

#### 2011-08-16, 17:35:12 - Andras Lasso
The timer may have been fixed by the additional checks. Please let me know if you observe thread hanging again.

#### 2011-08-16, 17:35:12 - Andras Lasso
status: changed from "New" to "Test"

#### 2011-08-16, 18:42:17 - Andras Lasso
(In r:605) re #249: Refined vtkAccurateTimerTest to see more information about potential root cause of test failures

#### 2011-08-23, 19:15:25 - Csaba Pinter
Issue Type: changed from null to "Bug"

#### 2011-08-23, 19:15:25 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-23, 19:15:25 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #250 Video and Tracking Data Acquisition Analysis gnuplot script crashes
Video Data Acquisition Analysis
Tracking Data Acquisition Analysis

#### 2011-08-17, 22:59:54 - Tamas Heffter
(In r:610) re #250: Video and Tracking Data Acquisition Analysis gnuplot script crashes


#### 2011-08-17, 22:59:54 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-08-18, 05:45:25 - Tamas Heffter
(In r:612) re #250: Video and Tracking Data Acquisition Analysis gnuplot script crashes
Added device set description and fainal calibration transformation parameters (scale, rotation, position) to report file 

#### 2011-08-18, 05:46:50 - Tamas Heffter
(In r:613) re #250: Video and Tracking Data Acquisition Analysis gnuplot script crashes
Added GetSelectedDeviceSetDescription function to DeviceSetSelectorWidget

#### 2011-08-18, 05:47:45 - Tamas Heffter
status: changed from "New" to "Fixed"


## #251 vtkUSCalibrationControllerTest_FrameGrabber test fails since 2011-08-15 morning
http://crunch.cs.queensu.ca/CDash/viewUpdate.php?buildid=1740

Test output
[ERROR]   [036.953000]  TransformUserImageHomeToProbeHome translation error is higher than expected: 2.6869 mm (threshold: 1 mm).  [in c:\\Users\\lasso\\devel\\PlusContinuous-bin\\PlusLib\\src\  rusCalibration\  esting\\vtkUSCalibrationControllerTest1.cxx(422)]
[ERROR]   [036.953000]  TransformProbeHomeToTemplateHolderHome translation error is higher than expected: 2.68695 mm (threshold: 1 mm).  [in c:\\Users\\lasso\\devel\\PlusContinuous-bin\\PlusLib\\src\  rusCalibration\  esting\\vtkUSCalibrationControllerTest1.cxx(469)]
[ERROR]   [036.954000]  Comparison of calibration data to baseline failed [in c:\\Users\\lasso\\devel\\PlusContinuous-bin\\PlusLib\\src\  rusCalibration\  esting\\vtkUSCalibrationControllerTest1.cxx(152)]
Test exited with failures!!!


#### 2011-08-15, 23:51:59 - Andras Lasso
From: heffter.tamas@gmail.com [mailto:heffter.tamas@gmail.com] On Behalf Of Tamas Heffter
Sent: Monday, August 15, 2011 12:28 PM
To: Andras Lasso
Cc: Csaba Pinter
Subject: Re: Failed calibration tests since this morning

This was the bug: 
I've reserved 1 double vector, than pus back a double vector (now the size is 2), then get the first vector (which is 0 after constructor): 

// calculate difference between the computed and measured angles
  std::vector< std::vector<double> > diffVector(1);
  std::vector<double> diff; 
  for( int row = 0; row < m; row++ )
  {
    diff.push_back( bVector[row] - aMatrix[row].get(0) * centerOfRotationX - aMatrix[row].get(1) * centerOfRotationY ); 
  }
  diffVector.push_back(diff); 

if ( !meanVector.empty() )
  {
    mean = meanVector[0]; 
  }

It should affect the center of rotation and rotation encoder calibration result. 

Tomi
2011/8/15 Tamas Heffter <heffter@cs.queensu.ca>
I don't remember what I changed yesterday (we didn't have internet access after the border, so I could only commit everything together), but as far as I know I've found a bug with the outlier detection, so it could cause the difference. 
It would be great, if you could check the actual calibration result, just to make sure it's good. The thing is, that the ulterius data calibration is the same, so it shouldn't be a big issue. 

Tomi


2011/8/15 Andras Lasso <lasso@cs.queensu.ca>
Hi Tomi,
 
Commint #580 caused two calibration tests to fail. 
http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=1743
http://crunch.cs.queensu.ca/CDash/viewUpdate.php?buildid=1740
 
Do you need help in investigating the issue?
 
Andras
 




#### 2011-08-15, 23:55:45 - Andras Lasso
(In r:593) re #251: Added more logging of center of rotation outlier rejection

#### 2011-08-15, 23:55:45 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-08-15, 23:58:13 - Andras Lasso
The difference is really due to the fix in center of rotation outlier rejection.

For vtkUSCalibrationControllerTest (passed test):

[DEBUG]   [043.484000]  Center of rotation in original image frame (outlier removal in progress): 61.491, 4.24434 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [052.218000]  Center of rotation in original image frame (outlier removal in progress): 61.499, 4.24774 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [058.261000]  Center of rotation in original image frame (outlier removal in progress): 61.5015, 4.24785 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [063.685000]  Center of rotation in original image frame (outlier removal in progress): 61.5023, 4.24797 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [075.628000]  Center of rotation in original image frame (outlier removal in progress): 61.5023, 4.24789 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [080.892000]  Center of rotation in original image frame (outlier removal in progress): 61.5023, 4.24783 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [086.147000]  Center of rotation in original image frame (outlier removal in progress): 61.5025, 4.24763 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [092.657000]  Center of rotation in original image frame (outlier removal in progress): 61.5025, 4.24756 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]

For vtkUSCalibrationControllerTest_FrameGrabber (failed test):

[DEBUG]   [051.031000]  Create new segmented frame cluster for clusterID: 0 [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(2388)]
[DEBUG]   [051.055000]  Number of clusters: 1 [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(2397)]
[DEBUG]   [051.062000]  Number of elements in cluster #0: 200 [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(2400)]
[DEBUG]   [068.555000]  Center of rotation in original image frame (outlier removal in progress): 76.8734, 28.081 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [077.315000]  Center of rotation in original image frame (outlier removal in progress): 75.4758, 25.68 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [087.046000]  Center of rotation in original image frame (outlier removal in progress): 75.2897, 25.6741 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [096.561000]  Center of rotation in original image frame (outlier removal in progress): 75.2821, 25.6979 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [100.522000]  Center of rotation in original image frame (outlier removal in progress): 75.2793, 25.7038 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [110.116000]  Center of rotation in original image frame (outlier removal in progress): 75.2785, 25.705 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]
[DEBUG]   [119.651000]  Center of rotation in original image frame (outlier removal in progress): 75.2784, 25.7052 mm [in ..\\..\\..\\PlusLib\\src\  rusCalibration\\vtkStepperCalibrationController.cxx(1912)]

In the failed test case the center of rotation changed about 2-3mm as a result of outlier rejection.

=> Need to check on a few new data sets if the center of rotation is really improved by the recent code changes. If it is confirmed then the baseline data shall be updated.

#### 2011-08-15, 23:58:13 - Andras Lasso
assigned_to_id: changed from "lassoan" to null

#### 2011-08-16, 05:00:13 - Andras Lasso
(In r:598) re #251: Updated baseline for vtkUSCalibrationControllerTest_FrameGrabber

#### 2011-08-16, 05:00:13 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-08-16, 05:10:26 - Andras Lasso
Fixed by updating the baseline (the previous baseline was generated with a non-functional center-of-rotation detection algorithm).

http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=1763


#### 2011-08-16, 05:10:26 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-16, 05:10:26 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-08-16, 05:12:15 - Andras Lasso
Fixed by updating the baseline (the previous baseline was created by a dysfunctional center-of-rotation outlier rejection algo).

http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=1763


## #252 Some tickets have 'Bug:' in the title 
Currently some tickets that refer to bugs contains the 'Bug:' text in the title. Classification of the tickets could be useful, but it should be done consistently.

Probably custom fields would be the most appropriate method. I assume that valid field values can be defined, setting the field can be made mandatory, it can be used for filtering, etc.

Ticket types could be: Bug / Enhancement

Please remove the 'Bug:' tags and store ticker type as a custom field (or in other some similar, structured way).

#### 2011-08-16, 15:42:15 - Andras Lasso
assigned_to_id: changed from null to "pinter"

#### 2011-08-16, 15:42:15 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-16, 15:42:15 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2011-08-16, 17:47:12 - Csaba Pinter
I created a new Custom Field named 'Issue Type'. It has three possible values now: Bug / Enhancement / Administrative. I modified the issues with 'Bug:' prefix as you suggested.
I also created a Team Filter in the Tickets 'Active by Milestone showing Issue Types' that shows it in the list.
I did not changed the type of the others (most of them are Enhancements, some of them are Admin), but it is a required field so it will be mandatory in the future

#### 2011-08-16, 17:47:12 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #253 Check and fix all the Read/WriteConfiguration functions to get and use the root XML element
We agreed that the default configuration object that is passed is the root element (reference to the whole XML tree), although is not introduced fully yet, only in the new parts. It can introduce errors, since the programmer assumes that the passed element is (or is not) the root element, but it can be the other way (see rev. 599)
A review is needed throughout the code.

#### 2011-08-23, 19:25:16 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-23, 19:25:16 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-29, 18:10:52 - Csaba Pinter
(In r:656) Fixed #253: All read and write configuration functions now get the root element (PlusConfiguration)

#### 2011-08-29, 18:10:52 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #254 Create a common widget for setting the image parameters
If we want to set the image parameters (Scaling, ROI), now we have to acquire sample data with TrackedUltrasoundCapturing, open it in ImageJ, measure the parameters and then write it in the configuration file.
We need a widget that does it for us:
* Display realtime image
* Load and display the parameters from the current configuration file
* Enable us to modify the parameters (drag the corners of the ROI, draw to line sections for the horizontal and vertical scaling, define image orientation)
* Save back the results to the config file


#### 2011-08-23, 19:24:20 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-23, 19:24:20 - Csaba Pinter
description: changed from "If we want to set the image..." to "If we want to set the image..."

#### 2011-08-23, 19:24:20 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-30, 15:19:02 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-30, 16:12:59 - Csaba Pinter
FindLines3PtDist parameter to Mm

#### 2011-08-30, 16:15:29 - Csaba Pinter
ScalingEstimation => ApproximateSpacingMmPerPixel

#### 2011-08-30, 21:24:46 - Csaba Pinter
Indicate US orientation

#### 2011-08-30, 21:27:20 - Csaba Pinter
Add tester - a little application that initializes the dialog with proper data and shows it

#### 2011-08-30, 21:53:51 - Csaba Pinter
(In r:661) Re #254: FindLines3PtDist renamed to FindLines3PtDistanceMm and uses millimeter instead of pixel; ScalingEstimation renamed to ApproximateSpacingMmPerPixel; Config files changed accordingly

#### 2011-08-30, 21:55:20 - Csaba Pinter
(In r:662) Re #254: SegmentationParameterDialog added (edit ROI and scaling functionality and saving is not ready yet); Edit button added to freehand calibration toolbox in fCal (shows SegmentationParameterDialog)

#### 2011-09-01, 01:01:34 - Csaba Pinter
(In r:666) Re #254: SegmentationParameterDialog ROI edit mode ready

#### 2011-09-01, 22:38:37 - Csaba Pinter
(In r:670) Re #254: Add set functions for the pattern recognition classes; In vtkCalibrationController instead of get functions for its own members, simply use the members

#### 2011-09-01, 22:39:14 - Csaba Pinter
(In r:671) Fixed #254: Segmentation parameter dialog fully functional

#### 2011-09-01, 22:39:14 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #255 Rotation compensation is not showing in the results
If we rotate the probe after the calibration, it should compensate so that the wires are in te correct position

#### 2011-08-23, 17:52:13 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 17:52:13 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-08-23, 18:04:21 - Tamas Heffter
(In r:626) re #255: Rotation compensation is not showing in the results
Changing the sign of the scale factor solved the problem, however we need to revise the equation instead 


#### 2011-08-23, 18:04:21 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-21, 16:28:18 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-21, 16:28:18 - Csaba Pinter
status: changed from "Accepted" to "Invalid"


## #256 vtkTrackerThread deadlock 
Sometimes vtkTrackerThread goes into deadlock, and we're not able to kill the entire process or thread, but need to restart the computer. 
Screeenshot attached from the process. 


#### 2011-08-26, 15:22:20 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-29, 14:01:37 - Tamas Heffter
We haven't experienced this problem anymore. 

#### 2011-10-29, 14:01:37 - Tamas Heffter
status: changed from "Test" to "Invalid"


## #257 Inquire about backup features
* Level of automation
* Can we do it for account, spaces or tools?


#### 2011-08-18, 23:46:36 - Csaba Pinter
Wrote the letter, waiting for their answer/call.

#### 2011-08-18, 23:46:36 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-18, 23:46:49 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.2 - Before AMS"

#### 2011-08-19, 18:27:26 - Csaba Pinter
Also find out the price of
* Qt commercial version
* Assembla private

#### 2011-08-19, 20:30:34 - Csaba Pinter
Automatically back up tickets, milestones etc. (not the wiki):
http://www.assembla.com/spaces/breakoutdocs/wiki/Assembla_REST_API

#### 2011-08-23, 14:58:49 - Csaba Pinter
Since WPF was chosen as a GUI toolkit for RadVision development, price of Qt commercial is not necessary.

The other information was collected:
* Assembla private is ridiculously expensive (about 50K, annual or one-time, but does not really matter at this scale)
* Automatic backup is possible using the Assembla REST API - everything but the Wiki can be backed up this way

#### 2011-08-23, 14:58:49 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #258 Write a user manual draft for iCalBrachy
A draft with the basic steps, the expected results and screenshots are needed as a basis for AMS to write the user's manual

#### 2011-08-18, 23:56:10 - Csaba Pinter
summary: changed from "Write a draft manual for iCalBrachy" to "Write a user manual draft for iCalBrachy"

#### 2011-08-23, 18:26:03 - Csaba Pinter
priority: changed from "Normal (3)" to "Highest (1)"

#### 2011-08-23, 19:17:15 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-23, 19:17:15 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-23, 19:17:29 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-08-24, 18:10:40 - Csaba Pinter
file:bGbXYAZNWr4loJeJe4gwI3

#### 2011-08-24, 18:10:40 - Csaba Pinter
Attachment added: "iCalBrachy_brief_howto.docx"

#### 2011-08-24, 19:03:05 - Csaba Pinter
file:cYziJwZOmr4lJveJe5cbLr

#### 2011-08-24, 19:03:05 - Csaba Pinter
Attachment added: "iCalBrachy_brief_howto.docx"

#### 2011-08-24, 19:13:30 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2012-11-03, 15:48:40 - Csaba Pinter
Attachment added: "iCalBrachy_brief_howto.docx"


## #259 Incorrect segmentation during Freehand Calibration
Segmentation only occurs in the middle of the phantom if the probe is moved up and down very rapidly, and the segmentation is delayed occurring on the frame before the current one. Segmentation occurs normally on the edges of the phantom. If a reflection is seen in the image (ie, you ultrasound part of the plastic) segmentation occurs on the reflection. This started occurring after six successful calibration, they were all recorded during the same session by using the 'reset' button. Fcal and SONIX were both restarted and the segmentation was still not occurring properly. 

#### 2011-08-22, 20:57:20 - Tamas Ungi
I've found two problems that caused this issue:
1. The threads were loose. It should always be checked before calibration, and tightened with pieces of rubber, or rewired if necessary.
2. In the config file, the minimum wire reflection size had to be lowered: MorphologicalOpeningCircleRadiusMm='0.30' from 0.47.

#### 2011-08-22, 20:57:20 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2011-08-22, 20:57:20 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #260 Remove obsolete projects
Remove the following obsolete projects: 
- 4DUltrasound 
- USTCalibValidation 
- USTemplateCalibrationAcq 

#### 2011-08-23, 16:45:08 - Tamas Heffter
(In r:624) Fixed #260: Removed obsolete projects: 4DUltrasound, USTCalibValidation, USTemplateCalibrationAcq


#### 2011-08-23, 16:45:08 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-08-23, 16:47:17 - Tamas Heffter
(In r:625) Fixed #260: Removed unused Plus Slicer3 logic code 


#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #261 Add Video for Windows support
Support Video for Windows driver to be able to use any device that is used by windows

#### 2011-08-23, 20:37:23 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-09-30, 15:10:52 - Csaba Pinter
Updating tickets (#106, #110, #122, #130, #131, #132, #133, #173, #176, #206, #261)



#### 2011-09-30, 15:10:52 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 15:40:34 - Csaba Pinter
Updating tickets (#261, #273)



#### 2011-10-07, 15:40:34 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Next"

#### 2011-11-02, 15:32:32 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-06-16, 02:49:54 - Andras Lasso
(In r:1793) re #261: Added support for uncompressed RGB acquisition through VFW interface


## #262 Configuration file saver widget for fCal
When saving a configuration file, the followings are needed:
* Change Title
* Change Description
* Change destination directory

#### 2011-08-25, 18:09:39 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-08-25, 18:57:08 - Csaba Pinter
(In r:632) Re #262: Configuration file related accessory functions moved to vtkFileFinder (to be renamed due to changed functionality)

#### 2011-08-25, 18:58:16 - Csaba Pinter
(In r:633) Re #262: ConfigFileSaverDialog added; dead code removed from DeviceSetSelectorWidget; Changes needed because of the config file name related function moves

#### 2011-08-25, 19:25:48 - Csaba Pinter
(In r:634) Re #262: vtkFileFinder renamed to vtkConfigurationTools because of changed functionality

#### 2011-08-25, 19:26:02 - Csaba Pinter
(In r:635) Re #262: vtkFileFinder renamed to vtkConfigurationTools because of changed functionality

#### 2011-08-25, 19:41:46 - Csaba Pinter
(In r:636) Fixed #262: Build fail fixed

#### 2011-08-25, 19:41:46 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-08-26, 18:35:34 - Csaba Pinter
(In r:648) Re #262: ConfigFileSaverDialog is used now at every place where a configuration file is saved in fCal

#### 2011-08-26, 18:35:46 - Csaba Pinter
(In r:649) Re #262: ConfigFileSaverDialog is used now at every place where a configuration file is saved in fCal

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #263 Show dates of already done calibrations in Device set selector widget's description
It can be useful to know what calibrations are in a selected configuration file and with what date

#### 2011-09-23, 14:59:39 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-07, 15:50:34 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:37:33 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-10-11, 18:35:45 - Adam Rankin
fixed #263 Appending calibration results to device set configuration description box

Updating PlusCommonWidget icons using free open-source resources

Updating fCal layout to by more flexibly dynamic to resizing
Commit: r:4904|plus:4904

#### 2016-10-11, 18:35:45 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-10-11, 18:35:45 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-10-12, 13:42:48 - Adam Rankin
re #263 updating fcal icons and layout
Commit: r:4906|plus:4906

#### 2016-10-12, 20:10:13 - Adam Rankin
re #263 Updating minimum gcc version required under linux builds to &gt;= 5 to support std::get_time and std::put_time
Commit: r:4907|plus:4907

#### 2016-10-12, 22:11:25 - Adam Rankin
re #263 Updating layout to limit combobox size to fit within 20% (toolbar area)
Commit: r:4908|plus:4908

#### 2016-10-17, 15:53:23 - Adam Rankin
re #263 correctly resizing PlusStatusIcon label pixmap
Commit: r:4913|plus:4913

#### 2016-10-20, 18:08:09 - Andras Lasso
The status icon has some ugly interpolation artifacts around its border and overall it is completely off (it doesn't look like a 3D button at all but more like one edge of the png is zoomed 10x and clipped). The icon is so dark that it's difficult to recognize the color.

#### 2016-10-20, 18:08:09 - Andras Lasso
CommentContent: changed from "The status icon has some ugly interpolation artifacts around its border and overall it is completely off (it doesn't look like a 3D button at all but more like one edge of the png is zoomed 10x and clipped)." to "The status icon has some ugly interpolation artifacts around its border and overall it is completely off (it doesn't look like a 3D button at all but more like one edge of the png is zoomed 10x and clipped). The icon is so dark that it's difficult to"

#### 2016-10-20, 18:10:04 - Andras Lasso
Looks like this:
image:aUqqB8LVar5Q8ndmr6QqzO
instead of this:
image:a5JjtQLVar5Q7dacwqEsg8

@rankin could you please have a look? If it's difficult to make it work on various screen resolutions (normal and hi-DPI) then we can replace it with a flat icon.

#### 2016-10-22, 20:23:36 - Adam Rankin
re #263 Copy Qt pdb files for debug builds

Brightening status icon for easier viewing, adjusting scaling of icon to fit within widget, avoid cropping

Adding optional quiet parameter to transform querying to remove incorrect error spam on launch of PlusDeviceSetSelectorWidget
Commit: r:4914|plus:4914

#### 2016-10-26, 13:45:20 - Adam Rankin
re #263 removing combobox stylesheet for DeviceSetSelectorWidget

Adjusting drop down list size in code on population of items
Commit: r:4916|plus:4916

#### 2016-11-01, 13:42:18 - Adam Rankin
re #263 using an earlier function definition that doesn't require qt 5.6+ to enable build with qt 5.5

Improving OpenCV detection of variables, CUDA, VTK, etc...
Commit: r:4918|plus:4918


## #264 Print another iCalB phantom 
We don't have any iCal phantom, so we need to print another one for internal testing. 

#### 2011-09-02, 14:14:00 - Thomas Kuiran Chen
Sent in for print on Aug 26. HMRC just confirmed today (Sep 2) that the phantom is ready for pick up.

#### 2011-09-02, 14:14:00 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #265 Add support for RF data acquisition, saving, and loading
Video sources already support RF data acquisition, but the code many places assume that the pixel type is 8-bit unsigned. RF data is stored in 16-bit signed pixel format, so it's necessary to add support for this pixel type throughout the library.

#### 2011-08-25, 23:08:08 - Andras Lasso
(In r:641) re #265: Added support for 16-bit images (required for recording RF images)

#### 2011-08-25, 23:09:31 - Andras Lasso
(In r:642) Fixed #265: Added support for 16-bit images (required for recording RF images)

#### 2011-08-25, 23:09:31 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-08-25, 23:21:16 - Andras Lasso
(In r:644) re #265: Committed modified files that were missing from the initial commit

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #266 Rename PlusLogger to vtkPlusLogger
It became a sub-class of vtkObject, so it name should reflect that.
Add a comment if I can rename it (literally every class uses it, it will change most of the files)

#### 2011-08-26, 14:43:36 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.2.3 - Before Hopkins"

#### 2011-08-26, 20:26:54 - Csaba Pinter
(In r:651) Re #266: Rename PlusLogger to vtkPlusLogger

#### 2011-08-26, 20:27:34 - Csaba Pinter
(In r:652) Fixed #266: Rename PlusLogger to vtkPlusLogger

#### 2011-08-26, 20:27:34 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #267 Remove visualization component from calibration controller  
Remove all visualization elements from calibration controller 

#### 2011-08-25, 22:00:43 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-08-25, 22:04:20 - Tamas Heffter
(In r:638) re #267: Remove visualization component from calibration controller 
Fixed #233: Template model integration into configuration file 

#### 2011-08-26, 22:49:54 - Tamas Heffter
(In r:654) re #267: Remove visualization component from calibration controller 
Created a small image for OfflineImageData in the constructor to avoid vtkImageFilter errors 

#### 2011-10-08, 02:49:18 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-25, 16:14:31 - Tamas Heffter
(In r:984) Fixed #267: Remove visualization component from calibration controller

#### 2011-10-25, 16:14:31 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #268 Use local config files instead of registry
New xml config file in the bin directory, which stores the user's directories (relative) for config files and outputs
PlusCommon/vtkConfigurationTool class can store the xml data element, and handle the read/write

#### 2011-08-26, 15:04:32 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-09-15, 15:34:49 - Csaba Pinter
Also store editor application path for editing configuration files

#### 2011-09-15, 16:15:25 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-15, 21:29:55 - Csaba Pinter
(In r:744) Re #268: Application configuration file and data element in vtkPlusConfig

#### 2011-09-15, 21:30:59 - Csaba Pinter
(In r:745) Fixed #268: Use application configuration file of vtkPlusConfig to store fCal related configurations; Editor application for editing configuration files can be selected in fCal

#### 2011-09-15, 21:30:59 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-09-16, 18:20:59 - Csaba Pinter
Application configuration should be saved and loaded by the singleton vtkPlusConfig app and it should handle the default parameters.
Defaults for the default parameters should be set by that class.
Also add OutputFolder as a default parameter.

#### 2011-09-16, 18:20:59 - Csaba Pinter
status: changed from "Fixed" to "Accepted"

#### 2011-09-16, 21:23:40 - Csaba Pinter
(In r:751) Re #268: Read/Write application configuration moved from applications to vtkPlusConfig; Members and Set/Get functions added to reach common application configuration properties; ConfigurationXY renamed to DataSetConfigurationXY in vtkPlusConfig because of appearance of ApplicationConfigurationXY members

#### 2011-09-16, 21:24:14 - Csaba Pinter
(In r:752) Fixed #268: Read/Write application configuration moved from applications to vtkPlusConfig

#### 2011-09-16, 21:24:14 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #269 Edit configuration file button in Device set selector widget
New button which shell executes the editor application and opens the selected config file with it

#### 2011-08-26, 15:06:48 - Csaba Pinter
Remove full path from description

#### 2011-09-15, 15:34:52 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-15, 16:14:32 - Csaba Pinter
(In r:741) Fixed #269: Edit button added to device set selector widget that opens currently selected configuration file in default editor program. A compile setting had to be added so that Qt can handle wchar_t type properly. If this global solution is not good for some reason, it can be added to single projects as roughly described here http://www.cmake.org/pipermail/cmake/2008-February/019766.html

#### 2011-09-15, 16:14:32 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #270 Revise iCal MedPhys journal paper


#### 2011-08-26, 15:10:09 - Csaba Pinter
Issue Type: changed from "Administrative" to "Publication"

#### 2011-09-02, 14:16:25 - Thomas Kuiran Chen
We have revised the iCAL Med. Phys. journal with respect to all the comments from the Associate Editor and the reviewers.  Now the revision is in the submission stage.

#### 2011-09-02, 14:16:25 - Thomas Kuiran Chen
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:52 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:52 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #271 Saving acquired tracked frames fail because of insufficient memory
The current writer needs continuous memory chunk to save all the data we already successfully acquired, and it fails do to it in some cases

#### 2011-10-07, 15:38:21 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-10-29, 14:04:13 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #272 Revision of beamwidth MedPhys journal paper


#### 2011-09-23, 14:35:52 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-23, 14:36:36 - Csaba Pinter
Updating tickets (#294, #182, #206, #272)



#### 2011-09-23, 14:36:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-09-30, 13:46:43 - Thomas Kuiran Chen
Both the revised paper the response letter are in final shape.  We will submit the revision in the next couple days.  - Thomas

#### 2011-09-30, 13:46:43 - Thomas Kuiran Chen
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #273 Accessory functions/macros for configuration handling
A couple of helper functions and/or macros are needed, because read and write configuration functions are unreadably long.
* A function that parses up a parameter like 'USDataCollection/Tracker' and finds that element, performing all the error checks
* Macros that read attribute values, performing all the error checks

#### 2011-09-23, 15:20:19 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-07, 15:40:34 - Csaba Pinter
Updating tickets (#261, #273)



#### 2011-10-07, 15:40:34 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2014-06-05, 01:59:00 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 17:59:20 - Andras Lasso
re #273: Simplified configuration reading in devices and calibration algorithms
Commit: r:3374|plus:3374

#### 2014-06-05, 17:59:20 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-05, 18:22:21 - Andras Lasso
re #273: Simplified configuration reading in devices and calibration algorithms (fixed landmark registration algo reading)
Commit: r:3376|plus:3376

#### 2014-06-10, 17:01:21 - Adam Rankin
re #273 updating BK device to use new XML config macros
Commit: r:3397|plus:3397

#### 2014-06-13, 15:27:50 - Andras Lasso
re #273: Simplified configuration reading from XML
Commit: r:3417|plus:3417

#### 2014-06-13, 15:28:12 - Andras Lasso
re #273: Simplified configuration reading from XML
Commit: r:3418|plus:3418

#### 2014-06-13, 15:36:24 - Andras Lasso
re #273: Renamed DSC_ (device set configuration) prefix to XML_, as we use it for serialization from any kind of XML data, not necessarily just device set configuration.
Commit: r:3419|plus:3419

#### 2014-06-13, 19:31:44 - Andras Lasso
re #273: Simplified configuration writing
Commit: r:3423|plus:3423

#### 2014-06-13, 19:51:36 - Andras Lasso
status: changed from "New" to "Fixed"


## #274 Allow BrachyStepper to turn off stepper compensation


#### 2011-10-08, 02:48:41 - Tamas Heffter
(In r:909) Test #274: Allow BrachyStepper to turn off stepper compensation

#### 2011-10-08, 02:48:41 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-10-11, 15:51:03 - Tamas Heffter
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #275 Build error for common widgets in PLUS App
*Hussam and I get the following error when compiling the common widgets project. We are wondering if it is related to ticket #254 (Create a common widget for setting the image parameters).

As a result some of the PLUS App projects do not compile (e.g. TrackedUltrasoundCapturing). Could anyone comment on this please?

I would like to highlight that all of the files in my PlusApp are updated.
*
6>------ Build started: Project: PlusApp, Configuration: Debug Win32 ------
6>Performing update step (SVN update) for 'PlusApp'
6>At revision 662.
6>Performing configure step for 'PlusApp'
6>-- PlusApp version: 1.2.2
6>-- Current revision is 662
6>-- Configuring done
6>-- Generating done
6>-- Build files have been written to: C:/devel/Plus-bin/PlusApp-bin
6>Performing build step for 'PlusApp'
6>Microsoft (R) Visual C++ Express Edition Version 9.0.30729.1.
6>Copyright (C) Microsoft Corp 2007. All rights reserved.
6>1>------ Build started: Project: CommonWidgets, Configuration: Debug Win32 ------
6>1>Compiling...
6>1>SegmentationParameterDialog.cxx
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(181) : error C2039: 'FillFormWithConfigurationData' : is not a member of 'SegmentationParameterDialog'
6>1>        c:\\devel\\plus-bin\\plusapp\\commonwidgets\\SegmentationParameterDialog.h(22) : see declaration of 'SegmentationParameterDialog'
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(186) : error C2065: 'm_DataCollector' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(186) : error C2227: left of '->GetConfigurationData' must point to class/struct/union/generic type
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(186) : error C2227: left of '->FindNestedElementWithName' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(208) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(208) : error C2228: left of '.label_SpacingResult' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(208) : error C2227: left of '->setText' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(216) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(216) : error C2228: left of '.doubleSpinBox_OpeningCircleRadius' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(216) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(224) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(224) : error C2228: left of '.doubleSpinBox_OpeningBarSize' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(224) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(232) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(232) : error C2228: left of '.spinBox_XMin' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(232) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(233) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(233) : error C2228: left of '.spinBox_YMin' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(233) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(234) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(234) : error C2228: left of '.spinBox_XMax' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(234) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(235) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(235) : error C2228: left of '.spinBox_YMax' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(235) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(243) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(243) : error C2228: left of '.doubleSpinBox_LineLengthError' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(243) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(251) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(251) : error C2228: left of '.doubleSpinBox_LinePairDistanceError' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(251) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(259) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(259) : error C2228: left of '.doubleSpinBox_LineError' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(259) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(267) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(267) : error C2228: left of '.doubleSpinBox_AngleDifference' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(267) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(275) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(275) : error C2228: left of '.doubleSpinBox_MinTheta' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(275) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(283) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(283) : error C2228: left of '.doubleSpinBox_MaxTheta' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(283) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(291) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(291) : error C2228: left of '.doubleSpinBox_ImageThreshold' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(291) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(299) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(299) : error C2228: left of '.doubleSpinBox_Line3rdPointDist' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(299) : error C2227: left of '->setValue' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(308) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(308) : error C2228: left of '.checkBox_OriginalIntensityForDots' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(308) : error C2227: left of '->setChecked' must point to class/struct/union/generic type
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(310) : error C2065: 'ui' : undeclared identifier
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(310) : error C2228: left of '.checkBox_OriginalIntensityForDots' must have class/struct/union
6>1>        type is ''unknown-type''
6>1>..\\..\\PlusApp\\CommonWidgets\\SegmentationParameterDialog.cxx(310) : error C2227: left of '->setChecked' must point to class/struct/union/generic type
6>1>Build log was saved at 'file://c:\\devel\\Plus-bin\\PlusApp-bin\\CommonWidgets\\CommonWidgets.dir\\Debug\\BuildLog.htm'
6>1>CommonWidgets - 55 error(s), 0 warning(s)
6>2>------ Build started: Project: TrackedUltrasoundCapturing, Configuration: Debug Win32 ------
6>3>------ Build started: Project: fCal, Configuration: Debug Win32 ------
6>2>Linking...
6>3>Linking...
6>2>   Creating library C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\  rackedUltrasoundCapturing.lib and object C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\  rackedUltrasoundCapturing.exp
6>3>   Creating library C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\\fCal.lib and object C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\\fCal.exp
6>3>FreehandCalibrationToolbox.obj : error LNK2019: unresolved external symbol 'public: __thiscall SegmentationParameterDialog::SegmentationParameterDialog(class QWidget *,class vtkDataCollector *)' (??0SegmentationParameterDialog@@QAE@PAVQWidget@@PAVvtkDataCollector@@@Z) referenced in function 'protected: void __thiscall FreehandCalibrationToolbox::EditCalibrationConfigurationClicked(void)' (?EditCalibrationConfigurationClicked@FreehandCalibrationToolbox@@IAEXXZ)
6>3>CommonWidgets.lib(StatusIcon.obj) : error LNK2019: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z) referenced in function 'public: __thiscall StatusIcon::StatusIcon(class QWidget *,class QFlags<enum Qt::WindowType>)' (??0StatusIcon@@QAE@PAVQWidget@@V?$QFlags@W4WindowType@Qt@@@@@Z)
6>3>CommonWidgets.lib(ToolStateDisplayWidget.obj) : error LNK2001: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z)
6>3>CommonWidgets.lib(DeviceSetSelectorWidget.obj) : error LNK2001: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z)
6>3>CommonWidgets.lib(ConfigFileSaverDialog.obj) : error LNK2001: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z)
6>3>CommonWidgets.lib(StatusIcon.obj) : error LNK2019: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ) referenced in function 'public: __thiscall StatusIcon::StatusIcon(class QWidget *,class QFlags<enum Qt::WindowType>)' (??0StatusIcon@@QAE@PAVQWidget@@V?$QFlags@W4WindowType@Qt@@@@@Z)
6>3>CommonWidgets.lib(ToolStateDisplayWidget.obj) : error LNK2001: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ)
6>3>CommonWidgets.lib(DeviceSetSelectorWidget.obj) : error LNK2001: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ)
6>3>CommonWidgets.lib(ConfigFileSaverDialog.obj) : error LNK2001: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ)
6>3>C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\\fCal.exe : fatal error LNK1120: 3 unresolved externals
6>2>CommonWidgets.lib(ToolStateDisplayWidget.obj) : error LNK2019: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z) referenced in function 'public: enum PlusStatus __thiscall ToolStateDisplayWidget::InitializeTools(class vtkDataCollector *,bool)' (?InitializeTools@ToolStateDisplayWidget@@QAE?AW4PlusStatus@@PAVvtkDataCollector@@_N@Z)
6>2>CommonWidgets.lib(DeviceSetSelectorWidget.obj) : error LNK2001: unresolved external symbol 'public: void __thiscall PlusLogger::LogMessage(enum PlusLogger::LogLevelType,char const *,char const *,int)' (?LogMessage@PlusLogger@@QAEXW4LogLevelType@1@PBD1H@Z)
6>2>CommonWidgets.lib(ToolStateDisplayWidget.obj) : error LNK2019: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ) referenced in function 'public: enum PlusStatus __thiscall ToolStateDisplayWidget::InitializeTools(class vtkDataCollector *,bool)' (?InitializeTools@ToolStateDisplayWidget@@QAE?AW4PlusStatus@@PAVvtkDataCollector@@_N@Z)
6>2>CommonWidgets.lib(DeviceSetSelectorWidget.obj) : error LNK2001: unresolved external symbol 'public: static class PlusLogger * __cdecl PlusLogger::Instance(void)' (?Instance@PlusLogger@@SAPAV1@XZ)
6>2>C:\\devel\\Plus-bin\\PlusApp-bin\\bin\\Debug\  rackedUltrasoundCapturing.exe : fatal error LNK1120: 2 unresolved externals
6>2>Build log was saved at 'file://c:\\devel\\Plus-bin\\PlusApp-bin\  rackedUltrasoundCapturing\  rackedUltrasoundCapturing.dir\\Debug\\BuildLog.htm'
6>2>TrackedUltrasoundCapturing - 5 error(s), 0 warning(s)
6>3>Build log was saved at 'file://c:\\devel\\Plus-bin\\PlusApp-bin\\fCal\\fCal.dir\\Debug\\BuildLog.htm'
6>3>fCal - 10 error(s), 0 warning(s)
6>========== Build: 0 succeeded, 3 failed, 18 up-to-date, 0 skipped ==========
6>Project : error PRJ0019: A tool returned an error code from 'Performing build step for 'PlusApp''
6>Build log was saved at 'file://c:\\devel\\Plus-bin\\PlusApp.dir\\Debug\\BuildLog.htm'
6>PlusApp - 71 error(s), 0 warning(s)
========== Build: 5 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========

#### 2011-08-31, 15:28:14 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-08-31, 15:30:26 - Csaba Pinter
Fixed in #663 (I wasn't told there was a ticket for this). This build error was due to a quick change after the testing, sorry about that.

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #276 Testers for common widgets
Create tester programs for all common widgets. Sikuli can be used to drive the test, in course of which the most functions are used.

#### 2011-08-31, 21:31:56 - Csaba Pinter
It should be done after moving the common widgets to PlusLib (we agreed to move them there, and all the other testers are in PlusLib)

#### 2011-09-23, 14:43:11 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-18, 16:41:36 - Csaba Pinter
(In r:956) Re #309, Re #276: Standalone app that provides connecting to device sets and changing changing the segmentation parameters using SegmentationParameterDialog. It will act as the test for that dialog too.

#### 2011-10-18, 16:41:36 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-20, 19:51:19 - Csaba Pinter
(In r:965) Re #276: Config file and Sikuli path CMake variable for SegmentationParameterDialogTest in PlusApp

#### 2011-10-20, 19:56:16 - Csaba Pinter
(In r:966) Re #276: SegmentationParameterDialogTest argument handling, TEST_EXECUTABLE_OUTPUT_PATH CMake variable (that contains the /Release under Windows), --launch parameter in DevEnv_Release.bat for the added SegmentationParameterDialog test (it can start the application but always returns pass now!); Finding PlusLib package failed if CMake GUI was used not the superbuild because it did not have the PLUSLIB_DIR variable

#### 2011-10-20, 21:09:51 - Csaba Pinter
(In r:968) Re #276: SegmentationParameterDialogTest added

#### 2011-10-20, 21:11:42 - Csaba Pinter
assigned_to_id: changed from "pinter" to null

#### 2011-10-20, 21:11:42 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-20, 21:11:51 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-20, 21:41:51 - Csaba Pinter
(In r:969) Re #276: Timeouts set to bigger. It has to wait until the dll's are loaded on the first run

#### 2011-10-21, 20:56:24 - Csaba Pinter
(In r:974) Re #276: SegmentationParameterDialogTest gets an input sequence in which all images are segmented

#### 2011-10-21, 20:57:34 - Csaba Pinter
(In r:975) Re #276: SegmentationParameterDialogTest improved: On error, it captures the screen and writes the path of the saved image to the output; Looks for the objects in only the region of the application where possible

#### 2011-10-21, 21:07:48 - Csaba Pinter
(In r:976) Re #276: StatusIcon added to SegmentationParameterDialogTest to be able to test it from that application

#### 2011-10-24, 20:17:25 - Csaba Pinter
(In r:978) Re #276: Tester for DeviceSetSelectorWidget; Waiting time increased from 5s to 10s when starting the application (the nightly tests failed because it couldn't start in time)

#### 2011-10-24, 21:28:54 - Csaba Pinter
(In r:979) Re #276: Tester for StatusIcon added; Exit function call changed in other Sikuli tests to the proper one

#### 2011-10-25, 21:06:23 - Csaba Pinter
(In r:987) Re #276: Tester for ConfigFileSaverDialog added; Focus is set to the applications after waiting for their starting up

#### 2011-10-25, 22:36:52 - Csaba Pinter
(In r:988) Re #276: SegmentationParameterDialogTest only disables the main dialog instead of hiding it (it disappeared from the taskbar too under XP); After closing the segmentation dialog, it disconnects from the device set, as the user would have to do it manually anyway (either connects to another one or closes the application)

#### 2011-10-25, 22:39:34 - Csaba Pinter
(In r:989) Re #276: Sikuli tests now save the captured images to the AppData directory when an error occures (so far it saved a temporary file which it also deleted in batch mode, so it did not make sense)

#### 2011-10-25, 23:23:54 - Csaba Pinter
(In r:992) Re #276: ToolState mode added to vtkFakeTracker; Config file used by ToolStateDisplayWidgetTest added

#### 2011-10-25, 23:25:16 - Csaba Pinter
(In r:993) Fixed #276: Tester for ToolStateDisplayWidget added; Connection failed text in DeviceSetSelectorWidgetTest is checked by image instead of the OCR (it was quite unreliable)

#### 2011-10-25, 23:25:16 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-25, 23:25:30 - Csaba Pinter
status: changed from "Fixed" to "Test"

#### 2011-10-26, 17:01:26 - Csaba Pinter
(In r:1003) Re #276: Fixed size of ToolStateDisplayWidgetTest, as it was too small for the widgets (the layout was not stable)

#### 2011-10-29, 16:23:12 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #277 Move CommonWidgets project to PlusLib


#### 2011-09-23, 14:44:22 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-21, 15:30:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2014-01-03, 15:18:24 - Andras Lasso
It's better to just keep the PlusLib core simpler and not dependent on QT - so keep the widgets in PlusApp for now.

#### 2014-01-03, 15:18:24 - Andras Lasso
status: changed from "New" to "Invalid"


## #278 Improve SegmentationParameterDialog functionality
* Guess spacing reference length values according to the phantom definition
* Change mouse cursor if a movable actor is hovered

#### 2011-09-23, 15:02:04 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:37:37 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-12-28, 21:03:23 - Adam Rankin
fixed #278 hover-over now has open hand, grip and pull has closed hand cursor to indicate movement

reference width and height values determined from phantom definition in connected configuration file
Commit: r:5001|plus:5001

#### 2016-12-28, 21:03:23 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-12-28, 21:03:23 - Adam Rankin
status: changed from "New" to "Fixed"


## #279 Implement RF to B-mode conversion filter
Adding the Hilbert transform functionality as an itkImageToImageFilter is storngly recommended for RF data handling. It creates a B-mode image from the RF frame.

#### 2011-09-02, 22:06:09 - Tamas Ungi
I would create a new folder, say 'ImageProcessing' in PlusLib. Anybody any other idea where should this go?

#### 2011-09-06, 03:54:34 - Andras Lasso
Amplio and Pando libraries (part of Ultrasonix SDK) can perform this processing. Pro: they are the same algorithms as used normally for B-mode image computation in the exam software. Con: it's not open source.

#### 2011-10-21, 15:47:06 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-06-28, 15:46:21 - Andras Lasso
Algorithm:
* Envelope detection from IQ sampled RF signal: scaleValue * (min(max(sqrt(sqrt(sqrt( I[i]*I[i] +Q[i]*Q[i] ))), minValue), maxValue) - minValue)
* Envelope detection from real-valued RF signal: using Hilbert transform
* Scan conversion: http://server.elektro.dtu.dk/personal/jaj/31545/exercises/exercise1/programs/

References:
http://ar.in.tum.de/Students/RFtoB
http://www.visualsonics.com/digitalrf
http://folk.ntnu.no/htorp/Undervisning/TTK10/IQdemodulation.pdf
http://www.ti.com/lit/an/sprab32/sprab32.pdf 

Implementation steps:
* Create an ITK filter
* Save additional info in the RF sequence metafile that allows reconstruction
* Create a tool for off-line conversion from RF data to B-mode data
* Add RF->Bmode conversion to fCal


#### 2012-06-28, 15:46:21 - Andras Lasso
assigned_to_id: changed from "siavashk" to "lassoan"

#### 2012-06-28, 15:46:21 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-06-28, 15:46:21 - Andras Lasso
summary: changed from "Add Hilbert transform for envelop detection" to "Implement RF to B-mode conversion filter"

#### 2012-06-29, 13:04:48 - Andras Lasso
(In r:1848|plus:1848) re #279: Added US image scan conversion code (downloaded from http://server.elektro.dtu.dk/personal/jaj/31545/exercises/exercise1/programs/, with permission from Jorgen Arendt Jensen)

#### 2012-06-29, 14:09:00 - Andras Lasso
(In r:1849|plus:1849) re #279: Simplified US image scan conversion code

#### 2012-06-29, 15:42:39 - Andras Lasso
(In r:1850|plus:1850) re #279: Wrapped US image scan conversion code into VTK class

#### 2012-06-29, 15:45:03 - Andras Lasso
(In r:1851|plus:1851) re #279: Wrapped US image scan conversion code into VTK class

#### 2012-06-30, 21:22:43 - Andras Lasso
(In r:1863|plus:1863) re #279: Added initial version of RF to B-mode image filter (WIP)

#### 2012-07-11, 15:38:45 - Andras Lasso
(In r:1895|plus:1895) re #541: Improved RF data acquisition: RF data can be stored internally with FM orientation (this is the format provided by US scanners and this order is more suitable for further processing), image type can be specified for video frames (US_IMG_BRIGHTNESS, US_IMG_RF_IQ_LINE, US_IMG_RF_IQ_LINE, ...)
re #279: Implemented simple RF processing (brightness conversion and scan conversion) to be able to show a rough processed Bmode image while acquiring RF frames. Added RfProcessor tool for off-line conversion.

#### 2012-07-11, 15:38:45 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-07-12, 15:11:05 - Andras Lasso
(In r:1904|plus:1904) re #279: Updated scan conversion algorithm to get the same results on 32-bit and 64-bit builds (use double instead of float weight coefficients)

#### 2012-07-13, 05:51:17 - Andras Lasso
(In r:1914|plus:1914) re #279: Implemented scan conversion for linear transducer. Modified sequence metafile reader to read brightness data into MF oriented image, RF data to FM oriented image automatically.
Made transform definition optional in MetaImageSequenceViewer.

#### 2012-07-13, 06:19:26 - Andras Lasso
(In r:1915|plus:1915) re #279: Minor enhancements in sample RF config files

#### 2012-07-13, 14:57:54 - Andras Lasso
(In r:1916|plus:1916) re #279: Minor fixes in sample RF config files

#### 2012-07-13, 16:19:39 - Andras Lasso
(In r:1918|plus:1918) re #279: Minor fixes in sample RF config files

#### 2012-07-13, 22:07:43 - Andras Lasso
Remaining issues:
* Instead of creating one B-mode sample from two RF samples (I and Q) two identical B samples are created
* Cast the output of the brightness conversion to unsigned char inside the brightness conversion filter


#### 2012-07-19, 18:32:13 - Andras Lasso
(In r:1944|plus:1944) re #279: Fixed vertical image flipping for RF frames

#### 2012-08-08, 18:58:32 - Andras Lasso
(In r:1978|plus:1978) Fixed #279: Now one B-mode sample is created from each RF sample pair (previously B-mode samples were duplicated to have a same input and output image size) in the vtkRfToBrightnessConvert. The output of the brightness conversion is casted to unsigned char inside vtkRfToBrightnessConvert. Added a test for BK ProFocus RF data brightness and scan conversion.

#### 2012-08-08, 18:58:32 - Andras Lasso
status_updated_at: changed from null to "2012-08-08 18:58:35"

#### 2012-08-08, 18:58:32 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-08-12, 17:00:48 - Andras Lasso
(In r:1987|plus:1987) re #279: Cleaned up RF brightness and scan conversion code


## #280 Connect to devices dialog does not disappear when app is not in focus


#### 2011-09-23, 14:44:35 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-09-27, 19:39:14 - Csaba Pinter
I could not reproduce it under Windows 7. I will try and fix it on Windows XP

#### 2011-09-27, 19:39:14 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-03, 21:05:05 - Csaba Pinter
(In r:869) Fixed #280: Connect to devices dialog is no longer modal and is explicitly hidden. Disappears now properly, tested on SonixTouch

#### 2011-10-03, 21:05:05 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #281 Make temporal calibration easier to skip in fCal
Often I click accidentally on start temporal calibration instead of skip temporal calibration and then start probe calibration.
Please make it easier to skip temporal calibration (don't require to explicitly skip the temporal calibraiton), maybe also make the start temporal calibration less visible (smaller button, maybe put it to the bottom of the tab, ...).

#### 2011-09-23, 14:45:28 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-09-30, 19:43:19 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-30, 19:51:00 - Csaba Pinter
(In r:855) Fixed #281: Temporal calibration is now on the bottom of the toolbox; It needs no skipping; It is disabled now (the algorithm is now useless for freehand anyway);

#### 2011-09-30, 19:51:00 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #282 Start fCal in maximized window
I always click on maximize window after starting fCal because without that the window is often too small (the image is too small) or too large (the bottom of the window is not visible).
Would it be possible to start fCal maximized by default?


#### 2011-09-04, 15:57:25 - Csaba Pinter
(In r:677) Fixed #282: fCal starts in maximized window

#### 2011-09-04, 15:57:25 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #283 Temporal calibration crashes when it tries to calibrate on invalid data
When I accidentally click on start temporal calibration (instead of start probe calibration) and do a probe calibration then sometimes the temporal calibration makes fCal crash.

Probably the crash is in the algorithm (in PlusLib) and not in fCal.

#### 2011-09-23, 14:48:28 - Csaba Pinter
Probably we don't need to fix it because a different algorithm will replace the current one

#### 2011-09-23, 14:48:35 - Csaba Pinter
milestone_id: changed from null to "Release Plus-Future"

#### 2012-02-17, 20:43:07 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-02-17, 20:43:11 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.4.2"

#### 2012-02-17, 22:22:03 - Andras Lasso
Don't spend too much time with the change-detection based algorithm, as the new one (correlation-based) will be ready for integration next week.

#### 2012-02-17, 22:23:18 - Csaba Pinter
I put it here to remember to make it invalid once we have the new one ready and tested.

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:20 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-01, 16:21:11 - Csaba Pinter
The temporal calibration algorithm has been replaced with the new correlation-based one, so if the same issue does not occur in the new version, this issue can be closed as Invalid

#### 2012-06-01, 16:21:11 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-28, 21:27:30 - Andras Lasso
No crashes with the new algo

#### 2012-06-28, 21:27:30 - Andras Lasso
status: changed from "Test" to "Invalid"


## #284 vtkSonixVideoSource RF acquisition crashes with Exam 5.7.0
The vtkSonixVideoSource works fine with Exam software v 5.6.5, but if you update the exam software to 5.7.0, the following error (attached screenshot) is produced in RF mode.

#### 2011-09-06, 04:07:04 - Andras Lasso
Siavash, please upload the latest Ulterius SDK that supports the 5.7.0 exam software to image server (at Queen's Tomi has the Ultrasonix login but he is on vacation for one more week):
server: image.cs.queensu.ca
directory: /data/shared/data/lab.hardware/Ultrasonix/Ultrasonix5.?.?SDK

Then I will upload the SDK to PLTools. If this new SDK version is backward-compatible with the 5.6.x exam softwar then I'll just make it the chosen SDK for Ulterius 5.x. If it's not backward compatible then I'll add an option to let you choose the Ulterius minor version (currently only the major version can be selected, using the PLUS_ULTERIUS_MAJOR_VERSION variable in CMake).

#### 2011-09-06, 04:07:04 - Andras Lasso
assigned_to_id: changed from "lassoan" to "siavashk"

#### 2011-09-06, 23:16:04 - Andras Lasso
assigned_to_id: changed from "siavashk" to "lassoan"

#### 2011-09-06, 23:16:04 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-09-07, 00:01:44 - Andras Lasso
(In r:695) re #284: Added a CMake option (PLUS_ULTERIUS_MINOR_VERSION) to specify Ulterius minor version (not fully functional yet)

#### 2011-09-07, 00:27:57 - Andras Lasso
(In r:696) Fixed #284: Added a CMake option (PLUS_ULTERIUS_MINOR_VERSION) to specify Ulterius minor version

#### 2011-09-07, 00:27:57 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2011-09-07, 00:41:36 - Andras Lasso
Commited a fix, Siavash, please test.
You need to update the Plus-build directory and re-build PlusBuild.sln.

#### 2011-09-07, 00:41:36 - Andras Lasso
assigned_to_id: changed from "lassoan" to "siavashk"

#### 2011-09-07, 00:41:36 - Andras Lasso
status: changed from "Fixed" to "Test"

#### 2011-09-07, 13:09:49 - Andras Lasso
milestone_id: changed from "Release - Next" to "Release - MICCAI"

#### 2011-09-07, 19:28:10 - Siavash Khallaghi
OK. I get a new error now:

ERROR: In ..\\..\\vtk\\Charts\\vtkContext2D.cxx, line 183
vtkContext2D (086C4648): Attempted to paint a line with <2 points.

The connection is established. but the RF data is not plotted. I am not quite sure why.

#### 2011-09-07, 19:40:44 - Andras Lasso
Do you see the signal running on the SonixTouch screen?
Try to press the update button (or right mouse-click) on the SonixTouch.
 
Andras
 
From: Siavash Khallaghi [mailto:plus@alerts.assembla.com] 
Sent: Wednesday, September 07, 2011 3:28 PM

#### 2011-09-08, 21:52:07 - Siavash Khallaghi
status: changed from "Test" to "Fixed"

#### 2011-09-23, 14:41:36 - Csaba Pinter
Updating tickets (#155, #288, #202, #284)



#### 2011-09-23, 14:41:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #285 Hole filling after volume reconstruction doesn't seem to be effective
Normally holes remain in a volume after performing volume reconstruction. A hole filling algorithm was implemented in the reconstructor but it didn't fill any holes. The volume reconstructor was later reworked and the hole filling algorithm was moved into vtkFillHolesInVolume class, but this class was not tested.

#### 2012-01-18, 19:05:57 - Andras Lasso
(In r:1390) re #285: Do not perform hole filling just display a warning if hole filling is requested (the algorithm doesn't seem to work and even crashes sometimes)

#### 2012-01-18, 19:05:57 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-02-08, 01:19:41 - Siavash Khallaghi
Is there a plan to fix this issue in the near future? Registration/segmentation algorithms are very sensitive to changes in the intensity and holes change the local intensity significantly.



#### 2012-02-08, 03:15:06 - Andras Lasso
We expect to have a fix for the current algorithm within a couple of weeks and some advanced algorithms in a few months. See more details at Volume_reconstruction_algorithm.

#### 2012-02-08, 03:18:05 - Andras Lasso
Siavash, let us know if you have specific requirements and test data. Then we can make sure that the algorithm will work well for your problem.


#### 2012-02-08, 03:58:42 - Andras Lasso
(In r:1442) re #285: Renamed papers to bibtexkey.pdf. Added bibtex descriptor file (with JabRef).

#### 2012-02-22, 21:13:34 - Thomas Vaughan
(In r:1475) re #285 Fixed several input/output errors. Removed code pertaining to the old algorithm since it would not run with the corrected I/O, will instead copy the input as a placeholder. Note that the placeholder implementation assumes the number of components is the same in both input and output, and the number of threads = 1. Hole filling is still disabled until a stable new algorithm is in place.

#### 2012-02-24, 05:24:56 - Thomas Vaughan
(In r:1485) re #285 Fixed accumulation buffer output from vtkPasteSliceIntoVolume in Common file (Optimized and Unoptimized versions may need to be checked). Implemented a quick hole-filling algorithm into vtkFillHolesInVolume that works for template types. Still need to determine highest value for type T for alpha calculation and overflow protection (if possible), ensure coding style is consistent, and settle on a neighborhood size/procedure for voxel interpolation. Hole filling is still disabled until this new algorithm is more thoroughly tested.

#### 2012-02-24, 05:57:29 - Thomas Vaughan
(In r:1486) re #285 Reverting pending automatic test failure (?). Will look into this tomorrow.

#### 2012-02-24, 18:41:12 - Thomas Vaughan
(In r:1487) re #285 Confirmed new output for vtkVolumeReconstructorTest3. Recommitting changeset 1485.

#### 2012-02-24, 20:20:32 - Thomas Vaughan
(In r:1489) re #285 some optimizations to the hole filling code, also make a constant for opaque alpha.

#### 2012-02-24, 20:32:54 - Thomas Vaughan
(In r:1490) re #285 Fixed nearest neighbor slice pasting into volume for optimized run. Hole filling is now enabled.

#### 2012-02-24, 21:15:40 - Andras Lasso
(In r:1491) re #285: Added non-regression test for volume reconstruction with hole filling

#### 2012-02-24, 21:19:47 - Thomas Vaughan
Fixed #285, improvements will be tracked in #436


#### 2012-02-24, 21:19:47 - Thomas Vaughan
status: changed from "New" to "Fixed"

#### 2012-02-24, 21:20:10 - Thomas Vaughan
assigned_to_id: changed from "lassoan" to "thomasvaughan"

#### 2012-02-24, 22:06:32 - Thomas Vaughan
(In r:1492) re #285 Hopefully this will correct the automatic test failure. Setting the number of threads in the .xml will now affect the hole filler as well as the slice paster.

#### 2012-04-17, 15:54:33 - Thomas Vaughan
(In r:1625) Re #285, #436, CISC 499 Report for volume reconstruction and beamwidth characterization.


## #286 Need to test the volume reconstructor with curvilinear probes
The volume reconstructor has been completely reworked and then tested with only linear probes. Need to test if it works correctly with curvilinear probes (fan-shaped cropping region) and maybe need to simplify/fix the fan definition parameters definition.

First of all, this *requires test image acquisition with a tracked curvilinear probe*.


#### 2011-09-07, 14:18:08 - Andras Lasso
description: changed from "The volume reconstructor ha..." to "The volume reconstructor ha..."

#### 2011-09-23, 14:49:36 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-07, 15:40:16 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 Open source" to "Release - Before Hopkins"

#### 2011-10-07, 15:40:51 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #287 Standardize comments in Plus
Find the most modern markup technique that doxygen can use and change the current comments to that standard

#### 2011-09-23, 14:51:04 - Csaba Pinter
Once we have the standardized comments we can add the doxygen generation to CMake

#### 2011-09-23, 14:56:36 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-07, 15:47:57 - Csaba Pinter
Add the convention description of the comments (default doxygen style) and the coding (follow the parent's convention or ITK if no parent) to the wiki.
Meeting is needed for finding out the details.

#### 2011-10-07, 15:47:57 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-10, 20:43:41 - Andras Lasso
Commenting style of used toolkits:
* QT: Qt-style
* ITK: QT-style (/** \\param  */)
* VTK: own, non-standard style (// Description: )
* OpenIGTLink: mixed QT-style and VTK-style

=> QT style commenting (see http://www.stack.nl/~dimitri/doxygen/docblocks.html) should be used. Added note to the developer's page.

#### 2011-10-10, 20:57:16 - Andras Lasso
(In r:913) re #287: Added config files for documentation generation with Doxygen

#### 2011-10-11, 00:40:37 - Andras Lasso
(In r:914) re #287: Updated documentation (removed third-party libs, added batch file for documentation generation, updated comment style and added header for DataCollection classes)

#### 2011-10-11, 12:14:09 - Andras Lasso
I did a first round on DataCollection to make the documentation compatible with doxygen. Csaba, could you please update all the other libraries similarly with Tomi?

You can see how the documentation looks like if you run CreateDoc.bat

#### 2011-10-13, 16:27:27 - Csaba Pinter
(In r:930) Re #287: Standard comments in fCal

#### 2011-10-17, 21:12:42 - Csaba Pinter
(In r:951) Re #287: Standard comments in CommonWidgets

#### 2011-10-21, 15:47:24 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-10-21, 16:17:35 - Csaba Pinter
assigned_to_id: changed from "pinter" to "lassoan"

#### 2011-10-21, 16:20:59 - Csaba Pinter
Use the syle of vtkCenterOfRotationCalibAlgo.h

#### 2011-10-25, 19:25:02 - Andras Lasso
(In r:985) re #316: Added Plus license and header to all cxx and h Files
re #316: Removed Ascension Flock of birds tracking support (the necessary toolkit did not have compatible license and the Flock of birds tracker can be considered as obsolete, ad trakSTAR and medSAFE trackers are used in medical devices)
re #287: Update commenting style in DataCollection and TrusCalibration

#### 2011-10-29, 16:22:55 - Tamas Heffter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-10-29, 16:36:43 - Tamas Heffter
(In r:1060) re #287: Standardize comments in Tracking folder 

#### 2011-11-02, 15:36:28 - Andras Lasso
The following Plus classes haven't been documented yet (see http://research.cs.queensu.ca/perklab/plus/docnightly/annotated.html).

Tamas:
vtkPlusCommand

Tomi/Csaba:
BrachyStepper
CivcoBrachyStepper CmsBrachyStepper ICCapturingListener
PlusVideoFrame
vtkDataCollectorSynchronizer::PositionContainer
SerialLine
Timer
TimestampedBufferItem
vtkGnuplotExecuter
vtkHTMLGenerator
vtkICCapturingSource
vtkICCapturingSourceCleanup vtkPlusLogger vtkPlusLoggerOutputWindow vtkPlusVideoSource vtkSavedDataVideoSource vtkSavedDataVideoSourceCleanup2 vtkSonixPortaVideoSource vtkSonixPortaVideoSourceCleanup vtkSonixVideoSource
vtkSonixVideoSourceCleanup
vtkSonixVolumeReader
vtkAccurateTimer
vtkAccurateTimerCleanup
vtkTimestampedCircularBuffer< BufferItemType > 
vtkV4L2VideoSource 
vtkV4L2VideoSource::buffer
vtkWin32VideoSource2 
WindowsAccurateTimer 

Andras:
CSerialBuffer CSerialCommHelper VibroLib::AudioCard::DirectSoundBuffer VibroLib::AudioCard::DirectSoundCapture VibroLib::AudioCard::DirectSoundCaptureBuffer VibroLib::AudioCard::DirectSoundInstance itk::FcsvData itk::FcsvPoint itk::FcsvReader itk::FcsvWriter
fixed
VibroLib::MCDC::MCDCProgrammer
PlusLockGuard< T >
PlusMath
stopWatch
vtkConsoleOutputWindow
vtkFillHolesInVolume vtkHeartSignalBox vtkMetaImageSequenceIO vtkMicronTracker vtkMILVideoSource vtkMILVideoSource2 vtkNDITracker vtkPasteSliceIntoVolume vtkPOLARISTracker
vtkSignalBox
vtkUSBECGBox 
vtkVolumeReconstructor 
VibroLib::AudioCard::Wave 

Alex:
CoplanarParallelWires
Dot
FidLabeling FidLineFinder
FidPatternRecognition
FidSegmentation Item
KPhantomSeg
LabelingResults
Line
LinePair NWire
Pattern
PatternRecognitionResult 
Pos
Position
SegImpl SegmentationParameters SegmentationResults
SortedAngle
UltraSoundFiducialSegmentationTools 
UsFidSegResultFile
Wire 


#### 2011-11-02, 15:36:28 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-11-02, 16:28:02 - Csaba Pinter
(In r:1094) Re #287: Standard comments in vtkAccurateTimer and vtkPlusConfig. Parameter description added to vtkDataCollector

#### 2011-11-03, 13:45:27 - Tamas Ungi
(In r:1110) Re #287: Comments added to public functions.

#### 2011-11-04, 19:52:02 - Alexis Boucharin
(In r:1124) re #287 Comments added to the cxx files for developer purpose.

#### 2011-11-05, 22:02:28 - Andras Lasso
(In r:1136) re #287: Added some more comments in standardized format

#### 2011-11-05, 22:06:57 - Andras Lasso
The following Plus classes still haven't been documented yet (see http://research.cs.queensu.ca/perklab/plus/docnightly/annotated.html).

Tamas:
vtkPlusCommand

Tomi/Csaba:
BrachyStepper
CivcoBrachyStepper 
CmsBrachyStepper 
ICCapturingListener
PlusVideoFrame
vtkDataCollectorSynchronizer::PositionContainer
SerialLine
Timer
TimestampedBufferItem
vtkGnuplotExecuter
vtkHTMLGenerator
vtkICCapturingSource
vtkICCapturingSourceCleanup 
vtkPlusVideoSource 
vtkSavedDataVideoSource 
vtkSavedDataVideoSourceCleanup2 
vtkSonixPortaVideoSource 
vtkSonixPortaVideoSourceCleanup 
vtkSonixVideoSource
vtkSonixVideoSourceCleanup
vtkSonixVolumeReader
vtkTimestampedCircularBuffer< BufferItemType > 
vtkV4L2VideoSource 
vtkV4L2VideoSource::buffer
vtkWin32VideoSource2 
WindowsAccurateTimer 

Andras:
CSerialBuffer 
CSerialCommHelper 
VibroLib::AudioCard::DirectSoundBuffer 
VibroLib::AudioCard::DirectSoundCapture 
VibroLib::AudioCard::DirectSoundCaptureBuffer 
VibroLib::AudioCard::DirectSoundInstance 
itk::FcsvData 
itk::FcsvPoint 
itk::FcsvReader 
itk::FcsvWriter
VibroLib::MCDC::MCDCProgrammer
PlusLockGuard< T >
>>WIP PlusMath
stopWatch
vtkFillHolesInVolume vtkHeartSignalBox vtkMetaImageSequenceIO vtkMicronTracker vtkMILVideoSource vtkMILVideoSource2 vtkNDITracker vtkPasteSliceIntoVolume vtkPOLARISTracker
vtkSignalBox
vtkUSBECGBox 
vtkVolumeReconstructor 
VibroLib::AudioCard::Wave 

Alex:
Line
UsFidSegResultFile


#### 2011-11-07, 01:50:52 - Andras Lasso
(In r:1137) re #287: Added some more comments in standardized format
Simplified PlusMath interface for rounding functions

#### 2011-11-08, 18:19:41 - Csaba Pinter
Updating tickets (#287, #361, #368)



#### 2011-11-08, 18:19:41 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.1 - Before Hopkins" to "Release Plus-1.4.0"

#### 2011-11-08, 21:20:33 - Csaba Pinter
(In r:1154) Re #287: Standard comments in ICCapturingListener

#### 2011-11-23, 15:04:27 - Andras Lasso
(In r:1206) re #287: Standardized comments in vtkPlusVideoSource.h

#### 2011-12-05, 04:24:41 - Andras Lasso
(In r:1273) re #287: Added/updated many comments. Removed a few unused files.

#### 2011-12-05, 04:30:05 - Andras Lasso
I've completed my part. Csaba/Tomi, please clean up the rest:

BrachyStepper
CivcoBrachyStepper
CmsBrachyStepper
PlusVideoFrame
vtkDataCollectorSynchronizer::PositionContainer
TimestampedBufferItem
vtkGnuplotExecuter
vtkHTMLGenerator
vtkICCapturingSource
vtkICCapturingSourceCleanup
vtkSavedDataVideoSource
vtkSavedDataVideoSourceCleanup2
vtkSonixPortaVideoSource
vtkSonixPortaVideoSourceCleanup
vtkSonixVideoSource
vtkSonixVideoSourceCleanup
vtkSonixVolumeReader
vtkTimestampedCircularBuffer< BufferItemType >
vtkWin32VideoSource2

See http://research.cs.queensu.ca/perklab/plus/docnightly/annotated.html for the up-to-date list.


#### 2011-12-05, 04:30:05 - Andras Lasso
assigned_to_id: changed from "lassoan" to "pinter"

#### 2011-12-05, 20:44:25 - Csaba Pinter
(In r:1276) Re #287: BrachyStepper project doxygen-ized

#### 2011-12-13, 15:03:57 - Andras Lasso
(In r:1321) re #287: Added compressed html help (chm) file generation, cleaned up some documentation errors

#### 2011-12-13, 20:19:23 - Csaba Pinter
(In r:1324) Re #287: Standardized comments in ImageAcquisition project

#### 2011-12-14, 17:01:58 - Csaba Pinter
(In r:1336) Test #287: Rest of the classes commented; Segmentation parameters improved in SonixTouch-related config files

#### 2011-12-14, 17:01:58 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-17, 21:28:04 - Tamas Heffter
(In r:1355) Re #287: Standardize a few more comments in Plus

#### 2011-12-23, 21:58:04 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #288 Inconsistent dll linkage warnings in Vibro
There are many 'Inconsistent dll linkage' build warnings in PlusLib/src/Vibro.
See the dashboard:
http://crunch.cs.queensu.ca/CDash/viewBuildError.php?type=1&buildid=2027

The PlusLib shall not contain any build warnings, because often the warnings indicate real errors. If there are build warnings they also make it difficult to see if new build warnings appear.

Let me (Andras) know if you think that you won't be able to fix it today or you need help with fixing this issue.


#### 2011-09-09, 16:29:14 - Andras Lasso
summary: changed from "Inconsistent dll linkage warnings in " to "Inconsistent dll linkage warnings in Vibro"

#### 2011-09-09, 18:29:46 - Andras Lasso
(In r:711) Fixed #288: Replaced VIBROLIB_API by the common VTK_EXPORT macro to expose classes to the DLL interface correctly. Removed StdAfx.cxx&h as we don't use precompiled headers in Plus. Added reference to PlusConfigure.h and added vtkPlusCommon as a required lib, as these contain some basic macros (for exporting symbols, logging, timestamping, etc.) that are needed for all Plus library component.

#### 2011-09-09, 18:29:46 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-09-23, 14:41:36 - Csaba Pinter
Updating tickets (#155, #288, #202, #284)



#### 2011-09-23, 14:41:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #289 Serial communication implementation is duplicated in Vibro and BrachyTracking
Basic serial (RS-232) communication is implemented in both the BrachyTracking and in the Vibro library. It's important not to have duplicate code for the same functionality.

Recommended implementation steps:

*Step 1:* Automatic tests should be added for serial communication in Vibro before the rework that would allow us to easily test that there is no regression.

*Step 2:* Serial communication implementation shall be moved from Vibro and Brachytracking go into a common library (Signaling?) and that common library shall be used in both Vibro and Brachytracking.
Affected files:
PlusLib\\src\  racking\\BrachyTracking\\Utils\\SerialLine.cxx 
PlusLib\\src\  racking\\BrachyTracking\\Utils\\SerialLine.h
PlusLib\\src\\Vibro\\SerialBuffer.cxx
PlusLib\\src\\Vibro\\SerialBuffer.h
PlusLib\\src\\Vibro\\SerialCommHelper.cxx
PlusLib\\src\\Vibro\\SerialCommHelper.h


#### 2011-09-09, 19:01:45 - Andras Lasso
Siavash, please complete step 1 (add automatic test for the serial communication with the motor controller), then I'll do step 2.

#### 2011-09-09, 19:01:45 - Andras Lasso
assigned_to_id: changed from null to "siavashk"

#### 2011-09-09, 21:33:13 - Andras Lasso
The Vibro Mcdc motor controller code is currently not used by any projects, may work, but probably the code is incomplete.

Let's wait a few months to see if this motor controller code is needed at all. If needed, add tests, clean it up, etc. If not needed, then simply delete it from the repository.

#### 2011-09-09, 21:33:13 - Andras Lasso
assigned_to_id: changed from "siavashk" to null

#### 2011-09-09, 21:33:13 - Andras Lasso
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-Future"

#### 2011-12-13, 15:35:38 - Andras Lasso
Vibro module has  been removed

#### 2011-12-13, 15:35:38 - Andras Lasso
status: changed from "New" to "Invalid"


## #290 PlusLib-bin CMakeCache.txt have many duplicate values in variables
PlusLib-bin/CMakeCache.txt contains very very long variable names for PLUSLIB_DEPENDENCIES, PLUSLIB_INCLUDE_DIRS, PLUS_INCLUDE_DIRS:

PLUSLIB_DEPENDENCIES:INTERNAL=vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;Vibro;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;Vibro;vtkVolumeReconstruction;vtkImageAcquisition;vtkTrusCalibrationCommon;vtkTrusCalibration;vtkSignaling;vtkPlusCommon;UsFidSegAlgo;vtkTracking;vtkDataCollection;Vibro;vtkVolumeReconstruction
PLUSLIB_EXTERNAL_MSPROJECTS:INTERNAL=
PLUSLIB_INCLUDE_DIRS:INTERNAL=C:/devel/PlusNightly-bin/PlusLib/src;C:/devel/PlusNightly-bin/PlusLib-bin/src;C:/devel/PlusNightly-bin/PlusLib/src/DataCollection;C:/devel/PlusNightly-bin/PlusLib/src/Vibro;C:/devel/PlusNightly-bin/PlusLib/src/Signaling;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition/ICCapturing;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition/LinuxVideo;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition/MatroxImaging;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition/SonixVideo;C:/devel/PlusNightly-bin/PlusLib/src/ImageAcquisition/VideoForWindows;C:/devel/PlusNightly-bin/PlusLib/src/PlusCommon;C:/devel/PlusNightly-bin/PlusLib/src/Tracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/Ascension3DGTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/BrachyTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/BrachyTracking/Utils;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/FakeTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/FlockTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/FlockTracking/Utils;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/MicronTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/MicronTracking/Utils;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/NDICertusTracking;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/PolarisTracking;C:/devel/PlusNightly-bin/PlusLib/src/TrusCalibration;C:/devel/PlusNightly-bin/PlusLib/src/TrusCalibration/TrusCalibrationCommon;C:/devel/PlusNightly-bin/PlusLib/src/UsFidSegAlgo;C:/devel/PlusNightly-bin/PlusLib/src/VolumeReconstruction;C:/devel/PlusNightly-bin/PLTools/Ultrasonix/Ulterius-5.6.5/inc;C:/devel/PlusNightly-bin/PLTools/ImagingControl/ImagingControl-3.1/include;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PLTools/NDI/Certus/NDIoapi-3.0.0.66/include;C:/devel/PlusNightly-bin/PLTools/CIVCO/SEI/inc;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/BrachyTracking/Utils;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/BrachyTracking/Utils;C:/devel/PlusNightly-bin/PLTools/Ascension/Ascension3DG/inc;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/Ascension3DGTracking
//Path to the Plus library directory
PLUSLIB_LIBRARY_DIRS:INTERNAL=C:/devel/PlusNightly-bin/PlusLib-bin/bin
PLUS_INCLUDE_DIRS:INTERNAL=C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib/src/Tracking/ndicapi;C:/devel/PlusNightly-bin/PlusLib-bin/src/Tracking/ndicapi


#### 2011-09-12, 01:44:35 - Andras Lasso
(In r:726) re #290: Fixed cmake configuration warnings (unused -D values)

#### 2011-09-12, 01:57:36 - Andras Lasso
(In r:727) Fixed #290: Cleaned up CMakeLists.txt files. Fixed include file path handling (no more duplicate includes and it's also simpler), removed unused variables, etc.

#### 2011-09-12, 01:57:36 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #291 Add segmentation parameter dialog in iCalBrachy


#### 2011-09-23, 14:56:46 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-09-23, 15:20:38 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-10-11, 15:50:40 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #292 Configuration of PlusApp fails if brachytrus build option is disabled
Configuration of PlusApp fails if brachytrus build option is disabled, because UsePlusLib.cmake.in generates an empty INCLUDE_EXTERNAL_MSPROJECT() statement from the INCLUDE_EXTERNAL_MSPROJECT(@vcProj_BrachyStepper@) line

#### 2011-09-17, 02:11:19 - Tamas Heffter
(In r:759) Fixed #292: Configuration of PlusApp fails if brachytrus build option is disabled

#### 2011-09-17, 02:11:19 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #293 vibroAudioCardTest1 fails on certain machines
vibroAudioCardTest1 fails on PROSTATE and LIVER PCs.

PROSTATE has no audio output (it has a soundcard but it complains that no speaker or headphones are connected).
Maybe LIVER (Tomi's PC) doesn't have a working sound card?

Possible resolution options:
-set up the sound on PROSTATE and LIVER (plug in a headphone?), and/or
-add a build option (PLUS_USE_AUDIO) to enable/disable audio (and then disable audio on PCs without sound cards)


#### 2011-09-17, 05:36:19 - Andras Lasso
Siavash, please check with Tomi Heffter if he can set up the sound on LIVER and PROSTATE. If he cannot set up the sound (by plugging in a headphone, etc.), then disable the PLUS_USE_AUDIO option on these PCs (you can ask Tomi can change options on LIVER, you can ask me to change options on PROSTATE).

#### 2011-09-17, 05:36:19 - Andras Lasso
assigned_to_id: changed from null to "siavashk"

#### 2011-09-19, 02:15:24 - Andras Lasso
From: heffter.tamas@gmail.com [mailto:heffter.tamas@gmail.com] On Behalf Of Tamas Heffter
Sent: 2011-September-18 8:30 PM
To: Siavash Khallaghi
Cc: Andras Lasso
Subject: Re: vibroAudioCard

Hi Siavash, 

Unfortunately, I won't be available on Monday, but we can discuss it on Tuesday anytime. 
Probably it's going to be hard to identify the problem, since the latest Nightly test was successful on LIVER, and I'm still waiting for the latest Continuous build result on Prostate. The two errors were different also, does this error sounds familiar for you? 
- On Prostate: [ERROR] [000.001000] Failed to initialize DirectSound, error: -2005401480 [in C:\\Users\\lasso\\devel\\PlusContinuous-bin\\PlusLib\\src\\Vibro\\AudioCard\\DirectSoundInstance.cxx(23)] 
- On Liver: [ERROR] [000.001000] DirectSoundInstance::SetPriority failed because pDirectSound is invalid [in ..\\..\\..\\..\\PlusLib\\src\\Vibro\\AudioCard\\DirectSoundInstance.cxx(30)] 
Cheers, 
Tomi
2011/9/17 Siavash Khallaghi <siavashk@ece.ubc.ca>
Hi Tamas,

Since vibroAudioCardTest1 is failing on the Prostate and the Liver, could we please talk on Skype on Monday and try to get it working on those machines?

I am in a meeting with Tamas between 11 and 2 pm (PST). I am free other wise.

Siavash


#### 2011-09-19, 02:18:37 - Andras Lasso
The two errors are the same, I just added some more details to the error logging, that's why the text was different.

LIVER: maybe it works now because you plugged in your headset. You can try to run the tests with and without the headset plugged to confirm this.

PROSTATE: maybe it's enough just to plug in a headphone. It seems that the sound card recognizes that there is no headphone/speakers are plugged in and it refuses play a sound. Tomi, if you could plug in a headphone/earphone then I could try to run the tests remotely (I'm back in Kingston on Friday).


#### 2011-09-19, 02:18:37 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-09-19, 03:47:13 - Siavash Khallaghi
Hi Tomi,

I have a TA session in the afternoon on Tuesday from 2-4 pm (PST). We can meet before that.

Neither of the two errors mean anything to me, but I can ask Hani about it. he was the project manager for IPVE. If you can set a time for Tuesday, I can ask Hani to join us.



#### 2011-09-19, 04:09:41 - Andras Lasso
The errors are logged by our own code, even the file name and line number should be logged. Just check the source code to see what conditions they are logged in.
 

#### 2011-09-19, 04:41:42 - Tamas Heffter
Do you think it could detect an analog headset as well? I can understand the USB headset. Your idea is make sense for me, as you thought I've just plugged in my usb headset on Saturday. But anyway, I'll test it on Tuesday with analog and digital headsets and keep you guys updated. 
Siavash, we can just try it without Hani, because we caught all the errors as Andras said. I'll try to call you before 2pm (PST) over Skype.  

#### 2011-09-19, 05:07:40 - Andras Lasso
I think PROSTATE can detect analog connection of speakers.

Andras

-original message-
Subject: [Plus] Re: #293: vibroAudioCardTest1 fails on certain machines
From: Tamas Heffter <plus@alerts.assembla.com>
Date: 09/19/2011 00:42

#### 2011-09-20, 18:48:01 - Tamas Heffter
Guys, no luck... I've tried the test with/without headset, but worked properly in both cases. I've tried it while listening music, worked fine, however the last two nightly tests were failed on my workstation. 
Displaying the right error message would help to identify the problem: http://msdn.microsoft.com/en-us/library/ms898136.aspx

#### 2011-09-20, 19:51:10 - Andras Lasso
Tomi, could you just try to run the vibroAudioCardTest1 manually? Do you hear the sound?
Maybe the audio device is unavailable when you are logged out/screen is locked/access the computer through remote desktop?
Could you try to start BuildAndTest and immediately lock the computer to see if it fails or not?


#### 2011-09-21, 03:07:15 - Siavash Khallaghi
Tomi, I take it that you haven't been able to run it. I am available anytime on Skype if there is anything that I can do to help.

Also could you please send me the description of your soundcard? Maybe your soundcard driver does not support libraries in vibroAudioCardTest1.

#### 2011-09-21, 03:30:55 - Tamas Heffter
I've already tried it with headset, without headset, with another music in the background, from nightly build, running it manually, with locked screen, everything, but couldn't reproduce the error (i could always hear the sound). 

The error code was -2005401590 in the log, which is strange for me, tried to compare with these (http://msdn.microsoft.com/en-us/library/ms898136.aspx) but no luck. Should we add the possible error codes to PlusLib\\src\\Vibro\\AudioCard\\DirectSoundInstance.cxx(23)?

My video card is a Realtek High Definition audio (probably integrated to the motherboard). 


#### 2011-09-21, 03:33:22 - Tamas Heffter
On PROSTATE, most of the time the error code was -2005401480, which is different from HEART. 

#### 2011-09-21, 03:37:58 - Siavash Khallaghi
Tomi, I think th enumber that you see in the error is not the error code. I think it is the variable 'hr' that has not been initialized properly and that is the reason why you get a different number on each machine.

#### 2011-09-21, 03:38:17 - Tamas Heffter
Siavash, the following modification introduced the error first time in the continuous build, is it possible that it's not compatible with Windows XP (however, Andras has XP on BLADDER, but with no problem, and also PROSTATE is Win7)? 

dsound.h Revision: 757 by siavashk
Replaced dsound.h and dsound.lib files from Hani's IPVE (Inverse Problem in Vibro Elastography) with corresponding versions from Microsoft SDK version 7.0A. The path for these files on my machine was under: C:Program FilesMicrosoft SDKsWindows\u000B7.0AInclude C:Program FilesMicrosoft DirectX SDK (February 2010)Lib Also I think the previous commited version of dsound.lib was the same as this version.

#### 2011-09-21, 03:42:31 - Tamas Heffter
I think this is the init (there is no crash or anything, so that's a return value of the function): 
HRESULT hr=::DirectSoundCreate(NULL, &pDirectSound, NULL); 

But just in case, can you initialize it to 0 before the call?  

#### 2011-09-21, 04:27:37 - Andras Lasso
This initialization is completely OK, it's the shortest and simplest:
HRESULT hr=::DirectSoundCreate(NULL, &pDirectSound, NULL);

This is correct as well, but it is unnecessary to initialize the variable to 0 then assign another value:
HRESULT hr=0;
hr=::DirectSoundCreate(NULL, &pDirectSound, NULL);

You only need to initialize the variable if you don't initialize it with a return value, such as:
HRESULT hr=0; // need to initialize hr here because maybe SomeFunction will not set its value
SomeFunction(1, 2, 3, &hr);


#### 2011-09-30, 15:08:58 - Csaba Pinter
assigned_to_id: changed from "siavashk" to "lassoan"

#### 2011-10-11, 12:27:55 - Andras Lasso
The test fails if there is no audiocard available. This is found to be caused by either of these:
* there is no usable audio device available (PROSTATE requires a headphone plugged in)
* the audio device is blocked (when a user logs off from remote desktop then the audio card becomes blocked)

Solution:
* Make sure that there is an available audio device in all test PCs
* Don't use Microsoft's remote desktop (Microsoft Terminal Server Client), but you use logmein instead. If you logged in with Microsoft remote desktop then make sure to log in locally before runnning tests (logging in locally unblocks the audio device)

#### 2011-10-11, 12:27:55 - Andras Lasso
status: changed from "Accepted" to "Invalid"

#### 2011-10-29, 03:38:53 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:53 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #294 Latest fCal freezes after starting probe calibration 
Workaround:
*Option A: Use the latest Plus version, but you won't see the image you are acquiring, only on the ultrasound machine. The application will only show the results when the calibration is ready.
*Option B: Use the latest released Plus binary package to do the calibration and get the calibration parameters from the resulting XML file.
*Option C: Capture a short sequence using TrackedUltrasoundCapturing and send to Csaba, he'll create a config file that works with an earlier Plus release.

ETA of the fix: September 30

#### 2011-09-19, 14:23:38 - Csaba Pinter
It works, only the UI doesn't refresh. I postponed doing it after we consolidate the calibration module, because the acquisition will be done by the application layer, not the calibration algorithm classes. Solving the UI refresh problem would be a major hack, which we would undo after 2 weeks anyway.
In the meantime, we should use the stable 1.2.2 release for calibration. As a matter of fact, I think it would be a reasonable general rule to always use the latest released version instead of the trunk, because the trunk is most likely less stable than the last release.

#### 2011-09-19, 14:23:38 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-09-19, 15:25:10 - Tamas Ungi
Does 1.2.2 have the segmentation parameter setting graphical widget?

#### 2011-09-19, 15:30:13 - Csaba Pinter
No, unfortunately it doesn't, but if you capture a short sequence using TrackedUltrasoundCapturing and send to me, I can set it up for you.
Or you can use the latest to set the parameters and do the calibration with the released.
Or you can use the latest for everything, but you won't see the image you are acquiring, only on the ultrasound machine (which is the other laptop for the Terason). The application will only show the results when the calibration is ready.

I would suggest the first or the second solution. Sorry for the inconvenience.

#### 2011-09-19, 22:51:01 - Andras Lasso
There hasn't been rules about this until now and the user/developer base of Plus is quickly growing, so it's perfectly normal that we have these issues. Let's see how should we handle this in the future and apply that to this case.

Plus 'users' don't just use binary releases but they directly add their stuff to the trunk to minimize non-trivial merges and get latest developments as soon as possible. In this environment I think we should not introduce any regressions intentionally.

If there is any regression that cannot be fixed quickly (within a day?) and can impact anybody's work then we should let the developers know about it:
-Create a ticket
-Set its priority to 'highest'
-Describe workaround
-Describe estimated time of the fix

I update this issue accordingly. Csaba, please add the estimated time of arrival of the fix.

Let me know if you have any comments or other suggestions.


#### 2011-09-19, 22:51:10 - Andras Lasso
status: changed from "Invalid" to "Accepted"

#### 2011-09-19, 22:55:58 - Andras Lasso
description: changed from "" to "Workaround:
*Option A: Use ..."

#### 2011-09-19, 22:55:58 - Andras Lasso
priority: changed from "High (2)" to "Highest (1)"

#### 2011-09-19, 23:40:23 - Csaba Pinter
I agree with Andras' suggestion.

I didn't do the quick&dirty fix right away, because I would have introduced another thing that needed to be fixed, as we are in the middle of a major architectural change (hopefully the last big one that is needed).

There are two possibilities:
- I do the q&d fix tomorrow (shouldn't take longer than a couple of hours)
- The issue is decently fixed when the architectural change is done (I think the September 30 esimation is OK), but we have to live with this bug in the next two weeks (see workarounds).

It is good for me either way.

#### 2011-09-19, 23:40:38 - Csaba Pinter
description: changed from "Workaround:
*Option A: Use ..." to "Workaround:
*Option A: Use ..."

#### 2011-09-23, 14:36:36 - Csaba Pinter
Updating tickets (#294, #182, #206, #272)



#### 2011-09-23, 14:36:36 - Csaba Pinter
milestone_id: changed from "Release - MICCAI" to "Release - Before Hopkins"

#### 2011-09-27, 21:48:18 - Csaba Pinter
(In r:824) Fixed #294: Realtime calibration code is now in App, so it can refresh itself properly and the realtime image is shown (it does not seem frozen anymore)

#### 2011-09-27, 21:48:18 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #295 Segmentation parameters were not saved to config file 
After changing the segmentation parameters with the new GUI editor (spacing, ROI, etc), clicking the 'Save and Exit' button, we expected to save the segmentation parameters to the current configuration file, but it didn't modify it. Is it the normal behavior? 

#### 2011-09-23, 15:20:54 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-09-23, 15:21:00 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-09-23, 15:24:48 - Csaba Pinter
priority: changed from "High (2)" to "Normal (3)"

#### 2011-09-28, 18:20:35 - Csaba Pinter
(In r:833) Fixed #295: Button was misleading - label changed to 'Apply and Close'

#### 2011-09-28, 18:20:35 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #296 Show devices if a calibrated configuration file presented within fCal 
Would be great to see the devices using a calibrated configuration file within fCal. Now, we have to run the calibration process again if we want to show the devices. 

#### 2011-09-23, 14:57:50 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-09-23, 15:21:16 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-09-30, 19:51:29 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-03, 14:28:00 - Csaba Pinter
(In r:862) Re #296: Read image to probe transform from config file in vtkCalibrationController

#### 2011-10-03, 14:29:07 - Csaba Pinter
(In r:863) Fixed #296: Show devices checkbox is active if calibrated configuration file is loaded in fCal and devices are displayed correctly

#### 2011-10-03, 14:29:07 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #297 Separate stepper calibration algorithms 
Separate stepper calibration algorithms
* Create a standalone algorithm class for each stepper calibration step (translation axis calibration, rotation axis calibration, center of rotation computation, etc)
* Add FiducialPointCoordinatePx to TrackedFrame for storing N wire segmentation results 

#### 2011-09-17, 20:59:59 - Tamas Heffter
(In r:763) re #297: WIP Separate stepper calibration algorithms
- Added new files for translation and rotation axis calibration algo 
- Added vtkPoints to TrackedFrame for storing segmented wire positions => logic not yet implemented in segmentation classes 

#### 2011-09-19, 00:18:37 - Tamas Heffter
(In r:764) re #297: WIP Separate stepper calibration algorithms
- Fixed build warning 

#### 2011-09-21, 22:39:30 - Tamas Heffter
(In r:783) re #297: WIP Separate stepper calibration algorithms
- Changed PlusMath::LSQRMinimize to robust LSQR (added outlier removal)
- Added PlusMathTest and baseline for testing PlusMath::LSQRMinimize function 


#### 2011-09-21, 22:43:44 - Tamas Heffter
Guys, could you please code review r:783. 
If it's OK, I need to change a few baselines according to the new LSQRMinimize with outlier removal algorithm (see http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=2329). Until that, we will have some failed test. 

#### 2011-09-21, 22:50:31 - Tamas Heffter
(In r:784) re #297: WIP Separate stepper calibration algorithms
- Commit default parameter for RemoveOutliersFromLSRQ function (thresholdMultiplier = 3.0)


#### 2011-09-21, 22:57:17 - Andras Lasso
Never commit anything that intentionally breaks the dashboard. Update the data, test the code, etc. before committing. If you already committed and there are failing tests then fixing that should be the highest priority.

If you cannot do that within a few hours then handle it as a regression (highest priority ticket, description of workaround - if applicable, estimated time of arrival for the fix).

Andras

-original message-
Subject: [Plus] Re: #297: Separate stepper calibration algorithms
From: Tamas Heffter <plus@alerts.assembla.com>
Date: 09/21/2011 18:44

#### 2011-09-22, 00:01:57 - Tamas Heffter
I wouldn't think it's a good idea. It could introduce new errors, if we don't have a true baseline. There can be bugs in the new code, and if I immediately change the baseline we won't find it easily, nobody will be informed about the changes. I think we should avoid the baseline changes, except we have a good reason for that with code review. In my opinion it's better to have failed tests for one day (or until other can verify the needs) than add more bugs and hide it under the hood.

Regardless, I'll do it today evening :-) 

#### 2011-09-22, 00:01:57 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-09-22, 00:11:40 - Tamas Ungi
What does baseline mean?

#### 2011-09-22, 00:25:44 - Tamas Heffter
Baseline is the algorithm result that we accepted or proved as a valid result. 

#### 2011-09-22, 00:53:55 - Andras Lasso
If you think that the baseline is good and the code is wrong then of course you have to fix the code.

Andras

-original message-
Subject: [Plus] Re: #297: Separate stepper calibration algorithms
From: Tamas Heffter <plus@alerts.assembla.com>
Date: 09/21/2011 20:02

#### 2011-09-22, 01:13:37 - Tamas Heffter
(In r:785) re #297: WIP Separate stepper calibration algorithms
- Baseline updated according to the new algorithm result


#### 2011-09-22, 01:14:15 - Tamas Heffter
That's the whole point. This was an algorithmic change, not just a code optimization, so basically I cannot prove that it's good or not - so still need a review. 

#### 2011-09-22, 17:15:22 - Tamas Heffter
(In r:790) re #297: WIP Separate stepper calibration algorithms
- IMAGE_DATA_TYPE enum moved to PlusCommon
- Added IMAGE_DATA_TYPE to vtkTranslAxisCalibAlgo to identify the input data

#### 2011-09-22, 22:34:15 - Tamas Heffter
(In r:792) re #297: WIP Separate stepper calibration algorithms
Added vtkTranslAxisCalibAlgoTest and fixed vtkTranslAxisCalibAlgo

#### 2011-09-24, 03:04:04 - Tamas Heffter
(In r:795) re #297: WIP Separate stepper calibration algorithms
Added report generation to vtkTranslAxisCalibAlgo and test 

#### 2011-09-24, 03:32:24 - Tamas Heffter
(In r:796) re #297: WIP Separate stepper calibration algorithms
Report generation failed on continuous build, need more investigation. Until that removed from test. 

#### 2011-09-24, 14:20:34 - Tamas Heffter
(In r:797) re #297: WIP Separate stepper calibration algorithms
- Changed log level to trace in order to find out the problem with report generation on PROSTATE
- Added trace messages to all function in vtkGnuplotExecuter and vtkHTMLGenerator

#### 2011-09-24, 16:32:24 - Tamas Heffter
(In r:798) re #297: WIP Separate stepper calibration algorithms
- Moved GetStepperEncoderValues to vtkBrachyTracker
- Changed back trace level to info for vtkTranslAxisCalibAlgoTests 
- replaced = ''; in the whole code with:
- NULL, if it's a char* and you get/set it with VTK macros (you can then set the pointer to an empty string if you want to avoid having a NULL pointer: this->Something=NULL; SetSomething(''); )
- nothing, if it's a std::string constructor (std::string something = ''; is unnecessary, you can always safely use std::string something;)
- clear(), if it's a std::string clearing (instead of something = ''; using something.clear() is more elegant and efficient)

#### 2011-09-24, 17:10:45 - Tamas Heffter
(In r:800) re #297: WIP Separate stepper calibration algorithms
- Added translation axis calibration documentation to header 
- Optimized report table column filling 

#### 2011-09-24, 18:36:19 - Tamas Heffter
(In r:802) re #297: WIP Separate stepper calibration algorithms
- Changed stepper calibration controller to use only the new vtkTranslAxisCalibAlgo 

#### 2011-09-29, 04:02:22 - Tamas Heffter
(In r:838) re #297: WIP Separate stepper calibration algorithms
- Added new vtkCenterOfRotationCalibAlgo and vtkRotationAxisCalibAlgo implementation with basic test files (not yet used for nightly tests)

#### 2011-09-29, 04:55:03 - Tamas Heffter
(In r:839) re #297: WIP Separate stepper calibration algorithms
Fixed failed tests due to TranslationAxisOrientation set mistake 

#### 2011-09-29, 22:22:06 - Tamas Heffter
(In r:848) re #297: WIP Separate stepper calibration algorithms
Finished center of rotation algorithm and added nightly test for ulterius data 

#### 2011-09-30, 13:59:43 - Tamas Heffter
(In r:849) re #297: WIP Separate stepper calibration algorithms
Fixed build errors on systems where the PLUS_USE_BRACHY_TRACKER is disabled 


#### 2011-09-30, 21:03:23 - Tamas Heffter
(In r:856) re #297: WIP Separate stepper calibration algorithms
Finished report generation for vtkRotationAxisCalibAlgo 


#### 2011-10-01, 21:00:49 - Tamas Heffter
(In r:859) re #297: WIP Separate stepper calibration algorithms
Added rotation axis calibration test and baseline to repository 
Added center of rotation histogram generation to the algorithm with gnuplot script 


#### 2011-10-01, 21:37:12 - Tamas Heffter
(In r:860) re #297: WIP Separate stepper calibration algorithms
Fixed continuous build error by setting the program path to vtkPlusConfig 
Changed default output directory to ./Output in construction time under vtkPlusConfig to avoid error if the program path haven't been set

#### 2011-10-01, 22:27:35 - Tamas Heffter
(In r:861) re #297: WIP Separate stepper calibration algorithms
Changed to the new rotation axis calibration algo in the stepper calibration controller 

#### 2011-10-06, 21:18:47 - Tamas Heffter
(In r:898) re #297: WIP Separate stepper calibration algorithms
- Added spacing calibration algo 
- Added Frame grabber tests 
- Removed GetFrameSize from vtkTrackedFrameList
- Updated baseline regarding to modifications 

#### 2011-10-07, 21:38:47 - Tamas Heffter
(In r:906) re #297: WIP Separate stepper calibration algorithms
- Added rotation encoder algo with test
- Added phantom registration algo for brachy stepper
- Removed vtkCalibrationController::RegisterPhantomGeometry( double phantomToProbeDistanceInMm[2] )


#### 2011-10-08, 00:42:54 - Tamas Heffter
(In r:908) re #297: WIP Separate stepper calibration algorithms
Removed stepper calibration controller from vtkUSCalibrationControllerTest1 

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-16, 02:33:34 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-10-28, 14:22:33 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #298 Clean up ProstateBiopsyGuidance in Plus-App
Hussam, I included the Vibro source directory in the ProstateBiopsyGuidance project. Could you please look at the code and clean it up? I would appreciate it.

The code currently compiles without any errors.

#### 2011-09-30, 15:00:42 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-09-30, 18:54:00 - Siavash Khallaghi
It was cleaned up this week. Sorry for not closing it.

#### 2011-09-30, 18:54:00 - Siavash Khallaghi
status: changed from "New" to "Fixed"


## #299 Make TrackedFrame a vtkObject class
So we can use proper Set/Get functions instead of the copied ObjectMacros in case of some members, and instead of the public accessor in other cases.

#### 2011-09-29, 15:57:32 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-09-29, 22:06:11 - Csaba Pinter
(In r:845) Re #299: TrackedFrame has only protected members now, except ImageData, because it is stored as an object, and a copy is created every time it is requested with a Get function

#### 2011-09-29, 22:06:45 - Csaba Pinter
(In r:846) Test #299: Changes due to member accessibility changes in TrackedFrame

#### 2011-09-29, 22:06:45 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-09-29, 22:08:02 - Csaba Pinter
The original goal (making it a vtk object) is not reasonably achievable since in tons of places, a TrackedFrame is created on the stack, which cannot be done with a vtkObject

#### 2011-09-29, 23:00:37 - Tamas Heffter
Please update iCalBrachy source also. 

#### 2011-09-30, 18:26:35 - Csaba Pinter
(In r:852) Re #299: TrackedFrame has only protected members now, including ImageData, which can be accessed by a Get function that returns a pointer to it

#### 2011-09-30, 18:26:46 - Csaba Pinter
(In r:853) Fixed #299: Changes due to member accessibility changes in TrackedFrame

#### 2011-09-30, 18:26:46 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #300 Tap and wire the iCalB 1.0 phantom


#### 2011-09-30, 13:50:15 - Thomas Kuiran Chen
Got a little complication here: the tap holes have unresolved support materials left from the printing (HMRC did not properly resolve it this time).  This prevented the tap screw to go deeper during tapping.  I have returned the phantom to HMRC and they will put it in a acid bath to complete resolve the residuals.  - Thomas

#### 2011-09-30, 13:50:15 - Thomas Kuiran Chen
status: changed from "New" to "Test"

#### 2011-10-07, 11:58:38 - Thomas Kuiran Chen
The phantom was picked at HMRC with residual free.  I have finished tapping and tested the screw mount on the stepper.  All worked fine.  - Thomas

#### 2011-10-07, 11:58:38 - Thomas Kuiran Chen
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #301 Coordinate Hopkins visit (iCal roadshow)


#### 2011-09-30, 13:44:16 - Thomas Kuiran Chen
Clif will contact Dr. Song and other Med. Physicist at JHU for their availability and schedule.  We will consolidate our plan around it.

#### 2011-09-30, 13:44:16 - Thomas Kuiran Chen
status: changed from "New" to "Test"

#### 2011-10-07, 17:35:20 - Csaba Pinter
Moved to iCalBrachy space

#### 2011-10-07, 17:35:20 - Csaba Pinter
status: changed from "Test" to "Invalid"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #302 Revise configuration files
* Some of the test configuration files are the same (eg. Test_PlusConfiguration_CalibrationOnly_iCal.xml and Test_PlusConfiguration_CalibrationOnly_SonixRP_Ulterius_iCal.xml)
* Re-think USCalibration element -> Transforms
** Its children basically describe the same thing but under different names
** Segmentation parameters can go outside this element
* Delete standalone elements (PhantomDefinition....xml)
* Add wiring version into PhantomDefinition/Description element

#### 2011-09-30, 15:14:22 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release - Next"

#### 2011-10-11, 15:20:03 - Csaba Pinter
Delete unused (and now also unread) attributes:
DataFileSuffix, SegmentationErrorLogFileNameSuffix, SegmentationAnalysisFileNameSuffix, Temp2StepCalibAnalysisFileNameSuffix

#### 2011-10-21, 15:26:41 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-27, 19:44:51 - Csaba Pinter
Revision 1013: fCal-related config file versions invreased to 1.3, removed unused elements and added fCal application configuration

#### 2011-10-27, 19:44:51 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-27, 19:45:36 - Csaba Pinter
Revision 1014: fCal application configuration is read by the toolboxes (number of needed data for freehand and stylus calibration)

#### 2011-10-27, 19:51:30 - Csaba Pinter
The same (changing the version of the root element to 1.3 and removing the unused elements, probably from USCalibration) in case of the iCal-related files

#### 2011-10-27, 19:51:30 - Csaba Pinter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-10-28, 20:56:12 - Csaba Pinter
(In r:1050) Re #302: Changed all remaining config files accordingly

#### 2011-10-28, 20:58:34 - Csaba Pinter
SegmentationParameters is the only element in USCalibration now (except an empty ProbeCalibration element that is only used to be able to write the results in but it can be created easily if it is not there).

USCalibration and CalibrationController should be removed, so SegmentationParameter element is right under root.
Saving the result needs further discussion (related to #351 and #352)

#### 2011-10-28, 20:58:34 - Csaba Pinter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-10-28, 20:58:51 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-07, 22:05:02 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.1 - Before Hopkins" to "Release Plus-1.4.0"

#### 2011-11-25, 15:56:46 - Csaba Pinter
description: changed from "* Some of the test configur..." to "* Some of the test configur..."

#### 2011-12-01, 00:21:54 - Csaba Pinter
(In r:1249) Re #302: Files containing separate elements removed

#### 2011-12-04, 00:17:35 - Csaba Pinter
(In r:1269) Re #302: Rendering element added into device set configuration files instead of Tool/Model element; Phantom/Description/WiringVersion element added (not used now though); USCalibration element replaced with Segmentation

#### 2011-12-04, 00:18:28 - Csaba Pinter
(In r:1270) Re #302: Updated application source files according to configuration file changes

#### 2011-12-04, 01:46:30 - Csaba Pinter
(In r:1271) Re #302: Removed Model element reading from vtkTrackerTool

#### 2011-12-09, 00:36:51 - Csaba Pinter
(In r:1301) Re #302: Model became a type, DisplayableObject has no nested elements, only attributes in Rendering section of device set configuration; Fixed #390: vtProbeCalibrationAlgo saves results properly; Re #312: IsExistingTransform function added to vtkTransformRepository; GetTrackerToolReferenceFrame function added to vtkDataCollector

#### 2011-12-09, 00:37:49 - Csaba Pinter
(In r:1302) Re #312: Freehand calibration works; Re #302: Model became a type, DisplayableObject has no nested elements, only attributes in Rendering section of device set configuration

#### 2011-12-22, 22:17:20 - Csaba Pinter
(In r:1362) Re #302: version attributes removed from sub-nodes of the device set configuration, only the PlusConfiguration element's version attribute is used (which is major.minor, in this this will be case 1.4 <- this has to be changed from the current 1.3 when releasing!)

#### 2011-12-23, 20:25:15 - Csaba Pinter
(In r:1368) Test #302: Device set configuration file version and Plus version changed to 1.4.0; Executables (PlusVersion, MetaImageSequenceViewer, EditSeqMetaFile, CreateSliceModels) added to install

#### 2011-12-23, 20:25:15 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-23, 21:58:08 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #303 Saved synchronized data should be possible to play back
Now, SavedDataset mode in Tracker and VideoSource works only if the two buffers were separately saved. The playback of saved synchronized data should also be made possible for demo preparation, and maybe also for testing components independently from synchronization.

#### 2011-09-29, 12:54:51 - Andras Lasso
'works only if the two buffers were separately saved' => what is the error you get?
how to reproduce (which exe, xml, data file)?

#### 2011-09-29, 15:41:42 - Tamas Ungi
For e.g. (I think this is the only example right now) vtkOpenIGTLinkBroadcasterTest1 in vtkDataCollection/Testing needs a video buffer and a tracker buffer now. If you provide it with an .mha file recorded with TrackedUltrasoundCapturing, it cannot play back and broadcast this recorded procedure.
Example tracked frame list buffer:
s:\\images\\LiveUltrasound\\2011-09-27_ProstateUS\\ProstatePhantom_ECProbe_SonixGPS_Short.mha
(for those who have access to the Queen's image server)
 
When it tries to read the video buffer and the tracker buffer, it fails with error Unable to read Status field of frame.... There is no Status field in the recorded file.
 
This test has to be rewritten to read just one tracked frame list buffer from file. Not use separate tracker and video source.
I think more tests should be added to Plus using recorded tracked frame lists. It can test features independently from synchronization.
 
 
From: Andras Lasso [mailto:plus@alerts.assembla.com] 
Sent: Thursday, September 29, 2011 10:04 AM

#### 2011-09-29, 22:16:19 - Andras Lasso
(In r:847) Fixed #303: does not require framenumber and status fields any more when reading test data from mha file (only if filtered timestamp has to be computed from unfiltered timestamp)

#### 2011-09-29, 22:16:19 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2011-09-29, 22:16:19 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #304 Use least square minimizer from PlusMath instead of LinearLeastSquares class
* Use the above mentioned function in vtkCalibrationController
** Take beamwidth weights into account
** Delete code that took care of outliers
** The results will probably be a little different -> change baseline
* TrusCalibrationCommon project can be deleted (the only class that was used was LinearLeastSquares)

#### 2011-09-30, 15:14:27 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-04, 21:33:21 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-05, 19:27:46 - Csaba Pinter
(In r:894) Re #304: Cleaning up vtkCalibrationController

#### 2011-10-05, 20:30:25 - Csaba Pinter
(In r:895) Re #304: Cleaning up vtkCalibrationController (unused function getPRE3DforRealtimeImage deleted)

#### 2011-10-05, 21:39:39 - Csaba Pinter
(In r:897) Re #304: addDataPositionsPerImage and addValidationPositionsPerImage functions are unified into AddPositionsPerImage, and GetBeamwidthWeightForBeamwidthMagnitude function created for computing the beamwidth weight for the actual beamwidth magnitude and axial depth

#### 2011-10-06, 22:22:53 - Csaba Pinter
(In r:899) Fixed #304: Calibration now uses PlusMath instead of TrusCalibrationCommon/LinearLeastSquares; TrusCalibrationCommon project deleted (not used any more); baselines updated (results are slightly different due to the new outlier filtering); Beamwidth weights are applied the same way, but not tested because there is no test yet for it (see #306)

#### 2011-10-06, 22:22:53 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #305 Unify vtkCalibrationController and vtkProbeCalibrationControllerIO classes
* Contents of vtkProbeCalibrationControllerIO should go into vtkCalibrationController
** Member variables that stored the results to print can be deleted - everything should be printed where computed
** Set/Get functions can be deleted too
* Move application-related code into the applications
* Find a good name for vtkCalibrationController and rename it

#### 2011-09-30, 15:14:30 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-07, 20:17:34 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-07, 20:18:41 - Csaba Pinter
(In r:905) Re #305: Tidying up vtkProbeCalibrationControllerIO before unifying

#### 2011-10-07, 22:55:24 - Csaba Pinter
(In r:907) Re #305: Contents of vtkProbeCalibrationControllerIO moved into vtkCalibrationController; vtkProbeCalibrationControllerIO deleted; Deleting unnecessary get functions that were only called by the IO class is still needed

#### 2011-10-11, 18:29:02 - Csaba Pinter
(In r:918) Fixed #305: Removed member variables and getter functions that are no longer used

#### 2011-10-11, 18:29:02 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #306 Add test for calibration with beam profiling


#### 2011-10-06, 22:22:53 - Csaba Pinter
(In r:899) Fixed #304: Calibration now uses PlusMath instead of TrusCalibrationCommon/LinearLeastSquares; TrusCalibrationCommon project deleted (not used any more); baselines updated (results are slightly different due to the new outlier filtering); Beamwidth weights are applied the same way, but not tested because there is no test yet for it (see #306)

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-21, 14:04:10 - Csaba Pinter
file:cmVomw--0r4jlwacwqjQWU

#### 2011-10-21, 14:04:10 - Csaba Pinter
Attachment added: "Component_AutoUSCalibration.config"

#### 2011-10-21, 14:04:10 - Csaba Pinter
file:cmYHUE--0r4jlwacwqjQWU: Beamwidth configuration file for L14-5 freehand probe and SonixTOUCH

#### 2011-10-21, 14:04:10 - Csaba Pinter
Attachment added: "Component_US3DBeamProfile.config"

#### 2011-10-21, 14:04:50 - Csaba Pinter
Thomas sent me a beamwidth profile file (that I uploaded here), that I can use when creating a test.

#### 2011-10-21, 14:04:50 - Csaba Pinter
assigned_to_id: changed from "thomasckr" to "pinter"

#### 2011-10-21, 15:42:43 - Csaba Pinter
priority: changed from "High (2)" to "Normal (3)"

#### 2011-10-21, 16:24:51 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2012-01-20, 20:15:20 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:20 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-02-01, 20:10:36 - Csaba Pinter
Beamwith-related code was removed in connection with ticket #418, needs to be restored first.

#### 2012-08-31, 13:00:09 - Andras Lasso
Beamwidth compensation will not be re-introduced in the foreseeable future, as it adds complexity to the calibration and it's unclear if there is any benefit (beamwidth effects seem to be noticable if extreme imaging settings are used).

#### 2012-08-31, 13:00:09 - Andras Lasso
status: changed from "New" to "Invalid"


## #307 Clean up VTK image usage in Plus
In Plus and PlusApp:
* Check all vtkImageFlip instances and remove them, update camera positions
* Check all vtkImageData usage, update the camera and remove flips
* Remove PlusVideoFrame::CopyToVtkImage
* Remove all VTK IO classes, use ITK IO classes instead 
* Add to developer's guide: Don't use VTK IO classes for reading/writing image data (or flip right after reading or right before writing). VTK image and ITK image use the same memory layout


#### 2011-09-30, 14:52:48 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-21, 16:24:32 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-10-25, 17:23:39 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-26, 00:41:18 - Tamas Heffter
(In r:996) re #307: Clean up VTK image usage in Plus
- Checked all vtkImageFlip instances and removed them, updated camera positions
- Checked all vtkImageData usage, updated the camera and remove flips
- Removed PlusVideoFrame::CopyToVtkImage
- Removed all VTK IO classes, used ITK IO classes instead
- updated developer's guide

#### 2011-10-26, 00:42:05 - Tamas Heffter
(In r:997) re #307: Clean up VTK image usage in Plus
- Checked all vtkImageFlip instances and removed them, updated camera positions
- Checked all vtkImageData usage, updated the camera and remove flips
- Removed PlusVideoFrame::CopyToVtkImage
- Removed all VTK IO classes, used ITK IO classes instead
- updated developer's guide

#### 2011-10-26, 00:43:17 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #308 Need to show the wire numbers in fCal
The current wire segmentation algorithm determines the wire positions based on the distance from the image origin, therefore it matters how we hold the probe (if we rotate it by 180deg around its long axis).

Need to show the wire numbers in fCal (at least in the segmentation parameter dialog) and show a help message:
* check if the line numbers are consistent with the CAD model (show a sketch to explain it or describe exactly which side of the phantom the marked axis should point to)
* check if the MF axes are correctly shown (by touching the marked side of the transducer and that the probe surface is near the MF axis origin)

#### 2011-09-28, 14:08:13 - Andras Lasso
Some more explanation why it's not enough to just pay attention to the image orientation value setting:

You can only determine the correct image orientation if you define the marked side and
1. Verify that the marked side is consistent with the image orientation value.
2. The marked side of the probe is closer to the left side of the phantom. This is trivial with the stepper and the optical tracker (as you cannot rotate the probe by 180deg in these cases), but with the EM tracker it's easy to hold the probe incorrectly.

If you make a double error (incorrectly set the image orientation value and incorrectly position the probe) then you can get a small calibration error, but you can run into troubles later on (when visualizing, reconstructing the results, etc.)

To eliminate the 2. check we would need to add an additional wire, which could be detected automatically or by the user to resolve the ambiguity.

#### 2011-09-30, 14:54:31 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-21, 16:25:06 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-02-03, 23:44:42 - Csaba Pinter
(In r:1437) Re #308: fCal displays wires in the phantom

#### 2012-02-24, 18:47:39 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:20 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-06, 13:47:56 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-07, 19:29:10 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-06-08, 19:04:01 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-08, 20:37:38 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-06-18, 18:03:30 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-25, 15:08:44 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-07-16, 17:47:54 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-17, 20:16:07 - Adam Rankin
(In r:1931|plus:1931) re #308 Wire names now overlayed near wire positions when segmented point data is available.

Automatically hidden and shown by clients depending on the validity of data sent to the image visualizer.

#### 2012-07-17, 20:16:25 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #309 Segmentation algorithm fails to detect pattern from correctly identified fiducial candidates
When the endocavity probe is used the segmentation works only if the ROI is set to a small region only. The segmentation algo cannot segment those clear images with candidates on the real wires. 

There can be problem with just the visualization and/or the algorithm itself. If Csaba can create a standalone app that uses the segparam setting widget with a real-time or saved data source then Andras could investigate the issue.

#### 2011-09-30, 14:55:37 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-09-30, 14:56:46 - Csaba Pinter
Add the EC with Sonix GPS data to image server and its path here

#### 2011-10-18, 16:41:36 - Csaba Pinter
(In r:956) Re #309, Re #276: Standalone app that provides connecting to device sets and changing changing the segmentation parameters using SegmentationParameterDialog. It will act as the test for that dialog too.

#### 2011-10-18, 19:22:21 - Csaba Pinter
(In r:957) Re #309: Loop times are now correctly computed even if there is no tracker or video source, but the other is saved dataset.

#### 2011-10-18, 19:42:24 - Csaba Pinter
(In r:958) Re #309: Small bugs related to buttons and mouse cursor fixed in SegmentationParameterDialogTest

#### 2011-10-19, 14:59:25 - Csaba Pinter
I am not sure which phantom was used when this bug occurred, but if it was the fCal phantom with the blue wires (I think it is the most probable), then this can be the same issue that is described in #332.

Andras (as you submitted this ticket), please confirm.

#### 2011-10-19, 19:16:12 - Andras Lasso
It was the fCal phantom with the blue wires, so probably it's the same problem as #332.

#### 2011-10-19, 19:16:40 - Andras Lasso
Duplicate of #332

#### 2011-10-19, 19:16:40 - Andras Lasso
status: changed from "New" to "Invalid"


## #310 Remove enums from vtkTracker 
* Remove enums from vtkTracker => use transform name for identification instead 
* Make video source and tracker private under DataCollector 
* Change the Name attribute to TransformName in the config files 
* Change PortNumber to PortName and string
* Save tools in a std::map<PortName, vtkTrackerTool*> 
* Create inline functions like GetToolIteratorBegin() and GetToolIteratorEnd()
* Get tools by name Tracker->GetTool(const char* toolName) 
* add Tracker->GetTransform(const char* TransformName) functions for the tools 
* Define transform names for each class in the config file to use (class should use these transform names to get the right transform from the TrackedFrame or from the Tracker)


#### 2011-09-30, 14:58:41 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 15:31:36 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-10-28, 15:31:36 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-01, 17:40:30 - Tamas Heffter
description: changed from "* Remove enums from vtkTrac..." to "* Remove enums from vtkTrac..."

#### 2011-11-04, 14:53:31 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 14:53:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-11-04, 21:34:39 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 21:34:39 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:49:00 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-22, 18:29:13 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-22, 18:32:28 - Tamas Heffter
(In r:1195) re #310: 
- Removed enums from vtkTracker => used transform name for identification instead
- Changed PortNumber to PortName and string
- Stored tools in a std::map<PortName, vtkTrackerTool*>
- Created inline functions GetToolIteratorBegin() and GetToolIteratorEnd() for iterating tools 
- Added get tools by name and get tools by port number (those should be unique) 


#### 2011-11-22, 18:32:28 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-11-22, 22:10:17 - Csaba Pinter
(In r:1196) Re #310: TrackerToolNames added under fCal element in device set configuration files; Formatting fixed in vtkPlusConfig.cxx; GetNumberOfTools function re-added to vtkTracker

#### 2011-11-22, 22:10:56 - Csaba Pinter
(In r:1197) Re #310: Changes according to port name instead of port number in tracker tools

#### 2011-11-22, 22:56:19 - Csaba Pinter
(In r:1198) Re #310: Reference tool name added to fCal section of the device set configuration file

#### 2011-11-22, 22:57:35 - Csaba Pinter
(In r:1199) Re #310: fCal works with the new PortName

#### 2011-11-23, 04:26:21 - Tamas Heffter
(In r:1202) re #310: Updated Micron tracker code with the new Tool handling 

#### 2011-11-23, 14:36:11 - Tamas Heffter
(In r:1204) re #310: Check tool name and port name before we set it, fixed a few tests 

#### 2011-12-03, 18:20:56 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-22, 16:20:29 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #311 Use tool transform name in TrackedFrame instead of ToolName
Save ToolTransform name into sequence metafile for each tool

Add the following function to PlusVideoFrame:  


~~~~
bool PlusVideoFrame::IsImageValid()
{
  return ( imageData != NULL )
}


~~~~


Add new field for each frame in the metafile which shows the image data status (OK, INVALID)
*On write:* 
* check the frame sizes before write and keep the largest region 
* if the image data is NULL (not valid) save a blank image (black, same size as the largest region) and set the image status to INVALID in the header 
* if the image data is _not_ NULL use the original image and set the image status to OK in the header. If the frame size is not the same, use a blank frame with the largest region and copy the image data row-by-row

*On read:* 
* if the image status is OK, set image data to the tracked frame 
* otherwise leave the image data NULL 


#### 2011-09-30, 14:59:09 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 15:31:36 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-10-28, 15:31:36 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-02, 13:45:30 - Tamas Heffter
description: changed from "Save ToolTransform name int..." to "Save ToolTransform name int..."

#### 2011-11-02, 13:45:53 - Tamas Heffter
description: changed from "Save ToolTransform name int..." to "Save ToolTransform name int..."

#### 2011-11-04, 14:53:31 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 14:53:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-11-04, 21:34:39 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 21:34:39 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:49:03 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-12-02, 15:53:18 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-12-03, 17:21:00 - Tamas Heffter
(In r:1266) Test #311: Use tool transform name in TrackedFrame instead of ToolName
- Changed TrackerStatus to ToolStatus and use it only for lower levels (till DataCollector)
- Added TrackedFrameFieldStatus to identify tracked frame field status (FIELD_OK, FIELD_INVALID)
- Added image status and save invalid frames as a blank frame to metafile, on read leave the frames in invalid state 
- Updated vtkMetaImageSequenceIOTest for testing the new image status 

#### 2011-12-03, 17:21:08 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-03, 18:16:29 - Tamas Heffter
(In r:1267) Test #311: Fixed PlusApp according to the modifications 

#### 2011-12-22, 16:21:03 - Tamas Heffter
status: changed from "Test" to "Fixed"

#### 2013-11-25, 16:43:22 - Andras Lasso
I agree, the package should be installed in somewhere in the user home. In the long term (if we don't expect any significant config file changes anymore) then we may consider installing Plus executables under program files and config files in the user home.


## #312 Create a new Renderer common widget
The new renderer widget should be able to display the followings: 
- read STL file name and transform name from xml and display it in a QVTKWidget by setting the UserTransform of the actor (get the transform from DataCollector)
- read image transform name from xml and display image actor in a QVTKWidget by setting the UserTransform of the actor (get the transform from DataCollector and the image from DataCollector->GetOutput() )
- read axis transform name from xml and display axis actor in a QVTKWidget by setting the UserTransform of the actor (get the transform from DataCollector)

Use the new TransformCombiner class for getting all the actor transforms

#### 2011-09-30, 14:59:41 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 15:31:36 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-10-28, 15:31:36 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-04, 14:53:31 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 14:53:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-11-04, 21:34:40 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 21:34:40 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:48:55 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-11-24, 17:40:36 - Csaba Pinter
description: changed from "The new renderer widget sho..." to "The new renderer widget sho..."

#### 2011-12-04, 01:46:48 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-12-04, 01:47:27 - Csaba Pinter
(In r:1272) Re #312: vtkDisplayableTool file added as it became more complex: it reads its own configuration from the Rendering element

#### 2011-12-06, 04:20:06 - Csaba Pinter
(In r:1281) Re #312: WIP InitializeDeviceVisualization function fixed in vtkToolVisualizer

#### 2011-12-06, 04:58:14 - Csaba Pinter
(In r:1282) Re #312: WIP Phantom visualization fixed

#### 2011-12-07, 18:10:46 - Csaba Pinter
(In r:1289) Re #312: Config file structure changed (Phantom model moved to rendering, algorithms have their own elements for storing coordinate frames); Transform repositories are used for receiving output for algorithms (not all of them yet); vtkToolVisualizer and fCal toolboxes changed according to these changes; vtkDisplayableTool renamed to vtkDisplayableObject

#### 2011-12-07, 18:11:02 - Csaba Pinter
(In r:1290) Re #312: Config file structure changed (Phantom model moved to rendering, algorithms have their own elements for storing coordinate frames); Transform repositories are used for receiving output for algorithms (not all of them yet); vtkToolVisualizer and fCal toolboxes changed according to these changes; vtkDisplayableTool renamed to vtkDisplayableObject

#### 2011-12-07, 21:43:58 - Csaba Pinter
(In r:1291) Re #312: Config files updated

#### 2011-12-07, 22:35:40 - Csaba Pinter
(In r:1292) Re #312: Opacity attribute added to Renderer/DisplayableObject/Model element in the configuration files (opacity of the phantom set to 0.6)

#### 2011-12-07, 22:37:16 - Csaba Pinter
(In r:1293) Re #312: Stylus calibration and Phantom registration toolboxes now work properly; ToolStateDisplayWidgetTest fixed (no 'out of view' state exists any more, it is always 'missing' if not OK); Opacity added to displayable object configuration

#### 2011-12-08, 00:26:22 - Csaba Pinter
(In r:1296) Re #312: Don't set video or tracking enabled if there is no such device in set...only function in vtkDataCollectorHardwareDevice

#### 2011-12-08, 00:27:49 - Csaba Pinter
(In r:1297) Re #312: Taking snapshot of tracking data without video source fixed in CapturingToolbox; Check added to vtkToolVisualizer::EnableImageMode

#### 2011-12-09, 00:36:51 - Csaba Pinter
(In r:1301) Re #302: Model became a type, DisplayableObject has no nested elements, only attributes in Rendering section of device set configuration; Fixed #390: vtProbeCalibrationAlgo saves results properly; Re #312: IsExistingTransform function added to vtkTransformRepository; GetTrackerToolReferenceFrame function added to vtkDataCollector

#### 2011-12-09, 00:37:49 - Csaba Pinter
(In r:1302) Re #312: Freehand calibration works; Re #302: Model became a type, DisplayableObject has no nested elements, only attributes in Rendering section of device set configuration

#### 2011-12-09, 20:42:38 - Csaba Pinter
(In r:1305) Test #312: vtkToolVisualizer and vtkDisplayableObject moved to CommonWidgets

#### 2011-12-09, 20:42:38 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-10, 00:52:47 - Csaba Pinter
(In r:1308) Re #312: Added description to vtkToolVisualizer; Added ImageCoordinateFrame in fCal element of device set configuration for VolumeReconstructionToolbox

#### 2011-12-15, 16:56:40 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:40 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #313 DataCollector  simulator: Make DataCollector generatable from sequence metafile 
DataCollector should initialize itself from sequence metafile and return TrackedFrame on requests for simulation 

vtkDataCollector becomes a base class and factory for the specialized data collector classes. It reads the device set configuration and decides which child-class to create and return. The two specialized classes will be vtkDataCollectorHardwareDevice and vtkDataColelctorFile

#### 2011-09-30, 14:59:46 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 15:31:36 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-10-28, 15:31:36 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-04, 14:53:31 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 14:53:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-11-04, 21:34:40 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 21:34:40 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:49:08 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-23, 19:29:53 - Tamas Heffter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-11-23, 19:31:23 - Csaba Pinter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-11-23, 19:31:23 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-11-23, 19:34:47 - Csaba Pinter
description: changed from "DataCollector should initia..." to "DataCollector should initia..."

#### 2011-11-23, 20:30:15 - Csaba Pinter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-11-25, 17:03:24 - Csaba Pinter
(In r:1220) Re #313: vtkDataCollectorHardwareDevice class created, vtkDataCollector became its base class; USDataCollection element renamed to DataCollection

#### 2011-11-25, 17:04:15 - Csaba Pinter
(In r:1221) Re #313: vtkDataCollectorHardwareDevice class created, vtkDataCollector became its base class; TrackedFrame Status removed

#### 2011-11-25, 19:58:19 - Csaba Pinter
(In r:1222) Re #313: PlusLib tests fixed (2 still fail)

#### 2011-11-25, 20:52:33 - Csaba Pinter
(In r:1223) Re #313: PlusLib tests fixed

#### 2011-11-25, 21:04:18 - Csaba Pinter
(In r:1224) Re #313: TrackedUltrasoundCapturing fixed

#### 2011-11-25, 22:25:31 - Csaba Pinter
(In r:1225) Re #313: Skeleton of vtkDataCollectorFile; Checks added in vtkTrackedFrameList

#### 2011-11-25, 22:26:10 - Csaba Pinter
(In r:1226) Re #313: fCal calibration fixed: FrameTransformNameForValidation set to tracked frame lists

#### 2011-11-26, 00:24:23 - Csaba Pinter
(In r:1228) Re #313: Most functions implemented in vtkDataCollectorFile

#### 2011-11-26, 00:26:52 - Csaba Pinter
(In r:1229) Re #313: Type-o fixed

#### 2011-11-26, 21:17:15 - Csaba Pinter
(In r:1230) Re #313: Rest of the functions implemented in vtkDataCollectorFile; vtkOpenIGTLinkBroadcaster fixed accordingly; Reading timestamp fixed in vtkMetaImageSequenceIO; New variant of GetFrameSize added in TrackedFrame

#### 2011-11-26, 21:18:24 - Csaba Pinter
(In r:1231) Re #313: Application fixes according to data collector changes

#### 2011-11-28, 22:51:41 - Csaba Pinter
(In r:1234) Re #313: GetOutput works in vtkDataCollectorFile

#### 2011-11-28, 22:52:26 - Csaba Pinter
(In r:1235) Re #313: SegmentationParameterDialog fixed to work for vtkDataCollectorFile

#### 2011-11-29, 23:01:40 - Csaba Pinter
(In r:1238) Re #313: WIP: Use TrackedFrame for getting tool data instead of directly accessing vtkToolTracker

#### 2011-11-29, 23:02:27 - Csaba Pinter
(In r:1239) Re #313: WIP: Changes in the applications according to last commit (some code is only commented and marked!)

#### 2011-11-29, 23:16:21 - Csaba Pinter
(In r:1240) Re #313: WIP: Fix test by changing a temporary  error log to info

#### 2011-12-02, 20:16:11 - Csaba Pinter
(In r:1261) Re #313: Modify vtkProbeCalibrationAlgo to use vtkTransformRepository; Fix tests and baseline files (only headers) according to this

#### 2011-12-02, 22:05:45 - Csaba Pinter
(In r:1263) Test #313: Test added for vtkDataCollectorFile

#### 2011-12-02, 22:05:45 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-03, 17:18:28 - Tamas Heffter
(In r:1266) Test #313: Use tool transform name in TrackedFrame instead of ToolName
- Changed TrackerStatus to ToolStatus and use it only for lower levels (till DataCollector)
- Added TrackedFrameFieldStatus to identify tracked frame field status (FIELD_OK, FIELD_INVALID)
- Added image status and save invalid frames as a blank frame to metafile, on read leave the frames in invalid state 
- Updated vtkMetaImageSequenceIOTest for testing the new image status 

#### 2011-12-09, 20:28:28 - Csaba Pinter
(In r:1303) Re #313: vtkDataCollectorFile is fully functional

#### 2011-12-10, 00:50:52 - Csaba Pinter
(In r:1307) Re #313: Fix capturing in vtkDataCollectorFile

#### 2011-12-15, 17:35:39 - Csaba Pinter
(In r:1343) Fixed #313: Added config file into install package that uses File mode

#### 2011-12-15, 17:35:39 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2012-02-24, 19:47:49 - Tamas Ungi
(In r:1488) re #313: Simulation config file changed to the new DataCollector 'File' style.


## #314 Remove calibrated transform from tracker 
Remove calibrated transform from tracker and all the related flags. The applications should concatenate the calibration result transform where needed. 

In the configuration file the calibration matrices should be moved from the tools to the calibration section

#### 2011-09-30, 14:59:50 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 15:31:36 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-10-28, 15:31:36 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-04, 14:53:31 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 14:53:31 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-11-04, 15:15:07 - Csaba Pinter
description: changed from "Remove calibrated transform..." to "Remove calibrated transform..."

#### 2011-11-04, 21:34:40 - Csaba Pinter
Updating tickets (#310, #311, #312, #313, #314)



#### 2011-11-04, 21:34:40 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:49:18 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-30, 19:47:46 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-30, 22:28:14 - Tamas Heffter
(In r:1245) Test #314: Remove calibrated transform from tracker
- Removed calibrated transforms from all tracking classes
- Updated config files 

#### 2011-11-30, 22:28:14 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-22, 16:21:12 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #315 PlusApp and iCalBrachy build automatically when PlusLib changes


#### 2011-09-30, 15:13:53 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-29, 00:07:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2011-11-05, 00:15:25 - Andras Lasso
Added a python script that detects PlusLib updates. If PlusLib is changed then the script reverts PlusApp and iCalBrachy projects to their previous revision, which triggers automatic build&test. Side-effect is that the number of modified files on CDash will be non-zero, while actually no files has been changed.

#### 2011-11-05, 00:15:25 - Andras Lasso
status: changed from "New" to "Test"

#### 2011-11-05, 18:01:59 - Andras Lasso
milestone_id: changed from "Release - Next" to "Release Plus-1.3.1 - Before Hopkins"

#### 2011-11-05, 18:01:59 - Andras Lasso
status: changed from "Test" to "Fixed"


## #316 Make PlusLib open-source
Make PlusLib available under a BSD license.

* Remove stepper calibration
* Remove Siavash's ProstateBiopsyGuidance app
* Add a Plus header to each file
* Add license.txt
* Make it possible to build without PLTools
* Update tabs, eol characters, braces alignment?
* Add PlusLib namespace?


#### 2011-10-07, 14:59:12 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-10-07, 15:06:11 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 Open source"

#### 2011-10-11, 12:17:34 - Andras Lasso
description: changed from "Make PlusLib available unde..." to "Make PlusLib available unde..."

#### 2011-10-11, 18:22:20 - Tamas Heffter
(In r:917) re #316: Added Plus header and doxygen comments to a few files under TrusCalibration 
Renamed PlusLibTrusCalibration doxygen defgroup to PlusLibCalibrationAlgorithm to avoid comment modifications after renaming TrusCalibration to CalibrationAlgorithm

#### 2011-10-21, 16:21:55 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2011-10-25, 12:49:00 - Andras Lasso
(In r:980) re #316: Made PlusLib more independent from PLTools (now only NDICertus and Ultrasonix SDKs still require PLTools)

#### 2011-10-25, 15:44:35 - Andras Lasso
(In r:983) re #316: Made PlusLib more independent from PLTools (now only NDICertus and Ultrasonix SDKs still require PLTools)

#### 2011-10-25, 19:25:02 - Andras Lasso
(In r:985) re #316: Added Plus license and header to all cxx and h Files
re #316: Removed Ascension Flock of birds tracking support (the necessary toolkit did not have compatible license and the Flock of birds tracker can be considered as obsolete, ad trakSTAR and medSAFE trackers are used in medical devices)
re #287: Update commenting style in DataCollection and TrusCalibration

#### 2011-10-25, 20:47:37 - Andras Lasso
(In r:986) re #316: Removed Ascension Flock of birds tracking support (the necessary toolkit did not have compatible license and the Flock of birds tracker can be considered as obsolete, ad trakSTAR and medSAFE trackers are used in medical devices)


#### 2011-10-28, 21:23:46 - Andras Lasso
Completed:
* Remove stepper calibration
* Remove Siavash's ProstateBiopsyGuidance app
* Add a Plus header to each file
* Add license.txt
* Make it possible to build without PLTools

The other (tentative) items were dropped. 


#### 2011-10-28, 21:23:46 - Andras Lasso
status: changed from "New" to "Fixed"


## #317 Support reading and writing of large metafiles
We need a new a new metafile writer/reader, which doesn't need extra memory for saving, faster than the current one, can write files >4GB, and uses exactly the same metaimage format.

Step 1: read/write all the image data in one chunk.
Step 2: Add support for frame-by-frame reading/writing. This will allow writing a file while recording it, and reading/processing a file without reading the whole file into memory

#### 2011-10-04, 15:46:23 - Andras Lasso
(In r:873) Fixed #317: Replaced itkMetaImageSequenceIO with a completely new implementation. It reads/writes sequence metafiles faster and writing of images in the memory doesn't require excessive additional memory.

#### 2011-10-04, 15:46:23 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-04, 15:48:21 - Andras Lasso
(In r:874) re #317: Updated PlusApp according to lib changes

#### 2011-10-04, 15:58:42 - Andras Lasso
(In r:875) re #317: Added files that were missed from the last commit

#### 2011-10-04, 19:47:24 - Andras Lasso
(In r:876) re #317: Renamed itkMetaImageSequenceIO.cxx/h to vtkMetaImageSequenceIO.cxx/h.
Removed obsolete tests (itkMetaImageSequenceIOTest2&4).
Renamed itkMetaImageSequenceIOTest3 to MetaImageSequenceViewer.
Renamed itkMetaImageSequenceIOTest1 to itkMetaImageSequenceIOTest.

#### 2011-10-04, 19:48:02 - Andras Lasso
(In r:877) re #317: Updated PlusApp according to lib changes

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #318 Session stylus calibration not used.
Always the stylus calibration from the config file is used, even after a successful stylus calibration in the session. Even after I save the stylus calibration. The only way to change stylus calibration now is to disconnect >> refresh config list >> connect again with the new file.

#### 2011-10-03, 14:33:25 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-03, 18:11:42 - Csaba Pinter
(In r:866) Fixed #318: Calibration matrix has to be set not only to vtkTrackerTool, but to vtkTrackerBuffer too so that it returns the proper calibrated matrix. It should be only stored in one class

#### 2011-10-03, 18:11:42 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #319 Tool calibration matrix is stored in multiple objects
In vtkTrackerTool::CalibrationMatrix and vtkTrackerBuffer::ToolCalibrationMatrix. They mean the same thing. This matrix should only be stored in one class.

#### 2011-10-07, 14:58:50 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #320 Save last log level into PlusConfig.xml
Instead of calling vtkPlusLogger::Instance()->SetLogLevel(verboseLevel) and SetDisplayLogLevel manage log levels with vtkPlusConfig.

Initialize verboseLevel like this:

int verboseLevel = vtkPlusLogger::LOG_LEVEL_DEFAULT;
...
args.AddArgument( '--verbose', vtksys::CommandLineArguments::EQUAL_ARGUMENT,  &verboseLevel, 'Verbose level (1=error only, 2=warning, 3=info, 4=debug 5=trace)' ); 
...
vtkPlusLogger::Instance()->SetLogLevel(verboseLevel );

If verboseLevel != vtkPlusLogger::LOG_LEVEL_DEFAULT then change the log and display log level and save the setting into PlusConfig.xml as well.


#### 2011-10-04, 23:33:38 - Andras Lasso
description: changed from "vtkPlusLogger::Instance()->..." to "Instead of calling vtkPlusL..."

#### 2011-10-07, 14:57:08 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-07, 14:57:15 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-28, 21:08:06 - Andras Lasso
description: changed from "Instead of calling vtkPlusL..." to "Instead of calling vtkPlusL..."

#### 2011-10-28, 21:10:00 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-28, 22:15:42 - Csaba Pinter
(In r:1053) Re #320: DisplayLogLevel removed from PlusLogger; Tests use LOG_LEVEL_DEFAULT which is set to INFO

#### 2011-10-28, 22:16:47 - Csaba Pinter
(In r:1054) Fixed #320: Diag and command-line applications use LOG_LEVEL_DEFAULT

#### 2011-10-28, 22:16:47 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #321 Simplify vtkPlusConfi::SetProgramPath calls
vtkPlusConfig::GetInstance()->SetProgramPath(...); should use argv[0] as an input.

This should be in vtkPlusConfig, not in all the test executables:
  std::string programPath('./'), errorMsg; 
  if ( !vtksys::SystemTools::FindProgramPath(argv[0], programPath, errorMsg) )
  {
    LOG_ERROR(errorMsg); 
  }
  programPath = vtksys::SystemTools::GetParentDirectory(programPath.c_str()); 

#### 2011-10-07, 14:57:10 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-07, 14:57:19 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-12, 18:05:12 - Tamas Heffter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-10-12, 18:05:12 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-13, 19:19:22 - Tamas Heffter
(In r:931) Fixed #324: Save PlusLog files to PlusConfig OutputFolder
re #321: Simplify vtkPlusConfig::SetProgramPath calls
Under windows no need to set program path anymore 

#### 2011-10-13, 19:20:37 - Tamas Heffter
(In r:932) Fixed #321: Simplify vtkPlusConfig::SetProgramPath calls
Under windows no need to set program path anymore 

#### 2011-10-13, 19:20:37 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #322 OpenIGTLinkBroadcaster should send transforms when there is no image
To enable needle tracking when the image on the ultrasound machine is frozen intentionally.

#### 2011-10-07, 14:59:20 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-29, 00:11:04 - Andras Lasso
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-02, 21:44:04 - Tamas Ungi
It's not so important.

#### 2011-11-02, 21:44:04 - Tamas Ungi
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release - Next"

#### 2011-12-14, 15:00:18 - Tamas Ungi
This has been solved on the Slicer side at the moment. We will see if others will need it from PLUS in the future.

#### 2011-12-14, 15:00:18 - Tamas Ungi
status: changed from "New" to "Invalid"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #323 Missing Ultrasonix SDK DLLs in package 


#### 2011-10-11, 18:55:03 - Tamas Heffter
(In r:919) Fixed #323: Install all shared libraries from the selected Ultrasonix SDK folder 

#### 2011-10-11, 18:55:03 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:38:54 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:54 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #324 Save PlusLog files to PlusConfig OutputFolder 


#### 2011-10-11, 20:27:51 - Tamas Heffter
(In r:924) re #324: Save PlusLog files to PlusConfig OutputFolder
- Save PlusLog to PlusConfig OutputDirectory
- Added PlusLib version number to the first row of the log 
- Changed Default log level to LOG_LEVEL_INFO (to be able to save version number to the log file)

#### 2011-10-11, 20:32:13 - Tamas Heffter
Csaba, can we somehow force the PlusLib to read the vtkPlusConfig::ReadApplicationConfiguration() from one of the core libraries? 
It would be great if we would have access to the application data (like output directory in this specific case) before we actually call vtkPlusConfig::SetProgramPath(const char* aProgramDirectory). 

#### 2011-10-11, 20:32:13 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-13, 19:19:22 - Tamas Heffter
(In r:931) Fixed #324: Save PlusLog files to PlusConfig OutputFolder
re #321: Simplify vtkPlusConfig::SetProgramPath calls
Under windows no need to set program path anymore 

#### 2011-10-13, 19:19:22 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-10-29, 03:38:55 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:55 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"


## #325 DataCollector should return a trackedFrameList of a time period 
Create a function like GetTrackedFrameList( double timestamp, vtkTrackedFrameList* trackedFrameList) which returns a list of tracked frames from the buffers since the specified timestamp. 

#### 2011-10-13, 19:22:20 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-14, 00:08:24 - Tamas Heffter
(In r:937) re #325: DataCollector should return a trackedFrameList of a time period
re #41: Replace includes with forward declarations in header files

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-16, 02:41:36 - Tamas Heffter
(In r:944) re #325: DataCollector should return a trackedFrameList of a time period
Separated encoder position and transform validation 
Added quick check to FidPatternRecognition::RecognizePattern before segmenting tracked frame list to avoid unnecessary segmentation steps 
FidPatternRecognition::RecognizePattern can return number of successfully segmented frames 
Added validation requirements as an input of vtkDataCollector::GetTrackedFrameList

#### 2011-10-21, 16:25:45 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-10-29, 14:01:02 - Tamas Heffter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-02, 21:06:55 - Tamas Heffter
(In r:1102) re #325: Added maxNumberOfFrames parameter 
Added vtkDataCollector::GetOldestTimestamp

#### 2011-11-08, 18:19:15 - Csaba Pinter
Updating tickets (#371, #325)



#### 2011-11-08, 18:19:15 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #326 Volume reconstructor crash
Crash in vtkPasteSliceIntoVolume::InsertSliceThreadFunction function. First the scalar types do not match then there is a crash around the garbage collection (no decent call stack is present so I could only guess).

#### 2011-10-12, 18:02:44 - Andras Lasso
I could have a look at the issue. Could you describe how to reproduce the problem (which device set to use, what steps to do...)?

#### 2011-10-12, 18:09:02 - Csaba Pinter
First I used fCal (the just re-enabled Volume reconstruction toolbox), but then I tried the command-line application, and it did the same thing. In the attached log, you can see what errors I got before the crash.
The device set (from which only the VolumeReconstruction element matters in this case) I used was the PlusConfiguration_SavedDataset_fCal_1.0.xml, and the image was \\\\image\\shared_data\\images\\fCAL\\2011-07-22_fCal_CalibrationTestDataset\\fCal_20110722_Short.mha

#### 2011-10-12, 18:10:22 - Csaba Pinter
file:bZQNxe9p0r4jvzacwqjQWU

#### 2011-10-12, 18:10:22 - Csaba Pinter
Attachment added: "101211_122223_PlusLog.txt"

#### 2011-10-12, 18:15:18 - Csaba Pinter
I just noticed that the volume reconstruction part of my slightly modified file that I use for testing is still the old one (see below), so it may have caused the problem, as the original one works.
I cannot do it today, but tomorrow I test it again and I close this as invalid if it works properly.

<VolumeReconstruction>
    <SliceParameters SliceSpacing='1 1 1' SliceOrigin='0 0 0' NumScalarComponents='1' />

    <OutputParameters OutputSpacing='0.5 0.5 0.5' />

    <ClippingParameters ClipRectangle='0 0 820 616'/>
    <FanParameters FanAngles='0 0' FanOrigin='0 0' FanDepth='300'/>
    <RotationOptions ImageFlipped='Off' Rotation='Off' MaxRotationChange='90' Threshold1='0' Threshold2='255' ShiftX='0' ShiftY='0' />
    <ReconstructionOptions Interpolation='Linear' Optimization='On' Compounding='On'/>
  </VolumeReconstruction>


#### 2011-10-12, 18:15:18 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-10-12, 18:20:35 - Andras Lasso
OK, then I don't investigate this issue. The code shall not crash, but just return with failure if conifguration options are missing or incorrect. Could you add some checks that prevent crash and return with error? If it's not trivial to add the checks then just assign the issue to me instead of closing it. Thanks!

#### 2011-10-13, 16:13:45 - Csaba Pinter
(In r:928) Re #326: Checks added to vtkVolumeReconstructor::ReadConfiguration, so if vital paramters are not found, it returns with failure

#### 2011-10-13, 16:13:45 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-13, 16:15:02 - Csaba Pinter
(In r:929) Fixed #326, Re #213: VolumeReconstructionToolbox in fCal works fine now

#### 2011-10-13, 16:15:02 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2011-10-29, 03:35:49 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:49 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #327 Remove extra build step in experimental build and test
Wait for fixing of this CMake issue: http://www.itk.org/Bug/view.php?id=11368

Then use the CTest return value to check for build/test errors instead of running a build before starting CTest.

See some details here: https://www.assembla.com/spaces/plus/messages/1059373

#### 2014-06-04, 22:05:59 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2016-07-13, 17:01:44 - Adam Rankin
fixed #327 Updating minimum CMake to 3.3.0
Commit: r:4726|plus:4726

#### 2016-07-13, 17:01:44 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-07-13, 17:01:44 - Adam Rankin
status: changed from "New" to "Fixed"


## #328 CTest should return with an error status when compiler errors occur
(In r:921) We added a plus compilation step before experimental test script  to be able notify user if the build failed. Probably in the next CTest release they will add a new command line flag that will do the same thing so we could remove that hack from experimental build scripts. 

Discussion about this problem: 
https://www.assembla.com/spaces/plus/messages/1058853

CTest bug report: 
http://www.itk.org/Bug/view.php?id=11368


#### 2011-10-13, 17:21:55 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2011-10-29, 03:35:50 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:50 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #329 Segmentation algorithm datasets: some baseline results are incorrect.
The baseline results provide a list of segmented dots which sometimes do not make sense, for example in:

USTC_FrameGrabber_ProbeRotationData.mha

Some frames are, according to the baseline, successfully segmented while the results are dots on the far right side of the image, not in the field of view of the probe but on the parameters of the ultrasound system (Gain, depth, etc.).

This should not be considered 'Success' even if the algorithm found dots that match the requirements.

The Regions of Interest should be defined carefully to avoid such false positive results. Maybe the segmentation part of the algorithm should be more restrictive to avoid segmenting the letters as fiducial candidates.

This is an issue when truing to upgrade the algorithm, as once you compare to the baseline, even if the new results are correct, the comparison to the baseline fails.

#### 2011-10-13, 18:02:54 - Alexis Boucharin
image:ctfbua9Cur4iFXacwqjQWU Segmented by new algorithm, but different from (wrong) baseline.

#### 2011-10-13, 18:02:54 - Alexis Boucharin
Attachment added: "possibleFiducials149.bmp"

#### 2011-10-13, 18:06:40 - Alexis Boucharin
image:azX5Vq9Cyr4iJiacwqjQYw 4 of the 6 dots are considered 'good' by the baseline, while obviously the 6 of them are wrong.

#### 2011-10-13, 18:06:40 - Alexis Boucharin
Attachment added: "possibleFiducials111.bmp"

#### 2011-10-14, 14:46:17 - Csaba Pinter
Better segmentation parameters have to be found after the standalone app is created for that. The baseline can be replaced with the better results then.

#### 2011-10-14, 14:47:25 - Csaba Pinter
assigned_to_id: changed from null to "alexis.boucharin"

#### 2011-10-14, 14:49:05 - Csaba Pinter
Updating tickets (#329, #231, #256, #306, #137, #210, #237, #247, #255, #267, #297, #325)



#### 2011-10-14, 14:49:05 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"

#### 2011-10-26, 20:37:06 - Alexis Boucharin
status: changed from "New" to "Fixed"


## #330 Add support for Ascension tracker on linux
If there is a confirmed need for supporting linux, then the package in the attachment could be used for adding support for Ascension trackers in linux. The package was provided by Mark Schneider <mschneider@ascension-tech.com> on 19 Sep 2011.

#### 2014-06-04, 22:01:06 - Andras Lasso
Not planning to fix this unless somebody requests it.

#### 2014-06-04, 22:01:06 - Andras Lasso
status: changed from "New" to "Invalid"


## #331 Change vtk version to the latest 5.10.0
The current vtk 5.6.1 vtk release has a compilation error at vtk\\Graphics\\vtkYoungsMaterialInterface.cxx line 2921
For more information: http://www.vtk.org/Bug/view.php?id=10777&history=1

It really nothing (need to hit an enter), but unfortunately because this compilation error the whole plus build fails and the previous ticket status is expired. 
I would suggest to move to the latest official vtk release as soon as we can. 

#### 2011-10-14, 20:55:20 - Tamas Heffter
Andras, what do you think? Should we give it a try? 

#### 2011-10-14, 21:13:48 - Andras Lasso
Is this VTK 5.6 compilation issue a new problem? I've never experienced this.

I don't see a big risk in moving to VTK 5.8 as we don't use any advanced VTK features or extensions.

At some point we should do it anyway, so if we are not time constrained (I don't know about any pressing deadline) and have enought time for testing then I think we can do it now.

#### 2011-10-14, 21:24:12 - Tamas Heffter
Actually we found this error a couple of hours ago on a clean machine when we started to build Plus on Thomas' notebook. It was surprising me too, because I've tried to check the modification but on that file with this tag the last modification was around 2009 or 2010 if I remember well (unfortunately I couldn't really find out from GIT). So I don;t really understand how is that possible that we didn't get this error. 
On my PC and Csaba's PC the same file is good, however I didn't run the PlusBuild this week. 

The change wouldn't take too much time, just one line change in the PlusBuild. 

#### 2011-10-14, 22:11:03 - Andras Lasso
Very strange. Nobody has complained about it.

Changing the tag is easy, but the testing that everything still works well requires some work.

#### 2011-10-16, 20:58:47 - Andras Lasso
I've removed VTK and rebuilt it on BLADDER and it worked fine. It was either a temporary problem with the VTK repository or specific to Thomas' PC.

#### 2011-10-16, 23:15:10 - Tamas Heffter
That's strange, we had this problem twice on his machine (we've also deleted it), and also there was a ticket about his problem. 
Can you check the following line (it looked like this on his PC): 
vtk\\Graphics\\vtkYoungsMaterialInterface.cxx line 2921 or 2920 
// construction de la fonction cubique par morceau du volume tronqu? for(int i=0;i<nt;i++)

#### 2011-10-17, 00:34:07 - Andras Lasso
OK, I understand then. Thomas uses Chinese version of Windows/MSVC/SVN/etc which interprets some extended ASCII characters as multi-byte characters (see http://vtk.1045678.n5.nabble.com/Misinterpretation-of-a-non-ascii-character-by-MSVC-td1252227.html).

We need to move to VTK 5.8 sooner or later anyway, so if we don't have any critical deadline soon (I don't know about one), then we can move now.

#### 2011-10-17, 00:51:05 - Thomas Kuiran Chen
This is very interesting, Andras. How did you find out the problem? My laptop has Chinese enabled as the system locale.  Will v5.8 have a better Chinese compatibility?


#### 2011-10-17, 02:11:31 - Andras Lasso
I think in 5.8 the French comment with the accented e character is removed, so it must be fully Asian compatible.

#### 2011-10-21, 02:37:00 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-10-21, 02:37:00 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-21, 04:06:35 - Tamas Heffter
(In r:971) Fixed #331: Changed vtk version to the latest 5.8.0

#### 2011-10-21, 04:06:35 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-10-21, 04:07:53 - Tamas Heffter
(In r:972) Fixed #331: Changed vtk version to the latest 5.8.0
Modified baseline: in vtk 5.8.0 the vtk image header changed a bit. 

#### 2011-10-29, 03:38:55 - Tamas Heffter
Updating tickets (#258, #294, #331, #155, #264, #270, #288, #301, #318, #323, #4, #12, #42, #47, #71, #72, #127, #181, #192, #194, #201, #202, #208, #212, #214, #215, #233, #248, #253, #254, #262, #265, #266, #268, #269, #272, #274, #280, #281, #284, #286, #291, #292, #293, #295, #296, #299, #300, #304, #305, #324, #38, #142, #243, #252)



#### 2011-10-29, 03:38:55 - Tamas Heffter
milestone_id: changed from "Release Plus-1.4.0 - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2012-09-12, 06:01:40 - Andras Lasso
It seems that it hasn't been fixed in VTK-5.8, but it is fixed in VTK-5.10 (git tag: 'v5.10.0'), so we have to update to that version. Slicer uses this version, too.

#### 2012-09-12, 06:01:40 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"

#### 2012-09-12, 06:01:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.5.5"

#### 2012-09-12, 06:01:40 - Andras Lasso
summary: changed from "Change vtk version to the latest 5.8.0" to "Change vtk version to the latest 5.10.0"

#### 2012-09-12, 06:01:40 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-18, 17:10:46 - Andras Lasso
(In r:2188|plus:2188) Fixed #331: Plus now uses VTK-5.10

#### 2012-10-18, 17:10:46 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #332 Segmentation fails with new fCal phantom wiring
It probably fails due to the new (blue) wire, because it does not have a constant shape on the images because it is woven.
The fishing line we had in it before was fine from this point of view, but it had the problem that it provided a decent image when the probe was held exactly vertical.
Something else should be found that eliminates both problems.

First an image sequence is needed to be taken so that we can prove this theory about the blue wire.

#### 2011-10-21, 15:07:33 - Csaba Pinter
Idea: sandpaper the transparent nylon wire a bit to make it rough enough to scatter the beam

#### 2011-10-21, 15:09:22 - Csaba Pinter
assigned_to_id: changed from "pinter" to "lassoan"

#### 2011-10-21, 15:09:22 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"

#### 2011-10-29, 00:11:34 - Andras Lasso
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-01, 15:21:59 - Andras Lasso
I guess you found the solution for this problem this week

#### 2011-11-01, 15:21:59 - Andras Lasso
assigned_to_id: changed from "lassoan" to "pinter"

#### 2011-11-01, 15:27:00 - Csaba Pinter
Either that or as the wires get old their image becomes better (because of the deposited scale). I'm thinking of re-wiring the first phantom and try again.

#### 2011-11-07, 21:13:37 - Csaba Pinter
I did the re-wiring with the blue vowen line and it worked fine.
Probably the fixes in the pattern recognition and the segmentation parameter dialog did the trick

#### 2011-11-07, 21:13:37 - Csaba Pinter
status: changed from "New" to "Fixed"


## #333 PlusLib design: Move TrackedFrame related files to PlusCommon
After we decided to use tracked frames and tracked frame list as an input for all algorithms it would be good if we could move the tracked frame related classes to a new dll to have a cleaner design. 
Currently the tracking dll is depends on the image acquisition (to be able to use the saved dataset) and almost every lib to image acquisition. 


#### 2011-10-20, 15:11:31 - Tamas Heffter
image:dkOiba-Y0r4jcpacwqjQXA

#### 2011-10-20, 15:11:31 - Tamas Heffter
Attachment added: "PlusLib_Design.jpg"

#### 2011-10-21, 15:10:28 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-11-25, 15:47:00 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-25, 15:47:37 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-25, 15:47:37 - Csaba Pinter
summary: changed from "PlusLib design: Move TrackedFrame related files to a new dll" to "PlusLib design: Move TrackedFrame related files to PlusCommon"

#### 2011-11-28, 16:30:50 - Tamas Heffter
(In r:1232) Test #394: Create and use PlusTransformName class
re #333: PlusLib design: Move TrackedFrame related files to PlusCommon
- Moved TrackedFrame related classes to PlusCommon 
- Added PlusTransformName class and used it where it possible 
- Updated tests

#### 2011-11-28, 16:31:22 - Tamas Heffter
(In r:1233) Test #394: Create and use PlusTransformName class
re #333: PlusLib design: Move TrackedFrame related files to PlusCommon
- Moved TrackedFrame related classes to PlusCommon 
- Added PlusTransformName class and used it where it possible 
- Updated tests

#### 2011-11-30, 22:31:22 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-30, 23:37:30 - Tamas Heffter
(In r:1246) re #333: PlusLib design: Move TrackedFrame related files to PlusCommon
Added separate class for TrackedFrame 

#### 2011-11-30, 23:37:56 - Tamas Heffter
(In r:1247) Fixed #333: PlusLib design: Move TrackedFrame related files to PlusCommon
Added separate class for TrackedFrame 

#### 2011-11-30, 23:37:56 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #334 Simplify calibration report generation
After the refactoring has been completed (the calibration algorithm class gets TrackedFrameList as input and gives a matrix and the error report as output, and the obsolete functions have been removed), the report generation should be simplified.
Now the report uses a vast number of strange member variables (like mValidationPositionsNWire1InUSProbeFrame for wire 1,3,4 and 6, and some analysis vectors like PointReconstructionErrorAnalysisVector, that instead of real vector elements, it contains independent numbers), and also gives unnecessary data. We should consolidate this.

#### 2011-10-21, 16:33:16 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2014-06-05, 01:56:57 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-30, 20:42:11 - Andras Lasso
re #334: Keep the simulation configuration of only the new phantom registration method. Improved fCal documentation.
Commit: r:3746|plus:3746

#### 2014-09-30, 20:42:11 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-30, 20:42:35 - Andras Lasso
re #334: Keep the simulation configuration of only the new phantom registration method. Improved fCal documentation.
Commit: r:3747|plus:3747

#### 2014-09-30, 21:03:44 - Andras Lasso
re #334: Fixed failed phantom registration tests
Commit: r:3748|plus:3748

#### 2014-10-07, 19:10:50 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"


## #335 Add hardware setup description to SonixGPS config files
When using the SonixGPS it's not trivial which socket each sensor connector shall be plugged into. This should be described in the configuration xml file in the Description attribute of the DeviceSet element.

#### 2011-10-17, 18:31:40 - Tamas Ungi
(In r:946) re #335: Updated description for two set-ups with Touch+GPS.

#### 2011-10-17, 18:33:40 - Tamas Ungi
I've done the descriptions to the set-ups I use. I'm assigning this ticket now to Csaba. Please do the configurations you use. Then assign the ticket to Tomi please.

#### 2011-10-17, 18:33:40 - Tamas Ungi
assigned_to_id: changed from "ungi" to "pinter"

#### 2011-10-17, 18:33:40 - Tamas Ungi
status: changed from "New" to "Accepted"

#### 2011-10-17, 20:33:38 - Csaba Pinter
(In r:950) Re #335: All the config files except the ones involving Civco stepper are done (in those, the civco description goes instead of the '[CivcoDescription]' string

#### 2011-10-17, 20:34:16 - Csaba Pinter
Tomi, please edit the two Civco stepper related config file as described above in the commit message. Thanks!

#### 2011-10-17, 20:34:16 - Csaba Pinter
assigned_to_id: changed from "pinter" to "heffter"

#### 2011-10-28, 14:31:52 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-10-28, 14:30:03 - Tamas Heffter
(In r:1040) Fixed #335: Added hardware setup description for CIVCO 


## #336 Improve NDI tracker support
There is code in PlusLib to support tracking with NDI Polaris and Aurora trackers, but it's not complete. At least the configuration parameter reading from XML (the ReadConfiguration(vtkXMLDataElement* config)) should be implemented. The vtkNDICertusTracker and maybe the vtkBrachyTracker can serve as examples.

The DiagDataCollection (PlusApp\\DiagnosticTools\\DiagDataCollection.cxx) application can be used to collect data and analyze the results (achieved frame rate, jitter, etc.).


#### 2011-10-18, 19:06:12 - Andras Lasso
From Elvis Chen: I'm looking to modify (if needed) vtkPolarisTracker.  Once I get it working, I'll see if any further modification is needed for Aurora.

#### 2011-10-18, 19:06:12 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-10-21, 15:10:37 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-01-26, 21:53:32 - Csaba Pinter
(In r:1421) Re #336: Old Polaris tracking files removed; (substantive changes in revision 1419)

#### 2012-01-26, 21:54:45 - Csaba Pinter
(In r:1422) Re #336: Warning message about Aurora and Polaris removed from CMake

#### 2012-01-26, 22:43:48 - Csaba Pinter
(In r:1423) Re #336: ROM file loading added to vtkNDITracker (port enabling is still wrong)

#### 2012-01-26, 22:58:10 - Csaba Pinter
(In r:1424) Re #336: When ports are being enabled, it iterates through the actual tools

#### 2012-01-26, 23:12:03 - Csaba Pinter
(In r:1425) Re #336: Configuration files for NDI Aurora and Polaris added for testing

#### 2012-01-28, 01:54:54 - Csaba Pinter
.

#### 2012-03-12, 18:31:14 - Andras Lasso
*Elvis Chen reported on March 12, 2012:*

For the past few days we have been trying to calibrate our Ultrasonix linear probe with NDI Aurora using fCal.  The tracking information we got from PLUS was very unstable.  For example, if I place a sensor stationary on the table, and wave an US probe with another sensor attached, the reading for the stationary sensor jumps around by, I would say, >5mm at least.

At first, I thought this was caused by the metal inside the US probe.
However, if I repeat the same experiment using NDI's toolbox (which is similar to cube.exe for Ascension), the reading were perfectly fine.

this is repeatable.


#### 2012-03-12, 18:31:31 - Andras Lasso
A few ideas:
* We don't invent any measurement numbers in Plus for the transformation matrices, so if there is any difference in the raw transformation matrices then it is most likely due to using different noise filtering parameters in the NDI toolbox / Plus. It may be possible that the parameters are determined automatically from the frame rate, so it could make sense to test the behavior with different frame rates. Do you know how can we get/set the filtering parameters for NDI trackers?
* When you acquire synchronized image/tracking data then SLERP interpolation is applied to the rotation part of the transformation matrix and simple linear interpolation applied to the translation part. In case of a significantly perturbed pose measurement the result of this interpolation might be noticeable. We can check the difference between interpolated/non-interpolated results to see if we need a different interpolation method.
* Was the behavior of your old synchrograb or other tracker implementation more similar to Plus or more similar to the NDI toolbox? Is the NDI toolbox source code available? You could compare the source code of these implementations to see if there is anything that could explain the different behavior.


#### 2012-03-12, 19:22:37 - Elvis Chen
I don't think there is way to get/set filtering parameters for NDI tracking systems.  Did not see anything on their API.

I used 2 different programs to get the raw transforms from NDI Aurora.  One is the NDI's toolbox software, similar to cubes.exe for Ascension.  The other is AIGS library from David Gobbi.  AIGS and PLUS shares the same tracking code.

when tracking using NDI's toolbox and AIGS, the raw transforms behaves pretty well.  The number of course fluctuates a bit, but they are all sub-millimeters.  Inside of PLUS though, the fluctuation becomes >5mm.  Since PLUS and AIGS are basically the same code, I can only conclude it is caused by the modification (interpolation) PLUS made on top of the raw transforms.

Is there a way to turn off interpolation and used the closest raw transform inside PLUS instead?   

#### 2012-03-12, 20:16:31 - Andras Lasso
Currently there is no API to disable interpolation, but you can easily disable it by a simple change in the code. In PlusLib\\src\  racking\\vtkTrackerBuffer.cxx change the implementation to just return with the closest raw item:

ItemStatus vtkTrackerBuffer::GetInterpolatedTrackerBufferItemFromTime( double time, TrackerBufferItem* bufferItem)
{
 return GetTrackerBufferItemFromClosestTime(time, bufferItem);
}


#### 2012-03-13, 13:12:05 - Andras Lasso
Was the tool calibrated in NDI toolbox, AIGS, and Plus? Did you compare the tooltip or the sensor positions? If the sensor is far from the tooltip then the error in the calibrated tooltip's position is much higher than the error in the sensor's position.

#### 2012-03-13, 13:50:27 - Elvis Chen
we are just looking at the sensor position.  The tool is pre-calibrated by the manufacturer and programmed into the ROM file.

#### 2012-03-30, 19:23:12 - Andras Lasso
Todo for Elvis:
* compare the implementations in Plus and AIGS to see if there is any significant difference
* send the description for how to reproduce it then the Queen’s team will try to follow it to see if it’s specific to that particular device or it’s a generic problem


#### 2012-04-10, 21:07:10 - Elvis Chen
(In r:1605) re #336: added additional baud rate for NDI.  The new USB interface supports 921600.

#### 2012-04-11, 17:50:25 - Elvis Chen
The version of vtkTrackerTool in PLUS is quite different than the one in AIGS.  Notable differences includes the missing of calibration matrix, and the Update() funcation call (available in AIGS but not PLUS).

Have them been refactored into other classes?  

#### 2012-04-11, 18:15:01 - Andras Lasso
Having something like a 'calibration matrix' in the tracker was a really bad idea:
* There was no way to tell if the tool was calibrated or not, when you changed the calibration matrix all you saw was a suddenly change in the received transformation matrices. We could have propagated a 'calibrated' flag with each transformation matrix, but it would have been too complicated.
* There is no such thing as a 'calibration matrix' (there are several transformation matrices that makes a system calibrated), therefore it does not make sense to apply a few transforms inside the tracker and add some more elsewhere, it just makes things very complicated.
* 'CalibrationMatrix' is a very bad name that shall never be used. A transform shall be always specified by the name of the 'to' and 'from' coordinate systems that it transforms between.

We removed the calibration matrix from the tracker class and moved all transformation composition into the transform repository.

The tracker class had many other limitations and some bugs (e.g., incorrect timestamp filtering), so I would suggest to not use the old implementation (the AIGS version).

#### 2012-04-11, 18:42:06 - Elvis Chen
I understand the part about calibration matrix.  What about the actual Update() function that updates the tracking transformation?  Where has that been moved to?

The code snip from AIGS is:


//----------------------------------------------------------------------------
// the update copies the latest matrix from the buffer
void vtkTrackerTool::Update()
{
  this->Buffer->Lock();

  // only update this if the time stamp has changed.
  if( this->Buffer->GetTimeStamp(0) > this->TimeStamp )
  {
    this->Flags = this->Buffer->GetFlags(0);

    if ((this->Flags & (TR_MISSING | TR_OUT_OF_VIEW))  == 0)
    {
      this->Buffer->GetMatrix(this->TempMatrix, 0);
      this->Transform->SetMatrix(this->TempMatrix);
    }

    this->TimeStamp = this->Buffer->GetTimeStamp(0);
    this->Modified();
  }
  this->Buffer->Unlock();

  // move the modified into the if structure above.
  // i.e. only mark as modified if we actually modify it.
  //this->Modified();
}


#### 2012-04-11, 18:58:16 - Elvis Chen
also, I'm not working on David Gobbi's version of AIGS.  Andrew Wiles (NDI) has forked it and fixed many problems you have mentioned.  What I am trying to do is to see the improvements/fixes that Andrew made make their way into PLUS, assuming these problems have not been addressed by PLUS already. 

One additional note:  the NDI aurora is guaranteed to track at 40Hz if the aurora has the new firmware (version 11, I believe), regardless the number of tools used.  Thew new USB interface (version 2 of the SCU) also support higher baud rate.  These are what I am trying to incorporate into PLUS.  As you mentioned, the NDI support in PLUS is based on some very old codes. 

#### 2012-04-11, 19:10:53 - Andras Lasso
It's great if you can integrate Andrew's improvements and the higher baud rate. The current timestamp filtering method assumes that the sampling rate is constant, so if the sampling rate is guaranteed to be actually constant then the timestamping will be perfect.

The tracking data is collected and added to the buffer (by calling the ToolTimeStampedUpdate method) in the InternalUpdate method. I think this method corresponds to the Update method in the previous implementation.

Timestamping of the imaging on Ultrasonix devices are quite robust, so you can check the accuracy of the timestamping by performing temporal calibration and plotting the results (it's all available in fCal, see https://www.assembla.com/spaces/plus/wiki/Temporal_Calibration).


#### 2012-04-11, 21:14:56 - Elvis Chen
(In r:1609) re #336 updated ndicapi and also vtkNDITracker to support baud rate of 921600.  The new NDI hardware with USB port supports this.

#### 2012-04-11, 21:19:14 - Elvis Chen
(In r:1610) re #336 removed uncessary #ifndef

#### 2012-04-12, 21:13:40 - Andras Lasso
With the combined-API from NDI, support for EM and optical (polaris) trackers are the same => ticket #336 has been set to duplicate, this ticket's title has been updated

#### 2012-04-12, 21:13:40 - Andras Lasso
summary: changed from "Add NDI Aurora tracker support" to "Improve NDI tracker support"

#### 2012-05-24, 20:58:47 - Laura Bartha
(In r:1710) re #336: Removed reference marker from low-level tracker class. Reference transform are defined at application level, using the transform repository.

#### 2012-05-25, 20:29:07 - Andras Lasso
(In r:1717) re #336: Added sample tool definitions. Read ROM files from path relative to the config file directory. Added baud rate parameter for NDI. Fixed false warnings in Release mode.

#### 2012-06-04, 20:38:16 - Andras Lasso
(In r:1733) Re #336: Fixed unfiltered timestamp values in NDI tracked frames (they were only used for diagnostics). Removed ToolTimeStampedUpdate function that used filtering but did not require framenumber, because it could be confused with ToolTimeStampedUpdate that takes filtered and unfiltered timestamp. Renamed the ToolTimeStampedUpdate that does not apply filtering to ToolTimeStampedUpdateWithoutFiltering to further reduce the chances of errors.

#### 2012-08-31, 12:30:25 - Andras Lasso
assigned_to_id: changed from "chene" to "lassoan"

#### 2012-08-31, 12:30:25 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-08-31, 12:30:25 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2012-09-06, 21:42:19 - Adam Rankin
Confirmed as working quite well.

#### 2012-09-06, 21:42:19 - Adam Rankin
status: changed from "Test" to "Fixed"


## #337 NWires modified outside the pattern recognition algorithm.
In vtkCalibrationController::ComputeNWireInstersections() it computes the intersection of the nWires and updates the structure *outside* the Pattern Recognition algorithm. That should not be the case. This function should be part of the Pattern Recognition algorithm.

#### 2011-10-21, 15:22:42 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-26, 20:37:42 - Alexis Boucharin
assigned_to_id: changed from null to "alexis.boucharin"

#### 2011-10-26, 20:37:53 - Alexis Boucharin
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:40:05 - Tamas Heffter
Updating tickets (#337, #10, #16, #39, #105, #113, #156, #175, #146)



#### 2011-10-29, 03:40:05 - Tamas Heffter
milestone_id: changed from "Release - Next" to "Release Plus-1.3.0 - Open source"


## #338 Add fCal sample images to the repository for testing
Currently it's quite difficult to test fCal probe calibration, because there is no configuration files that are readily usable (there are some almost usable config files, but the filename is empty).

Suggested solution:
-During the porject configuration step generate a PlusConig.xml file in the binary directory that contains a link to the _image directory_.
-Change the saved dataset source that if relative path (or just a simple file name) is specified then it is interpreted relative to the specified _image directory_ (e.g., if a filename is specified then search for it in the _image directory_ ).


#### 2011-10-19, 13:22:08 - Andras Lasso
description: changed from "Currently it's quite diffic..." to "Currently it's quite diffic..."

#### 2011-10-19, 16:02:38 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"

#### 2011-10-19, 16:02:44 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-19, 16:09:58 - Csaba Pinter
(In r:962) Re #338: ImageDirectory added to vtkPlusConfig; Resolving image path in saved dataset tracker and video source; Convenience function vtkPlusConfig::GetAbsoluteImagePath added to easily get absolute path for any file name or path that was found in the device set configuration file

#### 2011-10-19, 16:10:37 - Csaba Pinter
(In r:963) Re #338: Image directory selection added to fCal Configuration toolbox

#### 2011-10-19, 18:21:33 - Csaba Pinter
ImageDirectory should be renamed to SavedDataHomeDirectory, because it is used only for those in course of testing, so it is more expressive.

Also, in fCal, we don't need an ImageDirectory setting function in ConfigurationToolbox, but we do need one for OutputDirectory (it can be just renamed)

#### 2011-10-26, 20:13:11 - Csaba Pinter
(In r:1006) Re #338: Saved dataset for fCal configuration file now loads the test image that is used during the test; New lines added to debug message to easier distinguishable blocks

#### 2011-10-26, 20:14:37 - Csaba Pinter
(In r:1007) Re #338: PlusConfig.xml application configuration file containing the defaults is generated in the binary directories to be able to use fCal right after building, without editing any configuration files

#### 2011-10-27, 20:08:46 - Csaba Pinter
(In r:1020) Re #338: Bugfix - if ImageDirectory was relative, the CollapseFullPath method failed to find the correct path

#### 2011-10-27, 20:19:50 - Csaba Pinter
(In r:1021) Re #338: Config files and example image added to package generation

#### 2011-10-27, 21:04:50 - Csaba Pinter
Simulation mode instructions added to the wiki:
https://www.assembla.com/spaces/plus/wiki/Free-hand_probe_calibration

#### 2011-10-27, 21:04:50 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-10-29, 16:23:16 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #339 Build all binaries in a single directory
Set one single directory as the target directory for all binary files. This would allow us to get rid of the launcher scripts (DevEnv_...bat) and would make it easier to run development versions on different computers without requiring to build an installer package.

#### 2011-10-21, 15:23:51 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-24, 20:47:41 - Csaba Pinter
PlusApp Sikuli GUI tests need to be changed too. Instead of the launcher, the test executable can be called directly from Sikuli (in PlusApp\\CommonWidgets\  esting\\CMakeLists.txt)

#### 2011-10-26, 23:49:56 - Tamas Heffter
milestone_id: changed from "Release - Next" to "Release Plus-1.3.0 - Open source"

#### 2011-10-26, 23:49:56 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-10-26, 23:51:25 - Tamas Heffter
(In r:1009) re #339: Build all binaries in a single directory


#### 2011-10-26, 23:52:56 - Tamas Heffter
(In r:1010) re #339: Build all binaries in a single directory


#### 2011-10-26, 23:54:04 - Tamas Heffter
(In r:1011) Test #339: Build all binaries in a single directory
Added license file to installer 

#### 2011-10-26, 23:54:04 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-10-27, 03:39:07 - Tamas Heffter
(In r:1012) Test #339: Build all binaries in a single directory
Enabled VTK_USE_QTCHARTS

#### 2011-10-27, 17:16:46 - Tamas Heffter
(In r:1018) Test #339: Build all binaries in a single directory


#### 2011-10-27, 17:17:30 - Tamas Heffter
(In r:1019) Test #339: Build all binaries in a single directory


#### 2011-10-27, 23:06:14 - Tamas Heffter
(In r:1028) Test #339: Build all binaries in a single directory
Added NDI oapi lib finder as a cmake module 

#### 2011-10-27, 23:13:10 - Tamas Heffter
(In r:1029) Test #339: Build all binaries in a single directory
Updated NDI oapi lib finding 

#### 2011-10-28, 01:48:05 - Tamas Heffter
(In r:1030) Test #339: Build all binaries in a single directory
Added Ultrasonix SDK finder 
Turned off Ultrasonix ans Certus flags by default 
Removed PLTools include from PlusBuild 

#### 2011-10-28, 01:49:56 - Tamas Heffter
(In r:1031) Test #339: Build all binaries in a single directory
Updated ultrasonix sdk finding 
Added ultrasonix sdk patch version number

#### 2011-10-28, 01:51:45 - Tamas Heffter
(In r:1032) Test #339: Build all binaries in a single directory
Copy PlusConfig.xml to executable output folders 

#### 2011-10-28, 02:50:16 - Tamas Heffter
(In r:1033) Test #339: Build all binaries in a single directory
Check libs from trunk folders too under PLTools


#### 2011-10-28, 03:03:40 - Tamas Heffter
(In r:1034) Test #339: Build all binaries in a single directory
Removed devenv files 


#### 2011-10-28, 03:05:19 - Tamas Heffter
(In r:1035) Test #339: Build all binaries in a single directory
Removed devenv files and changed sikuli tests


#### 2011-10-28, 03:23:45 - Tamas Heffter
(In r:1036) Test #339: Build all binaries in a single directory
Removed devenv from BuildAndTest.bat.in


#### 2011-10-28, 03:24:13 - Tamas Heffter
(In r:1037) Test #339: Build all binaries in a single directory
Removed devenv from BuildAndTest.bat.in


#### 2011-10-28, 14:32:10 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #340 Nightly tests for NSIS packaging
There are three main things that we could test for package generation:
* Package generation was successful (there are no missing files)
* Package generating automation (generate package every time we run nightly tests)
* Check that there is no missing dlls (all binaries could run from the package bin folder)

For more info: https://www.assembla.com/spaces/plus/messages/1076743

#### 2011-10-22, 19:25:36 - Tamas Heffter
description: changed from "There are three main things..." to "There are three main things..."

#### 2011-10-28, 14:50:06 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2016-07-13, 16:38:35 - Adam Rankin
Closing this as fixed as nightly package generation is completed. If we want more specific tests on the packages, then open individual tickets for individual issues as needed.

#### 2016-07-13, 16:38:35 - Adam Rankin
status: changed from "New" to "Fixed"


## #341 Common python functions for Sikuli into separate file
Functions (or code snippets that can be moved to a separate function) that are used for the automated Sikuli GUI tests should be moved in another python module that can be imported by all tests.

#### 2011-10-24, 16:26:29 - Csaba Pinter
Results so far:
* Including an external python file:
sys.path.append('d:/devel/Plus-bin/PlusApp/scipts')
from PlusSikuliCommon import *
(the problem here is that the path has to be absolute, it has to be solved)
* There is a very preliminary result for the common functions (attached)

#### 2011-10-24, 16:27:24 - Csaba Pinter
file:aoqEwc_L0r4jvzacwqjQXA: Very preliminary version for the common functions

#### 2011-10-24, 16:27:24 - Csaba Pinter
Attachment added: "PlusSikuliCommon.py"

#### 2011-10-26, 16:07:21 - Csaba Pinter
Relevant forum topic:
https://answers.launchpad.net/sikuli/+faq/1114

#### 2011-10-28, 14:50:26 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2016-07-13, 16:39:11 - Adam Rankin
Closing as invalid as qtest can provide the test infrastructure we need.

#### 2016-07-13, 16:39:11 - Adam Rankin
status: changed from "New" to "Invalid"


## #342 Make available generated html doc on Assembla


#### 2011-10-28, 21:24:32 - Andras Lasso
Waiting for Ben Hall to get back to us about which web server we can use

#### 2011-10-28, 21:24:32 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-10-28, 21:24:46 - Andras Lasso
milestone_id: changed from "Release Plus-1.3.0 - Open source" to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-01, 18:30:02 - Andras Lasso
* Created a batch file to generate documentation: PlusLib-bin\\CreateDoc.bat 
* Set up a script on PROSTATE to re-build the documentation nightly (at 4am) and upload it to http://research.cs.queensu.ca/perklab/plus/docnightly/
* Added a link to the documentation page from the Developers guide (https://www.assembla.com/spaces/plus/wiki/Developers_guide)

#### 2011-11-01, 18:30:02 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #343 Sikuli tests cannot run on locked computer
The PlusApp automated GUI nightly tests keep failing because the computers that try to run them are locked, and the current Sikuli version (1.0rc3) needs the scripted objects to be actually visible on the screen.

In the forums they advise to have a script that unlocks the cmputer remotely when it is needed, but I don't think it to be a good solution.
(https://answers.launchpad.net/sikuli/+question/120776 , https://answers.launchpad.net/sikuli/+question/152961)

#### 2011-10-28, 14:50:32 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2016-07-13, 16:39:22 - Adam Rankin
Closing as invalid as qtest can provide the test infrastructure we need.

#### 2016-07-13, 16:39:22 - Adam Rankin
status: changed from "New" to "Invalid"


## #344 Sikuli cannot differentiate between colors
It would be crucial in case of StatusIconTest, because it has to confirm that an image of a certain color is visible on the screen.
Now it cannot do it because it finds the red status icon even if the green is set to find.

Relevant forum topics:
https://answers.launchpad.net/sikuli/+question/145806
https://answers.launchpad.net/sikuli/+question/119194
https://answers.launchpad.net/sikuli/+question/176332 (my question)

#### 2011-10-26, 18:37:23 - Csaba Pinter
(In r:1004) Fixed #344: Using Java.AWT.Robot class, picking a color is possible so the color of the StatusIcon is now checked properly

#### 2011-10-26, 18:37:23 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-26, 18:37:23 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-10-29, 03:35:50 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:50 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #345 Move cursor outside of the window for sikuli tests
Sometimes Sikuli test couldn't find connect button because the mouse pointer was over the button. 

Also submit an issue about it on Sikuli support site (if it is not already there)

#### 2011-10-28, 14:50:54 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-11-18, 16:12:11 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-11-18, 16:12:49 - Csaba Pinter
description: changed from "Sometimes Sikuli test could..." to "Sometimes Sikuli test could..."

#### 2011-11-22, 23:53:10 - Csaba Pinter
(In r:1200) Test #345: Cursor is hidden before taking the screenshot for searching, so it did not cause the problem. Probably multiple monitors were the cause that is fixed by calling a new function that tries to find the pattern on all screens in a certain number of trials

#### 2011-11-22, 23:53:10 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-12-15, 16:56:40 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:40 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #346 Add automatic temporal calibration method that does not require calibration phantom
Current temporal calibration (synchronization) algorithm requires a calibration phantom. Implementa a new method that can work on any image of a plane (a line in the image)

#### 2011-10-26, 19:56:51 - Eric Moult
(In r:1005) re #346: Added initial detection of lines using Hough transform

#### 2011-12-24, 09:11:57 - Andras Lasso
(In r:1373) re #346: Added temporal calibration algorithm illustration

#### 2012-01-14, 02:51:22 - Siavash Khallaghi
Eric, how far are you from finishing the temporal calibration? If you are almost done, I would like to support it in my own data collector application.

#### 2012-01-14, 03:34:20 - Eric Moult
Siavash, the temporal calibration is nearly done, with some portions of code needing to be converted from MATLAB to C++, and some validation needing to be done. Hopefully this will be done in the next one-to-two weeks--I will let you know as soon as it is finished. 

#### 2012-01-22, 06:30:30 - Eric Moult
(In r:1403) re #346: Modified up-sampling scheme for tracker and image streams (WIP).

#### 2012-01-22, 06:39:03 - Eric Moult
Siavash, the temporal calibration has now been implemented in C++. In the next few days, I will do some validation, code clean-up/speed-up, and then let you know.

#### 2012-01-23, 03:49:22 - Siavash Khallaghi
Great! Thank you. Keep me posted please.

#### 2012-01-25, 18:28:32 - Eric Moult
(In r:1414) re #346: Fixed bug in the signal upsampling and did some code cleanup (WIP).

#### 2012-01-25, 22:01:47 - Andras Lasso
(In r:1415) re #346: Added options for showing the plot and changing time resolution. Added automatic test (commented out for now, as execution time is too long)

#### 2012-01-25, 22:51:51 - Andras Lasso
(In r:1416) re #346: Minor changes made during code review of the temporal calibration algo

#### 2012-01-26, 01:56:09 - Eric Moult
(In r:1418) re #346: Changed command line parameters to allow the user to select the resampling period. 

#### 2012-01-26, 02:01:53 - Eric Moult
Siavash, the temporal calibration has now been tested on a few sequences and appears to be working as intended. I have written a rudimentary set of instructions on how to use it here: https://www.assembla.com/spaces/plus/wiki/Temporal_Calibration. Right now the implementation is fairly slow, so in the the next week or two I will be making some changes in the code to speed things up. Let me know if you have any questions.

#### 2012-01-27, 01:41:46 - Eric Moult
(In r:1427) re #346: removed unnecessary headers, changed plot data type to double, removed plotting of detected Hough lines, and changed thresholding US images so that the thresholding is done directly in Hough transform (threshold level is still calculated via Otsu's method). 

#### 2012-01-27, 22:28:44 - Eric Moult
(In r:1429) re #346: Changed output filepath to command line argument.

#### 2012-01-31, 02:14:32 - Siavash Khallaghi
Thank you Eric. I may need to talk to you soon.

#### 2012-02-10, 01:50:51 - Eric Moult
(In r:1443) re #346: Created temporal calibration class 'TemporalCalibration' (to succeed LineDetectionTest.cxx).

#### 2012-02-10, 13:29:44 - Andras Lasso
(In r:1444) re #346: Temporarily disabled building of temporal calibration executable to prevent build error caused by missing test.exe

#### 2012-02-10, 15:57:59 - Eric Moult
(In r:1445) re #346: Added (previously missing) testing file for the temporal calibration algo (WIP).

#### 2012-02-17, 19:25:21 - Eric Moult
(In r:1450) re #346: Added file writing functionality (changed from .txt to .cvs file output) (WIP).

#### 2012-02-17, 19:44:28 - Eric Moult
(In r:1451) re #346: Added method to create plot tables of the tracker and video metrics (WIP).

#### 2012-02-17, 19:52:09 - Eric Moult
(In r:1452) re #346: Updated plotting functionality (WIP).

#### 2012-02-17, 20:42:18 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.4.2"

#### 2012-02-17, 22:08:45 - Andras Lasso
(In r:1454) re #346: Added some comments and minor fixes during code review

#### 2012-02-20, 19:50:08 - Eric Moult
(In r:1461) re #346: Changed interface to accept tracker- and video-sequences rather than filenames (WIP).

#### 2012-02-22, 23:02:09 - Andras Lasso
(In r:1476) Re #346: Cleaned up code of TemporalCalibration algo

#### 2012-02-22, 23:10:44 - Andras Lasso
(In r:1478) Re #346: Moved TemporalCalibrationAlgo into the CalibrationAlgo lib

#### 2012-03-02, 19:46:16 - Andras Lasso
(In r:1510) Re #346: Activated test for temporal calibration

#### 2012-03-02, 21:51:47 - Andras Lasso
* Have a separate flag for writing bmp files with scanlines and fitted line, detected peak points, used peak points
* Plotting of the image and tracker position with and without lag correction, save it to file if it's not too complicated
* Test on lots of data (including bad ones)

#### 2012-03-02, 21:59:52 - Andras Lasso
(In r:1511) Re #346: Use enum instead of bool flag for peak position find method in temporal calibration

#### 2012-03-03, 22:27:16 - Andras Lasso
(In r:1517) re #346: TemporalCalibrationAlgoTest plots results only if the --plot-results flag is specified (plotting must be disabled during automatic testing because it requires a keypress to exit the process)

#### 2012-03-07, 22:10:09 - Andras Lasso
(In r:1528) Re #346: Compute threshold from the max peak height

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-03-19, 21:46:12 - Andras Lasso
(In r:1552) re #346: Fixed plot saving into file. Changed plot-results command-line parameters to not take any parameter.

#### 2012-03-20, 04:23:02 - Eric Moult
Hi Andras,

I have run the tests (although I have not looked at the results). Four tests crashed the program--I will look into how this happened. I think I have shared the folder with--let me know if you can access it (folder is called TemporalCalibrationTests).

Eric.

#### 2012-03-21, 21:07:49 - Csaba Pinter
(In r:1553) Re #346: All LocalTimeOffset renamed to LocalTimeOffsetSec; Implemented WriteConfiguration methods for all trackers and video sources; Fixed some formatting in TemporalCalibrationAlgo

#### 2012-03-21, 21:08:30 - Csaba Pinter
(In r:1554) Re #346: TemporalCalibrationAlgo integrated in fCal FreehandCalibrationToolbox; Plotting still needs to be implemented

#### 2012-03-22, 22:41:46 - Csaba Pinter
(In r:1557) Re #346: Old temporal calibration (Synchronize) removed from DataCollector's; TemporalCalibrationAlgo bug fixed; Configuration files updated to have LocalTimeOffsetSec instead of LocalTimeOffset

#### 2012-03-22, 22:41:58 - Csaba Pinter
(In r:1558) Re #346: TemporalCalibrationAlgo ready for test in fCal

#### 2012-03-22, 22:43:38 - Csaba Pinter
(In r:1559) Re #346: Configuration files updated to have LocalTimeOffsetSec instead of LocalTimeOffset (accidentally missed it before)

#### 2012-03-22, 23:49:29 - Andras Lasso
Add a new parameter to the test: --expected-tracker-delay-sec=0.4???. If you specify this value then the test will compare the end result to this value and returns with EXIT_FAILURE if it doesn't match the computed lag.

#### 2012-03-22, 23:49:29 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-03-23, 20:26:07 - Csaba Pinter
(In r:1565) Re #346: iCalBrachyTicket#55: Configuration files updated to have temporal calibration calibration data element in iCalBrachy-related configurations

#### 2012-03-23, 20:26:34 - Csaba Pinter
(In r:1566) Re #346: Bug fixed: Temporal calibration duration was always 10 seconds no matter the settings

#### 2012-03-23, 22:35:07 - Csaba Pinter
(In r:1569) Re #346: Metric table is cleared before filled in TemporalCalibrationAlgo; Two parameters added to vtkDataCollector::GetTrackedFrameList function to enable/disable tracking and video

#### 2012-03-23, 22:37:40 - Csaba Pinter
(In r:1570) Re #346: Two separate tracked frame lists are used for temporal calibration in order to avoid interpolation

#### 2012-03-24, 23:22:43 - Andras Lasso
The acceptable accuracy is determined by two factors:
# Timestamping accuracy. The resolution of our timestamps is 1ms now (we use a multimedia timer that is called in every ms and we use that counter for measuring time). Therefore, we definitely cannot have a better accuracy than 1ms. Probably the average absolute error is about 1-2ms.
# Maximum speed of tool motion. If there is a non-compensated time lag then it causes spatial error for moving tools. The magnitude of required targeting accuracy is about 1-3mm for most applications (the total system error). If we want to make sure that the temporal calibration’s contribution to this error is negligible then the error should be about one magnitude smaller, about 0.1-0.3mm. For freehand motion the maximum translation is about 100mm/sec, which would mean about max. 1-3ms temporal calibration error. Unfortunately, rotating motion can result in higher position error: with a maximum rotation of 90deg/sec and 100m marker-to-ROI distance leads to about 200mm/sec error, which would mean 0.5-1.5ms maximum acceptable temporal calibration error.

So, it seems that with the current setup we cannot reduce the temporal error induced spatial error to a negligible level. However, something like <3ms error in 95% of the cases would be an acceptable level - if we achieved this then we could stop further investigation. We may also stop the investigation (close the ticket) if we find a higher error, but we don't see any strange outliers or trends in the results.


#### 2012-04-09, 19:48:14 - Csaba Pinter
(In r:1600) Re #346: fCal/TemporalCalibrationDurationSec attribute added to configuration files (no warning is displayed because of the lack of it anymore because)

#### 2012-04-09, 19:50:06 - Csaba Pinter
(In r:1601) Re #346: Eliminating memory leak of temporal calibration plots window: it is checkable now and is deleted when closed; eventFilter re-added to ConfigurationToolbox (it was somehow deleted a while ago and was therefore buggy)

#### 2012-04-12, 18:32:21 - Andras Lasso
(In r:1614) re #346: Add method to return fitting error metric value from temporal calibration algorithm

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:42:47 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-07-07, 17:06:50 - Eric Moult
(In r:1886|plus:1886) re #346: The computation of the tracker position metric for any given tracker position is dependent on the tracker position of all considered frames. This is in contrast to the video position metric which can be derived from a single, isolated US image without consideration of other images; the dependency of the tracker position metric on other multiple tracker positions arises from the principal axis (onto which the tracker positions are projected), which is computed using all the considered tracker positions. Previously, the principal axis was computed using all the (valid) tracker frames in the buffer; this caused (sometimes erroneous) tracker positions outside of the common time range (i.e. the time range shared with the video buffer data) to have the potential to skew the principal axis and thus the tracker position metric. The code has now been updated so that only those tracker frames in the shared time range are to calculate the principal axis. This change seems to have significantly improved the match between the aligned tracker and video metrics on certain recordings. 

A bug with the switch-case statements for choosing the normalization type (amplitude or standard deviation) has also been fixed by adding 'break' statements.

#### 2012-07-09, 16:46:44 - Eric Moult
(In r:1888|plus:1888) re #346: Changed a warning message that was causing the temporal calibration test to fail to a debug message.

#### 2012-07-18, 02:57:38 - Eric Moult
(In r:1933|plus:1933) re #346: Commented out two debugging statements that were writing tracker coordinates and principal eignenvectors to text files.

#### 2012-07-21, 17:59:53 - Eric Moult
(In r:1950|plus:1950) re #346: Previously, in the computation of the probe position metric, the signed distance from each projected probe position was taken from the mean projected probe position; however, this calculation is redundant because in the process of  normalizing the metrics--both with maximum signal amplitude and with standard deviation--the mean of the metrics is first subtracted. To eliminate this redundancy, the subtraction of the mean has been removed in the computation of the (non-normalized) probe position metric. Some debugging code has also been removed.

#### 2012-08-05, 13:53:26 - Eric Moult
(In r:1973|plus:1973) re #346: MATLAB code for running tests and analyzing temporal calibration data (WIP).

#### 2012-08-05, 14:04:28 - Eric Moult
(In r:1974|plus:1974) re #346: The power point corresponding to the lab presentation of the temporal calibration algorithm (April 10 2012).

#### 2012-08-09, 16:15:49 - Eric Moult
(In r:1981|plus:1981) re #346: Changing interpolation code to use vtkPiecewiseFunction (WIP).

#### 2012-08-09, 16:25:20 - Eric Moult
(In r:1982|plus:1982) re #346: Increased resolution of the metric plots that get saved.

#### 2012-08-09, 18:09:22 - Eric Moult
(In r:1983|plus:1983) re #346: The old method for resampling--through linear interpolation--the image and tracker position metrics has been replaced with the interpolation functionality provided by vtkPiecewiseFunction. Currently the smoothness and midpoint parameters of the control (i.e. measured/knot) points are set to 0 and 0.5 respectively; this setting provides linear interpolation between the control points. Other settings of these parameters will provide other types of interpolation. The new interpolation technique has been tested on 10 temporal calibration sequences(S:\\data\  emporalTrackedUSCalibration\\SPIE_DATA\awData\\SensitivityStudy\\FrequencyPerturbations\\10.0M) and gives no difference in the calculated offset when compared to the previous linear interpolation method. Additionally, there was no perceivable difference in the computation time between the two methods. The new method is desirable because (1) it provides a simpler interface for the interpolation, and (2) it will facilitate the testing of different interpolation techniques (beyond linear interpolation).

#### 2012-10-12, 02:46:54 - Eric Moult
(In r:2166|plus:2166) re #346: In the previous version of the algorithm, both the tracker and video position signals were resampled at an equal sampling rate. The two sampled signals were then correlated by sliding one signal over top of the other signal, one index at a time. In this version of the algorithm, for each time-offset investigated during the correlation process, the tracker signal is resampled at the video position time-stamps. We interpolate the tracker position signal at the video position time-stamps, and not vice-versa, because the tracker data is generally acquired at a higher frequency (i.e. is more dense) than the image data (i.e. is less dense). This modification was originally made in an attempt to limit the influence that some of the less well sampled regions of the video signal (particularly around the peaks of the signal, where the probe motion changes direction) have on the correlation result (in particular, we wanted to tighten up the variances for data collected at 5Mhz probe frequency). Comparing the results of the new code and old code, the 20 baseline sequences (i.e. sequences with baseline parameters) yielded:

OLD CODE: mean tracker lag= 58.7 (std = 3.2)
NEW CODE: mean tracker lag= 59.6 (std = 3.2)

and the 10 sequences with the probe frequency at 5MHz (which were the sequences that motivated this endeavor):

OLD CODE: mean tracker lag= 90.9 (std = 10.4)
NEW CODE: mean tracker lag= 91.8 (std = 10.6)

So, unfortunately, the change in resampling technique has not reduced variances. However, it is probably a more sound technique on the whole.

#### 2012-10-12, 12:11:10 - Csaba Pinter
Sounds great, Eric!
The point is not to reduce the lags but to measure them correctly, so don't worry about the increase

#### 2012-10-12, 22:10:31 - Andras Lasso
The computation time went from 23 to 240 seconds. This is very significant change (10x). It seems that the InterpolatePositionMetrics is slow (takes about 40msec), and executed thousands of times. I think the main problem is that the tracker position metric is interpolated for every time offset, while it should be enough to create the piecewise function only once.
@EricMoult: When would you have time to work on this?

#### 2012-10-12, 22:10:31 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-10-12, 22:30:22 - Eric Moult
Yes--you are correct that I re-create the piecewise function for each time offset and could get away with only creating the piecewise function once. However, I will still have to interpolate for each time-offset because for each time-offset the video position signal will be aligned differently with respect to the tracker signal. 

I will fix the code so that the piecewise function is only created once--hopefully this solves the problem. I will do this tonight.

Eric.

#### 2012-10-12, 22:44:14 - Andras Lasso
Yes, you still have to interpolate, but hopefully if the piecewise function is created only once then the speed will be OK.

#### 2012-10-13, 01:53:22 - Eric Moult
(In r:2177|plus:2177) re #346: The vtkPiecewiseFunction that holds the tracker position signal (and that is used to interpolate the tracker position at the video position timestamps) is now only constructed once, not every time a time-offset is tested during the correlation process (as it was previously). This change was motivated by the increased running time of the last commit of this algorithm; this change has substantially reduced the problem:

Previous Time: 240 secs
New Time: 40 secs  

#### 2012-10-13, 02:33:08 - Eric Moult
(In r:2178|plus:2178) re #346: Deleted some obsolete functions.

#### 2012-10-13, 03:30:30 - Eric Moult
@lassoan: Is 40 seconds still too lengthy? If it is, perhaps we could do a varying resolution search for the best time offset (i.e. start off with a coarse resolution and move towards a fine resolution). Thoughts?

#### 2012-10-13, 10:54:09 - Andras Lasso
40s is much better, but I would say the target would be max 10 sec. The variable step size search is a good idea. We could do a full range search with a step size that is roughly matches the video frame period (estimated from last-first timestamp / number of frames), then search in a range of +/-5 frame period with the finest (1ms) step size.

#### 2012-10-17, 14:42:50 - Andras Lasso
I'll implement this varying step size approach. @EricMoult:Don't modify the temporal calibration algo code until I commit my changes.

#### 2012-10-17, 14:42:50 - Andras Lasso
assigned_to_id: changed from "EricMoult" to "lassoan"

#### 2012-10-17, 22:18:18 - Andras Lasso
(In r:2186|plus:2186) re #346: Implemented variable step size for the optimum match search in the temporal calibration algorithm. First the optimization is performed with a course step size (which matches the video frame period), then optimization is performed with a fine (user-defined) step size near the optimum. The temporal calibration class is now split into a few smaller classes to make it more readable and to facilitate the application for registering any metric (not just video-tracker but also tracker-tracker temporal calibration).

#### 2012-10-17, 22:18:58 - Andras Lasso
(In r:2187|plus:2187) re #346: Application-level updates for the temporal calibration algorithm updates.

#### 2012-10-17, 22:21:07 - Andras Lasso
The variable step size implementation (and some clean-up) is ready.

@EricMoult: It would be great if you could test it. There may be some differences in the normalization (when and in what range the signals are normalized).

#### 2012-10-17, 22:21:07 - Andras Lasso
assigned_to_id: changed from "lassoan" to "EricMoult"

#### 2012-10-17, 22:21:04 - Andras Lasso
The variable step size implementation (and some clean-up) is ready.

@EricMoult: It would be great if you could test it. There may be some differences in the normalization (when and in what range the signals are normalized).

#### 2012-10-18, 05:22:45 - Eric Moult
@lassoan: Thanks for making these improvements! Yes--I will test it out to see if there are differences. 

#### 2012-10-21, 19:47:37 - Andras Lasso
I  close this ticket because this ticket is set to be fixed in an old release. Any further changes and improvements are tracked in #618.

#### 2012-10-21, 19:47:37 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #347 Generate application start timestamp in PlusConfig and use it as a prefix for outputs 


#### 2011-10-28, 14:51:27 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-11-04, 14:54:42 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-11-07, 16:57:45 - Csaba Pinter
(In r:1140) Test #347: ApplicationStartTimestamp added to vtkPlusConfig; This timestamp is used in vtkProbeCalibrationAlgo instead of the old one; Unused members removed from vtkProbeCalibrationAlgo

#### 2011-11-07, 16:57:45 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-11-08, 18:12:50 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #348 Add support for MicronTracker
Test calibration with MicronTracker

I want to calibrate probe using MicronTracker. Please can I know what I have to set the parameters to in the config file. (I attached the config file)
For example, Type='MicronTracker' is that right ?

#### 2011-10-27, 03:33:31 - Tamas Ungi
I don't think we create nightly tests for hardware connections. Because it would require a connected hardware to the test machines. Am I right?
If yes, this ticket should be set as invalid.

#### 2011-10-27, 03:38:43 - hussam.ashab

you are right



#### 2011-10-28, 14:56:37 - Csaba Pinter
description: changed from "I want to calibrate probe u..." to "Test calibration with Micro..."

#### 2011-10-28, 14:56:37 - Csaba Pinter
summary: changed from "Create automatic nightly test for Micron Tracking" to "Add support for MicronTracker"

#### 2011-10-28, 14:56:47 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-10-29, 20:30:25 - Andras Lasso
By hussam.ashab on Oct 29 @ 04:04PM 

I got this link errors when I want to access any MicronTracker functions
1>vtkMicronTracker.obj : error LNK2001: unresolved external symbol 'public: int __thiscall MCamera::getXRes(void)' (?getXRes@MCamera@@QAEHXZ)
1>vtkMicronTracker.obj : error LNK2001: unresolved external symbol 'public: int __thiscall Cameras::AttachAvailableCameras(void)' (?AttachAvailableCameras@Cameras@@QAEHXZ)
1>vtkMicronTracker.obj : error LNK2001: unresolved external symbol 'public: __thiscall Cameras::Cameras(void)' (??0Cameras@@QAE@XZ)


#### 2011-10-29, 20:33:15 - Andras Lasso
Hussam, I guess you have build errors only if the MicronTracker build option is enabled. So, you can just commit your changes (it won't break the build for others, because they haven't enabled the MicronTracker option) and I'll have a look at the committed code.

#### 2011-10-29, 20:33:15 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2011-10-29, 20:44:06 - hussam.ashab
Thank you for your help. I commited my code. it is in vtkMicronTracker.cxx at the end of the file it is ReadConfiguration. 

#### 2011-10-29, 20:46:03 - hussam.ashab
Also the CmkaeFile in PlusExperimental-bin\\PlusLib\\src\  racking do not have the Microntracker option ON. Even I built PLUS with that option set to on. Any suggestions.


#### 2011-10-29, 21:15:45 - Andras Lasso
Everything seems OK.

You get link errors because you try to use the internal functions of the vtkMicronTrackerfiles package. In vtkMicronTracker.cxx/h you should only use the public interface defined in MicronTrackerInterface.h. If you want to access internals of the MicronTracker driver then you can do it within the vtkMicronTrackerfiles package (but probably it won't be necessary).


#### 2011-10-29, 21:17:59 - Andras Lasso
Regarding 'the CMakeFile in PlusExperimental-bin\\PlusLib\\src\  racking do not have the Microntracker option ON...':
This problem only happens on your PC (we tested it on multiple machines in our lab and it works fine). I can log on your PC on Monday to have a look at this. Contact me through skype on Monday to set this up.

#### 2011-10-29, 21:22:57 - hussam.ashab
ok, Thank you for your help.


#### 2011-10-29, 21:23:09 - hussam.ashab
I will contact you on monday


#### 2011-10-31, 15:17:37 - hussam.ashab
When I run fcal, I want to assign one marker to Stylus, one to phantom and one to probe. How I can do that using vtkMicrontracker since i do not have access to Microntracker functions.
Do you have any suggestions

#### 2011-10-31, 16:10:33 - Andras Lasso
The public interface of MicronTracker should give you access to configure and accwss all the markers. But if yoi find that you need to expose more functionality on the public interface then feel free to modify it.

-original message-
Subject: [Plus] Re: #348: Add support for MicronTracker
From: 'hussam.ashab' <plus@alerts.assembla.com>
Date: 10/31/2011 11:17

#### 2011-10-31, 22:38:36 - hussam.ashab
I am able to connect to micron tracker and get info from it, but when ever I show a marker, fCal crashes with 'Debug assertion Fail, vector line 70'. Can you help.

NOTE: I added the Tools filder in fCal and added the ToolNames.txt file. ('I think this is required').

#### 2011-11-01, 02:24:55 - Csaba Pinter
Can you send us the whole call stack somehow? A screenshot would be perfect.

The tools folder and the text file is required for the MicronTracker?

#### 2011-11-01, 14:49:17 - hussam.ashab
image:cSzOOAbjGr4BwqacwqjQWU

#### 2011-11-01, 14:49:17 - hussam.ashab
Attachment added: "DebugAssertionFailed.bmp"

#### 2011-11-01, 14:50:09 - hussam.ashab
Please let me know if this is not what you want

#### 2011-11-01, 15:30:40 - Csaba Pinter
I was looking for the call stack. Do you have the Plus compiled on your machine or you just use the package? If you have it built then it would be helpful to run it in debug mode from Visual Studio and when it crashes, take a look at the call stack.

#### 2011-11-01, 15:45:19 - hussam.ashab
image:canHfmbkar4BwqacwqjQWU callstack

#### 2011-11-01, 15:45:19 - hussam.ashab
Attachment added: "callstack.bmp"

#### 2011-11-01, 16:31:19 - hussam.ashab
This is the function that causes the error. this->MT->mtFindUnidentifiedMarkers

#### 2011-11-01, 17:20:20 - Csaba Pinter
Yes it is.
If you don't know how to use visual studio for debugging, you can call me on skype and share your screen or let me log in remotely using LogMeIn or something.
Anyway, we already see what's causing the error. Unfortunately since I don't have this file, I can't see what goes wrong at line 603. My guess is the overindexing a vector, possibly using std::vector::end which gives the iterator to the one after the last one instead of the last one.

#### 2011-11-01, 17:21:57 - Csaba Pinter
Also I'd like to ask you to compress the images you want to upload to Assembla (you can use jpeg, png or gif for example). Thank you!

#### 2011-11-01, 17:34:53 - Andras Lasso
Hussam,
1. Please don't attach 5MB screenshots! (use jpg, png, or gif instead of uncompressed bmp).
2. Use a vtkDataCollectorTrackingTest test application for debugging the tracker, not a complex application like fCal


#### 2011-11-01, 19:56:52 - hussam.ashab
Csaba,

1- For sure I will ask for your help (Thank you).

2- It is my mistake I did not make the problem clear (I will avoid it in future)

   a- the program used to break at vtkAccurateTimer::Delay {when  I strat fcal --> connect, while the marker is shown}, I though there was something I added to the config file that caused it to break, 
       since it was not an error in vtkmicrontracker. (This error is now at this->MT->mtFindUnidentifiedMarkers). I will try to debug it. If I could not know the reason, I will ask for you help (if you do not mind).
       (I made somechanges today morning which reduced the number of errors I used to get)

   b- When I used to debug the code I was getting soruce file does not exist (Microntrakerinterface , even though it was there. This problem was solved when I rebuilt PLUS).

   c- I may need to change some functions in vtkMicrontracker, Can I do that.

#### 2011-11-01, 19:57:09 - hussam.ashab
Andras,

1- I deleted the files, I will avoid that in future.

2- I will use that test. Thank you.

#### 2011-11-01, 20:09:14 - Andras Lasso
2a -> Hussam, don't use fcal for the debugging/testing/tuning of such a low-level feature. If anything breaks at the vrey low level then a complex application may show various kinds of errors that is very difficult to analyze. Just use the  vtkDataCollectorTrackingTest test application for debugging the tracker. Update your view before doing so, as Tomi added some more detailed logging into that test to help you with the debugging.

#### 2011-11-01, 22:45:36 - hussam.ashab
ok, I will do that. 

Thanks

#### 2011-11-02, 19:41:08 - hussam.ashab
Hi,

1- I was able to connect to MicronTracker throught fCal using a config file.

2- I created Tools folder in Plus_App/fCal and created  ToolNames.txt  in that folder. This txt file contains the names of markers I will use.

3- I put the markers file in  Plus_App/fCal  because fCal looks for markers in that folder (May be I have to change that)

4- I looked at other tracking codes 'vtkBrachyTracker.cxx' and 'vtkAscension3DGTracker.cxx' they use port number for stylus, probe and reference, But MicronTracker does have portnumbers for stylus,probe and reference markers. Any suggestions ? (I talked to Andras about this today and he said this will be changed to PortName)

5- I tried to see what will happen and gave probe, reference and stylus port numbers 0,1,2. When I run fcal->Stylus Calibration. Any of the three markers I have is detected and it's measurements are used.? Any suggestion (Am I doing something wrong).

NOTES: Please I have these two problems, do you have any suggestions: 

A- In the InternalUpdate function I added Sleep() function, May be I have to change it. But if I do not use that function, there will be errors in grabbing frame. (This function is called by thread very quickly and may be micronTracker cannot grab frames at that frame rate)

B- Whenever there is an error in grabbing a frame and the program gets to 'LOG_ERROR('Error in grabbing a frame! %s \
' << this->MT->mtGetErrorString());' it gives access violation error. I think because mtGetErrorString() does not have any data 'I mean string'. Line 285 vtkMicrontracker.cxx


#### 2011-11-02, 20:26:45 - Andras Lasso
(In r:1099) re #348: Fixed crash at MicronTracking failure

#### 2011-11-02, 20:27:18 - Andras Lasso
Next time please include the ticket number in your commit comment, then we can see all the related commits in the ticket history. Example: re #348: Added ReadConfiguration and …

2,3 - Don't create new config files. If you need to store any additional configuration information then just add it to the xml config file. Could you attach your txt files here so that we can see what information you need to store in them?

4 - contact Tamas Heffter about this, you can send him an email or a private message through assembla (he doesn't monitor this issue, so he won't chime in unless you ask him)

5 - you have to identify the marker based on the PortName and set the transform in the corresponding tool using ToolTimeStampedUpdate(i, ...)

A - Remove the Sleep function! If the update rate is too high then just  lower the value of the Frequency attribute of the Tracker element in the config file (<Tracker ... Frequency='20' ...>)

B - The problem was that you called InternalStopTracking first, which deleted the MT object, then you called a member of the MT object. Also, there was an unnecessary %s in the string (it's required only for printf, but not when constructing strings using streams). I've committed the fix (see revision 1099).

#### 2011-11-02, 20:31:07 - hussam.ashab
'LOG_ERROR('Error in grabbing a frame! %s \
' << this->MT->mtGetErrorString());'  is not my code it was in vtkMicrontracker when I built it.
I will contact Tamas Heffter 

#### 2011-11-02, 20:35:11 - hussam.ashab
'Could you attach your txt files here so that we can see what information you need to store in them?' Do you mean the config file ?

#### 2011-11-02, 20:36:53 - hussam.ashab
5 - you have to identify the marker based on the PortName and set the transform in the corresponding tool using ToolTimeStampedUpdate(i, ...)

May be I did not understood it. in vtktracker it does not read portname (Am I missing something)

#### 2011-11-02, 20:57:09 - Andras Lasso
Please attach both the txt and the config file.


#### 2011-11-02, 21:04:38 - hussam.ashab
Config file:
<PlusConfiguration version='1.3'>

  <!-- DATA COLLECTION -->
  <USDataCollection version='2.0' StartupDelaySec='1.0'>
    
    <DeviceSet 
    Name='SonixTouch MicronTracker L14-5 + Reference + Stylus'
    Description='MicronTracker' 
    />

    <Tracker
    Type='MicronTracker'
    BufferSize='500'
    Frequency='5'
    LocalTimeOffset='0.0'
    AveragedItemsForFiltering='20'
    >
      
    <Tool
      Name='Probe'
      Type='Probe'
      PortNumber='0'
      SendTo='localhost:18944'>
      <Model
        File='L14-5_38_ProbeModel.stl'
        ModelToToolTransform='
          0.107721 0.979858 0.168146 -115.733132
          -0.993248 0.113395 -0.024487 13.708913
          -0.043061 -0.164373 0.985458 -107.578262
          0 0 0 1'
      />
      <Calibration
        MatrixName='ImageToProbe' 
        MatrixValue='
          1 0 0 0
          0 1 0 0
          0 0 1 0
          0 0 0 1'
        Date=''
        Error='0.0' />      
    </Tool>
    
    <Tool
      Name='Reference'
      Type='Reference'
      PortNumber='1'>
    </Tool>
    
    <Tool
      Name='Stylus'
      Type='Stylus'
      PortNumber='2'>
      <Model
        File='Stylus_Example.stl'
        ModelToToolTransform='
          1 0 0 -210.0
          0 1 0 0
          0 0 1 0
          0 0 0 1'
      />
      <Calibration
        MatrixName='StylusTipToStylus' 
        MatrixValue='
          1 0 0 0
          0 1 0 0
          0 0 1 0
          0 0 0 1'
        Date=''
        Error='0.0' />
    </Tool>
    
    </Tracker>

    <ImageAcquisition
      Type='SonixVideo' 
      BufferSize='500' 
      FrameSize='820 616' 
      UsImageOrientation='UF'
      FrameRate='30' 
      AveragedItemsForFiltering='20' 
      LocalTimeOffset='-0.2976'
      IP='130.15.7.20' 
      ImagingMode='BMode'
      AcquisitionDataType='BPost' 
      Depth='-1' 
      Sector='-1' 
      Gain='-1' 
      DynRange='-1' 
      Zoom='-1' 
      Frequency='-1' 
      Timeout='-1' 
      CompressionStatus='0' 
    />

    <Synchronization
      Type='ChangeDetection' 
      SynchronizationTimeLength='30' 
      MinNumOfSyncSteps='5' 
      ThresholdMultiplier='5'

      NumberOfAveragedTransforms='20' 
      MinTransformThreshold='2.0' 
      MaxTransformDifference='2.0' 

      NumberOfAveragedFrames='6' 
      MinFrameThreshold='200.0' 
      MaxFrameDifference='10.0' 
    />
    
  </USDataCollection>


  <!-- CALIBRATION -->
  <USCalibration>
    <CalibrationController>
      <ProbeCalibration />
      <SegmentationParameters
          ApproximateSpacingMmPerPixel='0.078'
          MorphologicalOpeningCircleRadiusMm='0.47'
          MorphologicalOpeningBarSizeMm='1.0'

          RegionOfInterest='27 27 793 589'

          MaxLineLengthErrorPercent='10.0'
          MaxLinePairDistanceErrorPercent='10.0'
          MaxLineErrorMm='2.0'

          AngleToleranceDegrees='10'

          MaxAngleDifferenceDegrees='11'
          MinThetaDegrees='-70'
          MaxThetaDegrees='70'
          
          ThresholdImagePercent='10.0'

          CollinearPointsMaxDistanceFromLineMm='0.41'

          UseOriginalImageIntensityForDotIntensityScore='0'
          >
      </SegmentationParameters>
    </CalibrationController>
  </USCalibration>
  
  <!-- PHANTOM -->
  <PhantomDefinition version='1.1'>
    <!-- Supported types are: Double-N, U-Shaped-N -->
    <Description
      Name='fCAL'
      Type='Double-N'
      Version='1.0'
      Institution='Queen's University PerkLab'
    />
    
    <!-- ModelToPhantomTransform - transforming model into phantom coordinate system for proper visualization -->
    <Model
      File='FCal_1.0.stl'
      ModelToPhantomTransform='
        1 0 0 -15.0
        0 1 0 10.0
        0 0 1 -5.0
        0 0 0 1'
    />

    <Geometry>
      <!-- N wire definitions -->
      <Pattern Type='NWire'>
        <Wire Name='1:E3_e3' EndPointFront='20.0 0.0 5.0' EndPointBack='20.0 40.0 5.0' />
        <Wire Name='2:F3_j3' EndPointFront='25.0 0.0 5.0' EndPointBack='45.0 40.0 5.0' />
        <Wire Name='3:K3_k3' EndPointFront='50.0 0.0 5.0' EndPointBack='50.0 40.0 5.0' />
      </Pattern>
      <Pattern Type='NWire'>
        <Wire Name='4:E4_e4' EndPointFront='20.0 0.0 0.0' EndPointBack='20.0 40.0 0.0' />
        <Wire Name='5:J4_f4' EndPointFront='45.0 0.0 0.0' EndPointBack='25.0 40.0 0.0' />
        <Wire Name='6:K4_k4' EndPointFront='50.0 0.0 0.0' EndPointBack='50.0 40.0 0.0' />
      </Pattern>

      <!-- Landmark list for registration -->
      <Landmarks>
        <Landmark Name='#1' Position='95.0 5.0 15.0' />
        <Landmark Name='#2' Position='95.0 40.0 15.0' />
        <Landmark Name='#3' Position='95.0 40.0 0.0' />
        <Landmark Name='#4' Position='95.0 0.0 0.0' />
        
        <Landmark Name='#5' Position='-25.0 40.0 15.0' />
        <Landmark Name='#6' Position='-25.0 0.0 10.0' />
        <Landmark Name='#7' Position='-25.0 0.0 0.0' />
        <Landmark Name='#8' Position='-25.0 40.0 0.0' />
      </Landmarks>
      
      <Registration
        MatrixName='PhantomToPhantomReference' 
        MatrixValue='
          1 0 0 0
          0 1 0 0
          0 0 1 0
          0 0 0 1' 
        Date=''
        Error='0.0' />
    </Geometry>
  </PhantomDefinition>

  <!-- VOLUME RECONSTRUCTION -->
  <VolumeReconstruction OutputSpacing='0.5 0.5 0.5'
                        ClipRectangleOrigin='0 0' ClipRectangleSize='820 616'
                        Interpolation='LINEAR' Optimization='FULL' Compounding='On' FillHoles='Off'
  />

  <fCal NumberOfCalibrationImagesToAcquire='200'
        NumberOfValidationImagesToAcquire='100'
        NumberOfStylusCalibrationPointsToAcquire='200'
  />

</PlusConfiguration>

#### 2011-11-02, 21:05:05 - hussam.ashab
ToolNames.txt

probeMarker
patientMarker
stitchMarker

#### 2011-11-02, 21:48:30 - Siavash Khallaghi
Before closing the ticket, please write an example <Tool> definition for config files. For example something that will look like this:

<Tool
Name='Probe'
Type='Probe'
*PortNumber='0' <!-- New definition instead of PortNumber. -->* 
SendTo='localhost:18944'>
<Model
File='L14-5_38_ProbeModel.stl'
ModelToToolTransform='
0.107721 0.979858 0.168146 -115.733132
-0.993248 0.113395 -0.024487 13.708913
-0.043061 -0.164373 0.985458 -107.578262
0 0 0 1'
/>

#### 2011-11-02, 21:55:05 - Andras Lasso
The code is quite messy, I clean it up and add support for PortName in about an hour and check in.

#### 2011-11-02, 22:08:12 - hussam.ashab
Regarding my part, This is what I told you today. I am still not sure how some functions work and I have to organize it. But since you wanted to take a look at it. I committed the code. I am sorry for that part.

#### 2011-11-02, 23:37:49 - hussam.ashab
These are the only parts I added to the code

{
  ReadToolsFile();
  RefreshMarkerTemplates();  //
  Probe();          // setup and attach to cameras. IsTracking will be set to 1.
  Connect();


  return PLUS_SUCCESS;
}

PlusStatus vtkMicronTracker::Connect()
{ 

  // Enable tools
  for ( int tool = 0; tool < this->GetNumberOfTools(); tool ++ )
  {
      this->GetTool( tool )->EnabledOn();

  }
  
  return PLUS_SUCCESS;


}

#### 2011-11-02, 23:39:15 - hussam.ashab
and the following functions are defined before:

ReadToolsFile();
RefreshMarkerTemplates(); 
Probe(); 
Connect();

So only I put them in readConfiguration (these were there only for testing)


#### 2011-11-02, 23:57:05 - Andras Lasso
(In r:1105) re #348: Added reading of MicronTracker template names from Tracker element's PortName attribute. Added a sample config file. Somewhat cleaned up vtkMicronTracker.

#### 2011-11-03, 03:08:25 - Andras Lasso
(In r:1109) re #348: Fixed build warnings in MicronTrackingInterface project (renamed from MicronTrackingfiles)

#### 2011-11-03, 03:14:29 - Andras Lasso
Hussam, it's good that you committed the code. I know that the existing MicronTracker interface code was quite ugly (as we didn't use the MicronTracker, we didn't clean-up the code).

#### 2011-11-03, 15:11:24 - hussam.ashab
Thank you andras. I appreciate your help

#### 2011-11-03, 20:29:41 - hussam.ashab
Hi,

I am getting this errors:

1- less than two vectors are detected it is at vtkmicronTracker (198).

2- stylus tool not found (Here I debug it and found that stylus tool does not get enables).

I found that you removed these function:

1- ReadToolsFile() {So using the Config file we can get the same info we used to get before}

Notes: 

1- this->MT->mtSetupCameras() is used twice once in Conncet and once in probe.


#### 2011-11-03, 20:31:52 - hussam.ashab
Only can I know why you deleted 'ReadToolsFile' So I can continue debugging the code.

#### 2011-11-03, 20:53:07 - Andras Lasso
I've removed ReadToolsFile because all the configuration information shall be stored in the config XML file. The tools file contained only the tool names. This information is now stored in the config file as PortName (see https://www.assembla.com/code/plus/subversion/nodes/trunk/PlusLib/data/ConfigFiles/PlusConfiguration_SonixTouch_MicronTracker_L14_fCal.xml?rev=1105).

Probe: As the name of the method suggests, this method is only for checking if the hardware is available. Usually we don't call this method. It may be useful when you want to do hardware auto-detection in your application. So, it's normal that we connect (set up cameras, etc.) and disconnect in the probe method.



#### 2011-11-04, 00:54:46 - hussam.ashab
Hi,

I think this part gives error (Internalupdate)

  // Collecting new samples if creating a new template by the user
  int collectNewSamplesResult=this->MT->mtCollectNewSamples(this->IsAdditionalFacetAdding);
  if ( collectNewSamplesResult == -1)
  {
    LOG_ERROR('Less than two vectors are detected.');
    return PLUS_FAIL;
  }
  else if (collectNewSamplesResult == 1)
  {
    LOG_ERROR('More than two vectors are detected.');
    return PLUS_FAIL;
  }
  else if (collectNewSamplesResult == 99)
  {
    LOG_ERROR('No known facet detected.');
    return PLUS_FAIL;
  }

  this->NewSampleFramesCollected++;
  LOG_TRACE('Samples collected so far: ' << this->NewSampleFramesCollected);

I will rewrite it

#### 2011-11-04, 01:53:24 - Andras Lasso
Yes, of course. Feel free to rewrite it. I tried to keep the same sequence of method calls for getting the transforms but I couldn't test it without the hardware, so I wouldn't be surprised if there were errors in that part.

#### 2011-11-04, 16:12:16 - hussam.ashab
const char* portName = config->GetAttribute('PortName'); 'vtkTracker ln 511'

returns 0 always, it cannot read PortName in Configuration File ?

#### 2011-11-04, 16:39:45 - Andras Lasso
Are you sure you set the PortName in the config file?
see the sample config file https://www.assembla.com/code/plus/subversion/nodes/trunk/PlusLib/data/ConfigFiles/PlusConfiguration_SonixTouch_MicronTracker_L14_fCal.xml?rev=1105

The PortName variable is set in vtkTracker::ReadConfiguration(vtkXMLDataElement* config) - you can check with a debugger if the value is properly set there.


#### 2011-11-04, 17:21:43 - hussam.ashab
yes, I am sure I set the PortName correctly.

This part of code is in vtkTracker::ReadConfiguration ln 510

        const char* portName = config->GetAttribute('PortName'); 
        if ( portName != NULL )    // HERE it does not get to the if statement, because portName is NULL
        {
          this->GetTool(portNumber)->SetPortName(portName); 
        }

        this->GetTool(portNumber)->ReadConfiguration(toolDataElement); 
      }

Do you have any suggestions ?


#### 2011-11-04, 17:30:32 - Andras Lasso
(In r:1123) re #348: Fixed PortName parameter reading

#### 2011-11-04, 17:33:12 - hussam.ashab
Ok, I want to summerize what I did (may be I am doing something wrong)

1- when the program get to vtktracker, it 'if (portNumber < this->GetNumberOfTools() )' this->GetNumberOfTools() =0 so it does not enter to the if statement 'it is at ln 506'

2- I looked at vtkAscension3DGTracker code and found they set 'this->SetNumberOfTools(12); at ln 60' so I did the same for vtkMicronTracker and set it to 3 'this->SetNumberOfTools(3); ' but after that I was getting the previous problem which is  'const char* portName = config->GetAttribute('PortName'); '  returns NULL for portName.

Am I missing anything ?

#### 2011-11-04, 17:41:08 - hussam.ashab
I think it is working now, I have to test it, I made some changes to vtkMicronTracker 'to make it work' I will commit the code. if you do not mind.

Thank you for your help

#### 2011-11-04, 21:52:40 - hussam.ashab
When I go to phantom registeration. There is a problem in the registeration. if the phantom is moved, the registeration falls. may be it is because the 'stylusTipToReferenceMatrix' does not get data from phantom marker 'patientMarker'. I am trying to find out the problem. Please let me know if you have any suggestions


#### 2011-11-04, 22:11:38 - Csaba Pinter
It would help a lot if you attached the log file so that we can see the actual error.

#### 2011-11-04, 22:26:36 - hussam.ashab
Thank you Csaba,

Here is what is in log fole :
110411_152244.929 [INFO]    [000.000000]  PlusLib version: 1.3.0
110411_152247.398 [INFO]    [002.474000]  Connect to devices
110411_152247.429 [ERROR]   [002.504000]  Ultrasonix support was disabled when this Plus library was built [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(1988)]
110411_152247.445 [INFO]    [002.517000]  Tracker local time offset: 0ms
110411_152247.445 [INFO]    [002.519000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
110411_152247.445 [INFO]    [002.521000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
110411_152249.257 [INFO]    [004.324000]  Transform cannot be loaded with no date entered - phantom model is not shown until registering it
110411_152249.288 [INFO]    [004.368000]  Application configuration file 'c:/devel/PlusExperimental-bin/bin/Debug/PlusConfig.xml' saved
110411_152300.538 [INFO]    [015.611000]  Stylus calibration successful
110411_152310.101 [INFO]    [025.172000]  Stylus calibration successful
110411_152314.882 [INFO]    [029.959000]  Unable to load phantom to reference transform because no valid date has been found for it - phantom registration is needed

I want to make it clear that I do not get an error but the registration is not correct.


#### 2011-11-04, 22:49:15 - Andras Lasso
Have you attached the reference marker to the phantom box?

#### 2011-11-04, 23:12:12 - hussam.ashab
Yes, I attached the patientMarker to the phantom. If you want I can send you a video or I can preform the calibration online using skype. to see if I am doing anything wrong

#### 2011-11-04, 23:25:02 - Andras Lasso
Are you sure that all the tools are tracked properly? fCal shouldn't be used for debugging. If you find any problem then use lower-level test applications, such as vtkDataCollectorTrackingTest. You can use the same config file (--input-config-file-name) as for fCal and get the transform for the selected tool (--input-tool-name).

#### 2011-11-04, 23:29:05 - hussam.ashab
ok, I will use that function. I was getting the data from markers. I will test it again and let you know

#### 2011-11-05, 00:49:58 - hussam.ashab
I ran vtkDataCollectorTrackingTest:

std::string inputConfigFileName('C:/devel/PlusExperimental bin/PlusLib/data/ConfigFiles/PlusConfiguration_SonixTouch_MicronTracker_L14_fCal1_HUSSAM.xml');
 std::string inputToolName('Stylus'); 
double inputAcqTimeLength(60);
std::string outputTrackerBufferSequenceFileName('TrackerBufferMetafile'); 
std::string outputFolder('./');

I got:

ObjectType = Image
NDims = 3
AnatomicalOrientation = RAI
BinaryData = True
BinaryDataByteOrderMSB = False
CenterOfRotation = 0 0 0
CompressedData = True
CompressedDataSize = 11               
DefaultFrameTransformName = Probe
DimSize = 1 1 8                              
ElementSpacing = 1 1 1
ElementType = MET_UCHAR
ImageToProbe = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Offset = 0 0 0
StylusTipToStylus = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Tool1CalibMatrix = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
TransformMatrix = 1 0 0 0 1 0 0 0 1
UltrasoundImageOrientation = MF
Seq_Frame0000_FrameNumber = 1
Seq_Frame0000_Probe = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Seq_Frame0000_Reference = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Seq_Frame0000_Status = TR_OUT_OF_VIEW 

I will debug it and see why it gives status is out of view.
But using fcal it can detect the markers ?! 

#### 2011-11-05, 14:20:16 - Andras Lasso
Have you actually modified the code to set these string values? You should just specify the using command-line parameters (see sample command lines on the dashboard, e.g., http://crunch.cs.queensu.ca/CDash/testDetails.php?test=31059&build=3595)

Both fCal and DataCollectorTest1 use the same vtkDataCollector class to connect to devices and get tracking and imaging information. If DataCollectorTest1 doesn't work perfectly then it means that there is no chance that fCal will work.

#### 2011-11-07, 16:03:29 - hussam.ashab
Yes,

I modified the folloinwg parts:

std::string inputConfigFileName('C:/devel/PlusExperimental bin/PlusLib/data/ConfigFiles/PlusConfiguration_SonixTouch_MicronTracker_L14_fCal1_HUSSAM.xml');
std::string inputToolName('Stylus');
double inputAcqTimeLength(60);
std::string outputTrackerBufferSequenceFileName('TrackerBufferMetafile');
std::string outputFolder('./');

and it gave me the results shown above.

I do not think it can identify the markers, I will look why ?!

#### 2011-11-07, 17:03:41 - hussam.ashab
here is part of the output in trackerbuffermetafile.mha file:

ObjectType = Image
NDims = 3
AnatomicalOrientation = RAI
BinaryData = True
BinaryDataByteOrderMSB = False
CenterOfRotation = 0 0 0
CompressedData = True
CompressedDataSize = 12               
DefaultFrameTransformName = Probe
DimSize = 1 1 57                              
ElementSpacing = 1 1 1
ElementType = MET_UCHAR
ImageToProbe = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Offset = 0 0 0
StylusTipToStylus = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
Tool1CalibMatrix = 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 
TransformMatrix = 1 0 0 0 1 0 0 0 1
UltrasoundImageOrientation = MF
Seq_Frame0000_FrameNumber = 1
Seq_Frame0000_Probe = -0.169488 0.964716 -0.201485 -123.296 -0.985367 -0.169619 0.0167465 65.7519 -0.0180199 0.201375 0.979349 802.606 0 0 0 1 
Seq_Frame0000_Reference = -0.730905 0.67887 -0.0700971 -125.887 -0.606135 -0.692914 -0.390475 -35.4858 -0.313653 -0.242912 0.917941 893.14 0 0 0 1 
Seq_Frame0000_Status = OK 
Seq_Frame0000_Stylus = 0.84404 0.384581 -0.373757 -194.168 -0.34346 0.922906 0.174011 -16.6731 0.411864 -0.0185017 0.911058 819.291 0 0 0 1 
Seq_Frame0000_Timestamp = 0.473000
Seq_Frame0000_UnfilteredTimestamp = 0.473000

I think it is working, am I right ?



#### 2011-11-07, 17:09:10 - Andras Lasso
Looks good.

#### 2011-11-07, 17:26:16 - hussam.ashab
Thank you Andras fro your time. Since this part is working. how to solve the following problem, which I posted before:

'When I go to phantom registeration. There is a problem in the registeration. if the phantom is moved, the registeration falls. may be it is because the 'stylusTipToReferenceMatrix' does not get data from phantom marker 'patientMarker'. I am trying to find out the problem. Please let me know if you have any suggestions '

 Since debuging fCal is not appropriate. what you suggest.




#### 2011-11-07, 17:30:08 - Andras Lasso
Complete the registration in fCal without moving the phantom. Then enable tool visualization and verify if all the tracked items move on the screen as they move in reality.

#### 2011-11-07, 18:16:31 - hussam.ashab
I register the phantom and when the registration is done. if I move the phantom the stylus cannot follow the phantom. to make it clear. If I change the location of phantom i cannot anymore touch the markers on the phantom and see it on fCal.

#### 2011-11-07, 18:40:44 - Andras Lasso
Maybe your config file doesn't define the reference correctly. Is your config file under source control? If not, then please upload.

I would suggest to verify that each tracked tools moves on the screen the same way as they move in reality. You can try to use fCal for this as I described (complete the Freehand Calibration step and enable the 'Show devices' checkbox to show a 3D view of all the tracked tools, see the attached screenshot for an example). Alternatively, you can visualize the tools in 3D Slicer: just send the live transforms to 3DSlicer using OpenIGTLink using the vtkDataCollectorTest1 application (Tamas demonstrated this at UBC), or if you don't want to work with live data then just record the data with vtkDataCollectorTest1 into a metafile and send the transforms from the metafile to 3D Slicer using the ReplayRecordedDataTest.


#### 2011-11-07, 22:12:54 - hussam.ashab
Hi,

Please can you take a look at my config file (I uploaded it). Also ReplayRecordedDataTest needs a videobuffermeta.mha file. which DataCollectorTest1 does not generate.

regards


#### 2011-11-07, 22:43:59 - Andras Lasso
The config file looks OK. Which one do you use: PlusConfiguration_SonixTouch_MicronTracker_3.2_L14_fCal1.xml or PlusConfiguration_SonixTouch_MicronTracker_L14_fCal.xml? Please remove the one that you don't use.

Sorry, I was wrong, the ReplayRecordedDataTest does not broadcast OpenIGTLink messages. You can use the vtkDataCollectorTest1 to replay recorded sequences (using <Tracker Type='SavedDataset' ... ).


#### 2011-11-09, 18:38:13 - hussam.ashab
I am using PlusConfiguration_SonixTouch_MicronTracker_3.2_L14_fCal1.xml. The problem is vtkDataCollectorTest1 needs that inputVideoBufferMetafile which I do not get using vtkDataCollectorTrackingTest ?

Also I did stylus calibration -> phantom calibration while it is fixed in its place->freehand calibration. when i start freehnad calibration it cannot detect lines. I think fCal does not recognize probemarker and patientmarker ? since you told me not to debug fCal. Is there any suggestions?

#### 2011-11-09, 19:24:22 - Andras Lasso
First you have to make absolutely sure that all the transforms you get from all the tracker tools are correct. You cannot easily do that in fCal, that's why you should either use vtkDataCollectorTrackingTest&Slicer or create a small test application that you (and others in the future) could use for troubleshooting.

For vtkDataCollectorTrackingTest: You you can just use saved data and any mha file as video source. I would suggest to use live tracking data to verify that all the coordinate axes directions, rotation directions etc. in Slicer match the physical reality. You should be able to use any 3D Slicer version (or the version that we showed you at UBC: https://www.assembla.com/spaces/plus/wiki/Slicer_and_Plus_tutorial_August_2011_Vancouver).


#### 2011-11-09, 21:39:35 - hussam.ashab
Thank you for your help. I think my problem is not I am getting wrong transforms. The problem is when I go to phantom registeration fCal does not include the pose measurments of the phantom marker. So if I calibrate the phantom at a fixed position then move the phantom it does not show any relative movement. To make it clear there is no input from phantom marker, so the registeration is depending only on the info from the stylus marker only. 

Please can we talk for 5 min on skype. to make it clear and know exactly what to do?

#### 2011-11-14, 16:24:34 - hussam.ashab
image:aJwt7KdT0r4y9uacwqjQYw Freehand Calibration Error

#### 2011-11-14, 16:24:34 - hussam.ashab
Attachment added: "Freehandcalibration.PNG"

#### 2011-11-14, 16:26:26 - hussam.ashab
Hi,

I was able to get the transformation Matrixs and do phantom registeration. when I do free hand calibration and the progress bar reachs 100%, fCal crashes . Do you have any idea ? I uploaded a screen print above.

regards
Hussam

#### 2011-11-14, 16:29:30 - Andras Lasso
upload the plus logs please

#### 2011-11-14, 16:33:40 - hussam.ashab
Sorry

111411_081437.693 [INFO]    [000.000000]  PlusLib version: 1.3.1
111411_081453.474 [INFO]    [015.791000]  Connect to devices
111411_081454.192 [INFO]    [016.513000]  Image acqusition local time offset: -297.6ms
111411_081454.192 [INFO]    [016.514000]  Selected US image orientation: UF
111411_081454.208 [INFO]    [016.520000]  Tracker local time offset: 0ms
111411_081454.208 [INFO]    [016.522000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
111411_081501.427 [WARNING] [023.742000]  File FCal_1.0.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081501.427 [WARNING] [023.746000]  Phantom model file is not found with name: FCal_1.0.stl - no model is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(914)]
111411_081503.489 [WARNING] [025.804000]  File L14-5_38_ProbeModel.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081503.489 [WARNING] [025.807000]  Tool (Probe) model file is not found with name: L14-5_38_ProbeModel.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(281)]
111411_081503.489 [WARNING] [025.809000]  Unable to initialize probe visualization - no probe is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(304)]
111411_081505.583 [WARNING] [027.901000]  File Stylus_Example.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081505.583 [WARNING] [027.904000]  Tool (Stylus) model file is not found with name: Stylus_Example.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(281)]
111411_081505.598 [INFO]    [027.907000]  No stylus model file found - default model will be displayed
111411_081505.598 [INFO]    [027.920000]  Application configuration file 'c:/users/devel/PlusExperimental-bin/bin/Debug/PlusConfig.xml' saved
111411_081640.424 [INFO]    [122.736000]  Segmentation success rate: 300 out of 395 (76 percent)
111411_081641.2   [INFO]    [123.321000]  Calibration result transform matrix = 
111411_081641.2   [INFO]    [123.323000]  
 0.004  0.079  0.002 52.436 
-0.090  0.008  0.005 30.524 
 0.005 -0.002  0.084  7.586 
 0.000  0.000  0.000  1.000 
111411_081641.2   [INFO]    [123.326000]  Point-Line Distance Error - mean: 0.676007, rms: 0.795114, std: 0.419699
111411_081641.18  [INFO]    [123.328000]    Validation data confidence level: 0.95


#### 2011-11-14, 16:48:07 - Andras Lasso
The error doesn't seem to be related to the MicronTracker, so I've entered a new ticket for that: #380.

Until Csaba fixes the crash you can try these workarounds:
* Copy the missing STL files from the PlusLib\\data\\CADModels... directories => Try again
* Update Plus to the latest revision (PlusBuild and build PlusBuild.sln) => Try again
* Build an installation package (PlusApp-bin\\CreatePackage.bat), install the package => Try with the installed Plus version


#### 2011-11-14, 16:48:33 - Andras Lasso
Please commit your latest changes.

#### 2011-11-14, 16:57:23 - hussam.ashab
Hi,

I commited my code. There is some changes I have to make. But please let me know if there is any bugs in the code.

regards
Hussam

#### 2011-11-14, 17:46:48 - Andras Lasso
Hussam, again, you haven't included that 'Re: #248' in your commits. It's so difficult to keep track of your changes if you don't do it.


#### 2011-11-14, 18:32:18 - Andras Lasso
(In r:1177) re #348: Changed detection of the MicronTracker SDK so that it uses MTC-2.1.0 by default but it can be overridden by the developer

#### 2011-11-15, 00:03:47 - hussam.ashab
'Hussam, again, you haven't included that 'Re: #248' in your commits. It's so difficult to keep track of your changes if you don't do '

I am sorry for that. I will do it.

#### 2011-11-21, 14:16:30 - Andras Lasso
Hi Hussam, have you seen the code review comments that I've sumitted (see https://www.assembla.com/code/plus/subversion/changesets/1176)? When do you plan to fix those? We plan to create a new Plus release by the end of the month. For this the MicronTracker code has to be cleaned up and documented till the end of this week. Let me know if you need help with that.

Overall it's a nice progress that you could make the MicronTracker work in Plus.
Thanks!
Andras


#### 2011-11-21, 16:33:13 - hussam.ashab
Hi,

Sorry for the late response. I did not forgot  to do that. But Can I have some time? because I am working on a project that I have to delivere at the begining of Dec and it depends on MirconTracker which I could make it work before one week.

also I have this problem with PLUS

Error  1  error PRJ0019: A tool returned an error code from 'Performing configure step for 'PlusLib''  PlusLib

Please let me know if you can give me some time.

Best regards
Hussam


#### 2011-11-21, 17:07:21 - hussam.ashab
'Error  2  fatal error LNK1104: cannot open file 'C:\\users\\devel\\PlusExperimental-bin\\bin\\Debug\\MicronTrackerInterface.lib'  2>LINK
'

#### 2011-11-21, 21:56:42 - hussam.ashab
Ok, The error solved. 

*Can I know if you can extend the deadline

#### 2011-11-21, 22:03:17 - Andras Lasso
Fixing the code review findings should not take more than an hour. If you cannot do that till the end of this week then we'll find someone here to do it. Just make sure that you commit all your changes before to minimize conflicting code changes.

#### 2011-11-22, 00:07:17 - Andras Lasso
(In r:1191) Re #348: Added CMake option to specify MicronTracker SDK directory. It is now automatically searched in PLTools and at the default SDK install location in Program Files

#### 2011-11-22, 00:09:36 - Andras Lasso
(In r:1192) Re #348: Removed obsolete MicronTracker SDK (2.1.0). The SDK path is now provided by PlusBuild. Removed obsolete serial communication handling code and isolated MTC.h from the rest of Plus in the MicronTrackingInterface.

#### 2011-11-22, 16:04:24 - hussam.ashab
Hi,

I commited the code 'Ticket #348: Comment MicronTracking/vtkMicronTracker.cxx' But I did not get how to change this part 'if(strcmp(identifiedTemplateName,'patientMarker')==0)' Please let me know and I will do it and anything else you want.

regards
Hussam



#### 2011-11-22, 16:28:59 - hussam.ashab
fCAl is still breaking at '    m_ParentMainWindow->GetToolVisualizer()->GetDisplayableTool(TRACKER_TOOL_PROBE)->DisplayableOn();'

#### 2011-11-22, 18:27:27 - Andras Lasso
What do you mean by 'breaking'? Anyway, it's an issue related to fCal. I think we already submitted a ticket for this problem (#380). Re-open that ticket if the problem is the same. Create a new ticket and assign it to Csaba if it's a different problem.

#### 2011-11-23, 00:59:08 - hussam.ashab
Hi,

There is these error in MicronTracker. was there any changes made to the file. I am building Plus in Release Mode


Error  691  error C2039: 'SetNumberOfTools' : is not a member of 'vtkMicronTracker'  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  697  error C2227: left of '->EnabledOn' must point to class/struct/union/generic type  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  696  error C2660: 'vtkTracker::GetTool' : function does not take 1 arguments  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  693  error C2664: 'vtkTracker::ToolTimeStampedUpdate' : cannot convert parameter 1 from 'int' to 'const char *'  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  694  error C2664: 'vtkTracker::ToolTimeStampedUpdate' : cannot convert parameter 1 from 'int' to 'const char *'  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  695  error C2664: 'vtkTracker::ToolTimeStampedUpdate' : cannot convert parameter 1 from 'int' to 'const char *'  14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx
Error  692  error C3861: 'GetToolPortNumberByPortName': identifier not foun 14>..\\..\\..\\PlusLib\\src\  racking\\MicronTracking\\vtkMicronTracker.cxx


#### 2011-11-23, 01:39:45 - Andras Lasso
I could reproduce the issue. I assign Tomi to fix it.

#### 2011-11-23, 01:39:45 - Andras Lasso
assigned_to_id: changed from "hussam.ashab" to "heffter"

#### 2011-11-23, 03:21:31 - Andras Lasso
The tool handling is being reworked to make it simpler but it requires some changes. I know that Tomi adapted the MicronTracker code to these changes but maybe he forgot to commit them? It'll be fixed tomorrow morning. Sorry Hossam for the inconvenience. 

#### 2011-11-23, 04:29:31 - Tamas Heffter
Sorry Hossam, I had to make some tests before I could commit the code. Now, you can update the PlusBuild and compile it. 

#### 2011-11-23, 22:36:50 - hussam.ashab
Hi,

Thank you. but I think there is a problem. I get error 'Unable to find TrackerToolNames element in XML tree!'

'112311_143322.843 [INFO]    [000.000000]  PlusLib version: 1.3.1
112311_143327.515 [INFO]    [004.660000]  Connect to devices
112311_143327.796 [INFO]    [004.946000]  Image acqusition local time offset: -297.6ms
112311_143327.796 [INFO]    [004.948000]  Selected US image orientation: UF
112311_143327.796 [INFO]    [004.950000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
112311_143327.812 [INFO]    [004.955000]  Tools local time offset: 0ms
112311_143332.952 [ERROR]   [010.098000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(341)]
112311_143332.952 [ERROR]   [010.102000]  Failed to read fCal configuration [in ..\\..\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(172)]
112311_143332.952 [ERROR]   [010.105000]  Probe name is unspecified! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(244)]
112311_143332.952 [INFO]    [010.107000]  Application configuration file 'c:/users/devel/PlusExperimental-bin/bin/Release/PlusConfig.xml' saved
112311_143349.248 [ERROR]   [026.404000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\FreehandCalibrationToolbox.cxx(199)]
112311_143349.264 [ERROR]   [026.408000]  Reading calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\FreehandCalibrationToolbox.cxx(122)]
112311_143351.764 [ERROR]   [028.908000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(133)]
112311_143351.764 [ERROR]   [028.911000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(80)]
112311_143351.764 [ERROR]   [028.914000]  Missing reference displayable tool! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(634)]
112311_143357.576 [ERROR]   [034.733000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(133)]
112311_143357.592 [ERROR]   [034.737000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(80)]
112311_143357.592 [ERROR]   [034.739000]  Missing reference displayable tool! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(634)]
112311_143407.701 [ERROR]   [044.851000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(133)]
112311_143407.701 [ERROR]   [044.855000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(80)]
112311_143407.701 [ERROR]   [044.857000]  Missing reference displayable tool! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(634)]
112311_143410.997 [ERROR]   [048.143000]  Unable to find TrackerToolNames element in XML tree! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(133)]
112311_143410.997 [ERROR]   [048.147000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(80)]
112311_143410.997 [ERROR]   [048.149000]  Missing reference displayable tool! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(634)]'

#### 2011-11-24, 00:03:16 - Andras Lasso
Please be patient, we are still working on cleaning up the management of tool transforms (how you combine tool and reference transforms and calibration matrices). Hopefully fCal will be functional again by tomorrow (Nov 24) or latest by the end of the week.

#### 2011-11-28, 21:12:49 - hussam.ashab
Hi,

Please is it possible to know when this error will be solved 'error 'Unable to find TrackerToolNames element in XML tree!''. 

regards
Hussam

#### 2011-11-28, 21:39:35 - Csaba Pinter
Are you using fCal when you get this error?
If you are, then your device set config file is the problem. Please see any fCal-related device set configuration files in the repository (PlusLib/data/ConfigFiles) for the changes you have to apply to your configuration file.

Please attach a log file,the used device set configuration file and a short description whenever you submit a problem.

#### 2011-11-28, 22:05:28 - hussam.ashab
file:au-9vmgG0r4zAHacwqjQYw

#### 2011-11-28, 22:05:28 - hussam.ashab
Attachment added: "112811_124422_PlusLog.txt"

#### 2011-11-28, 22:05:28 - hussam.ashab
file:avcNNKgG0r4zAHacwqjQYw

#### 2011-11-28, 22:05:28 - hussam.ashab
Attachment added: "PlusConfiguration_SonixTouch_MicronTracker_3.2_L14_fCal1.xml"

#### 2011-11-28, 22:07:34 - hussam.ashab
I attached the output file and config file.  I am using config from PlusLib/data/ConfigFiles. if there has been changes to the files and the microntracker part is not change. can you let me know which file I can look at to make Microntracker File.

#### 2011-11-29, 01:20:29 - hussam.ashab
Ok I changed the config file. I can connect to US machine, do stylus calibration. But then when I go to phantom registeration It does not load the the modle. 

I saved the stylus calibration in the previous step and try to load it when I am at the phantom registeration part. but fCal crashes.

I will attach the output file and a screen print.

#### 2011-11-29, 01:20:55 - hussam.ashab
file:bIKyqWgIGr4AqiacwqjQWU

#### 2011-11-29, 01:20:55 - hussam.ashab
Attachment added: "phantomregisterationcrashoutputfile.txt"

#### 2011-11-29, 01:20:55 - hussam.ashab
image:bINumUgIGr4AqiacwqjQWU

#### 2011-11-29, 01:20:55 - hussam.ashab
Attachment added: "phantomregisterationcrash.PNG"

#### 2011-11-29, 14:27:03 - Csaba Pinter
You don't have to save and load the results if you want to do the whole workflow, but just switch to the next tab.
Saving makes sense if you want to save a partial result on purpose.

Can I please ask you to wait for us to finish our current milestone? We are really in the middle of a major re-factoring of the tracker tools and transforms, and it is absolutely no wonder that some of these stuff don't work. I tested the normal workflow, but these minor and rarely used features like import results were left out. Of course when we finish our current work, everything is supposed to work.

We plan to finish our rework this week. Then we test it, fix it and release it as 1.4.0. It should be working from then on, and we are more than welcome to recieve these bug reports.

#### 2011-11-29, 15:59:36 - Andras Lasso
Hossam, if you need to present MicronTracker support till Dec 5. you have the following options:
1. If you could do everything that you wanted with a previous Plus version then you can checkout that older version and do everything with that.
2. You ask Purang for an extension (presentation one week later), so that you can show a fully operational and tested software
3. You just create a presentation (you can create the screenshots etc. with Ascension and an older Plus version) and tell the audience that MicronTracker support is almost done, just need to be adapted to the new tracker tool design.
4. There is a slight chance that your specific problems can be all fixed before Sunday. But I cannot guarantee that. You have to discuss that with Tomi and Csaba. It's a bit risky.


#### 2011-11-29, 16:06:57 - hussam.ashab
Ok, Thank you Andras.

#### 2011-12-02, 17:04:09 - hussam.ashab
Hi,

I updated plus and run it. But I got some errors
'
120211_090030.270 [INFO]    [000.000000]  PlusLib version: 1.3.1
120211_090032.583 [INFO]    [002.311000]  Connect to devices
120211_090033.427 [INFO]    [003.158000]  Image acqusition local time offset: -297.6ms
120211_090033.427 [INFO]    [003.160000]  Selected US image orientation: UF
120211_090033.442 [INFO]    [003.168000]  Tools local time offset: 0ms
120211_090038.504 [ERROR]   [008.224000]  TEMPORARY ISSUE: Phantom visualization has to be changed to use tracked frame instead of tracker tools! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(813)]
120211_090038.504 [WARNING] [008.229000]  Initializing phantom visualization failed! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(293)]
120211_090038.504 [ERROR]   [008.232000]  TEMPORARY ISSUE: Visualization has to be changed to use tracked frame instead of tracker tools! [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(297)]
120211_090038.504 [INFO]    [008.237000]  Application configuration file 'c:/users/devel/PlusExperimental-bin/bin/Debug/PlusConfig.xml' saved
120211_090100.51  [ERROR]   [029.771000]  TEMPORARY ISSUE: TransformRepository will check the availability of the stylus tool [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(165)]
120211_090100.51  [ERROR]   [029.776000]  No tool found with the specified name 'Stylus'! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(169)]
120211_090100.51  [ERROR]   [029.779000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(84)]
120211_090109.988 [ERROR]   [039.708000]  TEMPORARY ISSUE: TransformRepository will check the availability of the stylus tool [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(165)]
120211_090109.988 [ERROR]   [039.713000]  No tool found with the specified name 'Stylus'! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(169)]
120211_090109.988 [ERROR]   [039.716000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(84)]
120211_090114.363 [ERROR]   [044.093000]  TEMPORARY ISSUE: TransformRepository will check the availability of the stylus tool [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(165)]
120211_090114.363 [ERROR]   [044.097000]  No tool found with the specified name 'Stylus'! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(169)]
120211_090114.378 [ERROR]   [044.101000]  Reading stylus calibration configuration failed! [in ..\\..\\PlusApp\\fCal\  oolboxes\\StylusCalibrationToolbox.cxx(84)]

'

is it related to the new changes. Do I have to change vtkmicronTracker

regards
Hussam

#### 2011-12-02, 20:36:17 - Andras Lasso
I see in the log “…TEMPORARY ISSUE: …”, which suggests that you just have to wait for the redesign to be completed (which should happen by tomorrow).

#### 2011-12-02, 22:09:06 - Csaba Pinter
That's right. You have to wait until we finish our rework, as I previously mentioned. Sorry again for the inconvenience.

Today we agreed that we will create branches for the stable versions so that external developers like you don't experience these issues.

#### 2011-12-02, 23:42:46 - Siavash Khallaghi
Having external branches for stable releases is a very good idea. I really support it.

#### 2011-12-03, 19:22:03 - Tamas Heffter
Guys, 
I've been working on #377: Relative transform computation should be implemented in the tracking base classes
I've found the following code snippet in MicronTracker implementation: 

~~~~
if(strcmp(identifiedTemplateName,'patientMarker')==0)
    {
      GetReferenceTransformMatrix(identifedMarkerIndex, mTrackerToReference);
      mTrackerToReference->Invert();
      this->ToolTimeStampedUpdate( tool->GetToolName(), mTrackerToReference, TOOL_OK, this->LastFrameNumber, unfilteredTimestamp);
    }
    else
    {
      GetTransformMatrix(identifedMarkerIndex, mToolToTracker);
      vtkMatrix4x4::Multiply4x4( mTrackerToReference, mToolToTracker , mToolToReference );
      this->ToolTimeStampedUpdate( tool->GetToolName(), mToolToReference, TOOL_OK, this->LastFrameNumber, unfilteredTimestamp);
    }

~~~~

Could you please tell me some details about it? Is the patientMarker tool your reference tool, and you get all the other transforms relative to that coordinate system? With the new implementation of the tools, we're expecting all tool transforms relative to the tracker coordinate frame and the vtkTransformRepository will compute the tool to reference transformation if desired. Can I change the implementation? 

 

#### 2011-12-03, 20:16:52 - hussam.ashab
Hi,

I will remove the harcoded part 'patientMarker'. This marker is attached to the phantom and it is the reference. To make it clear the marker on the phantom is the reference tool. As I read throw plus and other sensor implementation I found they do that. So i followed what was done.

I do not know about changing the implementation because I can decide that.

regards
Hussam

#### 2011-12-03, 20:17:05 - hussam.ashab
I do not know about changing the implementation because I can not decide that.


#### 2011-12-03, 20:39:34 - Tamas Heffter
Thank you Hussam, that would help a lot. You're right, that's a new implementation, previously we implemented the same way, we just changed it this week. 
Let me know if you need help. 

#### 2011-12-03, 20:39:34 - Tamas Heffter
assigned_to_id: changed from "heffter" to "hussam.ashab"

#### 2011-12-05, 23:02:10 - hussam.ashab
Hi,

I calibrated the probe and Was able to display all of tools. but I noticed that the probe when displayed it is shifted in the z direction. Do you have any suggestion what I have to do to solve it. stylus and phantom are working fine.

I attached image and output file

regards
Hussam

#### 2011-12-05, 23:02:17 - hussam.ashab
120511_143146.539 [INFO]    [000.001000]  PlusLib version: 1.3.1
120511_143157.54  [INFO]    [010.513000]  Connect to devices
120511_143158.7   [INFO]    [011.457000]  Image acqusition local time offset: -297.6ms
120511_143158.7   [INFO]    [011.459000]  Selected US image orientation: UF
120511_143158.23  [INFO]    [011.471000]  Tracker local time offset: 0ms
120511_143158.23  [INFO]    [011.472000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
120511_143203.288 [INFO]    [016.750000]  Application configuration file 'c:/users/devel/PlusExperimental-bin/bin/Debug/PlusConfig.xml' saved
120511_143244.693 [INFO]    [058.142000]  Calibration process cancelled by the user
120511_143535.533 [INFO]    [228.986000]  Segmentation success rate: 300 out of 706 (42 percent)
120511_143536.345 [INFO]    [229.804000]  Calibration result transform matrix = 
120511_143536.345 [INFO]    [229.808000]  
 0.003 -0.063 -0.003 -64.998 
 0.070  0.003  0.004 -32.015 
-0.004 -0.003  0.066 13.763 
 0.000  0.000  0.000  1.000 
120511_143536.345 [INFO]    [229.811000]  Point-Line Distance Error - mean: 0.541528, rms: 0.622601, std: 0.308023
120511_143536.361 [INFO]    [229.814000]    Validation data confidence level: 0.95
120511_143931.855 [INFO]    [465.318000]  Segmentation success rate: 300 out of 664 (45 percent)
120511_143932.605 [INFO]    [466.070000]  Calibration result transform matrix = 
120511_143932.605 [INFO]    [466.072000]  
 0.002 -0.063 -0.003 -64.691 
 0.070  0.003  0.002 -32.067 
-0.002 -0.003  0.066 13.080 
 0.000  0.000  0.000  1.000 
120511_143932.605 [INFO]    [466.075000]  Point-Line Distance Error - mean: 0.498686, rms: 0.572123, std: 0.281165
120511_143932.605 [INFO]    [466.078000]    Validation data confidence level: 0.95
120511_144226.960 [INFO]    [640.427000]  Filtered timestamp is probably invalid for video buffer item with item index=12, time=640.427. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.178 [INFO]    [640.643000]  Filtered timestamp is probably invalid for video buffer item with item index=14, time=640.642. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.241 [INFO]    [640.718000]  Filtered timestamp is probably invalid for video buffer item with item index=15, time=640.717. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.319 [INFO]    [640.791000]  Filtered timestamp is probably invalid for video buffer item with item index=16, time=640.79. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.475 [INFO]    [640.940000]  Filtered timestamp is probably invalid for video buffer item with item index=18, time=640.94. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.538 [INFO]    [641.013000]  Filtered timestamp is probably invalid for video buffer item with item index=19, time=641.013. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.616 [INFO]    [641.089000]  Filtered timestamp is probably invalid for video buffer item with item index=20, time=641.088. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.694 [INFO]    [641.163000]  Filtered timestamp is probably invalid for video buffer item with item index=21, time=641.162. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.772 [INFO]    [641.237000]  Filtered timestamp is probably invalid for video buffer item with item index=22, time=641.236. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144227.835 [INFO]    [641.312000]  Filtered timestamp is probably invalid for video buffer item with item index=23, time=641.311. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
120511_144451.268 [INFO]    [784.743000]  Calibration process cancelled by the user
120511_144725.77  [INFO]    [938.548000]  Segmentation success rate: 300 out of 665 (45 percent)
120511_144725.718 [INFO]    [939.200000]  Calibration result transform matrix = 
120511_144725.718 [INFO]    [939.202000]  
 0.002 -0.064 -0.001 -69.802 
 0.069  0.003  0.000 -30.131 
-0.000 -0.001  0.067 12.093 
 0.000  0.000  0.000  1.000 
120511_144725.733 [INFO]    [939.206000]  Point-Line Distance Error - mean: 0.508964, rms: 0.596429, std: 0.311762
120511_144725.733 [INFO]    [939.207000]    Validation data confidence level: 0.95


#### 2011-12-05, 23:03:36 - hussam.ashab
image:bCLA4Ih5ur4Bp7acwqjQWU freehand calibratio

#### 2011-12-05, 23:03:36 - hussam.ashab
Attachment added: "freehanderror.PNG"

#### 2011-12-05, 23:04:32 - Andras Lasso
It's great that you're making good progress. Could you also attach a screenshot so that we can see huw much is the shift?

#### 2011-12-05, 23:05:07 - hussam.ashab
image:ctfvb0h5ur4BjoacwqjQYw free hand

#### 2011-12-05, 23:05:07 - hussam.ashab
Attachment added: "freehanderror.PNG"

#### 2011-12-05, 23:06:47 - hussam.ashab
Hi, is there possibility I send you a vedio because for some reason the file I attache display black window

#### 2011-12-05, 23:15:46 - Andras Lasso
If everything is well visible on one frame of the video then don't upload a video. Use another video player (such as VLC) and turn off hardware acceleration or save a snapshot of a single frame.

#### 2011-12-06, 00:16:23 - Csaba Pinter
The displacement of the probe is almost surely due to a wrong ModelToTool transform in the configuration file.

You can register it together using Slicer for instance, recording landmarks on the probe, and registering them to the same points you measure on the STL file of the probe.

If you use a different type of probe, I would be happy if you uploaded its model to our repository.

One more thing: we re-designed this very part in the configuration file structure, so in the future, instead of the PlusConfiguration/DataCollection/Tracker/Tool/Model section you can find it in the PlusConfiguration/Rendering/DisplayableTool section (it may also change)

#### 2011-12-06, 18:27:46 - Andras Lasso
Hossam, as Csaba wrote the misalignment of the displayed probe model may be normal (it just means that the model to marker transform is not determined for your setup). We entered a new ticket (#404) to automatically display the model in the correct position. When it's ready then the model will always appear at the correct position (aligned to the image).

#### 2011-12-13, 18:22:41 - hussam.ashab
Hi,

I hard coded this part 'if(strcmp(identifiedTemplateName,'patientMarker')==0)' do you have any suggestion to do it in different way.

regards

#### 2011-12-13, 18:38:53 - Andras Lasso
In the tracker implementation you can remove all code related to computing transformations relative to a reference frame. In the latest trunk version the tracker always reports transforms relative to the tracker coordinate frame (StylusToTracker, ProbeToTracker, ...).
Computation of relative transforms (StylusToReference, ProbeToReference, ...) are computed at a higher level, using the TransformRepository.

If you want to run fCal for example, then just modify the config file like this:
<fCal
 ...
    ReferenceCoordinateFrame='PatientMarker'
  />

Note the capital 'P' for PatientMarker. Coordinate frame names shall start with a capital letter (it's because transform names are saved as Frame1ToFrame2 and the transform name is parsed to get the two frame names from that; but if you have a frame name starting with a lowercase letter then you may get a transform name like frame1Toframe2, from that the coordinate frames cannot be extracted reliably)


#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-05-18, 13:33:02 - Andras Lasso
(In r:1706) re #348: Added configuration options for MicronTracker to set marker file directory and ini file name. Cleaned up a bit the MicronTracker C++ wrapper classes and improved error reporting.

#### 2012-05-18, 13:37:37 - Andras Lasso
Need to do some more cleanup in the interface classes:
* VERY IMPORTANT PROGRAMMING NOTE in MicronTrackerInterface.cpp
* check ownedByMe handling (probably it should be set to false if the handle is not created by new)
* consistent return values (sometimes int, sometimes bool; sometimes non-zero means error, sometimes 0, false)
* check timestamp computation
* etc.


#### 2012-05-18, 13:37:37 - Andras Lasso
assigned_to_id: changed from "hussam.ashab" to null

#### 2012-05-23, 17:04:48 - Andras Lasso
MicronTracker's MTC.dll cannot be loaded on some ultrasound systems with Windows XP embedded (such as Ultrasonix SonixTouch). Would need to investigate the problem using sxstrace.

#### 2012-08-16, 20:09:52 - Andras Lasso
(In r:1995|plus:1995) re #348: Removed remnants of reference marker management (assigning a reference role to a marker shall be performed at the application level, not while collecting the data). Changed the sample config file to use the sample markers. Log at warning level if grabbing of a new frame failed, because it's most probably due to too high requested frame rate.

#### 2012-08-16, 20:09:52 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-08-16, 22:08:54 - Andras Lasso
(In r:1996|plus:1996) re #348: Simplified and removed all (probably) unnecessary methods from the MicronTracker tracking device. Low-level functions are accessible directly by using MT interface (retrieved through GetMicronTrackerInterface()). Parameters should be set through either the ini file or the device set config file instead of dynamically changing it through Set methods (the parameters that are really have to be changed dynamically can get a Set method).

#### 2012-08-17, 17:50:06 - Andras Lasso
(In r:2000|plus:2000) Fixed #348: Tracking with MicronTracker now seems to work fine (tested at Kitware and Queen's)

#### 2012-08-17, 17:50:06 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-08-17, 17:53:28 - Andras Lasso
Remaining clean-up work is tracked in #571

#### 2012-08-17, 17:53:28 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-10-26, 21:05:33 - Andras Lasso
Performed a few more tests and everything works as expected.

#### 2012-10-26, 21:05:33 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-10-26, 21:28:47 - Gabor Fichtinger
Excellent! 
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com] 
Sent: October-26-12 5:06 PM

#### 2013-01-14, 17:42:07 - Andras Lasso
(In r:2382|plus:2382) re #348: Added a standalone test for MicronTracker (only tested earlier, before the multi-stream merge)


## #349 MicronTracker Calibration
I want to calibrate a probe using MicronTracker. Can I know what I have to set the parameters to in the config File. (I attached the config file)

#### 2011-10-27, 03:35:51 - Tamas Ungi
Hi Hussam,

What you ask here is a question. Please post questions in the Messages feature of Assembla.
You have posted a Ticket, which is designed for bug reports or enhancement requests.

Thanks,
Tamas


#### 2011-10-27, 03:35:51 - Tamas Ungi
status: changed from "New" to "Invalid"

#### 2011-10-27, 03:40:50 - hussam.ashab
Hi Tamas,

Yes you are right. I will do that. Thank you.

regards
hussam

#### 2011-10-29, 03:35:50 - Tamas Heffter
Updating tickets (#209, #326, #349, #13, #121, #134, #140, #207, #211, #232, #259, #260, #275, #282, #290, #303, #317, #319, #328, #344, #14)



#### 2011-10-29, 03:35:50 - Tamas Heffter
milestone_id: changed from null to "Release Plus-1.3.0 - Open source"


## #350 Add AngleToleranceDegrees to the parameters dialog.


#### 2011-10-27, 20:48:17 - Alexis Boucharin
summary: changed from "Add AngleToleranceDegrees to the parameters dialog box." to "Add AngleToleranceDegrees to the parameters dialog."

#### 2011-10-28, 14:57:36 - Csaba Pinter
Also test the MinTheta and MaxTheta parameters as their definition has changed

#### 2011-10-28, 14:57:48 - Csaba Pinter
milestone_id: changed from null to "Release - Before Hopkins"

#### 2011-10-28, 14:58:04 - Csaba Pinter
milestone_id: changed from "Release - Before Hopkins" to "Release Plus-1.3.0 - Open source"

#### 2011-10-28, 19:20:32 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-10-28, 19:56:32 - Csaba Pinter
(In r:1044) Re #350: Set function and value initialization added for AngleTolerance parameter (m_AngleTolerance member)

#### 2011-10-28, 19:58:52 - Csaba Pinter
(In r:1045) Fixed #350: AngleTolerance added, Min/MaxTheta checked and constraints changed, 'Opening circle radius (mm)' text changed to 'Minimum dot size (mm)'

#### 2011-10-28, 19:58:52 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #351 Change error computation in vtkProbeCalibrationAlgo
Error computation is still not cleaned up. It contains redundant variable names, strange analysis vectors.

#### 2011-10-28, 14:58:15 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-02-01, 20:09:11 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.4.2"

#### 2012-02-01, 20:09:26 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-02-03, 23:38:39 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-02-03, 23:41:33 - Csaba Pinter
(In r:1436) Re #418, Re #351, Re #352: Completely new error computation and reporting implemented in vtkProbeCalibrationAlgo, that supports any number of NWires in the input; Tests and baselines modified accordingly; Configuration file for data collection from file with 3 NWires added

#### 2012-02-16, 22:53:08 - Csaba Pinter
(In r:1448) Re #418, Re #351 Re #352: Use signed X and Y 2D reprojection errors instead of absolute errors; Compute statistics per wire; Add wire names to reports

#### 2012-02-17, 17:30:29 - Csaba Pinter
(In r:1449) Re #351: Result string improvement (fits fCal toolbox better)

#### 2012-02-17, 20:40:44 - Csaba Pinter
(In r:1453) Re #418, Fixed #351 Fixed #352: Compute and report errors for calibration data too

#### 2012-02-17, 20:40:44 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #352 Change report generation in vtkProbeCalibrationAlgo
It is still not cleaned up

#### 2011-10-28, 14:58:19 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-02-01, 20:09:16 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.4.2"

#### 2012-02-01, 20:09:29 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-02-03, 23:38:44 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-02-03, 23:41:33 - Csaba Pinter
(In r:1436) Re #418, Re #351, Re #352: Completely new error computation and reporting implemented in vtkProbeCalibrationAlgo, that supports any number of NWires in the input; Tests and baselines modified accordingly; Configuration file for data collection from file with 3 NWires added

#### 2012-02-16, 22:53:08 - Csaba Pinter
(In r:1448) Re #418, Re #351 Re #352: Use signed X and Y 2D reprojection errors instead of absolute errors; Compute statistics per wire; Add wire names to reports

#### 2012-02-17, 20:40:44 - Csaba Pinter
(In r:1453) Re #418, Fixed #351 Fixed #352: Compute and report errors for calibration data too

#### 2012-02-17, 20:40:44 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #353 Add trim functionality to SequenceMetafileConverter


#### 2011-12-17, 20:52:44 - Tamas Heffter
SequenceMetafileConverter is obsolete, see #403

#### 2011-12-17, 20:52:44 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2012-01-20, 20:15:52 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:52 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #354 Update calibration algorithms to use new generic wire pattern 


~~~~

<Pattern Type='NWire' Name='top' >
<Wire Name='wire4' EndPointFront='49.86 54.385 62.05' EndPointBack='49.86 54.385 142.05' />
<Wire Name='wire5' EndPointFront='39.86 54.385 62.05' EndPointBack='19.86 54.385 142.05' />
<Wire Name='wire6' EndPointFront='9.86 54.385 62.05' EndPointBack='9.86 54.385 142.05' />
</Pattern>
<Pattern Type='NWire' Name='bottom' >
<Wire Name='wire1' EndPointFront='49.86 34.385 62.05' EndPointBack='49.86 34.385 142.05' />
<Wire Name='wire2' EndPointFront='19.86 34.385 62.05' EndPointBack='39.86 34.385 142.05' />
<Wire Name='wire3' EndPointFront='9.86 34.385 62.05' EndPointBack='9.86 34.385 142.05' />
</Pattern>

~~~~



#### 2011-11-04, 14:43:20 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:11:51 - Csaba Pinter
assigned_to_id: changed from "heffter" to "pinter"

#### 2012-01-20, 20:11:56 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-02-06, 17:13:57 - Csaba Pinter
Duplicated ticket of https://www.assembla.com/spaces/icalbrachy/tickets/51

#### 2012-02-06, 17:13:57 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #355 fCal is temporarily unresponsive after tools are out of view
If tools get out of view then get back into the view again then the fCal application becomes unresponsive. Maybe it's not specific to fCal (should be tested with TrackedUltrasoundCapturing as well). Maybe related to #210.

#### 2011-10-31, 15:40:37 - Csaba Pinter
FidLineFinder::FindLines2Points() function hangs if m_DotsVector is empty

#### 2011-10-31, 15:40:37 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-10-31, 15:40:37 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-11-01, 22:13:39 - Csaba Pinter
Commit message of revision 1069 (somehow it was not added here automatically):
Test #355: Two checks added to FidLineFinder, one against entering a(n almost) infinite loop, the other against a crash

#### 2011-11-01, 22:13:39 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-11-07, 21:24:24 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #356 Record stylus data with TrackedUltrasoundCapturing


#### 2011-10-29, 19:22:42 - Tamas Heffter
(In r:1063) re #356: Fixed tracking only acquisition with TrackedUltrasoundCapturing

#### 2011-11-05, 17:34:02 - Tamas Heffter
status: changed from "New" to "Fixed"


## #357 Add Gnuplot path to PlusConfig.xml


#### 2011-11-04, 14:54:56 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-11-04, 21:52:21 - Csaba Pinter
(In r:1128) Re #357; GnuplotDirectory added to vtkPlusConfig

#### 2011-11-04, 21:56:44 - Csaba Pinter
(In r:1129) Fixed #357: GnuplotDirectory added to PlusConfig.xml for development and packaging

#### 2011-11-04, 21:56:44 - Csaba Pinter
status: changed from "New" to "Fixed"


## #358 Memory leaks related to vtkXMLDataElement handling
References to vtkXMLDataElement are managed incorrectly at many places throughout the code (the ownership of vtkXMLDataElements are not transferred correctly to the caller methods).


*ReadElementFromFile* - Use the *Take* method of the smart pointer, as reading creates a new vtkXMLDataElement object and the caller method need to take ownership of that (delete it when not used anymore):
CORRECT: vtkSmartPointer<vtkXMLDataElement> configRootElement = vtkSmartPointer<vtkXMLDataElement>::Take( vtkXMLUtilities::ReadElementFromFile(inputConfigFileName.c_str()) );
WRONG (leaks memory): vtkSmartPointer<vtkXMLDataElement> configRootElement = vtkXMLUtilities::ReadElementFromFile(inputConfigFileName.c_str());

*FindNestedElementWithName, LookupElementWithNameContainingChildWithNameAndAttribute, etc.* - They just return a pointer to an existing child element of an XML tree, therefore there is no ownership transfer (no need to delete the retrieved child element, it will be deleted when the root element is deleted):
CORRECT: vtkXMLDataElement* dataCollectionConfig = aConfigurationData->FindNestedElementWithName('USDataCollection');
WRONG (confusing, unnecessary complex usage): vtkSmartPointer<vtkXMLDataElement> dataCollectionConfig = aConfigurationData->FindNestedElementWithName('USDataCollection');


#### 2011-10-29, 20:54:53 - Andras Lasso
(In r:1065) re #358: Fixed memory leaks related to vtkXMLDataElement handling

#### 2011-10-29, 20:55:29 - Andras Lasso
(In r:1066) re #358: Fixed memory leaks related to vtkXMLDataElement handling

#### 2011-10-29, 20:56:39 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-10-31, 02:32:42 - Andras Lasso
(In r:1067) re #358: Fixed regression in vtkPlusConfig.cxx that could cause crash while writing the config file


## #359 Use timer for acquisition in fCal
Use a timer and vtkDataCollector::GetTrackedFrameList with last timestamp.
See iCalBrachyMainWindow::RecordCalibrationData() and iCAL::RecordCalibrationData

#### 2011-10-31, 18:40:13 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-11-01, 22:10:52 - Csaba Pinter
(In r:1086) Re #359: Simplified code (I made this first for test purposes but it is more readable though)

#### 2011-11-01, 22:12:12 - Csaba Pinter
(In r:1087) Test #359: FreehandCalibrationToolbox uses timer to acquire images. DoSpatialCalibration function records the frames that were acquired since last recording and segments them. Also calibrates if recording is ready

#### 2011-11-01, 22:12:12 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-11-01, 22:19:38 - Csaba Pinter
(In r:1088) Test #359: Logging of number of segmented images in a recording round changed to debug level and improved

#### 2011-11-02, 16:18:09 - Csaba Pinter
The new implementation works in Release mode with default settings well, but in Debug mode or with higher image acquisition frame rate or on a slower machine it causes problems.
If the segmentation of the newly arrived images takes more time than what the function has (which is defined by the recording frame rate in the application), then in the next recording cycle it has to segment even more images (as there was more time for acquisition), which takes even more time. So the time needed for recording increases drastically and the application looks like hanged after a while.
Although this phenomenon does not occur in the normal circumstances (release mode, decent computer, reasonable acquisition frame rate), we should find out something against this issue.

#### 2011-11-02, 16:18:09 - Csaba Pinter
status: changed from "Test" to "Accepted"

#### 2011-11-02, 16:42:06 - Csaba Pinter
(In r:1096) Re #359: When shooting the timer for next recording cycle, the time needed for segmenting the acquired images are taken into account (the time spent in the function before is subtracted from the interval computed from the recording frame rate) - Note: the problem defined in the ticket is not solved, but it is slightly better (and the frame rate is actually frame rate now)

#### 2011-11-02, 19:53:53 - Csaba Pinter
We agreed in adding a parameter to the GetTrackedFrameList function in vtkDataCollector that maximizes the number of tracked frames got from it. In case of -1 all the frames are appended, but in case of values greater or equals 0, that many last tracked frames are appended only.

In the applications where timers are used for recording (iCal, fCal), this function is called with a carefully computed parameter. The applications read two parameters from the device set configuration file (their sections). In fCal I defined them as RecordingIntervalMs and MaxTimeSpentWithProcessingMs. The first one is the interval between the calls of the recording functions, the second is the maximum time that one recording function call should spend processing. The application computes and stores the average processing time of a frame and (in the next round) uses that value to determine how many tracked frames it requests from the data collector.

If the processing cannot keep up with the acquisition a warning message should be logged.

#### 2011-11-03, 19:27:49 - Csaba Pinter
(In r:1115) Re #359: Fixed GetTrackedFrameList function in vtkDataCollector (now it adds the proper number of frames); GetNumberOfFramesBetweenTimestamps function added to vtkDataCollector; RecordingIntervalMs and MaxTimeSpentWithProcessingMs parameters added in fCal section of device set configuration files

#### 2011-11-03, 19:30:41 - Csaba Pinter
(In r:1116) Re #359: fCal Freehand calibration now computes the number of frames to acquire in a recording cycle using the new parameters (RecordingIntervalMs, MaxTimeSpentWithProcessingMs), and requests that many of the latest frames from vtkDataCollector

#### 2011-11-04, 20:50:18 - Csaba Pinter
(In r:1127) Test #359: Debug logs added; Bug fixed (calibration config was not re-read when changing device set); It should be OK now that the performance issue was fixed in FidPatternRecognition

#### 2011-11-04, 20:50:18 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-11-07, 21:24:28 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #360 Create PlusVersion application to retrieve Plus version and build option information
Currently it's not easy to find out from an installed Plus package what build options were used to create it.

Create a new application that prints the following information on the console:
-Plus version
-List of supported hardware devices
-Used SDK version numbers (Ulterius, MicronTracker, ...)

Add it as an automatic test as well.


#### 2011-11-04, 14:44:56 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2011-11-25, 16:07:05 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.0"

#### 2011-12-13, 21:22:17 - Tamas Heffter
(In r:1325) Added new Tracker and VideoSource factory classes to handle different devices in one place. 
Remove deprecated tracker and acquisition types 
Added GetSDKVersion funtion for each tracker and video sources and get the SDK version from libraries where possible, otherwise return with the actual Plus version  
Fixed #360: Created PlusVersion application to retrieve Plus version and build option information
Fixed #402: Fix compilation errors in NDI and Polaris tracker classes

#### 2011-12-13, 21:22:17 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-12-13, 21:22:17 - Tamas Heffter
status: changed from "New" to "Fixed"


## #361 Remove deprecated methods from vtkBrachyStepperPhantomRegistrationAlgo
Remove these deprecated methods:

Member vtkBrachyStepperPhantomRegistrationAlgo::GetTransformReferenceToTemplateHolder ()
    TODO: remove it just use it for getting the same result as the baseline 
Member vtkBrachyStepperPhantomRegistrationAlgo::GetTransformTemplateHolderToPhantom ()
    TODO: remove it just use it for getting the same result as the baseline 
Member vtkBrachyStepperPhantomRegistrationAlgo::SetTransformTemplateHolderToPhantom (vtkTransform *)
    TODO: remove it just use it for getting the same result as the baseline 
Member vtkBrachyStepperPhantomRegistrationAlgo::TransformReferenceToTemplateHolder
    TODO: remove it! 
Member vtkBrachyStepperPhantomRegistrationAlgo::TransformTemplateHolderToPhantom
    TODO: remove it! 



#### 2011-11-01, 15:20:04 - Andras Lasso
assigned_to_id: changed from null to "heffter"

#### 2011-11-01, 15:20:04 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-08, 18:19:41 - Csaba Pinter
Updating tickets (#287, #361, #368)



#### 2011-11-08, 18:19:41 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.1 - Before Hopkins" to "Release Plus-1.4.0"

#### 2011-12-17, 19:17:59 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-12-17, 19:24:30 - Tamas Heffter
(In r:1349) Fixed #408: Move CustomTransforms element from PhantomDefinition to CoordinateDefinitions
re #361: Remove deprecated methods from vtkBrachyStepperPhantomRegistrationAlgo
- removed TemplateHolderToPhantom transform and read from XML file 
- removed ReadProbeCalibrationConfiguration function from vtkProbeCalibrationAlgo
re #403: Fixed update field name  


#### 2011-12-17, 20:48:03 - Tamas Heffter
(In r:1353) re #361: removed deprecated transforms from vtkBrachyStepperPhantomRegistrationAlgo and vtkProbeCalibrationAlgo

#### 2011-12-17, 20:50:44 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-22, 16:21:20 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #362 Create widget fro OpenIGTLink broadcasting
GUI controls are needed
- to pause/start sending data (Because Slicer is too slow when OpenIGTLink is receiving data).
- to switch between calibrated and uncalibrated transforms (to be able to use calibrated stylus for landmarking in Slicer).

#### 2011-11-02, 20:48:43 - Tamas Ungi
(In r:1100) re #362: Pause option added for broadcaster.

#### 2011-11-02, 20:53:42 - Tamas Ungi
(In r:1101) Fixed #362: Widget added.

#### 2011-11-02, 20:53:42 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-12-14, 14:58:15 - Tamas Ungi
(In r:1335) re #362: Checkbox removed from the GUI. Pivot calibration can be set in the config file, according to the new PLUS design.

#### 2012-01-20, 20:15:53 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:53 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #363 Doxygen diagram generation requires installation of GraphViz
The files that are included in the PlusLib package at PlusLib\  ools\\Doxygen\\Graphviz-2.28 doesn't seem to be enough to make the diagram generation work. It's necessary to install the GraphViz 2.8 package (http://www.graphviz.org/Download..php).

It would be better to get a portable release of GraphViz that doesn't require installation.


#### 2014-01-03, 19:27:24 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-01-03, 19:30:27 - Andras Lasso
(In r:3117|plus:3117) fixed #363: Updated doxygen config file version and removed graphviz binaries from PlusLib. GraphViz now has to be downloaded and installed manually as it's a large package (100MB).

#### 2014-01-03, 19:30:27 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-01-03, 19:30:27 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-01-04, 00:01:26 - Andras Lasso
(In r:3118|plus:3118) re #363: Updated documentation system to support generation of a user manual (the manual will be generated in PlusApp)

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #364 Add video for windows support 
Add support for imaging devices on windows through the Video For Windows or DirectShow interface.

There is an old video for windows interface implementation in PlusLib\\src\\ImageAcquisition\\VideoForWindows that could be fixed and could be usable, but it would be better to implement the more recent DirectShow interface.

Anyway, first it should be confirmed that people needs this functionality before investing time in implementing it.

#### 2012-01-19, 13:16:54 - Andras Lasso
Elvis Chen has an implementation in VTK. It could be used as a basis for the video source.

#### 2012-03-22, 17:30:33 - Andras Lasso
(In r:1556) re #364: Added basic support for webcams (limitation: converts the image to grayscale; only supports YUY2 encoding)

#### 2012-03-22, 17:30:33 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-03-22, 22:46:30 - Andras Lasso
(In r:1560) re #364: Made webcam work with DataCollector

#### 2012-03-22, 22:51:22 - Andras Lasso
(In r:1561) re #364: Made webcam work with fCal

#### 2012-03-22, 22:59:32 - Andras Lasso
(In r:1562) re #364: Fixed build error

#### 2012-03-22, 23:16:22 - Andras Lasso
(In r:1563) Fixed #364: Video for Windows works with common webcams. Support for additional image encoding, color image acquisition, etc. can be added in the future (see #454).

#### 2012-03-22, 23:16:22 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-03-22, 23:16:47 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.2"


## #365 Incorrect include directory for ulterius_def.h in vtkImageAcquisition
Hi Guys,

Saman and I are having trouble performing a clean build for Plus. The vtkImageAcquisition and other Ulterius-dependent projects in Plus-Lib fail. Basically, the compiler complains that it cannot find ulterius_def.h. The build log and CMake-Cache are attached. Here is what we have done:

1. Checked out PLTools from: https://subversion.assembla.com/svn/pltools/. The check out location on my PC is C:\\devel\\PLTools.
2. Updated Plus-build.
3. Deleted everything in Plus-bin.
4. Started the CMake-Gui and set the source directory to Plus-build and the binary directory to Plus-bin (which is empty).
5. Checked the box for PLUS_USE_ULTRASONIX_VIDEO. The Ulteris SDK version was untouched (default value of 5.6.4).
6. Set the path for Ultrasonix in CMake to C:\\devel\\PLTools\  runk\\Ultrasonix.
7. Build the super-build.

When the super-build generated the PlusLib, I checked the additional include directories in project properties for vtkImageAcquisition. It turns out that it points to C:\\devel\\PLTools\  runk\\Ultrasonix\\ulterius\\inc, which does not exist.

So either we (Saman and I) have set the ULTRASONIX_SDK_DIR in the CMake incorrectly (which is highly unlikely), or there is something wrong with the CMakeLists.txt file.

I would appreciate it if you guys could have a look at it.

Thank you,

Siavash

#### 2011-11-02, 10:21:25 - Siavash Khallaghi
A work around for this is to use C:\\devel\\PLTools\  runk\\Ultrasonix\\sdk-5.6.4 as the Ultrasonix-path in the CMake-GUI. Is this the way that it is intended to include Ultrasonix? If this is the case, please close the ticket and add a comment on the Wiki.

Thank you

Siavash

#### 2011-11-02, 12:47:17 - Tamas Ungi
I use Windows 7, but I think it should be the same.
When I configured PlusBuild with CMake (yesterday), it found Ultrasonix automatically in
C:/Users/ungi/PLTools/Ultrasonix/sdk-5.6.4
My PlusBuild bin is in
C:/Users/ungi/PlusBuild

If PLTools is next to your PlusBuild bin dir, it should find it. But what you did, specifying the Ultrasonix dir manually is also a good way.

#### 2011-11-02, 13:31:02 - Tamas Heffter
Siavash, 

We've recently removed PLTools from the PlusBuild, because the Ultrasonix and NDI specific libraries were not freely available from the internet. So, as Tamas suggested, you check out the PLTools directory to the same level as PlusBuild directory, and it will find the selected version automatically, or you can set the folder manually as you did. 

If you have any question, feel free to ask it, otherwise let me know if we can close the ticket. 

#### 2011-11-02, 13:31:02 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-03, 01:06:27 - Siavash Khallaghi
It seems I had an incorrect impression on how to include Ulterius. 

#### 2011-11-03, 01:06:27 - Siavash Khallaghi
status: changed from "Accepted" to "Invalid"


## #366 Fiducial segmentation code clean-up
The fiducial segmentation code needs clean-up:
* Item, Pos, and Position all store just a 2d position => keep only one
* dot stores both r, c and x, y coordinates => need to clean up
* KPhantomSeg class is defined in both UltraSoundFiducialSegmentation and kphantseg.h => remove the files that are not used anymore
* Fix method names capitalization: this_is_wrong => ThisIsCorrect
* Fix member variable names: prepend m_ to all attribute names, don't use such short member variable names like: b, p, t, l1, l2 (e.g., in FidPatternRecognitionCommon), but at least a complete word
* Add comments for each class, method, and member variable


#### 2011-11-02, 15:13:44 - Alexis Boucharin
status: changed from "New" to "Accepted"

#### 2011-11-02, 16:10:18 - Alexis Boucharin
-For 'Pos' I assume you meant 'Dot'.
-Item and Position have been deleted, only Dot remains. However this is terrible for the meaning of the algorithm, Item was a poorly chosen name but stored 'Items' that are completely different from 'dots': shapes used by the morphological operations. I don't think it made the future debugging easier.
-I dont get the 'dot stores both r, c and x, y coordinates => need to clean up', Dot only contains x and y while Item contains r and c. Anyway it's cleaned up and only the x and y remain.

#### 2011-11-02, 16:34:48 - Andras Lasso
-For 'Pos' I meant 'Pos', see segimpl.h
-Feel free to rename Dot whatever name that represents its role. You can replace Item with int[2], there is no need to create a class with get/set functions for storing a 2d vector.
-Dot: There is a class Dot in FidPatternRecognitionCommon.h with m_X, m_Y, m_DotIntensity attributes, and there is also a struct Dot in segimpl.h with r, c, intensity attributes.

#### 2011-11-02, 16:43:45 - Alexis Boucharin
All the previous files that you are talking about (segimpl.h, kphantseg.h, etc.) have not been used for months and were only kept 'just in case' on demand. I don't think they are even included anywhere. I'll check and will remove them accordingly.

#### 2011-11-02, 16:51:38 - Andras Lasso
SVN keeps all the versions of all files. There is no need to keep extra copies.

#### 2011-11-02, 17:23:06 - Alexis Boucharin
I asked once I started cleaning the code a few months ago and was told to keep them 'just in case'. Doesn't matter now, I deleted them.

#### 2011-11-03, 15:25:56 - Alexis Boucharin
(In r:1111) re #366 Cleaned up some unused classes and started commenting out.

#### 2011-11-03, 16:44:07 - Alexis Boucharin
(In r:1112) re #366 Modified the Draw results function to work properly. It was still in the position/slope definition of lines.

#### 2011-11-03, 18:34:19 - Alexis Boucharin
(In r:1113) re #366 The old files are deleted. All headers of the FidPatternrecognition are commented according to the standards.

#### 2011-11-03, 18:49:27 - Alexis Boucharin
(In r:1114) re #366 Two more files were deleted.

#### 2011-11-04, 14:47:52 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-04, 20:18:00 - Alexis Boucharin
(In r:1126) Fixed #366 The code clean up is done. Standard comments are made for each class and method.

#### 2011-11-04, 20:18:00 - Alexis Boucharin
status: changed from "Accepted" to "Fixed"


## #367 Move tracker speed and position validation parameters setting to application level
Now the maximum allowed speed and minimum required position difference parameters are defined at the tracker level in the config files:
<Tracker ...
        MaxAllowedTranslationSpeedMmPerSec='10.0'
        MaxAllowedRotationSpeedDegPerSec='15.0'
        MinRequiredTranslationDifferenceMm='0.5'
        MinRequiredAngleDifferenceDeg='5.0' >

These parameters are not necessarily constant throughout the execution of the application, so it should be the application's responsibility to read these values from the config file and set it in the trackers

<iCal version='1.0' NumberOfImagesForValidation='50'    >
  <CalibrationData Type='CALIB_TEMPLATE_TRANSLATION' NumberOfImagesToAcquire='50' FrameTransformNameForValidation='' MaxAllowedTranslationSpeedMmPerSec='10.0'
        MaxAllowedRotationSpeedDegPerSec='15.0' MinRequiredTranslationDifferenceMm='0.5' MinRequiredAngleDifferenceDeg='5.0' />
  ...
</iCal>

Move frame validation into vtkTrackedFrameList::AddTrackedFrame() (and make frame ValidateData() protected).


#### 2011-11-03, 00:49:11 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-03, 02:17:52 - Tamas Heffter
(In r:1107) re #367: Move tracker speed and position validation parameters setting to application level
- Moved frame validation to vtkTrackedFrameList::AddTrackedFrame and store the validation parameters in vtkTrackedFrameList
- Updated config files for iCAL validation 

#### 2011-11-03, 02:21:41 - Tamas Heffter
(In r:1108) Fixed #367: Move tracker speed and position validation parameters setting to application level


#### 2011-11-03, 02:21:41 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2011-11-04, 23:50:37 - Tamas Heffter
(In r:1132) re #367: Move tracker speed and position validation parameters setting to application level
Added InvalidFrameAction to handle action after AddTrackedFrame got invalid frame.

#### 2011-11-04, 23:51:31 - Tamas Heffter
(In r:1133) re #367: Move tracker speed and position validation parameters setting to application level
Added InvalidFrameAction to handle action after AddTrackedFrame got invalid frame.


## #368 Calibration not read to vtkTrackerBuffer in SavedDataset mode
When vtkTrackerBuffer::GetTrackerBufferItem(..., true) is called after initialization of a vtkDataCollector with SavedDataset, the vtkTrackerBuffer::ToolCalibrationMatrix is identity, regardless of the tool calibration matrix in the config file.

#### 2011-11-03, 01:59:32 - Tamas Ungi
(In r:1106) re #368: Debugging code added.

#### 2011-11-03, 01:59:32 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2011-11-04, 14:52:37 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0 - Before Hopkins"

#### 2011-11-08, 18:19:41 - Csaba Pinter
Updating tickets (#287, #361, #368)



#### 2011-11-08, 18:19:41 - Csaba Pinter
milestone_id: changed from "Release Plus-1.3.1 - Before Hopkins" to "Release Plus-1.4.0"

#### 2011-12-02, 15:55:42 - Csaba Pinter
TransformRepository should be used

#### 2011-12-02, 15:55:42 - Csaba Pinter
status: changed from "New" to "Invalid"


## #369 Check all instances of vtkTransform in the library
...and make them vtkMatrix4x4 if no pipeline is involved

#### 2012-01-20, 20:12:29 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-01-20, 20:16:32 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-04, 21:27:30 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-04, 21:33:27 - Csaba Pinter
(In r:1592) Re #369: vtkTransform replaced by vtkMatrix4x4 in vtkProbeCalibrationAlgo; Unnecessary includes and forward declarations deleted from headers

#### 2012-04-04, 21:33:39 - Csaba Pinter
(In r:1593) Test #369: vtkTransform replaced by vtkMatrix4x4 in vtkProbeCalibrationAlgo

#### 2012-04-04, 21:33:39 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-05-11, 16:31:13 - Andras Lasso
There are a few files that use transforms while vtkMatrix4x4 would be enough:
* vtkBrachyStepperPhantomRegistrationAlgo
* vtkDataCollectorSynchronizer (this may be removed completely, so may not be necessary to change it)
* vtkTRUSCalibrationTest.cxx 
* TrackedFrameTransformFinder::operator()
* bool vtkTrackedFrameList::ValidateSpeed(TrackedFrame* trackedFrame)


#### 2012-05-11, 16:31:13 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2012-05-11, 16:33:37 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:20 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-07-12, 18:27:38 - Csaba Pinter
(In r:1909|plus:1909) Test #369: vtkTransform replaced with vtkMatrix4x4 in the requested classes; I didn't touch vtkDataCollectorSynchronizer though, as it is still used by iCalBrachy, but will be removed once the new correlation-based temporal calibration works with N-wires (#487)

#### 2012-07-12, 18:27:38 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-12, 20:25:05 - Csaba Pinter
Mark as fixed once vtkDataCollectorSynchronizer has been removed from the repository

#### 2012-07-12, 20:25:05 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-07-12, 20:25:05 - Csaba Pinter
status: changed from "Test" to "Accepted"

#### 2012-09-13, 16:21:14 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.6.1"

#### 2012-09-17, 14:02:55 - Adam Rankin
milestone_id: changed from "Release Plus-1.6.1" to "Release Plus-1.7.0"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:32 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:18 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:18 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-07, 22:03:59 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2013-12-03, 16:41:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-06-05, 02:05:21 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 03:29:41 - Andras Lasso
re #369: Removed old temporal calibration algorithm (that detected sudden change in the image and tracking data), as the current correlation-based method is more accurate.

#487 tracks the need of developing a temporal calibration variant that uses fiducial point positions in the image instead of line position in the image (which can be used for calibrating encoded brachytherapy steppers with ultrasound imaging)
Commit: r:3368|plus:3368

#### 2014-06-05, 03:30:13 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 11:57:36 - Andras Lasso
re #369: Fixed automatic test errors (a removed file was used in a test)
Commit: r:3369|plus:3369

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #370 Add scripts dir to PlusConfig


#### 2011-11-05, 16:23:41 - Tamas Heffter
(In r:1134) re #370: Scripts dir added to plus config and removed gnuplot scripts and gnuplot binary dir dependencies 

#### 2011-11-05, 16:24:25 - Tamas Heffter
(In r:1135) Fixed #370: Scripts dir added to plus config and removed gnuplot scripts and gnuplot binary dir dependencies 

#### 2011-11-05, 16:24:25 - Tamas Heffter
status: changed from "New" to "Fixed"


## #371 Gnuplot cannot be found by automatic nightly tests
4 nightly tests fail on all configurations (see http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=3632) because gnuplot directory is not set correctly.

The problem is that:
* PlusLib uses PlusConfig.xml to get some information that is required for testing (such as the gnuplot directory) but it's only set in PlusApp. I think PlusConfig.xml should be generated in PlusLib as the vtkPlusConfig class is implemented in PlusLib and some tests in PlusLib rely on the PlusConfig.xml file.
* Somehow we need to enforce that the PlusConfig.xml file contents either at configuration, build, or test execution time. Currently the tests update the PlusConfig.xml, so it has a more recent date than the input files, therefore it never gets updated.


#### 2011-11-07, 14:46:42 - Andras Lasso
Maybe this would be a working solution for the PlusConfig.xml update:
* Generate a PlusConfigDefault.xml file (or something similar name) in the configuration step
* Create a custom build step to copy PlusConfigDefault.xml to PlusConfig.xml during build

Then a make clean would delete PlusConfig.xml, but the custom build step could recreate the PlusConfig.xml (by copying it from the PlusConfigDefault.xml).

#### 2011-11-07, 16:24:59 - Tamas Heffter
Or, can't we just 'force' the configure step to override the plusconfig for the next (actually the next 2 days)? These values are constants, so with the new build it will work flawlessly, however not a nice solution?!! Now, we're checking if the PlusConfig.xml is there, if so we don't modify it. If we just comment out the file exist check, it would set the correct paths. The only problem is that the PlusApp config will generate the file, and usually the PlusLib tests are the first. So the PlusLib test will fail on the first day, than it will overwrite it. Actually, we could also move the config generation to PlusLib (the one that copies the files to the PLUS_EXECUTABLE_OUTPUT_PATH), and leave the configuration file generation for the install in PlusApp. Than, it would solve the two days issue. 

IF ( NOT EXISTS '${PLUS_EXECUTABLE_OUTPUT_PATH}/Release/PlusConfig.xml' )
        configure_file(
            ${CMAKE_CURRENT_SOURCE_DIR}/PlusConfig.xml.in
            ${PLUS_EXECUTABLE_OUTPUT_PATH}/Release/PlusConfig.xml
            )  
ENDIF()



#### 2011-11-07, 16:26:54 - Andras Lasso
OK, then just remove the NOT EXISTS checking and move the file generation to PlusLib.

#### 2011-11-07, 17:01:31 - Tamas Heffter
(In r:1141) Test #371: Gnuplot cannot be found by automatic nightly tests
Config file generation for executables moved to PlusLib

#### 2011-11-07, 17:01:31 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-11-07, 17:02:00 - Tamas Heffter
(In r:1142) Test #371: Gnuplot cannot be found by automatic nightly tests
Config file generation for executables moved to PlusLib

#### 2011-11-08, 18:19:15 - Csaba Pinter
Updating tickets (#371, #325)



#### 2011-11-08, 18:19:15 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #372 Make GUI testing in PlusApp optional
On some machines the automatic nightly tests never run properly, it is a good idea to disable it then (e.g. on Win7)

#### 2011-11-18, 16:13:09 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-11-18, 16:13:13 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-11-19, 17:30:43 - Csaba Pinter
(In r:1187) Test #372: Option PLUSAPP_TEST_GUI added to PlusApp CMakeLists.txt

#### 2011-11-19, 17:30:43 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-11-19, 19:37:48 - Csaba Pinter
(In r:1188) Re #372: Option PLUSAPP_TEST_GUI added to PlusBuild CMakeLists.txt and to the PlusApp externals


#### 2011-11-19, 19:38:31 - Csaba Pinter
(In r:1189) Re #372: Modified description text for PLUSAPP_TEST_GUI

#### 2011-12-13, 21:16:43 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #373 ApplicationVerifier found an error: NULL handle passed as parameter.
Tests used: 
-Basic: Exceptions, Handles, Heaps, Locks, Memory  


~~~~

  <?xml version='1.0' encoding='UTF-8' standalone='no' ?> 
- <avrf:logfile xmlns:avrf='Application Verifier'>
- <avrf:logSession TimeStarted='2011-11-07 : 12:45:44' PID='1640' Version='2'>
- <avrf:logEntry Time='2011-11-07 : 12:45:50' LayerName='Handles' StopCode='0x303' Severity='Error'>
  <avrf:message>NULL handle passed as parameter. A valid handle must be used.</avrf:message> 
  <avrf:parameter1>0 - Not used.</avrf:parameter1> 
  <avrf:parameter2>0 - Not used.</avrf:parameter2> 
  <avrf:parameter3>0 - Not used.</avrf:parameter3> 
  <avrf:parameter4>0 - Not used.</avrf:parameter4> 
- <avrf:stackTrace>
  <avrf:trace>vfbasics!AVrfpHandleSanityChecks+29 (d:\\avrf\\source\\base\\avrf\\vrfcommon\\handle.c @ 178)</avrf:trace> 
  <avrf:trace>vfbasics!AVrfpNtSetInformationProcess+1f (d:\\avrf\\source\\base\\avrf\\vrfcommon\\handle.c @ 1136)</avrf:trace> 
  <avrf:trace>kernel32!SetPriorityClass+53 ( @ 0)</avrf:trace> 
  <avrf:trace>vtkPlusCommon!WindowsAccurateTimer::TimerFunc+ec (c:\\devel\\plusbuild-bin\\pluslib\\src\\pluscommon\\windowsaccuratetimer.h @ 121)</avrf:trace> 
  <avrf:trace>WINMM!DriverCallback+4a ( @ 0)</avrf:trace> 
  <avrf:trace>WINMM!timeKillEvent+3b9 ( @ 0)</avrf:trace> 
  <avrf:trace>WINMM!timeGetSystemTime+97 ( @ 0)</avrf:trace> 
  <avrf:trace>vfbasics!AVrfpStandardThreadFunction+2f (d:\\avrf\\source\\base\\avrf\\vrfcommon\  hread.c @ 656)</avrf:trace> 
  <avrf:trace>kernel32!GetModuleFileNameA+1ba ( @ 0)</avrf:trace> 
  </avrf:stackTrace>
  </avrf:logEntry>
  </avrf:logSession>
  </avrf:logfile>

~~~~



#### 2011-11-18, 16:15:17 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2011-11-18, 16:15:17 - Csaba Pinter
assigned_to_id: changed from null to "lassoan"

#### 2011-11-18, 16:15:17 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-12-06, 19:10:17 - Andras Lasso
Cannot reproduce it on Windows7

#### 2011-12-06, 22:00:24 - Andras Lasso
(In r:1283) Fixed #373: Fixed application verifier NULL handle error. Root cause: on Windows XP setting of the process priority group failed. Solution: check if full access to the process is available, if not then just log a debug message (it's just a debug message and not an error, because the thread priority is set anyway and that should grant high enough priority to the timer)

#### 2011-12-06, 22:00:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #374 PLUS build error with Ultrasonix SDk 5.7.1
When I build pluse with Ultrasonix SDk 5.7.1 I get the following error
'\\PlusLib\\src\\ImageAcquisition\\SonixVideo\\vtkSonixPortaVideoSource.cxx(419) : error C2664: 'porta::setDisplayCallback' : cannot convert parameter 2 from 'bool (__cdecl *)(void *,int,int)' to 'UTX_IMG_CALLBACK''

if I Cmake and build it with 5.6.4 I do not have that error

#### 2011-11-09, 04:05:55 - Tamas Heffter
Already fixed in r:1150

#### 2011-11-09, 04:05:55 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #375 Change the Open functions in fCal to Import
Open stylus calibration (also phantom registration, segmentation parameters and volume reconstruction) is ambiguous, it would be better to just have a simple function to import results. Without the line edit, it would be only the label and the open button.

#### 2011-11-09, 15:31:01 - Csaba Pinter
summary: changed from "Change the Open finctions in fCal to Import" to "Change the Open functions in fCal to Import"

#### 2011-11-09, 15:41:29 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-11-09, 21:34:48 - Csaba Pinter
(In r:1157) Fixed #375: Open result buttons changed to import; Open phantom definition function removed from Phantom registration toolbox because it should not change in course of a calibration (can also introduce lots of errors); Bugs fixed related to reset cameras and button states

#### 2011-11-09, 21:34:48 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #376 Add options icon in fCal
An options icon is needed in fCal to be able to perform different technical operaions like dump buffers and save configuration file (which can only be done after finishing a calibration step)

Update: Instead of a menu, there will be a toolbar that will contain the tools button and the save configuration

#### 2011-11-09, 17:11:29 - Csaba Pinter
(In r:1155) Fixed #376: Options icon added to fCal status bar (can dump buffers and save device set configuration into file)

#### 2011-11-09, 17:11:29 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-11-09, 19:03:57 - Csaba Pinter
status: changed from "Fixed" to "Accepted"

#### 2011-11-09, 19:04:34 - Csaba Pinter
description: changed from "An options icon is needed i..." to "An options icon is needed i..."

#### 2011-11-09, 21:58:38 - Csaba Pinter
(In r:1158) Fixed #376: Toolbar added to fCal main window that contains a save configuration button (the save function was also removed from the toolboxes) and the tools button

#### 2011-11-09, 21:58:38 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #377 Relative transform computation should be implemented in the tracking base classes
Currently  if a reference tool is appointed then it's the responsibility of each tracker class (vtkAscension3DGTracker, vtkNDICertusTracker, vtkMicronTracker, ...) to make all the transforms relative to this transform. 

Remove reference transform dependency from all classes and use vtkTransformRepository in the application layer. 
An example can be found in TrusCalibration\  esting\\vtkPhantomRegistrationTest.cxx

#### 2011-11-18, 16:15:34 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-11-18, 16:57:25 - Csaba Pinter
assigned_to_id: changed from null to "lassoan"

#### 2011-12-02, 15:52:32 - Csaba Pinter
assigned_to_id: changed from "lassoan" to "heffter"

#### 2011-12-02, 15:52:37 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-12-03, 20:52:36 - Tamas Heffter
description: changed from "Currently  if a reference t..." to "Currently  if a reference t..."

#### 2011-12-03, 20:55:29 - Tamas Heffter
(In r:1268) Test #377: Changed tracker implementations to always save the acquired transforms to TrackerBuffer in ToolToTracker form. 

#### 2011-12-03, 20:55:29 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-22, 16:22:02 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #378 Segmentation error with iCal phantom 
Segmentation failed with iCal phantom. We used to have a line length tolerance which could eliminate this kind of errors. Screenshot attached. 

#### 2011-11-10, 15:28:50 - Csaba Pinter
Could you upload the image again? Assembla says there is an error in it.

#### 2011-11-10, 15:39:05 - Tamas Heffter
file:aFpbBOc7ir4zq5acwqjQXA

#### 2011-11-10, 15:39:05 - Tamas Heffter
Attachment added: "iCalframeGrabberSegmentationErrorCompressed.mha"

#### 2011-11-10, 15:39:45 - Tamas Heffter
file:a3Bulsc7ir4yFHacwqjQYw

#### 2011-11-10, 15:39:45 - Tamas Heffter
Attachment added: "PlusConfiguration_TerasonFrameGrabber_BlackTargetGuideStepper_iCal_1.0.xml"

#### 2011-11-10, 15:41:13 - Tamas Heffter
image:bRPdric7ir4zsoacwqjQYw

#### 2011-11-10, 15:41:13 - Tamas Heffter
Attachment added: "SegmentationError.jpg"

#### 2011-11-10, 15:55:36 - Alexis Boucharin
(In r:1159) re #378 Added a m_MaxLineLengthToleranceMm parameter and a SetMaxLineLengthToleranceMm function (which updates all the Patterns).

#### 2011-11-10, 16:24:42 - Csaba Pinter
(In r:1160) Test #378: Bug fixed in line finder - it didn't check if the middle point is actually between the endpoints, it just checked the distance

#### 2011-11-10, 16:24:42 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-11-16, 19:22:56 - Csaba Pinter
status: changed from "Test" to "Fixed"

#### 2011-12-23, 22:04:14 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"


## #379 PlusBuild fails with errors if USBECGBOX option is turned on during configuration.
If we cannot support this function, maybe the option should be removed from the configuration.

#### 2011-11-18, 16:34:09 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-18, 16:34:20 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-12-01, 17:13:19 - Tamas Heffter
(In r:1253) Fixed #379: Disabled USBECGBOX in PlusBuild 

#### 2011-12-01, 17:13:19 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-12-01, 17:57:24 - Tamas Heffter
status: changed from "Fixed" to "Accepted"

#### 2011-12-01, 20:18:12 - Tamas Heffter
(In r:1257) Fixed #379: Give a warning if ECG box option is selected

#### 2011-12-01, 20:18:12 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #380 fCal crash when it cannot find STL models
fCal crashes at the end of calibration. There are warnings before the crash:
111411_081501.427 [WARNING] [023.742000] File FCal_1.0.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081501.427 [WARNING] [023.746000] Phantom model file is not found with name: FCal_1.0.stl - no model is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(914)]
111411_081503.489 [WARNING] [025.804000] File L14-5_38_ProbeModel.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081503.489 [WARNING] [025.807000] Tool (Probe) model file is not found with name: L14-5_38_ProbeModel.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(281)]
111411_081503.489 [WARNING] [025.809000] Unable to initialize probe visualization - no probe is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(304)]
111411_081505.583 [WARNING] [027.901000] File Stylus_Example.stl was not found in directory C:/Documents and Settings/Alexis [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
111411_081505.583 [WARNING] [027.904000] Tool (Stylus) model file is not found with name: Stylus_Example.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(281)]

See more details in #348

#### 2011-11-18, 16:34:25 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-11-19, 17:04:24 - Csaba Pinter
(In r:1186) Fixed #380: Crash fixed when it could not find STL models

#### 2011-11-19, 17:04:24 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2011-11-23, 00:14:16 - hussam.ashab
Hi,

fCal still crashes at 'm_ParentMainWindow->GetToolVisualizer()->GetDisplayableTool(TRACKER_TOOL_PROBE)->DisplayableOn();'. and I cannot build it in release mode.

link error ' fatal error LNK1181: cannot open input file 'C:\\users\\devel\\PlusExperimental-bin\\bin\elease\\QVTK.lib' '

112211_134059.892 [INFO]    [000.000000]  PlusLib version: 1.3.1
112211_134103.892 [INFO]    [003.988000]  Connect to devices
112211_134104.627 [INFO]    [004.727000]  Image acqusition local time offset: -297.6ms
112211_134104.627 [INFO]    [004.729000]  Selected US image orientation: UF
112211_134104.642 [INFO]    [004.735000]  Tracker local time offset: 0ms
112211_134104.642 [INFO]    [004.736000]  Tool calibration matrix cannot be loaded with no date entered - using identity matrix
112211_134110.923 [WARNING] [011.026000]  File FCal_1.0.stl was not found in directory C:/Documents and Settings/Alexis/Desktop/fCal calibration [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
112211_134110.939 [WARNING] [011.032000]  Phantom model file is not found with name: FCal_1.0.stl - no model is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(1018)]
112211_134110.939 [WARNING] [011.038000]  File L14-5_38_ProbeModel.stl was not found in directory C:/Documents and Settings/Alexis/Desktop/fCal calibration [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
112211_134110.939 [WARNING] [011.043000]  Tool (Probe) model file is not found with name: L14-5_38_ProbeModel.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(301)]
112211_134110.939 [WARNING] [011.047000]  Unable to initialize probe visualization - no probe is displayed [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(328)]
112211_134110.955 [WARNING] [011.052000]  File Stylus_Example.stl was not found in directory C:/Documents and Settings/Alexis/Desktop/fCal calibration [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx(494)]
112211_134110.955 [WARNING] [011.056000]  Tool (Stylus) model file is not found with name: Stylus_Example.stl [in ..\\..\\PlusApp\\fCal\\vtkToolVisualizer.cxx(301)]
112211_134110.955 [INFO]    [011.058000]  No stylus model file found - default model will be displayed
112211_134110.970 [INFO]    [011.066000]  Application configuration file 'c:/users/devel/PlusExperimental-bin/bin/Debug/PlusConfig.xml' saved
112211_134116.298 [INFO]    [016.406000]  Filtered timestamp is probably invalid for video buffer item with item index=0, time=16.405. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.392 [INFO]    [017.493000]  Filtered timestamp is probably invalid for video buffer item with item index=0, time=17.493. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.470 [INFO]    [017.569000]  Filtered timestamp is probably invalid for video buffer item with item index=1, time=17.568. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.548 [INFO]    [017.647000]  Filtered timestamp is probably invalid for video buffer item with item index=2, time=17.646. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.705 [INFO]    [017.803000]  Filtered timestamp is probably invalid for video buffer item with item index=4, time=17.803. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.783 [INFO]    [017.882000]  Filtered timestamp is probably invalid for video buffer item with item index=5, time=17.881. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.876 [INFO]    [017.973000]  Filtered timestamp is probably invalid for video buffer item with item index=6, time=17.972. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134117.955 [INFO]    [018.058000]  Filtered timestamp is probably invalid for video buffer item with item index=7, time=18.058. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.33  [INFO]    [018.130000]  Filtered timestamp is probably invalid for video buffer item with item index=8, time=18.129. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.111 [INFO]    [018.207000]  Filtered timestamp is probably invalid for video buffer item with item index=9, time=18.206. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.345 [INFO]    [018.444000]  Filtered timestamp is probably invalid for video buffer item with item index=12, time=18.443. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.423 [INFO]    [018.519000]  Filtered timestamp is probably invalid for video buffer item with item index=13, time=18.519. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.501 [INFO]    [018.598000]  Filtered timestamp is probably invalid for video buffer item with item index=14, time=18.597. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.579 [INFO]    [018.676000]  Filtered timestamp is probably invalid for video buffer item with item index=15, time=18.675. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.658 [INFO]    [018.754000]  Filtered timestamp is probably invalid for video buffer item with item index=16, time=18.753. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.814 [INFO]    [018.910000]  Filtered timestamp is probably invalid for video buffer item with item index=18, time=18.909. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134118.892 [INFO]    [018.989000]  Filtered timestamp is probably invalid for video buffer item with item index=19, time=18.988. The item may have been tagged with an inaccurate timestamp, therefore it will not be recorded.
112211_134428.153 [INFO]    [208.253000]  Segmentation success rate: 302 out of 998 (30 percent)
112211_134428.981 [INFO]    [209.093000]  Calibration result transform matrix = 
112211_134428.996 [INFO]    [209.095000]  
 0.004 -0.085  0.003 -63.655 
 0.088  0.001 -0.001 -39.659 
 0.001  0.003  0.087 11.903 
 0.000  0.000  0.000  1.000 
112211_134428.996 [INFO]    [209.098000]  Point-Line Distance Error - mean: 85.2642, rms: 152.554, std: 126.833
112211_134428.996 [INFO]    [209.100000]    Validation data confidence level: 0.95


#### 2011-11-23, 00:15:11 - hussam.ashab
image:a1GSU8fwGr4zOUacwqjQYw fCal Crash

#### 2011-11-23, 00:15:11 - hussam.ashab
Attachment added: "untitled.PNG"

#### 2011-11-23, 14:17:31 - Csaba Pinter
Strange, it worked for me when I closed it...

We're actually in the middle of rethinking the tracker tools, and that specific row where your crash occured changed, so I can't fix it right now, we have to finish our rework first.

What is very interesting in your log is the path where it tries to find the stl files (.../Alexis/...). Deleting your PlusConfig.xml in the binary directories may fix your problem at once.
If not, a solution for you could be to copy the stl files in the configuration folder somewhere (doesn't matter where, the search is recursive).

#### 2011-11-23, 14:17:31 - Csaba Pinter
status: changed from "Fixed" to "Accepted"

#### 2011-11-24, 17:53:29 - hussam.ashab
(.../Alexis/..) I am not sing my PC. I am using other PC. Therefore the name appears in the path

#### 2011-12-11, 01:57:56 - Csaba Pinter
(In r:1314) Test #380: Fixed crash when fCal does not find model

#### 2011-12-11, 01:57:56 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-13, 21:16:51 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #381 Ulterius SDK version change should automatically update the SDK directory location
Several times developers had problems with Plus compilation because they changed the SDK version, but didn't change the SDK directory location.

It's particularly confusing when at first the directory location found automatically (in PLTools), but then after changing the SDK version and reconfiguring the directory location is not updated to reflect the new SDK version.

If the directory was manually set then probably we don't have to automatically update the directory on SDK version is change.


#### 2011-11-18, 16:34:13 - Csaba Pinter
assigned_to_id: changed from null to "heffter"

#### 2011-11-18, 16:34:16 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-12-01, 17:58:59 - Tamas Heffter
(In r:1254) Test #381: Update Ulterius SDK directory location if SDK version number changed 

#### 2011-12-01, 17:58:59 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-12-01, 19:26:08 - Tamas Heffter
(In r:1255) Test #381: Update Ulterius SDK directory location if SDK version number changed 

#### 2011-12-01, 19:28:18 - Tamas Heffter
(In r:1256) Test #381: Print verbose message if QT4 not found 

#### 2011-12-01, 19:36:40 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #382 Reconstructed volume saving to metafile
Now the reconstructed volumes can only be saved in vtk format. An optin needs to be added that enables saving into mha (metafile) format as well

Check if the output of the vtk writer is the same as this (if not then remove the vtk writing)

#### 2011-11-18, 16:37:16 - Csaba Pinter
description: changed from "Now the reconstructed volum..." to "Now the reconstructed volum..."

#### 2011-11-18, 16:37:16 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-11-18, 16:56:51 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-12-11, 01:51:33 - Csaba Pinter
(In r:1313) Test #382: Reconstructed volume can be saved to metafile (mha+mhd)

#### 2011-12-11, 01:51:33 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-12-15, 16:56:40 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:40 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #383 Show synchronized video when showing devices
The video is connected directly to the video source, so the temporal calibration is not taken into account when showing the devices (and also the live image)

Option needs to be added to enable or disable this

#### 2011-11-18, 16:40:02 - Csaba Pinter
description: changed from "The video is connected dire..." to "The video is connected dire..."

#### 2011-11-18, 16:47:28 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:13:02 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-01-20, 20:15:53 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:53 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:33 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:33 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #384 Record more points for a phantom landmark
Instead of recording one position for a phantom landmark in the phantom registration phase, it should record a sequence of points and average them to avoid the natural jitter of the tracker.

The number of the points or the capturing interval shall be stored in the configuration file.

#### 2011-11-18, 16:48:41 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2014-05-19, 15:35:23 - Andras Lasso
Duplicate of #886.

#### 2014-05-19, 15:35:23 - Andras Lasso
status: changed from "New" to "Invalid"


## #385 New class for resolving transform path


~~~~

  <CoordinateFrameDefinitions>
  
    <Transform From='Phantom' To='Reference' Matrix='1 0 0 0  0 1 0 0  0 0 1 0 0 0 0 1' Error='0.0' />
  
    <Transform From='Image' To='Probe'
      Matrix='
            0.191647 0.00743877 0.0242208 -65.3006 
            -0.00410587 0.183884 -0.00547576 -86.7768 
            -0.0249356 0.0044197 0.187056 160.661 
            0 0 0 1'
          Date='2011.07.28 21:42:34'
          Error='0.0' />

    <Transform From='Probe' To='ProbeModel'
          Matrix='
            0.191647 0.00743877 0.0242208 -65.3006 
            -0.00410587 0.183884 -0.00547576 -86.7768 
            -0.0249356 0.0044197 0.187056 160.661 
            0 0 0 1' />
        
          
  </CoordinateFrameDefinitions>

  <Rendering>
        <Model Name='ProbeXxafds'
          File='L14-5_38_ProbeModel.stl'
          ModelCoordinateFrame='ProbeModel'
        />
        <Model Name='StylusXasdfwe'
          File='Stylus.stl'
          ModelCoordinateFrame='StylusTip'
        />
  </Rendering>

~~~~



#### 2011-11-22, 20:42:03 - Tamas Heffter
description: changed from "TODO" to "
~~~~

  <CoordinateFr..."

#### 2011-11-23, 15:25:20 - Andras Lasso
(In r:1207) Re #385: Added initial version of vtkTransformCombiner (implementation not yet complete)

#### 2011-11-23, 22:38:11 - Andras Lasso
(In r:1209) Fixed #385: vtkTransformCombiner can now compute transforms between any coordinate frames

#### 2011-11-23, 22:38:11 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-11-23, 22:59:34 - Andras Lasso
(In r:1210) Re #385: Simplified vtkTransformCombiner internal containers

#### 2011-11-23, 23:05:44 - Andras Lasso
(In r:1211) Re #385: Added circlular reference detection to vtkTransformCombiner

#### 2011-11-24, 16:49:58 - Andras Lasso
(In r:1215) Re #385: Simplified and added more comments vtkTransformCombiner

#### 2011-11-24, 20:09:33 - Andras Lasso
(In r:1218) Re #385: Renamed vtkTransformCombiner to vtkTransformRepository to reflect that the object actually stores many transforms

#### 2011-11-25, 01:42:13 - Andras Lasso
(In r:1219) Re #385: Added DeleteTransform and Clear methods to vtkTransformRepository

#### 2011-11-30, 02:31:16 - Csaba Pinter
(In r:1241) Re #385: vtkStylusCalibrationTest fixed and uses vtkTransformRepository

#### 2011-11-30, 06:22:59 - Csaba Pinter
(In r:1242) Re #385: vtkPhantomRegistrationTest fixed and uses vtkTransformRepository

#### 2011-12-01, 00:20:05 - Csaba Pinter
(In r:1248) Re #385: vtkDataCollectorTest1 and vtkDataCollectorTrackingTest fixed

#### 2011-12-01, 15:36:52 - Csaba Pinter
(In r:1251) Re #385: vtkTransform changed to vtkMatrix4x4 in vtkPivotCalibrationAlgo

#### 2011-12-01, 15:38:22 - Csaba Pinter
(In r:1252) Re #385: TransformRepository added to vtkToolVisualizer; StylusCalibrationToolbox fixed for the new transform repository


## #386 Move show devices checkbox to toolbar
Now it is in Freehand Calibration toolbox. It should be always enabled

Also move the calibration related toolboxes to the bottom (Capturing is used more frequently), and make the font of the others bold

#### 2011-12-12, 17:23:26 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-12-12, 17:24:08 - Csaba Pinter
(In r:1316) Re #386: WIP Show devices option is on the main toolbar

#### 2011-12-12, 21:42:39 - Csaba Pinter
(In r:1318) Re #386: ImageCoordinateFrame added to configuration files to avoid error message

#### 2011-12-12, 21:43:22 - Csaba Pinter
(In r:1319) Test #386: Improved and tested show devices function

#### 2011-12-12, 21:43:22 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-15, 16:56:40 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:40 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #387 Revise tracked frame status field
Currently we set the tracked frame status to the 'Probe' tool status is we have it, otherwise to the first active tool status. The tracked frame can be valid even if we don't have 'Probe' tool or the first active tool is missing (like stylus is out of view, but we need to track the needle to reference without the probe). This collective tracked frame status doesn't make any sense since we don't have default tool name. Need to change vtkDataCollector::GetTrackedFrameByTime according to this modification. 

#### 2011-11-23, 20:57:29 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2011-11-23, 20:57:29 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2011-11-25, 15:39:09 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-11-25, 20:57:04 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-15, 16:56:41 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:41 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #388 Define image message broadcasting port number in ImageAcquisition XML data
Currently, the image message broadcasting port number is defined in the Probe tool, however we're not even sending the transform. Define it in the ImageAcquisition XML data instead. 
Change vtkOpenIGTLinkBroadcaster::SendImageMessage after this modification. 

#### 2011-11-23, 19:28:41 - Tamas Heffter
(In r:1208) Test #388: Define image message broadcasting port number in ImageAcquisition XML data
- Added SendTo attribute to ImageAcquisition XML data element 
- Fixed vtkOpenIGTLinkBroadcaster::SendImageMessage function 
- Fixed vtkOpenIGTLinkBroadcasterTest

#### 2011-11-23, 19:28:41 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-11-23, 19:28:41 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-12-22, 16:23:36 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #389 Define CalibrationTransformName in all VolumeReconstructor xml config
Define CalibrationTransformName in all VolumeReconstructor xml config and read the transform from the <Calibration> xml tree

<VolumeReconstruction 
    CalibrationTransformName='ImageToProbe'

#### 2011-12-09, 18:10:05 - Tamas Heffter
Volume reconstructor now uses TransformRepository

#### 2011-12-09, 18:10:05 - Tamas Heffter
status: changed from "New" to "Invalid"


## #390 ProbeCalibrationAlgo: save spatial calibration result
Save spatial calibration result to 
<CoordinateFrameDefinitions>
      <Transform From='Image' To='Probe' Matrix='1 0 0 0  0 1 0 0  0 0 1 0 0 0 0 1' Error='0.0' />
<CoordinateFrameDefinitions>


#### 2011-11-23, 19:32:23 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-23, 19:32:29 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-11-23, 19:34:24 - Tamas Heffter
description: changed from "Save spatial calibration re..." to "Save spatial calibration re..."

#### 2011-12-08, 23:45:45 - Csaba Pinter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-12-09, 00:36:51 - Csaba Pinter
(In r:1301) Re #302: Model became a type, DisplayableObject has no nested elements, only attributes in Rendering section of device set configuration; Fixed #390: vtProbeCalibrationAlgo saves results properly; Re #312: IsExistingTransform function added to vtkTransformRepository; GetTrackerToolReferenceFrame function added to vtkDataCollector

#### 2011-12-09, 00:36:51 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #391 PivotCalibrationAlgo: read and write calibration result to xml 
PivotCalibrationAlgo: read and write calibration result to xml under the <CoordinateFrameDefinitions> xml data element
<CoordinateFrameDefinitions>
      <Transform From='Stylus' To='ToolTip' Matrix='1 0 0 0  0 1 0 0  0 0 1 0 0 0 0 1' Error='0.0' />
<CoordinateFrameDefinitions>



#### 2011-11-23, 19:32:40 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-11-23, 19:35:12 - Tamas Heffter
description: changed from "PivotCalibrationAlgo: read ..." to "PivotCalibrationAlgo: read ..."

#### 2011-11-24, 01:37:46 - Tamas Heffter
(In r:1212) Fixed #391: PivotCalibrationAlgo Read/WriteConfiguration removed, used vtkPlusConfig::WriteTransformToCoordinateDefinition instead 


#### 2011-11-24, 01:37:46 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2011-11-24, 01:40:15 - Tamas Heffter
(In r:1213) Test #391: PivotCalibrationAlgo Read/WriteConfiguration removed, used vtkPlusConfig::WriteTransformToCoordinateDefinition instead, quick fix for fCal need to review it. 


#### 2011-11-24, 01:40:15 - Tamas Heffter
status: changed from "Fixed" to "Test"

#### 2011-11-24, 16:04:39 - Csaba Pinter
(In r:1214) Re #391: Add current date if none is specified when saving transform (a transform without a date is considered invalid); LOG_TRACEs into new functions

#### 2011-11-24, 18:23:02 - Csaba Pinter
(In r:1216) Re #391: Fix fCal according to latest changes

#### 2011-12-22, 16:22:36 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #392 Make Ulterius get/set functions to communicate directly with the US imaging device
Currently imaging parameters are set only upon connection to the imaging device. Change the get/set functions so that set functions so that if a connection is already established the parameters are directly sent to/read from the imaging device.

#### 2011-11-23, 01:43:43 - Andras Lasso
(In r:1201) Fixed #392: Imaging parameters can now be changed in real-time using vtkSonixVideoSource (Ulterius interface)

#### 2011-11-23, 01:43:43 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2011-11-23, 02:58:46 - Siavash Khallaghi
Thank you Andras. I can verify that changing the sector size through the Set macro changes the sector size on the exam software.

However when we call the FrameRate it returns -1. Is this how it supposed to work?

#### 2011-11-23, 03:08:41 - Andras Lasso
I don't think you can *set* a frame rate using Ulterius. Frame rate is determined by a number of factors, including depth, sector size, transmitter frequency, processing parameters, ...
If you call the vtkSonixVideoSource::PrintListOfImagingParameters() method then you get a list of parameters that you can change using Ulterius. You can experiment with setting those to achieve a desired frame rate.


#### 2011-11-23, 03:13:09 - Siavash Khallaghi
I am not trying to set the frame rate. I am trying to get the actual frame rate. To me, it seems that GetFrameRate() should return the framerate that is displayed on the machine. Am I wrong?

Siavash
-- 
Sent from mobile device. Please excuse my brevity.

#### 2011-11-23, 14:07:27 - Andras Lasso
GetFrameRate() returns the requested frame rate. If you call the vtkSonixVideoSource::PrintListOfImagingParameters() method then you get a list of parameters that you can get using Ulterius. If you find anything like 'displayed frame rate' or similar then you can simply add a GetDisplayedFrameRate() function to vtkSonixVideoSource.

#### 2011-12-02, 02:33:59 - Siavash Khallaghi
Hi Andras,

I tried vtkSonixVideoSource::PrintListOfImagingParameters(), but it prints every imaging parameter. This is not what I need.

I need to print and pass the frameRate to an elastography block. I cannot change the input for this block since the developer does not share source code.

I looked into the vtkSonixVideoSource::GetParamValue and I see that it is protected. Is there anyway to access the frameRate from outside vtkSonixVideoSource?

Siavash

#### 2011-12-02, 04:22:11 - Andras Lasso
You can add a GetDisplayedFrameRate() function to vtkSonixVideoSource that reads the corresponding paramvalue from the device and returns it.
You just need vtkSonixVideoSource::PrintListOfImagingParameters to get a list of all possible parameter names (you have to specify the parameter name to GetParamValue).

#### 2011-12-02, 04:30:16 - Siavash Khallaghi
Thank you Andras, I will add it tomrrow. I just wanted to make sure that it is not already implemented.

Siavash
-- 
Sent from mobile device. Please excuse my brevity.


## #393 Create sikuli test for fCal
An automated GUI test is needed for fCal that tests the basic scenario and somebasic  unexpected use cases.

Should be only done when the nightly tests are made stable.

#### 2012-01-20, 20:15:21 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:21 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-12-22, 00:25:29 - Andras Lasso
(In r:2345|plus:2345) re #393: Applied Sikuli X r930 patch (downloaded from http://www.sikuli.org/download.html). Hopefully it'll make nightly GUI test executions more stable.

#### 2012-12-22, 00:43:02 - Csaba Pinter
Thanks! Let's hope it improves things.
It's strange that they didn't increase the version number (to 1.0rc4) though.

#### 2013-05-15, 19:58:24 - Adam Rankin
assigned_to_id: changed from "pinter" to null

#### 2016-07-13, 16:39:36 - Adam Rankin
Closing as invalid as qtest can provide the test infrastructure we need.

#### 2016-07-13, 16:39:36 - Adam Rankin
status: changed from "New" to "Invalid"


## #394 Create and use PlusTransformName class
Create PlusTransformName class with From and To string members for storing coordinate frame definitions. 
The class should be able to parse any camel case string in the following format: [CoordinateFrameFrom]To[CoordinateFrameTo]
Update TransformRepository and TrackedFrame classes to use the new PlusTransformName class

#### 2011-11-28, 16:30:50 - Tamas Heffter
(In r:1232) Test #394: Create and use PlusTransformName class
re #333: PlusLib design: Move TrackedFrame related files to PlusCommon
- Moved TrackedFrame related classes to PlusCommon 
- Added PlusTransformName class and used it where it possible 
- Updated tests

#### 2011-11-28, 16:30:50 - Tamas Heffter
status: changed from "New" to "Test"

#### 2011-11-28, 16:31:22 - Tamas Heffter
(In r:1233) Test #394: Create and use PlusTransformName class
re #333: PlusLib design: Move TrackedFrame related files to PlusCommon
- Moved TrackedFrame related classes to PlusCommon 
- Added PlusTransformName class and used it where it possible 
- Updated tests

#### 2011-11-29, 20:10:32 - Tamas Heffter
(In r:1236) re #394: Create and use PlusTransformName class
Added vtkTransformRepository::SetTransforms(TrackedFrame& trackedFrame)
Added TrackedFrame::GetCustomFrameTransformNameList


#### 2011-11-29, 22:44:26 - Tamas Heffter
(In r:1237) re #394: Fixed tests 

#### 2011-12-22, 16:22:59 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #395 Fix PhantomRegistration 
The tests are useless, if I change the baseline to a completely different value, the test still pass (in the comparison we divide by zero), the baseline results is also wrong. 
Need to revise test and also fCal.

This is also strange, I guess it's not what we want: 

~~~~
for (int i=0; i<4; ++i) for (int j=0; j<4; ++j) elements[4*j+i] = stylusTipToReferenceMatrix->GetElement(i,j);

~~~~



#### 2011-11-30, 18:55:07 - Tamas Heffter
(In r:1244) re #395: Fix PhantomRegistration
- Simplified vtkTransformRepository use in PhantomRegistrationTest 
- Simplified stylus tip position computation 
- Fixed test by changing the matrix comparison and updated baseline file 

#### 2011-11-30, 18:55:07 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2011-11-30, 18:56:36 - Tamas Heffter
Csaba, Please check the new baseline and change fCal if you agree with the modifications. 

#### 2011-11-30, 18:56:36 - Tamas Heffter
assigned_to_id: changed from "heffter" to "pinter"

#### 2011-11-30, 18:56:36 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-11-30, 22:30:26 - Tamas Heffter
The phantom registration test fails sometimes, need to check fake tracker, or use a tracked frame instead of fake tracker (to have a constant input always)

#### 2011-12-01, 23:46:09 - Csaba Pinter
(In r:1258) Test #395; Test #160: Phantom registration fixed; Error computation added to vtkPhantomRegistrationAlgo; PhantomDefinition/Geometry/Registration element deleted from configuration files (CoordinateDefinitions element is used instead)

#### 2011-12-01, 23:46:09 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2011-12-15, 17:06:38 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #396 Add support for ECG input
If there is a confirmed need for acquiring ECG (or other analog signal) along with the tracking data then the Signaling module should be made functional (currently it probably does not even compile).
The Signaling module supposed to support MeasurementComputing USB data acquisition devices (see more information at http://www.mccdaq.com/).

#### 2012-03-29, 18:57:22 - Andras Lasso
http://www.mccdaq.com/PDFs/Manuals/universal-library-help.pdf

#### 2012-03-29, 20:23:16 - Tamas Heffter
The ablation system has a trigger, so we might have to implement it very soon. Also, did you know that the Touch has a foot switch port (BNC input port on the back), that we can use for freeze/unfreeze?  

#### 2013-05-09, 20:53:27 - Andras Lasso
(In r:2763|plus:2763) re #396: Explain that enabling the ECG and heart signal box support cause build errors if 

#### 2013-05-09, 20:53:27 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:59:54 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2014-06-04, 20:59:33 - Andras Lasso
re #396: Signaling library is very outdated, moving to the sandbox.
Commit: r:3365|plus:3365

#### 2014-06-04, 20:59:33 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-04, 21:00:39 - Andras Lasso
Closing this ticket. Will reopen on request.

#### 2014-06-04, 21:00:39 - Andras Lasso
status: changed from "New" to "Invalid"


## #397 Acquire new data for the tests


#### 2011-12-22, 22:06:26 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0" to null

#### 2012-01-20, 20:04:46 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #398 PlusBuild update and nightly test script


#### 2011-12-20, 20:19:06 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-12-20, 20:38:14 - Tamas Heffter
(In r:1358) re #398: Added PlusBuild self update to cmake 

#### 2011-12-21, 19:41:00 - Tamas Heffter
(In r:1361) re #398: Added PlusBuild UpdateBuildAndTest.bat batch file which can update the PlusBuild folder, then configure the PlusBuild and compile it, finally run the PlusLib and PlusApp tests as usual (command line arguments are the same)

#### 2011-12-21, 19:49:57 - Tamas Heffter
Guys, 
I've added a new script but not sure it's perfect. First of all it always updates to the latest code, and configure it. However, if we want to run the Nightly test it will update to the latest revision first, than revert to the version what need for nightly test. Also, if it couldn't configure/build the project it doesn't say anything yet (because if the itk/vtk git checkout fails it would report an error). Finally if we have local modifications, probably it will merge them if it can. 
What do you think, should I add an option like --no-update and exit/report an error if the PlusBuild failed? 

#### 2011-12-22, 16:20:09 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-22, 19:47:18 - Andras Lasso
If the script name is 'updateBuildAndTest.bat' then I would assume that it updates everything. However, I think currently  it doesn't update the PlusBuild directory. Is it intentional?

If not, then please add an update command for the PlusBuild directory as well. You can call an update using CTest:
ctest.exe -D <Config>Update

e.g.,
'c:\\Program Files (x86)\\CMake 2.8\\bin\\ctest.exe' -D ContinuousUpdate

Probably it requires an extra ctest config file at PlusBuild level.

#### 2011-12-22, 20:02:30 - Tamas Heffter
If you check the PlusBuild cmake file, you will see that it always updates the PlusBuild folder if the local revision is not equal to server revision. Is it enough or do I need to add this update too?


#### 2011-12-22, 20:14:29 - Andras Lasso
Is it updated every time you build Plus? Doing an update when you run a build step only is a bit confusing. I don't always want to do an update when I start a build. Sometimes I just want to rebuild an older Plus version.

How can we build an older Plus version?

#### 2011-12-22, 20:35:59 - Tamas Heffter
This is just updates the trunk/PlusBuild folder when you run the PlusBuild, not PlusLib or PlusApp. The current PlusBuild will check out the latest codes anyway. 
If you need an older version just set PLUS_SVN_REVISION which will check out the desired one. The backward compatibility is another question, the latest PlusBuild should configure the older versions. 
Do you think I should add an option (with default on) where we could turn of this auto update function? 

#### 2011-12-22, 20:59:47 - Andras Lasso
The problem is that you perform update in the build step. It can lead to all kinds of complications. By adding one more configuration option wouldn't really resolve this issue and would increase the complexity.

Just move the update code into the generated batch file. Either move the code that is currently in the PlusBuild CMakeLists.txt to the batch file; or use CTest to do the update. CTest may be somewhat better in the sense that the version you have to update to is determined automatically for the selected configuration (it doesn't do anything for experimental, updates to the latest version for continuous, updates to last night's version for nightly), and probably it's somewhat simpler (one line of code + a ctest config file).

#### 2011-12-22, 21:06:22 - Tamas Heffter
Ok, then I think we misunderstood each other. That was the main goal of this ticket. We always have to ask everybody to updates their PlusBuild library whenever we made some changes. If I remove this part, we will have the same problem. Can we discuss it over skype? 

#### 2011-12-22, 21:32:10 - Andras Lasso
Running the UpdateBuildAndTest.bat shall do an update, that's clear, as 'Update' is included in the name.

A build step shall not include an update step. As I understand, the current implementation performs update when you actually do a build. This shouldn't happen.

#### 2011-12-23, 18:50:47 - Tamas Heffter
(In r:1365) Removed automated update from cmake file and moved to the UpdateBuildAndTest.bat script 

#### 2011-12-23, 18:58:50 - Tamas Heffter
(In r:1366) re #398: Added ctest config for PlusBuild

#### 2011-12-23, 19:37:58 - Andras Lasso
Thanks Tomi, it's great that you could make it work like this!

#### 2011-12-23, 19:38:47 - Andras Lasso
(In r:1367) re #398: Added missing quotation marks for SVN path

#### 2011-12-23, 21:33:24 - Tamas Heffter
Its not yet done :-) Just a quick fix... 

#### 2011-12-23, 21:41:59 - Tamas Heffter
(In r:1370) re #398: Fixed PlusBuild with BuildAndTest.bat, changed UpdateBuildAndTest.bat to call PlusBuild, PlusLib, PlusApp tests. Need to remove UpdateBuildAndTest.bat

#### 2011-12-23, 21:47:45 - Tamas Heffter
(In r:1371) Fixed #398: Renamed UpdateBuildAndTest.bat to PlusBuildAndTest.bat 

#### 2011-12-23, 21:47:45 - Tamas Heffter
status: changed from "Test" to "Fixed"


## #399 Consolidate serial communication implementations
Currently there are two different implementations for serial port communication: SerialLine and CSerialCommHelper. The two implementations should be thoroughly compared and should be merged or one should be discarded.

#### 2011-12-13, 15:36:19 - Andras Lasso
Vibro module has  been removed, there is no duplication anymore

#### 2011-12-13, 15:36:19 - Andras Lasso
status: changed from "New" to "Invalid"


## #400 Failed to read metafile after editing the header 
After I've added a few lines to the metafile header file, I couldn't read it again. You can reproduce the error by running the vtkMetaImageSequenceIOTest with the two attachements:
vtkMetaImageSequenceIOTest.exe --input-img-seq-file-name=c:\\devel\\PlusBuild-bin\\PlusLib\\data\  estImages\\USTC_FrameGrabber_ProbeRotationData_modified.mha  --output-img-seq-file-name=output.mha


[ERROR]   [000.108000]  Cannot uncompress the pixel data [in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkMetaImageSequenceIO.cxx(335)]
[ERROR]   [000.119000]  Couldn't read sequence metafile: c:\\devel\\PlusBuild-bin\\PlusLib\\data\  estImages\\USTC_FrameGrabber_ProbeRotationData.mha [in ..\\..\\..\\..\\PlusLib\\src\\ImageAcquisition\  esting\\vtk
MetaImageSequenceIOTest.cxx(67)]

#### 2011-12-05, 04:55:40 - Andras Lasso
In the attached USTC_FrameGrabber_ProbeRotationData_modified.mha file all the LF (0x0A) characters were replaced by CR/LF (0x0D/0x0A) characters. This corrupted the compressed image stream.

When a sequence metafile is manually edited make sure that the line ending is not modified (at least not in the image stream).

#### 2011-12-05, 04:55:40 - Andras Lasso
status: changed from "New" to "Invalid"


## #401 vtkMetaImageSequenceIOTest fails if the output metafile extension is mhd


#### 2012-01-20, 20:04:59 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-16, 22:54:54 - Andras Lasso
(In r:1623) Fixed #401: Fixed MHD file writing (if pixel data file had existed then the pixel data was appended to the end of the file instead of replacing the existing file)

#### 2012-04-16, 22:54:54 - Andras Lasso
status: changed from "New" to "Fixed"


## #402 Fix compilation errors in NDI and Polaris tracker classes
Please fix the compilation errors of vtkNDITracker and vtkPOLARISTracker classes. Should be fixed before Elvis starts working on testing/fixing of these classes (planned to be done within a few weeks).

#### 2011-12-13, 15:51:00 - Andras Lasso
This problem has to be fixed before the NA-MIC project week, therefore it should be in 1.4.0

#### 2011-12-13, 15:51:00 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-12-13, 17:14:20 - Tamas Heffter
It's already fixed, just I haven't commit. However I cannot try it, just compile it. 

#### 2011-12-13, 17:14:20 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-12-13, 17:17:10 - Andras Lasso
Thanks! Compilation is enough, Elvis can do the rest.

#### 2011-12-13, 21:22:17 - Tamas Heffter
(In r:1325) Added new Tracker and VideoSource factory classes to handle different devices in one place. 
Remove deprecated tracker and acquisition types 
Added GetSDKVersion funtion for each tracker and video sources and get the SDK version from libraries where possible, otherwise return with the actual Plus version  
Fixed #360: Created PlusVersion application to retrieve Plus version and build option information
Fixed #402: Fix compilation errors in NDI and Polaris tracker classes

#### 2011-12-13, 21:22:17 - Tamas Heffter
status: changed from "Accepted" to "Fixed"


## #403 Create EditSeqMetaFile for sequence metafile editing
EditSeqMetaFile --input-file-name=myfile.mha --output-file-name=myfilemodified.mha --operation=UPDATE_FRAME_FIELD_NAME --field-name=Probe --updated-field-name=ProbeToReference
EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FRAME_FIELD_VALUE --field-name=ImageStatus --updated-field-value=OK
EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FRAME_FIELD_VALUE --field-name=FrameIndex --updated-field-value={frame-scalar} --frame-scalar-decimal-digits=0
EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FRAME_FIELD_VALUE --field-name=FrameTimestamp --updated-field-value={frame-scalar} --frame-scalar-start=1.5 --frame-scalar-increment=0.03333 --frame-scalar-decimal-digits=5
EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FRAME_FIELD_VALUE --field-name=ProbeToTrackerTransform '--updated-field-value={frame-transform}' --frame-transform-start='1 0 0 0  0 1 0 0  0 0 1 0  0 0 0 0 1' --frame-transform-translate-increment='0 0 0.2' --frame-transform-rotate-deg-increment='15 0 0'
EditSeqMetaFile --input-file-name=myfile.mha --operation=DELETE_FRAME_FIELD --field-name=Probe

EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FIELD_NAME --field-name=Probe --updated-field-name=ProbeToReference
EditSeqMetaFile --input-file-name=myfile.mha --operation=UPDATE_FIELD_VALUE --field-name=Probe --updated-field-name=ProbeToReference
EditSeqMetaFile --input-file-name=myfile.mha --operation=DELETE_FIELD --field-name=DefaultTransformName
EditSeqMetaFile --input-file-name=myfile.mha --operation=DELETE_FIELD --field-name=CustomFrameFieldNames

EditSeqMetaFile --input-file-name=myfile.mha --operation=TRIM --first-frame-index=15 --last-frame-index=250
EditSeqMetaFile --input-file-names myfile1.mha myfile2.mha --output-file-name=myfilesmerged.mha --operation=MERGE 

#### 2011-12-07, 05:37:14 - Tamas Heffter
(In r:1287) re #403: Create EditSeqMetaFile for sequence metafile editing
- Added new executable
- Finished UPDATE_FRAME_FIELD_NAME, DELETE_FRAME_FIELD, UPDATE_FIELD_NAME, DELETE_FIELD, TRIM, MERGE operations 

#### 2011-12-07, 05:37:36 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2011-12-07, 23:15:07 - Tamas Heffter
(In r:1294) re #403: Create EditSeqMetaFile for sequence metafile editing
Finished UPDATE_FRAME_FIELD_VALUE and all operations, just need to add tests. 

#### 2011-12-13, 21:45:52 - Tamas Heffter
(In r:1326) re #403: Added old style sequence metafile conversion to EditSeqMetaFile. This option can transform the ToolToReference transforms back to ToolToTracker transform. 

#### 2011-12-17, 19:24:30 - Tamas Heffter
(In r:1349) Fixed #408: Move CustomTransforms element from PhantomDefinition to CoordinateDefinitions
re #361: Remove deprecated methods from vtkBrachyStepperPhantomRegistrationAlgo
- removed TemplateHolderToPhantom transform and read from XML file 
- removed ReadProbeCalibrationConfiguration function from vtkProbeCalibrationAlgo
re #403: Fixed update field name  


#### 2011-12-17, 19:33:17 - Tamas Heffter
(In r:1352) Re #403: removed obsolete SequenceMetaFileConverter, use EditSeqMetaFile instead. 

#### 2011-12-22, 16:23:12 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2011-12-23, 21:58:21 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #404 Display US probe position model relative to the image
Currently the probe model may be displayed at incorrect position if the ProbeModelToProbe transform transform in the config file is not up-to-date. Getting the ProbeModelToProbe transform would require custom landmark registration, which may be difficult to perform for an average user.

Proposed solution:
-display tool coordinate frames (using vtkToolAxesActor)
-if the system is calibrated then displaying the probe model as well, in a position relative to the image slice position (to make the transducer surface visible on the image aligned with the transducer surface on the probe model)


#### 2011-12-07, 23:51:35 - hussam.ashab
In my config file I cannot find ProbeModelToProbe. Where I have to import it.

#### 2011-12-08, 01:09:06 - Andras Lasso
What you have to change is the ModelToToolTransform in the <Tool Name='Probe' Type='Probe' ...> element. For now you can just experimentally adjust the values to get a nice alignment.

#### 2011-12-08, 03:36:40 - Tamas Ungi
We already have an implementation in fCal to solve this problem. Could we extract the CalibrationPhantomModel-To-Phantom registration as an independent function to be able to compute any other ToolModel-To-Tool registration? This could work with probe, needle, surgical drilling machine, etc. any tool.

There is nothing to invent, everything is ready. There are landmark points defined in the config file for the model (8 points in fCal), and they are highlighted as red dots on a grey model in fCal as you touch them with a stylus one-by-one.

Maybe it could be a separate tab in fCal, called ToolCalibration. Although it is a very low priority suggestion, because it works already the same way in Slicer, so everybody can just use Slicer for tool calibration.



#### 2011-12-08, 04:05:24 - Andras Lasso
Tamas, the plan is to display the model relative to the image (and not relative to the probe marker). This way there is no need for landmark registration, you just need to mark one point in the image (the transducer crystal array center). Also, there is no need to re-register if the marker on the probe is displaced.

The old method will still remain available.

#### 2011-12-08, 05:30:47 - Tamas Ungi
Hmm... interesting idea.
You have to be careful with this. A wrong image calibration will put the probe model in a wrong place, but creates the impression that everything is OK. With the old (currently used) method, the independent calibrations of the model and the image could reveal valuable information when one of them was wrong. Or reassured that both were good when they lined up nicely.

And having two solutions for the same thing at the same time feels suspicious. (You said we will have this new and the old one too.) We definitely need the old one for tools that are not ultrasound probes.

#### 2011-12-08, 14:47:49 - Tamas Heffter
Tamas is right, we won't notice if the calibration was wrong if we just use the crystal center to align probe model. I like the idea where we can register models to markers for any tools, it could be a new feature in a later release. 

#### 2011-12-08, 15:32:26 - Andras Lasso
With the new renderer widget you can display a model linked to any coordinate frame in the repository, so you can still link a probe model to the probe coordinate frame. This ticket is about computing a new coordinate frame, TransducerCenter: origin is the transducer center, axes orientations aligned to image slice, unit is mm. By the way, this is the same (or a similar) coordinate frame that Ultrasonix uses as their 'Probe' coordinate system.

I wouldn't add anything to fCAL that is already easily available in Slicer. A tutorial to describe how to do it in Slicer would be very useful though => added ticket #406.

We can decide to either fix this ticket or write a tutorial for Plus-1.4.0.

#### 2011-12-08, 15:32:44 - Tamas Ungi
My point is that it's already implemented. We call it Phantom registration, but who says it has to be a 'phantom'. It could be any other tool with the exact same method and interface. I haven't looked at the code, but it must be feasible with minimal changes. The current 'Phantom registration' tab could be called 'Tool registration', and you could select all tools from a drop-down menu. That drop-down menu and some logic behind it is all we need for this.


#### 2011-12-08, 15:56:42 - Csaba Pinter
Yes, I already thought about having a toolbox like that, but the bottomline of that discussion back then was that fCal is an application for a specific purpose, and this feature would be something out of scope a little. And once we have one feature like this, nothing can stop fCal running riot.

It wouldn't be too difficult implementing it by the way, that's right, so if we decide otherwise, it can be done.

About showing a wrong calibration result...can't we judge it quite well looking at the errors? It's not the same as looking at the image and the probe independently calibrated, but it is less work anyway (we have to register each probe: the L14-5 with the DRB each time the marker moves, the one with GPS, the EC, etc.)

#### 2011-12-09, 19:43:54 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-12-09, 20:17:34 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"

#### 2011-12-13, 21:17:06 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #405 Modify algorithms to call Update function as in VTK
... and as in vtkBrackyStepperPhantomRegistrationAlgo

#### 2012-01-20, 20:05:17 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:22 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:22 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"


## #406 Create a tutorial that describes how to perform landmark registration
To display a model of a tool or phantom in the correct position relative to a tracker sensor you need to determine the transform between the STL model coordinate system and the sensor coordinate system. This can be sone touching a few points on the real-life object and marking the same points on the model and perform a landmark registration. We need a step-by-step tutorial that describes how to do it.

#### 2011-12-08, 15:36:21 - Tamas Ungi
OK. Actually, I've already done this at a lab meeting. Do you remember, the objects were a needle and a coffee cup...
I will review it and upload soon.

#### 2011-12-22, 18:51:49 - Tamas Ungi
https://www.assembla.com/spaces/plus/wiki/ProbeModel-To-Probe_Registration_Tutorial

See if this will do please.

#### 2011-12-22, 18:51:49 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2011-12-22, 20:47:44 - Andras Lasso
I've made small changes in the text, I think it's OK. The video is quite useful.

The only thing I really miss is a simple image that shows the ToolModel, ToolMarker, Stylus, and StylusTip coordinate frames, the tool model and the stylus model, and the ToolModelToToolMarkerTransform. Tamas, could you add this picture?


#### 2011-12-23, 02:46:43 - Tamas Ungi
Thanks for fixing the text. Could you have a look at the image with the requested coordinate frames? Will this do?

#### 2011-12-23, 02:46:43 - Tamas Ungi
status: changed from "Fixed" to "Test"

#### 2011-12-23, 09:42:13 - Andras Lasso
It's almost perfect. Could you please:
* draw small rectangles or something to indicate where the physical markers attached on the probe and the stylus
* move the Model coordinate frame origin to a corner point of the geometric model (maybe to the top-left corner)

Could you please also upload the source file (pptx, svg, ...) to assembla and add a link from the jpg? (either add the link to the image itself or add a small text - something like (source) - that links to the file)


#### 2011-12-23, 16:00:06 - Tamas Ungi
(In r:1363) fixed #406: Image with coordinate systems added.

#### 2011-12-23, 16:00:06 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2011-12-23, 16:27:00 - Andras Lasso
Thanks Tamas, it's perfect!

#### 2011-12-23, 22:04:04 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"


## #407 Investigate exporting of classes using VTK_EXPORT
Some classes are exported, some are not (eg. in CalibrationAlgo project, vtkSpacingCalibAlgo is exported and vtkProbeCalibrationAlgo is not, but both work)

#### 2012-01-20, 20:05:38 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:22 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:22 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2014-06-05, 01:55:25 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-22, 01:55:07 - Andras Lasso
fixed #407: Added proper export directives for DLLs

Previously __declspec(dllexport) was set for all exported classes. If __declspec(dllimport) is set when the header is used in external libraries then more efficient code is generated (less indirections).
Now we properly use dllexport when we build a DLL and use dllimport when the DLL is used.
Commit: r:3703|plus:3703

#### 2014-09-22, 01:55:07 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-22, 01:55:07 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-09-24, 14:45:13 - Andras Lasso
re #407: Fixed build warnings
Commit: r:3719|plus:3719

#### 2014-09-24, 18:08:58 - Andras Lasso
re #407: Moved PatternLocAlgo into CalibrationAlgo

PatternLocAlgo was only used in CalibrationAlgo so it's simpler if it is in that library. Putting PatternLocAlgo in a separate DLL caused issues on linux (or maybe the the two different 'Line' classes caused the problem).
Commit: r:3722|plus:3722

#### 2014-09-24, 18:12:48 - Andras Lasso
re #407: Reverted acdientally committed changes
Commit: r:3723|plus:3723

#### 2014-09-24, 18:13:14 - Andras Lasso
re #407: Moved PatternLocAlgo into CalibrationAlgo
Commit: r:3724|plus:3724

#### 2014-09-24, 18:30:43 - Andras Lasso
re #407: Fixed build error (when brachy tracking is disabled)
Commit: r:3725|plus:3725

#### 2014-09-27, 19:58:49 - Andras Lasso
re #407: Fixed a few remaining DLL export directives
Commit: r:3741|plus:3741

#### 2014-09-27, 20:14:22 - Andras Lasso
re #407: Fixed build error
Commit: r:3742|plus:3742


## #408 Move CustomTransforms element from PhantomDefinition to CoordinateDefinitions
It contains transforms for iCal like 'TemplateHolderToPhantomTransform'

#### 2011-12-17, 19:24:30 - Tamas Heffter
(In r:1349) Fixed #408: Move CustomTransforms element from PhantomDefinition to CoordinateDefinitions
re #361: Remove deprecated methods from vtkBrachyStepperPhantomRegistrationAlgo
- removed TemplateHolderToPhantom transform and read from XML file 
- removed ReadProbeCalibrationConfiguration function from vtkProbeCalibrationAlgo
re #403: Fixed update field name  


#### 2011-12-17, 19:24:30 - Tamas Heffter
status: changed from "New" to "Fixed"


## #409 Create new vtkDisplayableObject type for visualization of axes
Probably Generalization of these classes is needed:
vtkDisplayableObject
  + vtkDisplayableModel
  + vtkDisplayableImage
  + vtkDisplayableAxes

#### 2011-12-12, 00:24:09 - Csaba Pinter
(In r:1315) Test #409: vtkDisplayableObject is now the abstract base class and factory for vtkDisplayableModel, vtkDisplayableImage and vtkDisplayableAxes specialized displayable objects, whose type can be set in the device set configuration file's Rendering/DisplayableObject/Type attribute

#### 2011-12-12, 00:24:09 - Csaba Pinter
status: changed from "New" to "Test"

#### 2011-12-15, 16:56:41 - Csaba Pinter
Updating tickets (#387, #312, #345, #382, #386, #409)

No errors were found in course of testing

#### 2011-12-15, 16:56:41 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #410 Fix OpenIGTLinkBroadcaster and test
Part of the code was commented since work began on vtkTransformRepository (that affected Trackers, DataCollectors and most applications and tests).

#### 2011-12-10, 23:20:54 - Csaba Pinter
(In r:1309) Re #410: vtkOpenIGTLinkBroadcaster and test fixed; Device set configuration files changed so DataCollector has a new element named OpenIGTLink, and the SendTo links are stored there instead of tracker tools and image acquisition

#### 2011-12-10, 23:21:29 - Csaba Pinter
(In r:1310) Re #410: OpenIGTLinkBroadcasterWidget fixed; GetFrameRate function added to vtkDataCollector base

#### 2011-12-10, 23:38:39 - Csaba Pinter
(In r:1311) Re #410: OpenIGTLinkBroadcaster brought to the Plus coding convention (PlusStatus and log messages are used)

#### 2011-12-10, 23:40:07 - Csaba Pinter
Tamas, please check my changes and test the broadcaster on live data.

#### 2011-12-10, 23:43:56 - Csaba Pinter
(In r:1312) Re #410: OpenIGTLinkBroadcaster brought to the Plus coding convention (PlusStatus and log messages are used)

#### 2011-12-14, 14:56:00 - Tamas Ungi
I've tested the OpenIGTLinkBroadcaster through the broadcaster application. I planned a few needle insertions on the broadcasted ultrasound image, and inserted the needle using the plan. It went where I wanted it to go.

#### 2011-12-14, 14:56:00 - Tamas Ungi
status: changed from "New" to "Fixed"


## #411 OpenIGTLink broadcasting checkbox in fCal


#### 2012-01-20, 20:05:46 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-01-20, 20:05:51 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:39 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-29, 10:03:04 - Csaba Pinter
As we have been discussing it url:https://www.assembla.com/spaces/plus/messages/1789603|here, I'll implement this in fCal, so the users can decide whether they need the lightweight standalone application for broadcasting, or this (if they also want to do something else than broadcasting).

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:20 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-27, 22:57:58 - Andras Lasso
In Plus we already have a command-line OpenIGTLink server, an OpenIGTLink client with GUI, the broadcaster, and we plan to have a server with GUI.

This is clearly too much so instead of adding it to fCal as well I think we should completely remove OpenIGTLink support from fCal.

#### 2012-06-28, 21:26:35 - Andras Lasso
After discussion with Csaba the conclusion is:
* Remove OpenIGTLink broadcasting from the Data collector
* Remove the SendTo... elements from the config files

#### 2012-07-04, 21:10:00 - Andras Lasso
(In r:1870|plus:1870) re #411: Removed Plus OpenIGTLink clients. From now on only server mode is supported (it can do everything that a client could do and more).

#### 2012-07-04, 21:27:30 - Andras Lasso
(In r:1871|plus:1871) re #411: Removed OpenIGTLink client broadcaster from PlusLib. From now on only server mode is supported (it can do everything that a client could do and more).

#### 2012-07-04, 21:27:53 - Andras Lasso
(In r:1872|plus:1872) re #411: Removed Plus OpenIGTLink client options from PlusBuild

#### 2012-07-04, 21:28:11 - Andras Lasso
assigned_to_id: changed from "pinter" to "lassoan"

#### 2012-07-04, 21:28:11 - Andras Lasso
status: changed from "New" to "Fixed"


## #412 Image rendering in vtkObjectVisualizer - optionally real-time or synchronized
Now it is real-time, but sometimes synchronized would be needed

#### 2012-01-20, 20:06:04 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-05-04, 13:28:56 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:56 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-28, 21:24:37 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:35 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-12-03, 16:41:38 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-01-03, 15:26:59 - Andras Lasso
The object visualizer is used only for calibration applications, not for clinical applications. Accurate real-time visualization is not essential for calibration, so no need to add this functionality.

#### 2014-01-03, 15:26:59 - Andras Lasso
status: changed from "New" to "Invalid"


## #413 problem with timestamps when using faketracker on Sonix RP
I am using TrackedUltrasoundCapturing together with the vtkSonixPortaVideoSource to collect data from 3D probe. I am running everything on a RP machine without any tracker attached to it. I have faketracker as my tracking device. Here is my xml configuration file:

<PlusConfiguration version='1.4'>
  <!-- DATA COLLECTION -->
  <DataCollection version='2.0' StartupDelaySec='1.0'>
    <DeviceSet
        Name='ABtin -------  TEST SonixRP Porta with Fake tracker' 
        Description='Test PortaSonixVideo' 
        />
    <Tracker Type='FakeTracker' BufferSize='200' Frequency='30' LocalTimeOffset='0.0' DefaultToolName='Stylus' Mode='PivotCalibration' ReferenceToolName='Reference' AveragedItemsForFiltering='20' >
      <Tool Name='Reference' PortName='0'></Tool> 
      <Tool Name='Stylus' PortName='1' />
    <Tool Name='Probe' PortName='2' />
    </Tracker>
    <ImageAcquisition Type='SonixPortaVideo' 
        AveragedItemsForFiltering='20' 
        BufferSize='1000' 
        FrameSize='640 480' 
        UsImageOrientation='MF'
        ImagingMode='BMode'
                AcquisitionDataType='BPost' 
        Depth='60' 
        Sector='-1' 
        Gain='-1' 
        DynRange='-1' 
        Zoom='-1' 
        Frequency='-1' 
        FrameRate='-1' 
        Timeout='-1' 
        CompressionStatus='0' 
        FramePerVolume='40'
        StepPerFrame='8'
        PortaLUTPath='C:/luts'
        PortaSettingPath='D:/devel/pltools/Ultrasonix/sdk-5.6.4/porta/dat/'
        PortaLicensePath='D:/Ultrasonix Settings/licenses.txt'
        PortaFirmwarePath='D:/devel/pltools/Ultrasonix/sdk-5.6.4/porta/fw/'
        />
    <Synchronization Type='ChangeDetection' 
        SynchronizationTimeLength='30' 
        MinNumOfSyncSteps='5' 
        ThresholdMultiplier='5'

        NumberOfAveragedTransforms='20' 
        MinTransformThreshold='2.0' 
        MaxTransformDifference='2.0' 

        NumberOfAveragedFrames='6' 
        MinFrameThreshold='200.0' 
        MaxFrameDifference='10.0' 
        />
  </DataCollection>
</PlusConfiguration>

Basically when vtkDataCollectorHardwareDevice is asked to give a timestamp of the last saved image, it goes over all tools. There is no problem with timestamp of the videosource. However, since the trackingEnabled is true, it goes over tools defined in the tracker and then cannot find the latest timestamp. I realized the trakcer is enabled in the readConfiguration regardless of the type being faketracker. Here is two main error I get. I also attached the log file.

121511_134538.984 [WARNING] [029.258000]  Unable to get timestamp from default tool tracker buffer with UID: 18446744073709551615 [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollectorHardwareDevice.cxx(731)]
121511_134539.0   [ERROR]   [029.263000]  Failed to get most recent timestamp from the buffer! [in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollectorHardwareDevice.cxx(1163)]

Additionally, I tried everything with SonixVideoSource and an available xml file which uses fake tracker and got the same error.





#### 2011-12-15, 22:50:17 - Andras Lasso
Csaba, could you please have a look at this issue?

#### 2011-12-15, 22:50:17 - Andras Lasso
assigned_to_id: changed from "abtinr" to "pinter"

#### 2011-12-15, 23:35:09 - Csaba Pinter
It is almost certain that the cause of this error is that PivotCalibration mode of FakeTracker only supports two tools, a Reference and a stylus, and when it tries to update the third one, it does not find information about it.
The tracking part should look like this:


~~~~
<Tracker Type='FakeTracker' BufferSize='1000' Frequency='50' LocalTimeOffset='0.0' Mode='PivotCalibration' AveragedItemsForFiltering='20' >
    <Tool Name='Reference' PortName='0' />
    <Tool Name='Stylus' PortName='1' Model='Example' />
</Tracker>

~~~~


By the way, TrackedUltrasoundCapturing is not supported any more, I even removed it from the repository today.
From now on, fCal is supposed to be used for capturing. Using it is very similar: you start fCal, connect to a device set in the toolbox that is selected by default, go to the second toolbox (Capturing), start, stop, save.

I hope I could help!
 


#### 2011-12-16, 01:21:41 - Abtin Rasoulian
Thanks Csaba,

It worked. Now I can get the images.



#### 2011-12-16, 01:21:41 - Abtin Rasoulian
status: changed from "New" to "Fixed"

#### 2011-12-16, 13:28:06 - Csaba Pinter
Great!

By the way, if you don't want to acquire any tracking data then you can simply set tracker mode to 'None'. Like <Tracker Type='None' />

#### 2011-12-23, 22:04:10 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.0"


## #414 Warn user if image to probe calibration error is too high
Just like in iCal, fCal should notify the user about too big errors.
Display a warning if the error is between 1.0 and 2.0 mm and an error if bigger than 2.0 mm (it is basically useless then)

#### 2012-01-20, 20:06:10 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-11, 16:47:47 - Csaba Pinter
(In r:1608) Fixed #414: Messages are shown in the toolbox after calibration. Orange warning message if calibration error is higher than 1 mm, red error message if higher than 2 mm, no message otherwise

#### 2012-04-11, 16:47:47 - Csaba Pinter
status: changed from "New" to "Fixed"


## #415 Buffersize does not change when sector size is changed
The *vtkDataCollectorHardwareDevice* works fine on its own, but when the sector size is changed, then the received frame size and the buffer size do not match.

The following code snippet produces the error, where the *dataCollector* is a pointer of *vtkDataCollectorHardwareDevice* type.


~~~~

// Change sector size to 50%
vtkSonixVideoSource* sonixDataCollector= static_cast<vtkSonixVideoSource*> (dataCollector->GetVideoSource() );
sonixDataCollector->SetSector(50);

dataCollector->Start();

~~~~


121911_172507.717 [ERROR]   [016.838000]  Received frame size (249604 bytes) doesn't match the buffer size (499204 bytes)! [in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\SonixVideo\\vtkSonixVideoSource.cxx(292)]

#### 2011-12-20, 03:08:42 - Siavash Khallaghi
description: changed from "When the *vtkDataCollectorH..." to "The *vtkDataCollectorHardwa..."

#### 2011-12-20, 03:10:27 - Siavash Khallaghi
Maybe I am using vtkDataCollectorHardwareDevice in a way that I am not supposed to. I am guessing that maybe I should use dataCollector->GetVideoSource()->StartRecording() and StopRecording() instead of Start() and Stop().

#### 2011-12-20, 12:08:39 - Andras Lasso
Changing frame size during data collection is currently not supported in Plus. We were thinking about implementing it, but we didn't have any specific application in mind and also it was unclear how to process, use, and store data with varying frame size in general. Also, for the Ultrasonix scanners I think the frame counting was reset to 0 whenever we changed the frame size, so the timestamp filtering was also impacted.

Do you have a couple of different image streams (e.g., a full-frame low-FPS stream and one or more reduced-sector-size high-FPS stream)? How would you like to process and store these different streams? Are the number and properties (frame size, custom transform) of these streams are constant during a recording session (don't change between DataCollector->Start and ->Stop)?

I see these design options to acquire image data with different frame sizes:
* If the received pixel data is smaller than the buffer size then copy it inside the buffer => quite simple to implement, but slight performance and memory waste
* Stop and start data collection after each frame size change => no PlusLib code change is needed, but the overhead of this may not be acceptable, depending on how frequently you need to change the frame size, 
* Implementing support for multiple constant streams. It could be useful for interleaved acquisition of high-FPS/low-FPS imaging data, biplane or multi-plane probes, and motorized probes. =>  would be a nice and generic solution, but it would add some complexity to PlusLib and implementation workload is probably several weeks


#### 2011-12-22, 22:07:15 - Csaba Pinter
milestone_id: changed from "Release Plus-1.4.0" to null

#### 2012-01-06, 02:09:16 - Siavash Khallaghi
Hi Andras,

Thank you for your comments. Let me explain my situation here. What we are trying to do is to capture all of the data throughout a biopsy procedure. This means that we have three different image streams, one high FPS RF image with 50% sector size, one low FPS RF image with 100% sector size and bmode images whenever we are not acquiring RF.

Right now we have buffer size issues whenever we switch from bmode to RF and also whenever we change the sector size of the RF image.

Resorting to connect and disconnect is the last thing that I want to do, since it will introduce additional delays to the system. What I would like to do is to add a custom function, similar to vtkSonixVideoSource::InternalConnect() which changes the frame size and pixel type. Basically, whenever the sector size is changed the frame size and pixel type are updated. Before I start developing, I would like to ask you if you have any suggestions.

#### 2012-01-06, 04:54:53 - Andras Lasso
I would suggest then to have a separate video stream object for each stream in vtkPlusVideoSource (similarly to the tracker, which contains a separate stream for each tracker tool: std::map<std::string, vtkTrackerTool*>).
The video stream object would need to contain a vtkVideoBuffer* and some other members, such as frame rate, frame number, etc.
vtkSonixVideoSource::AddFrameToBuffer would determine which stream the new frame belongs to and would add it to that stream.
Each stream would be saved into files separately (as the frame size and pixel type within a single file is constant).
The streams (stream name, acquisition type, sector size, etc.) should be described in the config xml.

#### 2012-01-06, 23:40:01 - Siavash Khallaghi
So basically a new class (let's call it vtkSonixStreams) that would inherit from vtkPlusVideoSource and will have three different streams, i.e. something like the following?


~~~~

class vtkSonixStreams: public vtkPlusVideoSource
{
public:
 vtkVideoBuffer* buffer1;
 vtkVideoBuffer* buffer2;
 vtkVideoBuffer* buffer3;

 //Other relevant information for each stream, e.g. frame rate, pixel size,...

protected:
 PlusStatus AddNewFrameToSpecificBuffer( int  );
}

~~~~


and the implementation of AddNewFrameToSpecificBuffer would be the following?


~~~~

PlusStatus vtkSonixStreams::AddNewFrameToSpecificBuffer(int bufferNumber ) //bufferNumber goes from 1 to 3
{
 switch (bufferNumber)
 {
  case 1:
  //Set frame size, buffer and pixel type for the first buffer (bmode)
  //Call AddFrameToBuffer
  return PLUS_SUCCESS;  

  case 2:
  //Set frame size, buffer and pixel type for the second buffer (50% RF sector size)
  //Call AddFrameToBuffer
  return PLUS_SUCCESS;
  
  case 3:
  //Set frame size, buffer and pixel type for the third buffer (100% RF sector size)
  //Call AddFrameToBuffer
  return PLUS_SUCCESS;

  case else:
  LOG_ERROR( 'Could not write new frame to specific buffer!' );
  return PLUS_FAIL;
 }
}

~~~~





#### 2012-01-06, 23:50:38 - Siavash Khallaghi
After five minutes of looking at what I wrote, I really feel that this is not what you mean. Forgive me but I am very confused.

#### 2012-01-10, 06:20:15 - Andras Lasso
vtkPlusVideoSource could be extended to handle multiple streams like this:

struct StreamInfo
{
  float FrameRate;
  int FrameCount;
  unsigned long FrameNumber; 
  double FrameTimeStamp;
  vtkVideoBuffer *Buffer;
  VideoBufferItem *CurrentVideoBufferItem; 
  US_IMAGE_ORIENTATION UsImageOrientation; 
}

class VTK_EXPORT vtkPlusVideoSource : public vtkImageAlgorithm
{
public:
  virtual PlusStatus SetFrameSize(int x, int y, int streamIndex=0);
  virtual int* GetFrameSize(int streamIndex=0);
  virtual PlusStatus SetPixelType(PlusCommon::ITKScalarPixelType pixelType, int streamIndex=0);
...
protected:
  std::vector<StreamInfo> VideoStreams;
...
}

---

Then the video source the implementation would be something like this:

PlusStatus vtkSonixVideoSource::AddFrameToBuffer(void* dataPtr, int type, int sz, bool cine, int frmnum) 
{
  int streamIndex=GetStreamIndex(type, sz, cine, frmnum);
  if (streamIndex<0 || streamIndex>...)
  {
    error...
  }
  return AddFrameToBuffer(dataPtr, type, sz, cine, frmnum, streamIndex) ;
}

PlusStatus vtkSonixVideoSource::AddFrameToBuffer(void* dataPtr, int type, int sz, bool cine, int frmnum, int streamIndex) 
{
  add the frame to the streamIndex-th stream
}


#### 2012-01-10, 06:31:53 - Siavash Khallaghi
Thank you Andras, you are the greatest!

#### 2012-01-20, 20:06:56 - Csaba Pinter
assigned_to_id: changed from null to "siavashk"

#### 2012-01-20, 20:07:01 - Csaba Pinter
milestone_id: changed from null to "Release - Next"

#### 2012-01-20, 20:15:22 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:22 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2013-05-15, 19:58:30 - Adam Rankin
assigned_to_id: changed from "siavashk" to null


## #416 Add support for motorized Ultrasonix probe
Need to support volumetric acquisitions with the motorized Ultrasonix probe. The probe has an internal motor that sweeps the linear transducer to reconstruct a volume. The Porta SDK has to be used to get the motor position for each acquired image frame.

#### 2011-12-28, 07:23:35 - Andras Lasso
(In r:1377) re #416: Minor changes to make the code conform to the coding guidelines

#### 2012-01-03, 20:55:27 - Abtin Rasoulian
(In r:1378) re #416: Changed the signature of GetFrameByTime to return the custom fields as well. Modified the GetTrackedFrameByTime to add the custom fields from the frae in the buffer to the trackedFrame. 

#### 2012-01-03, 20:57:36 - Abtin Rasoulian
(In r:1379) re #416: Added GetCustomFrameFieldMap() to return the entire field map.

#### 2012-01-03, 21:00:02 - Abtin Rasoulian
(In r:1380) re #416: modified the = operator to copy the CustomFrameFields as well.

#### 2012-01-03, 21:01:09 - Abtin Rasoulian
(In r:1381) re #416: Modified the AddFrameToBuffer to add the motor angle as a custom field.

#### 2012-01-19, 19:48:22 - Abtin Rasoulian
(In r:1397) re #416: Added usm, pci, highvoltage, and channels, as input in XML to be used in the porta init. Those inputs are different for RP and Touch machines. 

#### 2012-01-20, 20:15:22 - Csaba Pinter
Updating tickets (#133, #182, #263, #273, #277, #279, #306, #308, #334, #336, #340, #341, #343, #348, #351, #352, #384, #393, #405, #407, #415, #416)

Remove Milestone 'Release - Next'

#### 2012-01-20, 20:15:22 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-Future"

#### 2012-01-20, 23:34:41 - Abtin Rasoulian
(In r:1400) re #416: Corrected the bug in motor angle calculation.

#### 2013-05-15, 19:58:35 - Adam Rankin
assigned_to_id: changed from "abtinr" to null

#### 2014-06-05, 01:55:04 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 19:31:16 - Andras Lasso
re #416: Removed duplicate config file (with a typo in its name)
Commit: r:3739|plus:3739

#### 2014-09-27, 19:31:16 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-27, 19:34:03 - Andras Lasso
Basic support has been added (thanks to Mikael Brudfors): using Ultrasonix Porta interface.
See:
https://www.assembla.com/code/plus/subversion/nodes/3739/trunk/PlusLib/data/ConfigFiles/PlusDeviceSet_Server_SonixTouch_Motorized_Probe.xml
and
https://www.assembla.com/code/plus/subversion/nodes/3739/trunk/doc/tutorials/MotorizedTransducerTransformsComputation.pptx


#### 2014-09-27, 19:34:03 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2016-07-29, 16:41:33 - Andras Lasso
re #416: Added option for turning off motor by setting MotorRotationRangeDeg to 0
Commit: r:4781|plus:4781


## #417 The image plane after calibration is always tilted
There is a consistent error in the ImageToProbe calibration matrix.
It is around 5 degrees rotation along the Y axis of the Probe coordinate frame.

#### 2012-01-20, 20:04:22 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-04, 13:51:15 - Csaba Pinter
Possible solutions:
* Change the way the recognized point is selected from the area. Make it optional: maximum, weighed average, etc.
* Make the phantom bigger
** Put the third NWire on the upper layer, this way the phantom itself can be the same, but we gain 5 mm
** Build a new bigger phantom
* Improve image quality so that the images of the wires appear smaller (less chance of error in determining the actual wire position)
* Perform the calibration in the region where the target organ is located: the prostate we image during procedure is about 5 cm deep, so if we perform the calibration so that the wires are in that region, the resulting minimum calibration error applies to the target instead of an increased error due to different depths

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:49:34 - Andras Lasso
Adding more wire layers or move them farther from each other would probably also improve the accuracy (may need to increase the height of the fCal phantom for this).

It could be also interesting to try calibrating with multiple cross-wires (intersection position could be estimated by interpolation, assuming the transducer motion is smooth), although that probably limited to work with freehand motion (not with a stepper).

#### 2012-09-13, 16:21:06 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.6.1"

#### 2012-09-17, 14:02:45 - Adam Rankin
milestone_id: changed from "Release Plus-1.6.1" to "Release Plus-1.7.0"

#### 2012-09-17, 19:08:16 - Adam Rankin
After trying to reproduce the issue, I analyzed the recorded dataset for the fCal 2.0 phantom with 3 N-wires and observed a very accurate calibration with almost no tilt.

Suggested follow-up step is to see if we can produce Y independent calibrations with similar accuracy.

#### 2012-09-28, 17:49:11 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-22, 23:11:20 - Csaba Pinter
I tried it with the 1.7.1 release today (SonixTouch+GPS, L14-5, 4.5cm depth, fCal 2.0 3N) and I got 0.478 mm error and virtually no tilting (see attached image).
If others can get similar results, I think we can close this.

#### 2012-10-22, 23:11:35 - Csaba Pinter
Attachment added: "fCal_1.7.1_Tilt.PNG"

#### 2012-10-22, 23:13:13 - Csaba Pinter
image:dtg_dMhj0r4QaRacwqjQWU


#### 2012-10-22, 23:13:13 - Csaba Pinter
attachment_updated:filesize: changed from "214850" to "79319"

#### 2012-10-22, 23:20:06 - Andras Lasso
With fcal 2.0 I usually get calibration errors well below 1mm, typically about 0.5mm. So, I agree that we can close this.

#### 2012-10-22, 23:38:16 - Tamas Ungi
Just a question out of curiosity. Did you set soundvelocity=1490?


#### 2012-10-22, 23:39:55 - Csaba Pinter
I didn't set anything like that. Just used the config file in the installer and went through the calibration steps.

#### 2012-10-22, 23:40:40 - Andras Lasso
I haven't changed anything, just used the SonixTouch with the default config file.

#### 2012-10-22, 23:44:40 - Tamas Ungi
Aha, but the scaling is not uniform right? So the scaling in NF direction could compensate for the lower sound velocity in water (compared to the default 1540 set in Ultrasonix). This will not work so well for the curved probe, only if you set the sound velocity right. But it doesn't mean you cannot close the ticket. Just a note.

#### 2012-10-22, 23:48:13 - Andras Lasso
Interestingly, I got <0.5mm error with the curvilinear probe, calibrated in water, using the fcal 2.0 phantom, reproduced a couple of times. The error was computed only near the center of the image (where the middle fiducial wire was), so maybe on the sides (where there is more distortion) the error would have been higher.

#### 2012-10-22, 23:49:37 - Csaba Pinter
We should set the sound velocity to 1490 in the example config files then.

#### 2012-12-07, 21:29:30 - Adam Rankin
Can this ticket be closed?

#### 2012-12-07, 21:30:27 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2012-12-07, 21:49:39 - Csaba Pinter
I would close it, and considering this has been in test status for 2 months, I think you can.

#### 2012-12-07, 21:53:31 - Adam Rankin
status: changed from "Test" to "Fixed"


## #418 Generalize vtkProbeCalibrationAlgo to be able to handle more N-Wires
Now it is hardcoded to handle 2 layers of N-Wires

Possibilities:
* U-shape
* Triangle
* 3 parallel levels with different x-offset (no new phantom needed, just new wiring)

#### 2012-01-10, 19:12:41 - Csaba Pinter
description: changed from "Now it is hardcoded to hand..." to "Now it is hardcoded to hand..."

#### 2012-01-20, 20:04:30 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-01-24, 00:30:16 - Csaba Pinter
(In r:1406) Re #418: Added configuration file and wiring illustration for the new 3 NWires configuration; Small cleanup in vtkProbeCalibrationAlgo (removed CalibrationDone flag as it wasn't used anywhere)

#### 2012-01-24, 22:50:29 - Csaba Pinter
(In r:1411) Re #418: Bug fixed in pattern localization / labeling: it did not recognize properly when the line index permutations ran out of range

#### 2012-01-25, 14:56:26 - Csaba Pinter
(In r:1413) Re #418: Bug fixed in pattern localization; Need to investigate why the continuous build did not reveal this problem

#### 2012-01-25, 16:18:02 - Tamas Heffter
Nice job! Do you think it could cause the tilted calibration result? 

#### 2012-01-25, 16:21:11 - Csaba Pinter
I don't know yet. There are still some bugs in the calibration result computation code (regarding the 3rd layer), but as soon as I have results, I let you know!

#### 2012-01-25, 16:21:11 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-01-28, 03:12:04 - Csaba Pinter
(In r:1431) Re #418: Fixed pattern localization algorithm for 3 NWires

#### 2012-01-30, 17:18:57 - Csaba Pinter
(In r:1432) Re #418: vtkFreehandCalibrationTest can save result configuration file

#### 2012-02-03, 23:41:33 - Csaba Pinter
(In r:1436) Re #418, Re #351, Re #352: Completely new error computation and reporting implemented in vtkProbeCalibrationAlgo, that supports any number of NWires in the input; Tests and baselines modified accordingly; Configuration file for data collection from file with 3 NWires added

#### 2012-02-16, 22:53:08 - Csaba Pinter
(In r:1448) Re #418, Re #351 Re #352: Use signed X and Y 2D reprojection errors instead of absolute errors; Compute statistics per wire; Add wire names to reports

#### 2012-02-17, 20:40:44 - Csaba Pinter
(In r:1453) Re #418, Fixed #351 Fixed #352: Compute and report errors for calibration data too

#### 2012-02-17, 22:09:28 - Csaba Pinter
(In r:1455) Re #418: Function added to get 2D reprojection errors

#### 2012-02-17, 23:24:39 - Csaba Pinter
(In r:1456) Re #418: TransducerOrigin coordinate frame related code removed from vtkProbeCalibrationAlgo and moved into fCal

#### 2012-02-17, 23:24:58 - Csaba Pinter
(In r:1457) Test #418: TransducerOrigin coordinate frame related code removed from vtkProbeCalibrationAlgo and moved into fCal

#### 2012-02-17, 23:24:58 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-06, 14:12:53 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #419 Missing MSVC dlls from package
When I wanted to run PlusApp on a clean SonixTouch there were missing MSVC dlls: 
- MSVCP80.DLL
- MSVCR80.DLL

So it would be good to add these dlls to the package to avoid this problem. 


#### 2012-01-13, 15:52:50 - Tamas Heffter
image:cLLrE2pF4r4Bw-acwqjQXA

#### 2012-01-13, 15:52:50 - Tamas Heffter
Attachment added: "error_msg.jpg"

#### 2012-01-13, 17:28:34 - Tamas Heffter
status: changed from "New" to "Invalid"

#### 2012-01-13, 17:34:38 - Tamas Heffter
The problem was with the Micron tracker library

#### 2012-01-20, 20:15:53 - Csaba Pinter
Updating tickets (#137, #160, #176, #261, #322, #353, #362, #383, #419)



#### 2012-01-20, 20:15:53 - Csaba Pinter
milestone_id: changed from "Release - Next" to "Release Plus-1.4.2"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:34 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:34 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #420 Frame transforms are not applied correctly during VolumeReconstruction
VolumeReconstruction test (vtkVolumeReconstructorTest.exe) works correctly, however the VolumeReconstruction application (VolumeReconstructor.exe) does not apply the frame transforms correctly. The two executables are very similar, so remove the current application and use the current test app both as test and Plus application.

#### 2012-01-18, 15:20:59 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-01-18, 15:20:59 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.4.1"

#### 2012-01-18, 15:39:36 - Andras Lasso
(In r:1383) re #420: Added all options from VolumeReconstructor app to the VolumeReconstructor test

#### 2012-01-18, 16:37:50 - Andras Lasso
(In r:1384) re #420: Converted the vtkVolumeReconstructorTest1 test to an application (VolumeReconstructor), which is part of the installation package.

#### 2012-01-18, 16:39:09 - Andras Lasso
(In r:1385) re #420: Removed VolumeReconstructor application from PlusApp. It is now built as part of PlusLib. Added sample image and config data for volume reconstruction.

#### 2012-01-18, 19:04:26 - Andras Lasso
(In r:1389) re #420: Removed obsolete CalibrationTransformName attribute from VolumeReconstruction element. Enable optimization in sample volume reconstruction config file.

#### 2012-01-18, 20:15:59 - Andras Lasso
status: changed from "New" to "Fixed"


## #421 Create a sequence metafile importer for 3D Slicer
Slicer currently imports sequence metafile as a single 3D volume. It would be better to import that as a 2D+t sequence of frames. It could be implemented by a custom data IO module that detects if a sequence metafile is attempted to be loaded and it loads it as a time bundle of single-slice volumes. Prerequisite: need to have good support for time bundles in 3D Slicer (for images and transforms).

#### 2014-05-19, 15:29:10 - Andras Lasso
Implemented already in the Multidimensional data extension. In the Add data dialog 'Sequence metafile' format has to be selected.

#### 2014-05-19, 15:29:10 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-19, 15:29:10 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-05-19, 15:29:17 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #422 Request to add method to access protected 'Buffer' in vtkPlusVideoSource
We need to dynamically update and change the vtkPlusVideoBuffer but after InternalConnect() is called. This is a different issue than ticket #415.
We propose the following three solutions:

1. Make the vtkVideoBuffer *Buffer defined in line 281 vtkPlusVideoSource public.
2. Add a Set/Get macro to access this protected member.
3. Add a new method to vtkPlusVideoSource:


~~~~

PlusStatus UpdateInternalBuffer( vtkVideoBuffer *newBuffer )
{
this->Buffer = newBuffer;
return PlusSuccess;
}

~~~~


We are under a time constraint in our project. We just need consent to implement either of the three solutions. We would appreciate it if you don't propose an extension of vtkPlusVideoSource using the VTK_EXPORT macro.

#### 2012-01-21, 04:47:12 - Andras Lasso
Get/Set method is OK. Make sure you don't leak memory (delete old buffer 
when you set the new one) and pay attention to thread-safety.


#### 2012-01-21, 06:03:27 - Siavash Khallaghi
Great! Thank you Andras.

#### 2012-01-21, 06:03:56 - Siavash Khallaghi
assigned_to_id: changed from null to "siavashk"

#### 2012-01-21, 06:03:56 - Siavash Khallaghi
status: changed from "New" to "Accepted"

#### 2012-01-24, 01:24:25 - Siavash Khallaghi
status: changed from "Accepted" to "Fixed"

#### 2012-01-24, 13:13:47 - Andras Lasso
(In r:1410) re #422: Fixed SetBuffer method (it doesn't leak any more, NULL-pointer dereferencing is prevented, and setting of the same pointer again is handled properly)

#### 2012-01-25, 08:08:43 - Siavash Khallaghi
Hi Andras,

I am trying to fill the gaps in my knowledge and I was reading for the past couple of hours. I hope you don't mind me asking,  so please correct me if I am wrong:

1. The vtkPlusVideoSource's internal Buffer is a smart pointer. Smart pointers have a reference count that is equal to the number of pointers that point to the same object.
2. When the reference count reaches zero, the smart pointer (i.e. Buffer) is deleted.
3. Buffer->Unregister() decreases the reference count by one. (I am not quite sure about this)
4. After this->Buffer = NewBuffer, the number of pointers that point to the same object is increased, so we need to increase the reference count by one, so we do Buffer->Register(). (Again I am not sure about this one)


#### 2012-01-25, 14:22:52 - Andras Lasso
1. The vtkPlusVideoSource's internal Buffer is not a smart pointer, but a simple pointer to a reference counted object. To create a smart pointer you have to use the vtkSmartPointer class: vtkSmartPointer<vtkVideoBuffer> is a smart pointer.

2. When you delete a smart pointer it decreases the reference count of the object that it points to. When the reference count in the refcounted object reaches zero then the refcounted object is deleted from the memory.

3. Yes, Buffer->Unregister() does exactly the same as Buffer->Delete(): decreases the reference count by one.

4. We have to call Buffer->Register() after this->Buffer = NewBuffer, because we want to keep the buffer object alive, even if it is not used any more by any other objects. This pattern is used in VTK almost every time when you create an object and set it as an input of another object:
  x->New();
  y->SetX(x);
  x->Delete();
With the usage of smart pointers it is much nicer and safer (this is the recommended method):
  vtkSmartPointer<vtkX> x=vtkSmartPointer<vtkX>::New();
  y->SetX(x)).


#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:34 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:34 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #423 Add option to burn in image orientation into the pixels
For debugging purposes it would be useful to be able to draw the image orientation (two labelled arrows pointing to M and F directions) in the image pixels. This way it could be checked if the image orientation remains consistent during the processing, exporting, and importing the images.


## #424 Check the LSQR residual result during calibration
Currently we don't check the residual returned by the least-square solver. At least we should display a warning if the residual is above a certain tolerance (it means that the computed results are unreliable).

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:36:24 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #425 EditSeqMetaFile trimming function frame index problem
1. --last-frame-index parameter can be anything, it always trims until about the half of the image
2. If --first-frame-index parameter is not 0, it warning messages are logged ('Failed to remove tracked frame from list - invalid frame number: X')

#### 2012-01-30, 17:31:45 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-01-30, 17:31:49 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-01-30, 17:32:29 - Csaba Pinter
(In r:1433) Fixed #425: Fixed TRIM function in EditSeqMetaFile

#### 2012-01-30, 17:32:29 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:34 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:34 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #426 Support volume reconstruction of float data
caitlins reported getting an error 'scalar types of the input and output do not match' when trying to reconstruct float image

#### 2012-02-07, 14:46:06 - Andras Lasso
'I was able to cast my data to shorts, to solve the problem with using floats, though I still have to change the output constructor to VTK SHORT.' => see https://www.assembla.com/spaces/plus/messages/1519553

#### 2012-03-02, 03:29:38 - Thomas Vaughan
I've made a few changes to the Volume Reconstructor in order to fix #285 (I believe some having to deal with data types), so I wonder if this may possibly have been fixed as well? Is there a way we could test it?

#### 2012-03-02, 16:35:30 - Andras Lasso
You can create a float volume in 3D Slicer: Open a non-float volume. Use the 'Cast Scalar Volume' module to create a float or double volume. Save the volume.

#### 2012-03-02, 16:35:45 - Andras Lasso
assigned_to_id: changed from null to "thomasvaughan"

#### 2012-03-02, 16:37:48 - Andras Lasso
Slicer ignores the custom metadata fields that describe the pose for each frame. So, you have to copy the custom fields from the original (non-float) volume's header to the new (float/double) volume's header.

#### 2012-04-17, 03:54:31 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-04-20, 16:54:31 - Thomas Vaughan
(In r:1635) Fixed #426, Added support for reconstruction of various data types. Supported data types now include:
 - char
 - unsigned char
 - short
 - unsigned short
 - int
 - unsigned int
 - long
 - unsigned long
 - float
 - double


#### 2012-04-20, 16:54:31 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"

#### 2012-04-20, 16:54:39 - Thomas Vaughan
status: changed from "Fixed" to "Test"

#### 2012-04-20, 17:13:03 - Andras Lasso
This is great, thanks! Please also add a new test that checks correct execution with a new data type (e.g., float).

#### 2012-04-25, 17:35:42 - Thomas Vaughan
(In r:1654) Fixed #426, Re #447, Added a test for float type data reconstruction, removed hole filling from maximum distribution test (will add again if the cause for failure is in the hole filling)

#### 2012-04-25, 17:35:42 - Thomas Vaughan
status: changed from "Test" to "Fixed"

#### 2012-04-25, 17:44:08 - Thomas Vaughan
(In r:1655) Fixed #426 Adding the .mha for the test


## #427 Show reprojected wire points for the actual image after calibration
Add a checkbox that enables reprojection (segmentation is needed, so it will be much heavier computationally than normally)
Compute the Alpha and the wire position in Phantom frame for the middle wires, just like in the calibration algorithm, and show these positions in the 3D canvas

#### 2012-02-24, 18:52:31 - Andras Lasso
as now the wires are shown as a 3D model, this item is not mandatory anymore

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-27, 22:52:06 - Andras Lasso
Showing the wires in 3d is enough. The only problem is that the phantom model makes it difficult to see the wires. Would it be possible to allow the user to show/hide the phantom model?

#### 2012-06-27, 22:56:26 - Csaba Pinter
You mean in run-time? Like a toggle button for it?

#### 2012-06-27, 23:04:49 - Andras Lasso
Yes, run-time. It's not trivial, because adding one more button to the GUI just for this use case might be too much.

#### 2012-06-27, 23:30:58 - Csaba Pinter
I'm thinking about a drop-down menu for the 'show 3d objects' button where the user could toggle the objects that are defined in the Rendering configuration element. As that button is for showing objects, this could be an extension for it, and every user would find it immediately without specifically looking for it.

#### 2012-06-28, 14:37:25 - Adam Rankin
That would be very clean and add even more meaning to the '3d objects' button. The grouping of all actions related to 3d views will make it more consistent for the user.

#### 2012-07-25, 15:02:10 - Csaba Pinter
assigned_to_id: changed from "pinter" to "rankin"

#### 2012-07-30, 16:42:50 - Adam Rankin
(In r:1969|plus:1969) Fixed #427 Now able to hide and show the phantom displayable model. Refactored the show 3d objects button into a menu with 3d manipulation actions.

#### 2012-07-30, 16:42:50 - Adam Rankin
status: changed from "New" to "Fixed"


## #428 Show input image slice in Volume Reconstruction tab in fCal
Add a slider for choosing the input image slice to be displayed over the reconstructed volume in Volume Reconstruction tab


## #429 Simulated US (graphics card independent, working in ITK)
working version by NAMIC week, integration with PLUS during NAMIC week

#### 2012-02-17, 22:49:33 - Andras Lasso
We may use either ITK or VTK. The important thing is that it if GPU is used then the GPU framework of ITK or VTK shall be used (to avoid developing, testing, and maintaining redundant GPU related utility functions, building, packaging, etc.). There is a GPU framework in ITK4 already (http://www.itk.org/Wiki/ITK_Release_4/GPU_Acceleration). Maybe something is also available in VTK. If the GPU support in ITK/VTK is immature then we should not use GPU acceleration yet and just go with a CPU-only implementation.


#### 2012-04-12, 14:01:37 - Elvis Chen
see below for ITK/OpenCL status.

As many of us know, one major difficulty in GPGPU coding is the memory management, i.e. transfer the data cross the CPU/GPU boundary.  This requires a lot of helper-class (which are problem-independent) and really should be done at the base architecture level.

I am afraid that if I start migrating my simulate US CUDA code to ITK/OpenCL, a lot of what I will be doing will be obsolete when ITK 4.2 is out.  Perhaps we should hold this project until ITK4.2 is out? 



Jim Miller millerjv@gmail.com via itk.org 
Apr 9 (2 days ago)

to Rick, insight-users 
Rick, 

OpenCL is currently slated for the 4.2 release of ITK this June.

The underlying components have been submitted to our code review system.  We'll be clearing this backlog of patches in the coming months that were submitted while we were preparing the 4.1 release.

OpenCL support will include the underlying architecture to transparently transfer images from main memory to the GPU and a set of example filters of a variety archetypes (pixel filters, neighborhood filter, finite different filters, etc.).

Jim

#### 2012-04-12, 14:17:15 - Tamas Ungi
Fine by me.

#### 2013-01-25, 22:34:48 - Andras Lasso
(In r:2431|plus:2431) re #429: Updated vtkUsSimulatorVideoSource to work with the new multi-stream architecture

#### 2013-01-25, 23:33:43 - Gabor Fichtinger
This sounds very important! 
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com] 
Sent: January-25-13 5:35 PM

#### 2013-03-05, 18:41:39 - Andras Lasso
assigned_to_id: changed from "chene" to "Bartha"

#### 2013-03-05, 18:43:58 - Andras Lasso
(In r:2554|plus:2554) re #429: Made the inside and outside pixel colours configurable. Updated simulator algo test config file to be more realistic.

#### 2013-03-16, 18:26:40 - Andras Lasso
(In r:2599|plus:2599) re #429: Added a reference to US simulation (CAE's US simulator brochure)

#### 2013-03-16, 19:32:42 - Andras Lasso
(In r:2600|plus:2600) re #429: Added Perlin noise option to the US simulator (first quick testing only)

#### 2013-05-15, 20:00:08 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-11-07, 22:17:02 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:09 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:09 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #430 Enable fCal with pre-calibrated tools
If the stylus tooltip is very close to the sensor or an internal calibration makes the sensor appear very close to the tooltip then the current pivot calibration doesn't work, because it doesn't collect points if they are too close to each other.

Change the pivot calibration algo so that it checks not only the similarity of the point positions but also the orientation.

It would be also nice to be able to bypass the pivot calibration (with an identity or whatever matrix that is already specified in the config file). Maybe it's possible to do that already.


#### 2012-02-17, 22:32:43 - Csaba Pinter
If you don't do the pivot calibration then fCal uses the one it finds in the configuraiton file.
The orientation checking I'll add soon.

#### 2012-02-17, 23:28:30 - Csaba Pinter
Using pre-calibrated tools is already supported by fCal.
Ticket #431 is added for the orientation check

#### 2012-02-17, 23:28:30 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #431 Check also orientation of collected points in pivot calibration
Now the positions are checked and not added if it's too close. A similar check is needed for the orientation (in case the marker is close to the tip)

#### 2012-03-11, 00:00:54 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:54 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-04, 22:02:43 - Csaba Pinter
(In r:1595) Test #431: Orientation difference is checked beside position difference when acquiring points in course of stylus calibration

#### 2012-04-04, 22:02:43 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-04-06, 14:13:14 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #432 Visualize RF data in fCal
Although fCal already supports data acquisition of RF data, it cannot visualize it, but gives errors.
Need to detect RF image input and draw a chart like vtkSonixVideoSourceTest1 does.

#### 2012-06-28, 15:50:27 - Andras Lasso
The signal waveform display would be useful, but it should be displayed in addition to the B-mode image. The B-mode image display would be needed to make sure that the acquired RF data is correct (the waveform display cannot provide that info).


#### 2012-08-08, 23:31:50 - Andras Lasso
Since #279 is solved this is not needed anymore. From the B-mode image it's possible to roughly evaluate if the RF data is valid.

#### 2012-08-08, 23:31:50 - Andras Lasso
status_updated_at: changed from null to "2012-08-08 23:31:50"

#### 2012-08-08, 23:31:50 - Andras Lasso
status: changed from "New" to "Invalid"


## #433 SonixVideoSource should clip unused image margins
There are black image margins on the ultrasound images, not used for anything. They are not nice and take up space when we store images. If there is a way to get the useful image region through Ulterius, then the rest should be clipped. Image origin would be placed in the useful image corner.
If there is no reliable way to get the useful rectangle through Ulterius, the clipping rectangle should be given in the config file.

#### 2012-02-22, 17:57:05 - Tamas Heffter
Don't forget the fan shape for TRUS probes, too. (However, in compressed format those black pixels are almost zero size) 

#### 2012-06-01, 13:27:00 - Andras Lasso
Similarly to the Epiphan video source two parameters could be defined: ClipRectangleOrigin and ClipRectangleSize

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:04 - Andras Lasso
Updating tickets (#433, #479, #514)



#### 2012-06-02, 14:20:04 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-12-11, 21:36:29 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2014-06-05, 02:00:37 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-01, 19:52:46 - Andras Lasso
test #433: Added ClipRectangleOrigin and ClipRectangleSize attributes to vtkSonixVideoSource to allow clipping of unused image regions.

A fixed region can be defined instead of dynamically cropping the image to make the image size constant, even if imaging depth changes.
Commit: r:3762|plus:3762

#### 2014-10-01, 19:52:46 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-10-01, 19:52:46 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-01, 21:46:14 - Andras Lasso
re #433: Reverted Ultrasonix image clipping.

Implementation is more complicated than other image sources due to multi-channel implementation. Clipping should be implemented in the Video source base class. That would take care of Ultrasonix and it would allow removing non-hardware clipping from other video sources (e.g., ICCapturing).
Commit: r:3763|plus:3763

#### 2014-10-01, 21:46:46 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"

#### 2014-10-01, 21:46:46 - Andras Lasso
status: changed from "Test" to "New"

#### 2015-03-14, 17:58:03 - Andras Lasso
@rankin: Is this available already?

#### 2015-03-16, 15:42:41 - Adam Rankin
The clipping for 2D is stable. Basic testing should be sufficient to confirm.

#### 2015-04-13, 16:33:27 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2015-04-13, 16:33:27 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2015-04-13, 16:33:27 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-04-23, 20:51:45 - Andras Lasso
Tested and it works well with Ultrasonix 6.1

#### 2015-04-23, 20:51:45 - Andras Lasso
status: changed from "Test" to "Fixed"


## #434 Plus build fails if the build directory path contain space
Build of PlusApp fails if the build directory path contains space (e.g., c:/users/test user/devel).

#### 2012-02-22, 18:46:54 - Andras Lasso
(In r:1470) re #434: Added quotation marks to path values to allow building of Plus in a directory that contains spaces in its name

#### 2012-02-22, 20:28:17 - Andras Lasso
(In r:1472) re #434: Enabled CMP0012 policy in UsePlusLib.cmake to remove CMake warning

#### 2012-02-23, 00:07:37 - Andras Lasso
(In r:1479) re #434: Made PlusApp GUI tests work with build directory with space in its name

#### 2012-02-23, 00:17:13 - Andras Lasso
Tested the fixes on a directory with space in its name ('c:\\Users\\lasso\\devel space\\PlusExperimental-bin'): the build was successful and all the tests passed.

#### 2012-02-23, 00:17:13 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-02-23, 00:21:37 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-02-23, 02:28:18 - Andras Lasso
(In r:1480) re #434: Fixed PlusApp build error (cl : Command line error D8038 : invalid argument)

#### 2012-02-23, 02:53:43 - Andras Lasso
(In r:1481) re #434: Fixed PlsLib include and library dir setting so that it works both for space-containing and other directories

#### 2012-02-23, 03:20:06 - Andras Lasso
(In r:1482) re #434: Fixed MicronTracker external project dependency

#### 2012-03-11, 00:02:03 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)

Fixes delivered in Plus-1.5.1 release

#### 2012-03-11, 00:02:34 - Andras Lasso
Updating tickets (#137, #160, #176, #261, #322, #351, #352, #353, #354, #362, #383, #419, #422, #425, #434)



#### 2012-03-11, 00:02:34 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"


## #435 Detect probe orientation automatically when an asymmetric wire pattern is used
fCal_1.0_Wiring_1.0 is symmetric, therefore there is no way to tell if the probe is rotated 180deg.  fCal_1.2_Wiring_1.1 has an asymmetric wire pattern, so it should be possible to determine the wire labels automatically, regardless of the orientation of the probe. However, it should be tested that the labeling really works correctly for any probe orientation. Once the display of the wire names in the segmentation dialog box is completed (#308) then this functionality can be tested easily. If the labeling is correct only for a certain probe orientation then the labeling algorithm shall be improved so that it works for all probe orientations.

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:37:12 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #436 Improve Image Quality of Hole-Filling
Hole filling works, but it does not produce a high quality reconstruction. Known issues include:
* Holes that are big are not filled
* There is often blockiness around hole edges
* Interpolation could take into account distance from the origin voxel, slice orientation


#### 2012-03-02, 16:05:10 - Thomas Vaughan
I've implemented a rough initial version that uses Gaussian weights, and I've tested it on the 3nwire1 dataset. I've included a screenshot to allow for some comparisons, and will commit once I've run a few more tests.

Clarifying Edit: In the attached screenshot, the 'Pasting Slices Only' uses only every 5 slices of the original dataset. The two panes on the right show hole filling using 3x3x3 neighborhood. The Ground truth is the result of pasting all available slices without any skipping. All images are of the 3nwire1 dataset.

#### 2012-03-02, 16:06:31 - Thomas Vaughan
image:cS6FaOzier4ABaacwqjQYw
This screenshot for #436 shows some differences between different hole filling weight methods

#### 2012-03-02, 16:06:31 - Thomas Vaughan
Attachment added: "ScreenshotShowingDifferences.PNG"

#### 2012-03-02, 17:28:57 - Andras Lasso
It looks very promising. Need to test it on spine & prostate phantoms as well.

#### 2012-03-03, 16:10:28 - Thomas Vaughan
(In r:1516) re #436 Implemented Gaussian weights. This is in addition to the accumulation buffer weight.

#### 2012-03-04, 17:11:11 - Thomas Vaughan
Should we have some kind of quality metric to compare reconstruction results (from a reduced dataset) against a ground truth (densely pasted slices from a full dataset)?

#### 2012-03-04, 21:14:52 - Thomas Vaughan
(In r:1519) re #436 Added some papers that describe hole filling methods that sound similar to our implementation. There are some interesting ideas discussed in the second paper.

#### 2012-03-05, 04:04:04 - Andras Lasso
> Should we have some kind of quality metric to compare reconstruction results (from a reduced dataset) against a ground truth (densely pasted slices from a full dataset)? 

This would be important for any serious testing/comparison of different methods.

I would use simulated sequences (that are acquired by extracting image slices from synthetic volumes). Contact Laura Bartha about the simulator, as she is going to develop one. You may use what she has (probably not much yet) and/or help her developing something that would be useful for this testing.

#### 2012-03-23, 22:22:55 - Thomas Vaughan
(In r:1568) re #436 Implemented variable kernel size. Kernels now have to be specified whenever hole filling is turned on.

#### 2012-03-23, 22:27:17 - Andras Lasso
Please add a test that does volume reconstruction with hole filling. It will help to make sure that hole filling remain functional and will also serve as an example.

#### 2012-03-23, 22:27:17 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-03-23, 22:47:42 - Thomas Vaughan
What about the hole filling test we already have in place? The one that apparently just failed (which I will upload a fix for hopefully very soon)?

#### 2012-03-23, 22:50:24 - Andras Lasso
If there is at least one working test/example (with a kernel definition in the config file) then it’s enough.

#### 2012-03-23, 22:53:00 - Thomas Vaughan
I think the lack of a kernel definition is probably why the test failed. I'm testing it now, and I'll upload an updated config file once I confirm it fixes the problem.

#### 2012-03-23, 23:06:36 - Andras Lasso
Also make sure that in case of a missing or invalid kernel definition the algorithm logs an error message explaining what is the problem then fails gracefully. Document the meaning of the kernel parameters in the algorithm header.

#### 2012-03-23, 23:26:35 - Thomas Vaughan
(In r:1571) re #436 Added a config file that should run hole filling properly.

#### 2012-03-24, 15:16:39 - Thomas Vaughan
(In r:1573) re #436 Updating the test output volume.

#### 2012-04-10, 21:01:21 - Andras Lasso
Stick filter implementation idea: try 4-12 orientations, use the one that has the highest accumulation

#### 2012-04-17, 15:54:33 - Thomas Vaughan
(In r:1625) Re #285, #436, CISC 499 Report for volume reconstruction and beamwidth characterization.

#### 2012-04-25, 18:46:27 - Thomas Vaughan
(In r:1656) Re #436, Slightly tidied up Hole Filling code.

#### 2012-04-25, 19:56:31 - Thomas Vaughan
(In r:1657) Re #436, Implemented the sticks algorithm as discussed on the wiki page: https://www.assembla.com/spaces/plus/wiki/Volume_reconstruction_algorithm (meeting on April 20)
The code is implemented, but it needs to be enabled, tested, and debugged.


#### 2012-04-25, 20:02:06 - Thomas Vaughan
(In r:1658) Re #436, Fixed a potential build error for Sticks algorithm

#### 2012-04-25, 21:48:29 - Thomas Vaughan
(In r:1659) Test #436, Fixed Sticks Implementation, now ready for larger scale testing

#### 2012-04-25, 21:48:29 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2012-04-26, 18:18:53 - Thomas Vaughan
(In r:1660) Re #436 Updating some of the volumes for testing

#### 2012-05-11, 16:53:29 - Thomas Vaughan
(In r:1690) Re #436: Added additional functionality to the volume reconstructor

New functionality:
- There are now two kinds of Gaussian kernels, GAUSSIAN and GAUSSIAN_ACCUMULATION. The former does not use the accumulation buffer as an additional weight, whereas the latter does.
- Sticks kernels will now take a 'NumberOfSticksToUse' parameter in the config file which defines how many sticks should be used in calculating the final value of a voxel. The value will be a weighted average over the results of N sticks (weight = distance).

Bug fixes:
- Gaussian kernels would fill holes with random values when it failed

#### 2012-06-28, 21:19:11 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:36 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-02-13, 18:31:28 - Thomas Vaughan
(In r:2492|plus:2492) Re #436: Output the image sequence filename, and also indicate when hole filling begins and ends.

#### 2013-03-15, 05:52:49 - Thomas Vaughan
(In r:2589|plus:2589) Re #436: Cleaned up CompareVolumes a little bit, changed the format of some of the input and overall made it clearer/easier to use.

#### 2013-03-15, 06:15:44 - Thomas Vaughan
(In r:2590|plus:2590) Re #436, minor bugfix to CompareVolumes

#### 2013-03-15, 06:30:42 - Thomas Vaughan
(In r:2591|plus:2591) Re #436, Yet more cleaning/fixing for CompareVolumes.exe

#### 2013-03-19, 15:54:47 - Thomas Vaughan
(In r:2606|plus:2606) Re #436,

- replaced tabs with spaces
- replaced roi-extent parameter (with 6 values) with roi-origin (3 values) and roi-size (3 values) for reasons of consistency

#### 2013-12-03, 16:42:12 - Andras Lasso
Hole filling works well

#### 2013-12-03, 16:42:12 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #437 Limit the number of candidates in wire patter recognition
On a Sonix Touch machine when the calibration phantom wire pattern is being analysed in real time, and accidentally a lot of reflection is present on the image (e.g. reflection from the bottom of the water tank), the program freezes for a very long time (about a minute). This is probably due to the large number of wire candidates being analysed. In these images, the true wires won't be recognized anyway, so could we just drop the images (or not try wire pattern recognition) when the number of candidates exceed a certain limit?

#### 2012-02-28, 22:01:26 - Tamas Ungi
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-04-16, 19:44:52 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-06-28, 21:04:12 - Andras Lasso
duplicate

#### 2012-06-28, 21:04:12 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2012-07-09, 15:05:14 - Adam Rankin
(In r:1887|plus:1887) re #522 #437: Preventing the calculation of a frame if the number of fiducial candidates is too high.

Current arbitrary restriction is 80 candidates. Modifiable in FidPatternRecognition.cxx.

#### 2012-07-09, 18:22:52 - Adam Rankin
(In r:1889|plus:1889) re #522 #437: Modifying the behaviour of FidPatternRecognition to accept an error parameter to the RecognizePattern functions that is populated if the recognition fails.

Calling functions can then query the error on fail and determine what action to take.

#### 2012-07-09, 18:36:26 - Adam Rankin
(In r:1890|plus:1890) re #522 #437: Minor change affecting potential future error returns in SegmentationParameterDialog


## #438 Display region of interest when doing freehand calibration
It would help in keeping the wires in the region if it was visible during collection of images in the freehand calibration phase.

#### 2012-04-16, 19:45:10 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:48 - Andras Lasso
Updating tickets (#448, #449, #488, #511, #438)



#### 2012-06-02, 14:20:48 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-13, 18:41:29 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-16, 17:19:04 - Adam Rankin
(In r:1925|plus:1925) re #438 Region of interest drawing moved to vtkImageVisualizer. Handles to modify ROI still in SegmentationParameterDialog.

You can now view the ROI in any instance of vtkImageVisualizer, so the ROI can now be seen in the freehand calibration tasks.

Changed ImageFlip button be generic 2D actions button. Changed icon to suit new functionality. Added code to allow the definition of separators in the action menu for clarity.

#### 2012-07-16, 17:19:41 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #439 OpenIGTLinkBroadcaster should send full transform names
Right now, the ProbeToReference transform is sent to Slicer under the device name 'Probe'. Also, it's easier to identify MRML nodes in Slicer if we add 'Transform' to transform nodes. So the device name should be 'ProbeToReferenceTransform' and 'StylusTipToReferenceTransform' for the needle.

#### 2012-02-29, 07:53:52 - Tamas Ungi
(In r:1505) test #439: Full transform names used. Without 'Transform' at the end, because OpenIGTLink device names can be max 20 characters.

#### 2012-02-29, 07:53:52 - Tamas Ungi
status: changed from "New" to "Test"

#### 2012-03-11, 00:00:55 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)

Fixes delivered in the Plus-1.5.1 release

#### 2012-03-11, 00:00:55 - Andras Lasso
milestone_id: changed from "Release Plus-1.4.2" to "Release Plus-1.5.1"

#### 2012-03-11, 00:03:40 - Andras Lasso
Updating tickets (#417, #418, #167, #174, #283, #308, #346, #369, #401, #411, #412, #414, #427, #431, #439)



#### 2012-03-11, 00:03:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.1" to "Release Plus-1.4.2"

#### 2012-04-08, 12:00:42 - Tamas Ungi
The current version has been tested with Slicer LiveUltrasound

#### 2012-04-08, 12:00:42 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #440 Pattern recognition fails on good-looking image when MinDotSize is small
Although the candidates are apparently good (all the wires are among the candidates), the pattern recognition fails no matter the pattern recognition related parameters. But when increasing the minimum dot size (MorphologicalOpeningCircleRadiusMm) parameter (eg from 0.27 to 0.47), the pattern is well recognized, even if the candidates seem to remain the same.

Sample images are needed and the pattern recognition debugged to find out why does this happen.

#### 2012-03-10, 17:25:35 - Andras Lasso
(In r:1535) fixed #440: Fixed the problem of not detecting the pattern from a valid set of fiducial candidates (the allowed shift between the fiducial lines was not computed correctly). Cleaned up a bit the pattern recognition and line finding code, but it is still quite complex and not completely generic.

#### 2012-03-10, 17:25:35 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-03-10, 17:25:35 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-03-10, 19:22:29 - Andras Lasso
(In r:1536) re #440: Updated reference data sets (calibration results are slightly different, because now more frames are segmented). Added calibration result saving to vtkCenterOfRotationCalibAlgoTest and vtkSpacingCalibAlgoTest.

#### 2012-03-10, 23:41:17 - Andras Lasso
(In r:1539) re #440: Fixed PlusApp build errors

#### 2012-03-10, 23:41:42 - Andras Lasso
(In r:1540) re #440: Fixed PlusApp build errors

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #441 Drop-Down Menu for Calibration File in FCal is not Obvious
It is not obvious that the white text box in fcal is actually a drop down box. With the 'edit' button next to it, it appears to be an editable field, and it is not clear for what. The box should be scaled such that the 'drop-down arrow' is visible.

#### 2012-04-04, 19:52:42 - Csaba Pinter
It has been a subject of debate for a long time :)
A: The drop-down arrow is not visible but the device set names are
B: The arrow is visible but only parts of the device set name can be seen (this way the drop-down window is restricted to the same width as the box itself)

#### 2012-04-04, 20:15:07 - Andras Lasso
I would vote for B (seeing the arrow). Seeing the arrow is important, as without that you don't realize it's a listbox. Seeing a few more character from the device name does not make a big difference (and it should be possible to display the full name of the selected device set in another textbox or as a tooltip or some other way).

#### 2012-04-04, 21:35:07 - Tamas Heffter
Is there any way to customize the dropdown box? If so, we could move the arrow to the left side and it would solve the problem. 
The tooltip is already enabled, but it would be really painful to choose the right config file if we have 20 in the list.  

#### 2012-04-05, 01:51:53 - Csaba Pinter
I tried a lot of things when I put that combobox there and it seems it's not customizable in that sense. I decided to do this way because back then the toolbox was considerably narrower, and that way the short device set names looked really bad (few characters at the beginning, then '...' and few characters at the end). Maybe now that it's wider, it would look better.
I'll try it tomorrow and put two screenshot here so you can vote.

#### 2012-04-05, 01:51:53 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-04-05, 01:51:53 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-05, 02:38:50 - Tamas Heffter
The arrow is customizable you can find an example here: http://doc.qt.nokia.com/4.7-snapshot/stylesheet-examples.html#customizing-qcombobox
This could be also helpful: http://doc.qt.nokia.com/qq/qq20-qss.html#microcustomizationusingsubcontrols

#### 2012-04-05, 12:28:05 - Csaba Pinter
Thanks!

#### 2012-04-05, 17:01:12 - Csaba Pinter
image:dY1Y-AF0ar4yyiacwqjQYw
Demonstration of the options in the comment at Apr 04, 2012 @ 03:52pm

#### 2012-04-05, 17:01:12 - Csaba Pinter
Attachment added: "fCal_DeviceSetComboBoxAB.png"

#### 2012-04-05, 17:01:12 - Csaba Pinter
image:dY5KzwF0ar4yyiacwqjQYw
Screenshot of the new variance

#### 2012-04-05, 17:01:12 - Csaba Pinter
Attachment added: "fCal_DeviceSetComboBoxNew.png"

#### 2012-04-05, 17:02:42 - Csaba Pinter
I attached two screenshots. One that compares the two options without styling, and another with the new style I made according to Tomi's suggestion.
I hope it is good enough.

#### 2012-04-05, 17:04:07 - Csaba Pinter
(In r:1597) Test #441: Style sheet for the combo box in DeviceSetSelectorWidget; Unnecessary function SetComboBoxMinWidth and its calls removed

#### 2012-04-05, 17:04:07 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-04-05, 17:05:35 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.2"

#### 2012-04-05, 17:41:26 - Tamas Heffter
Nice job! 

#### 2012-04-12, 14:43:12 - Andras Lasso
I like this look! I think the issue has been resolved.

#### 2012-04-12, 15:24:48 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #442 The stylus with the C5-2 probe appears black
The stylus appears black. When it appears in front of a mostly-black ultrasound image, it can become difficult to tell where the stylus is. The stylus should be made a different colour.

#### 2012-04-04, 19:55:28 - Csaba Pinter
description: changed from "The stylus appears black. W..." to "The stylus appears black. W..."

#### 2012-04-04, 21:36:34 - Csaba Pinter
(In r:1594) Fixed #442: Color of the stylus is dark gray instead of black

#### 2012-04-04, 21:36:34 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-04-04, 21:36:34 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2012-04-05, 17:06:29 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.2"


## #443 Indicate the status of the calibration and disable inaccessible functions
Display the status of the calibration (eg. 'Pivot calibration of the stylus needed' or 'Probe calibration needed' or 'Calibration OK, ready for capturing'. Also disable the inaccessible fuctions: Phantom registration inactive without stylus calibration, freehand calibration inactive without phantom registration, capturing and volume reconstruction inactive without probe calibration.

#### 2012-03-02, 04:13:32 - Tamas Ungi
Often we don't know the Image-to-Probe matrix, so then it cannot be included in the config file. I think what is needed is to display this fact on the fCal application GUI, and maybe disable some functions that don't make sense without this calibration matrix. E.g. volume reconstruction.

#### 2012-03-02, 16:17:52 - Csaba Pinter
Issue Type: changed from "Bug" to "Enhancement"

#### 2012-03-02, 16:17:52 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-03-02, 16:17:52 - Csaba Pinter
description: changed from "Often this matrix will need..." to "Display the status of the c..."

#### 2012-03-02, 16:17:52 - Csaba Pinter
summary: changed from "XML Configuration file does not always include image to probe matrix" to "Indicate the status of the calibration and disable inaccessible functions"

#### 2012-03-02, 16:19:25 - Csaba Pinter
Tamas, you're right, I changed the title and description of this task so that it addresses the real issue.

#### 2012-07-12, 21:22:41 - Csaba Pinter
(In r:1913|plus:1913) Test #443: Toolboxes detect and report what is missing in order to perform their actions and disable the functions if something is missing

#### 2012-07-12, 21:22:41 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-09-04, 20:21:06 - Adam Rankin
Tested as working build plus:2045

#### 2012-09-04, 20:21:06 - Adam Rankin
status: changed from "Test" to "Fixed"


## #444 Crash due to insufficient memory during image acquisition
If too many images are aquired, fcal will crash. It should instead display some sort of error message, or ask if the user would like to save the images that had been collected up until the memory shortage.

#### 2012-03-02, 16:42:04 - Andras Lasso
file:cKwTRKziyr4zqKacwqjQXA
Log file of fCal crash during long acquisition

#### 2012-03-02, 16:42:04 - Andras Lasso
Attachment added: "022912_150112_PlusLog_fCalCrash.txt"

#### 2012-04-16, 19:44:56 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-06-28, 21:11:57 - Andras Lasso
When we reach a predefined limit then start recording into a new buffer and save the old buffer contents to a file. Or have a background thread for writing frames to disk and removing the frames that have been saved. 

#### 2012-06-28, 21:18:59 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:39 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-12-03, 16:42:34 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-12-23, 21:26:15 - Andras Lasso
The vtkVirtualDiscCapture device allows continuous data acquisition directly to disk (with optional caching), so maximum memory usage can be preconfigured and therefore out-of-memory situations can be avoided.

#### 2013-12-23, 21:26:15 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2013-12-23, 21:26:27 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"


## #445 Collection of multiple tracked ultrasound sequences should be possible by using a foot pedal only
If there is an operator for the US machine who is collecting multiple image sets using the foot pedal, and an operator for the computer who is moving the mouse in order to save data, it can take extra time to re-set the focus for the foot pedal for each experiment. It might be beneficial to have the focus remain even after the mouse moves.

Also, it's not very convenient that each saved image sequence in fCal has to be named manually. At least file name should be generated automatically (e.g., adding _<number> postfix; SpineRecon_1.mha, SpineRecon_2.mha, ...), so that the user can just press enter when he is prompted for file name.

The ideal workflow would be something like this:
* set capturing parameters, file name, etc.
* start capturing by pressing the foot pedal
* pause/resume capturing any number of times by pressing the foot pedal
* save sequence by pressing another foot pedal (or use a combination of pedal presses)
* start capturing by pressing the foot pedal...


#### 2012-03-02, 16:56:18 - Andras Lasso
description: changed from "If there is an operator for..." to "If there is an operator for..."

#### 2012-03-02, 16:56:18 - Andras Lasso
summary: changed from "Focus for foot pedal could remain after moving the mouse" to "Collection of multiple tracked ultrasound sequences should be possible by using a foot pedal only"

#### 2012-03-02, 17:17:13 - Csaba Pinter
I can add a default name for the file to be saved, that's no problem, but the focus issue is more tricky.
I tried to do it properly in other toolboxes, but once the 3D canvas gets the focus (when the user clicks there to zoom in for example), I can't get the focus back automatically. I can implement similar focus settings as in the other toolboxes but it won't be reliable.

#### 2012-03-02, 17:22:02 - Andras Lasso
Probably the user will just use the 2D view, so probably the focus setting that you can implement will be good enough.

#### 2012-04-16, 19:45:00 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-07-13, 19:35:02 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-13, 20:25:28 - Csaba Pinter
(In r:1924|plus:1924) Test #445: Focus is set to the record button when Capturing toolbox is selected; Getting focus by pressing tab is denied for the canvas

#### 2012-07-13, 20:25:28 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-09-04, 20:25:35 - Adam Rankin
Closed as working in build plus:2045

#### 2012-09-04, 20:25:35 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-12-05, 20:51:31 - Adam Rankin
(In r:3014|plus:3014) re #445 Added missing CMake variable

renaming classes, files and device type name to reflect naming convention

Device can now be created with 'MmfVideo'


## #446 Prepare CenterOfRotationCalibAlgo and SpacingCalibAlgo to use any number of NWire patterns
The current implementation can only handle 2 NWire patterns, prepare CenterOfRotationCalibAlgo and SpacingCalibAlgo to use any number of NWire patterns

#### 2012-03-08, 18:19:02 - Tamas Heffter
(In r:1529) Fixed #446: Updated CenterOfRotationCalibAlgo and SpacingCalibAlgo to use any number of NWire patterns. 
Updates report generation and baselines. Added 2 new tests for 3 NWires spacing and center of rotation calculation algo. 

#### 2012-03-08, 18:19:02 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2012-03-09, 20:13:13 - Tamas Heffter
(In r:1533) Fixed #446: Updated baseline for rotation axis calibration  

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"

#### 2016-01-28, 19:21:52 - Adam Rankin
re #446 removing extra bracket
Commit: r:4479|plus:4479

#### 2016-02-29, 05:40:16 - Adam Rankin
re #446 removing branch-of-branch since it has been merged
Commit: r:4519|plus:4519

#### 2016-02-29, 06:05:36 - Adam Rankin
re #446 merging trunk into branch
Commit: r:4520|plus:4520

#### 2016-02-29, 06:05:49 - Adam Rankin
re #446 merging trunk into branch
Commit: r:4521|plus:4521

#### 2016-02-29, 06:18:30 - Adam Rankin
re #446 moving data to external folder
Commit: r:4522|plus:4522

#### 2016-02-29, 06:22:24 - Adam Rankin
re #446 adding missing file
Commit: r:4523|plus:4523


## #447 Compounding Method as an Input to PasteSlicesInVolume
Depending on the application of the volume reconstructor, different methods of compounding may be required. Currently, compounding does a weighted average, but some applications may need maximum values or minimum values.

#### 2012-04-11, 21:47:39 - Thomas Vaughan
(In r:1611) re #447, Started implementing different calculation methods for the distribution step (ie, weighted average or maximum when pasting slices into the volume). The config file now takes a 'Calculation' element that can be either 'WEIGHTED_AVERAGE' or 'MAXIMUM'. This has only been tested for when optimization is set to FULL, Compounding is ON, and Interpolation is LINEAR, and is not likely to work with other combinations yet because support for MAXIMUM has not yet been implemented.

The XML element and code variables will be renamed to something more descriptive in my next commit.

#### 2012-04-11, 21:48:41 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-04-17, 03:53:54 - Thomas Vaughan
(In r:1624) Re #447, Implemented Maximum intensity distribution for all combinations of options. There is also work in progress code for #426, but it has been left commented out because it has not been tested.

#### 2012-04-17, 03:54:16 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2012-04-23, 21:57:34 - Thomas Vaughan
(In r:1649) Fixed #447 Added tests

#### 2012-04-23, 21:57:34 - Thomas Vaughan
status: changed from "Test" to "Fixed"

#### 2012-04-25, 17:35:42 - Thomas Vaughan
(In r:1654) Fixed #426, Re #447, Added a test for float type data reconstruction, removed hole filling from maximum distribution test (will add again if the cause for failure is in the hole filling)

#### 2012-04-25, 17:36:59 - Thomas Vaughan
status: changed from "Fixed" to "Test"

#### 2012-04-25, 18:13:13 - Thomas Vaughan
Hole filling produces strange results when maximum distribution is enabled using 64 bits. This issue will be tracked in ticket #480.

#### 2012-04-25, 18:13:13 - Thomas Vaughan
status: changed from "Test" to "Fixed"


## #448 fCal crashes on the Sonix Tablet during calibration
The Image-to-Probe calibration runs smoothly on the Sonix Tablet machine, until the Freehand Calibration workphase. When collecting images for calibration, the program crashes after a random number of images collected (100 frames was the maximum in 10 trials). The wire pattern is recognized, and the progress bar progresses a while before the crash happens. I put high priority to this ticket because the image geometry is different on the Tablet. So we have to calibrate the probes with it before we could start using them. 

#### 2012-03-08, 23:21:26 - Tamas Heffter
Tamas, did you check the memory usage? 

#### 2012-03-08, 23:23:25 - Tamas Ungi
The machine itself had plenty of memory, and the buffer size in the ImageAcquisition section of the config file was set to 50 to save on memory. I haven't done more memory checking.

#### 2012-03-08, 23:37:54 - Tamas Heffter
Try to change the log level to Trace and hopefully it will give us some hints (it's going to be really slow probably). I guess, there is no VS2008 installed on the tablet...

#### 2012-03-08, 23:59:14 - Thomas Kuiran Chen
Hi Guys, I just confirmed with my colleague here who handles the Ulterius SDK support at Ultrasonix.  The new SonixTablet is compatible with the Ulterius SDK (tested with the current stable release v5.7) because Ultrasonix only maintains one version of SDK for all hardware.  Do you have the latest SDK?  Perhaps it is related to the drivers/firmware of Tablet and/or Certus/EM tracker?

#### 2012-03-09, 03:27:36 - Tamas Ungi
Thanks for the suggestions. I have an experiment with a deadline tomorrow. After that, I will hopefully be able to generate a more detailed log.

#### 2012-04-03, 15:39:44 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-04-04, 13:29:34 - Andras Lasso
Check if the Ascension dll-s in Plus are the same as the ones in the Ultrasonix exam software. In a SonixTouch device at Robarts the tracking with Plus didn't work with the Ascension dll-s that were in the Plus package, but it did work after overwriting them with the ones that were in the Ultrasonix directory.

#### 2012-04-05, 22:18:12 - Csaba Pinter
I did a full calibration today, and although it was very annoying that the Sonix control overlay stayed on top of everything, and was flickering, and slowing down fCal, it worked just fine. Actually, I got really nice calibration results. The 3D error on the calibration dataset was 0.49 mm. Maybe because of the temporal calibration...

I attach the logs and the config files.

#### 2012-04-05, 22:18:12 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-05, 22:18:27 - Csaba Pinter
file:betA4IF20r4A8BacwqjQXA


#### 2012-04-05, 22:18:27 - Csaba Pinter
Attachment added: "sonixtablet_calibration_logs_20120405.zip"

#### 2012-04-08, 12:03:04 - Tamas Ungi
The hardware has changed since we reported this issue. At that time we used an external trakSTAR, and now the GPS extension is integrated to the Tablet. Since that was a temporary solution (trakSTAR) if the calibration works with the current configuration, we shouldn't worry about it.

#### 2012-04-08, 12:03:04 - Tamas Ungi
status: changed from "Accepted" to "Test"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:48 - Andras Lasso
Updating tickets (#448, #449, #488, #511, #438)



#### 2012-06-02, 14:20:48 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-06-28, 21:21:51 - Andras Lasso
Not reproducible

#### 2012-06-28, 21:21:51 - Andras Lasso
status: changed from "Test" to "Invalid"


## #449 Make line shift tolerance fiducial segmentation parameter adjustable from config file
Currently the m_MaxLineShiftMm parameter (that defines how much the centerpoint of an N-fiducials can be shifted relative to each other) is hardcoded in FidLabeling.cxx. Make this parameter adjustable from configuration file.

#### 2012-03-09, 17:29:06 - Andras Lasso
(In r:1531) re #449: Minor clean-ups and simplifications in the fiducial segmentation and pattern recognition algorithms

#### 2012-03-09, 17:29:06 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:48 - Andras Lasso
Updating tickets (#448, #449, #488, #511, #438)



#### 2012-06-02, 14:20:48 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-12, 20:18:00 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-13, 15:49:49 - Adam Rankin
(In r:1917|plus:1917) re #449 Line shift tolerance is now configurable via config file and live editable via SegmentationParameterDialog GUI.

Parameter can now be defined via:
<Segmentation
...
MaxLineShiftMM='10.0'
...
/>

#### 2012-07-13, 16:03:36 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-07-13, 17:12:56 - Adam Rankin
(In r:1920|plus:1920) re #449 renaming variables to match convention.

#### 2012-07-13, 18:25:18 - Adam Rankin
(In r:1922|plus:1922) re #549 displayed image orientation in vtkImageVisualizer is now loaded from config file and the config is updated when the value is changed

Test files were updated to add new visualization parameter.

re #449 line shift tolerance value is now saved out to file when parameters are saved


## #450 Add function to get probe calibration error report in XML format
- Get probe calibration result in XML format for report generation 
- Add Tracked frame serializable data to the probe calibration error report (to have custom fields, like probe position and rotation) 
- Update Gnuplot scripts 

#### 2012-03-09, 20:05:47 - Tamas Heffter
(In r:1532) Fixed #450: Get probe calibration result in XML format for report generation
Added Tracked frame serializable data to the probe calibration error report (to have custom fields, like probe position and rotation)
Updated Gnuplot scripts

#### 2012-03-09, 20:05:47 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2012-03-09, 21:22:50 - Tamas Heffter
(In r:1534) Fixed #450: Added units to probe calibration error plot scripts

#### 2012-03-10, 23:54:08 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
Updating tickets (#101, #374, #397, #430, #440, #446, #450)



#### 2012-03-10, 23:54:54 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.1"


## #451 fCal Volume Reconstruction didn't reset after first reconstruction
I collected data then did a volume reconstruction. I needed to redo the data collection. When I went back to do the volume reconstruction, I couldn't reset and do a new reconstruction (only the save button was enabled). I had to save my data collection then open that in the volume reconstruction section of fcal to do the reconstruction.

#### 2012-03-19, 18:52:47 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-03-19, 18:52:47 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-03-19, 18:52:47 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.4.2"

#### 2012-03-19, 18:52:47 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-03-19, 19:06:50 - Csaba Pinter
(In r:1551) Test #451: Fixed enabling of buttons after finished reconstruction and after deleting captured volume buffer

#### 2012-03-19, 19:06:50 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-05-11, 15:28:14 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #452 Create a simulator for volume reconstruction testing 
This is the first component of the Ultrasound Simulator to be developed. This class will be implemented as a vtk filter that takes in a model to probe transform and a geometric model, and produces a simulated image. 

See more details here: https://www.assembla.com/spaces/plus/wiki/Simulated_Ultrasound

#### 2012-03-16, 13:40:36 - Andras Lasso
description: changed from "This is the first component..." to "This is the first component..."

#### 2012-03-16, 13:40:36 - Andras Lasso
summary: changed from "UsSimulatorAlgorithm" to "Create a simulator for volume reconstruction testing "

#### 2012-03-16, 13:41:20 - Andras Lasso
Changed status to 'Accepted' as the work has been already started

#### 2012-03-16, 13:41:20 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-03-16, 19:53:06 - Laura Bartha
(In r:1546) re #452: Added skeleton class for the vtk filter for the US simulator.(class contains pipeline interface, and PrintSelf function)

#### 2012-03-18, 20:34:43 - Laura Bartha
(In r:1550) re #452: Added UsSimulator to CMakeLists for PlusLib. 

#### 2012-03-22, 15:50:38 - Laura Bartha
(In r:1555) Re #452: Added extremely rough version of RequestData function. 

#### 2012-03-29, 22:13:11 - Laura Bartha
(In r:1584) re #452: Added vtkUsSimulatorAlgoTest class draft to be used to debug,test,and use vtkUsSimulatorAlgo. vtkUsSimulatorAlgo now operating under the assumption that the origin defined for the stencil filter is the input transform

#### 2012-04-03, 02:17:42 - Laura Bartha
(In r:1587) re #452: added a vtkImageData parameter to specify desired output image spacing, extent, and origin. ModelToImageTransform was also made a parameter as opposed to a pipeline input to the filter. Get/Set macros were added for ModelToImageTransform, and set macro was added for the StencilBackgroundImage ( being the vtkImageData parameter mentioned above).

#### 2012-04-04, 21:06:30 - Laura Bartha
(In r:1589) re #452: vtkUsSimulatorAlgo : fixed SetStencilBackgroundImage instantiations, old version was using incorrect format and was missing the word 'set', added a check to ensure model is not null, changed expected input type to polydata, and changed the parameter to a call to transformModelFilter->GetOutput from 1 to 0.
vtkAlgoSimulatorTest: corrected the call to the transform repository,created background image to be used as a parameter, added meta image writer to save the outcome of the filter.


#### 2012-04-04, 21:28:34 - Laura Bartha
(In r:1591) re #452: removed changed vtktransform in header to vtkmatrix4x4, updated remaining files accordingly

#### 2012-04-05, 14:33:06 - Laura Bartha
(In r:1596) re #452: Added visualization code inside filter and inside test for debugging purposes. 

#### 2012-04-11, 22:21:35 - Laura Bartha
(In r:1612) re #452: Added test data for UsSimulatorAlgo

#### 2012-04-12, 01:08:56 - Laura Bartha
(In r:1613) re #452: Altered transform name in CreateSliceModels to be more descriptive, restructured Test to be more efficient for debugging, deleted old debugging code in in vtkUsSimulatorAlgo

#### 2012-04-12, 21:26:00 - Laura Bartha
(In r:1617) re #452: added test model (icosphere) to test images folder.

#### 2012-04-14, 00:17:29 - Laura Bartha
(In r:1621) re #452: performed minor cleanup, renaming of input argument variables, adding some constants, renamed UsSimulator to UsSimulatorAlgo

#### 2012-04-16, 20:07:02 - Laura Bartha
(In r:1622) re #452:changed structure so that all of the transforms in the input file are processed, output is now a meta image sequence file correlating to the input transforms... debugging still in progress. 

#### 2012-04-16, 21:35:58 - Andras Lasso
Please remove the obsolete UsSimulator directory to avoid confusion. In the future always rename the directory instead of (duplicate & delete the old version), because by deleting the old version we lose change history.


#### 2012-04-16, 21:39:18 - Andras Lasso
Regarding 'Alter to get new position? Or does it do it automatically ?'

TrackedFrame* frame = trackedFrameList->GetTrackedFrame(i);
=> reads tracked frame (including image and tracking data) into 'frame'

transformRepository->SetTransforms(*frame)
=> updates the transformRepository with all the transforms that are stored in 'frame'

if ( transformRepository->GetTransform(imageToReferenceTransformName, imageToReferenceMatrix) != PLUS_SUCCESS )
=> reads the updated imageToReferenceMatrix (so, the answer is: it gets the new imageToReferenceMatrix for each frame)

#### 2012-04-17, 20:52:54 - Laura Bartha
(In r:1626) re #452: output is now a functional mha file containing the same information as the input tracked frames in addition to the simulated US images

#### 2012-04-17, 23:52:33 - Laura Bartha
(In r:1627) re #452: made transformName a parameter

#### 2012-04-18, 22:46:02 - Laura Bartha
(In r:1628) re #452: added a baseline output file for the simulator, and added two tests, one is a basic run test and the other compares the result of the first test to the baseline file

#### 2012-04-24, 18:20:11 - Laura Bartha
(In r:1653) re #452: added another parameter to control the display of the initial model and frames visualization. Removed unnecessary commented out code. Added exit conditions when frames and transforms cannot be read properly from the input parameters. 

#### 2012-06-06, 15:16:45 - Laura Bartha
(In r:1744) re #452: added literature review papers to newly create UsSimulatorAlgo folder in docs 

#### 2012-06-11, 20:10:18 - Laura Bartha
(In r:1760) re #452: added another paper to UsSimulatorAlgo folder in docs 

#### 2012-06-21, 21:05:58 - Laura Bartha
(In r:1808|plus:1808) re #452: Made setting of background value for simulated us image more intuitive, previously foreground value was used, and foreground value was not specified in the config file. Removed ForegroundValue parameter as it isn't used anymore.Updated comparison test to use new image with grey background. 

#### 2012-06-29, 19:35:11 - Csaba Pinter
(In r:1854|plus:1854) Re #452: vtkVolumeReconstructor implicitly calls LoadReconstructedVolume when the algorithm configuration was modified since the last load; Cleaning up vtkVolumeReconstructor; Add VolumeReconstructor section to US Simulator test configuration file

#### 2012-06-29, 19:35:49 - Csaba Pinter
(In r:1855|plus:1855) Re #452: Fix a bug in fCal's VolumeReconstructionToolbox

#### 2012-06-29, 19:45:27 - Csaba Pinter
Test_PlusConfiguration_UsSimulator_SavedDataTracker.xml configuration file can be used with fCal to test the US simulator. Connect to this device set, capture a sequence and reconstruct.

#### 2012-06-29, 19:45:27 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-09-04, 20:46:16 - Adam Rankin
(In r:2047|plus:2047) Fixed #452

Confirmed working after correction of missing elements in fCal configuration file.

#### 2012-09-04, 20:46:16 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2012-09-07, 02:01:27 - Andras Lasso
(In r:2056|plus:2056) re #452: Updated US simulator baseline (there was only 2 pixels difference after changing the implementation to allow arbitrary slice orientation without transforming the STL model)

#### 2012-09-12, 05:17:51 - Andras Lasso
(In r:2072|plus:2072) re #452: Removed unused simulator output baseline files

#### 2012-11-01, 22:10:08 - Andras Lasso
(In r:2220|plus:2220) re #452: Updated the simulator algo test to use more realistic data sat (SpinePhantom2). Deleted the old artificial data set (that contained sphere and cube).

#### 2012-11-02, 18:16:54 - Andras Lasso
(In r:2222|plus:2222) re #452: Updated the SpinePhantom2.stl model to make it smaller and avoid the 'Premature EOF while reading end solid' error that is reported on certain systems

#### 2012-11-03, 01:28:48 - Andras Lasso
(In r:2223|plus:2223) re #452: Reorganized scan conversion code to simplify vtkRfProcessor and vtkUsSimulatorAlgo (they don't need to know internals of different scan converters anymore)

#### 2012-11-03, 13:30:32 - Andras Lasso
(In r:2224|plus:2224) re #452: Added scanline computation for simulation of curvilinear transducers. Fixed curvilinear scan conversion angle computation (the computed angle between two scanlines was slightly smaller than actually would have been needed) 

#### 2012-11-03, 16:41:56 - Andras Lasso
(In r:2238|plus:2238) re #452: Fixed stack corruption error in vtkUsSimulatorAlgo (reading a 3-element vector into a 2-element space)

#### 2013-03-23, 01:36:21 - Laura Bartha
(In r:2615|plus:2615) re #452 : Updated the simulator to be able to handle PLUS 2.0 configuration files. Also added and filled two Spatial Model Containers to be used in intensity calculations ( in progress). 

#### 2013-04-03, 16:07:26 - Laura Bartha
(In r:2640|plus:2640) re #452 : UsSimulator can use SpatialModels to create simulated ultrasound, which includes being able to specify BkgdDensityKgPerM3 BkgdSoundVelocityMPerSec  BkgdAttentuationCoefficientNpPerCm. BUT the intensity calculation is still being debugged. 

#### 2013-04-10, 18:25:03 - Laura Bartha
(In r:2676|plus:2676) re #452 : CalcualteIntensity has been updated to handle a segment of pixels. IncomingBeamIntensity may need to still be updated after each iteration of pixels.  A function has been added that converts intensity to pixelValue using the cubed root function ... next step is to add window width and level parameters.


## #453 Get RF and B-mode images at the same time with Ultrasonix SDK
Implement RF+BMode acquisition with the Ulterius SDK. 


Kris, 

I found the new ID in the variables.map.xml and probably it rf-mode: 
<var id='857' name='Mode (RF)' newID='rf-mode'/>

So, if I understand correctly, we should call the following function to enable the different RF modes: 

//The active RF mode. 0=B only, 1=RF only, 2=B and RF, 3=ChRF, 4=B and ChRF 
this->Ult.setParamValue( 'rf-mode',  2); 

Tamas


On Thu, Mar 15, 2012 at 1:44 PM, Kris Dickie <Kris.Dickie@ultrasonix.com> wrote:
>
> Yes, I think its 'Mode (RF)' the variable.
>
> On 3/15/2012 11:37 AM, Tamas Heffter wrote:
> > And can we set this parameter from Ulterius SDK too?
> > Tamas
> >
> > On Thu, Mar 15, 2012 at 1:35 PM, Kris Dickie
> > <Kris.Dickie@ultrasonix.com <mailto:Kris.Dickie@ultrasonix.com>> wrote:
> >
> >     When you are in RF mode, you can turn Acquire = 'B/RF', this will make
> >     both data available.
> >
> >     Thanks
> >     Kris
> >
> >     On 3/15/2012 11:25 AM, Tamas Heffter wrote:
> >     > Kris,
> >     >
> >     > Currently, we're using the Ulterius SDK to collect RF data (16bit
> >     > signed pixel data), but then we don't have BMode images (or at least
> >     > we don't know how to get/convert/display it in the same time).
> >     We need
> >     > both the RF data and the BMode images like on the US system. So, I
> >     > cannot really answer your question, because currently we just
> >     display
> >     > the data as a graph.
> >     >
> >     > Tamas
> >     >
> >     > On Thu, Mar 15, 2012 at 1:05 PM, Kris Dickie
> >     > <Kris.Dickie@ultrasonix.com <mailto:Kris.Dickie@ultrasonix.com>
> >     <mailto:Kris.Dickie@ultrasonix.com
> >     <mailto:Kris.Dickie@ultrasonix.com>>> wrote:
> >     >
> >     >     Hi Tamas,
> >     >
> >     >     What's the limiting factor with the current RF mode:
> >     >     1. Size of B mode (smaller)
> >     >     2. Streaming both B and RF drops frames or doesn't work
> >     >
> >     >     Thanks
> >     >     Kris
> >     >
> >     >     On 3/15/2012 11:00 AM, Tamas Heffter wrote:
> >     > > Hi Kris,
> >     > >
> >     > > We'd like to get BMode images and RF Data from Sonix Touch
> >     >     through the
> >     > > Ultrasonix SDK at the same time. Do you think it's feasible?
> >     If not,
> >     > > is it possible to provide a RFData to BMode converter library
> >     within
> >     > > the SDK?
> >     > >
> >     > > Thanks in advance,
> >     > > Tamas
> >     > >
> >     > > ---
> >     > > Tamas Heffter
> >     > > Research Engineer
> >     > > School of Computing, Queen's University
> >     > > Percutaneous Surgery Lab (Perk Lab)
> >     > > Kingston, Ontario, Canada K7L 3N6

#### 2012-03-16, 19:29:16 - Tamas Heffter
(In r:1544) re #453: Added RF acquisition mode set function 

#### 2012-03-16, 19:29:16 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2012-03-16, 19:34:43 - Tamas Heffter
(In r:1545) re #453: Moved back accidentally removed SetRFDecimation function 

#### 2012-03-16, 22:44:42 - Tamas Heffter
We can get simultaneously BMode ang RF data by setting the Acquisition data type to udtRF | udtBPost  
sonixGrabber->SetAcquisitionDataType(udtRF | udtBPost);

The current implementation of Plus is not yet ready for handling multiple image buffers, therefore we cannot use it.
Also, we just store the AcquisitionDataType in an integer, and the ulterius getDataDescriptor function cannot handle multiple data types. 
this->Ult.getDataDescriptor((uData)this->AcquisitionDataType, this->DataDescriptor))

So the proposed solution would be to store the different acquisition data types in a list, the same way as Tracker has tools. 
- On SetAcquisitionDataType we could add all data types from the list
- We could get the data descriptor for each data type from the list
- Each data type should have their own image buffer 
- We could store the tracked frames for each data type in a separate sequence metafile 
- Either we could get all image data types in one tracked frame with multiple PlusFrame from data collector or we can have a GetTrackedFrame function for each data type. 



#### 2012-03-16, 22:48:16 - Tamas Heffter
(In r:1547) re #453: Changed set RF acquisition mode function to use the RfAcquisitionModeType

#### 2012-03-17, 00:06:25 - Tamas Ungi
Just out of curiosity, will this solve the biplane probe image acquisition too? Saving both streams simulataneously? If yes, the tickets should be associated.

#### 2012-03-17, 01:50:04 - Andras Lasso
Do you know if the ultrasonix hardware supports simultaneous operation of two transducers? As far as I remember when I switch between the axial/sagittal transducer there is a relay switching noise. This may indicate that although there are 3 connectors, only one transducer is connected to the processing electronics at any time.

#### 2012-03-17, 02:20:37 - Tamas Ungi
Yes, probably the biplane probe will not work both at the same time. But I remember having a discussion about parallel image streams. What was it?...
Endoscopy + US? I'm not sure.
So, if it's decided the PLUS will support multiple image streams, maybe we should have a quick brainstorming meeting.

#### 2012-03-17, 11:51:02 - Tamas Ungi
As Purang pointed out, the Ultrasonix machine alternates between the two imaging modes in RF/B mode. So the frame rate will drop to half in both, and the corresponding frames in the two streams won't be scanned at the same time. I don't know if this is a problem for the application that requires this issue fixed...

#### 2012-03-17, 13:40:44 - Andras Lasso
B-mode and RF frames are acquired one after the other. As B-mode involves more processing, the B-mode frame rate is just halved, but the RF frame rate is reduced with a higher ratio (decimated?).

#### 2012-03-17, 13:46:50 - Andras Lasso
There are many applications of multiple image streams:
* multi-plane US (using biplane or 3D probes; there are systems that supports this)
* differently processed US (RF/B-mode, ...)
* alternating image size (only a smaller sector is imaged at a high frame rate and occasionally a full sector is acquired to have an image of the full field)
* stereo endoscope
* video and US (e.g., a video camera records how the trainee inserts the needle, while we store the US images and tracking information)

#### 2012-03-18, 02:34:50 - Tamas Heffter
Tamas, we can have a brainstorming meeting anytime, just let me know what time would work for you (however, everybody could see this brainstorming so it's even better). 
Probably I'll implement the RF->BMode converter for Plus (with the help of the Ultrasonix SDK Amplio library) anyway, it would solve the frame rate dropping problem. 

So, it seems to me that we need two different requirements: 
- We should handle multiple image data types from the same device (like BMode+RF data acquisition) 
- We should be able to connect to multiple devices (like video and US)

For handling multiple data types we can have the same structure as the tracker tools, like creating a new video buffer for each datatype (and store each datatype in a separate tracked frame list). Also, the data collector could store multiple video sources (and tracker sources) by creating a map of devices. The only thing is not clear to me is how do we pair the image and tracking data if we have multiple devices? E.g. we connect to the US with the SonixVideo SDK, connect to the endoscope (another imaging device), and we track the US with the optical tracker and the endoscope with the magnetic tracker. If we want to process these images and tracking data (and store them in a tracked frame list), we need to somehow define the relationship between them (probably in the config file). Any idea? 
Also, if we have multiple data types (like BMode+RF), we can store the selected tracker data for each individual tracked frame list. 

Do you think this would fulfill all the above mentioned requirements? 



#### 2012-03-18, 14:00:24 - Tamas Ungi
OK.

I'm not sure either about how would the different video (or tracked video) sources relate to each other. I can imagine them saved to individual buffers. Then it would be the responsibility of the application to know how they are related. So we would have as many tracked frame lists as video sources, and they would go to different files.

So, if I understand well what you mean, yes.

#### 2012-03-18, 17:08:19 - Tamas Heffter
Yes, this is exactly what I meant. But when you want to get the tracked frame from the data collector, somehow you should identify the data sources (like, I need the videoSource1 and trackerSource2 in one tracked frame). 

#### 2012-03-19, 03:26:55 - Andras Lasso
In the first version I would save all available tracking data for each video stream. It's simple and we surely won't miss any data. If we find later that this leads to performance or other problems then we can introduce some filtering mechanisms (some data stored only in certain streams).

#### 2012-03-19, 13:01:46 - Tamas Ungi
i agree.

#### 2012-03-19, 13:52:16 - Tamas Heffter
OK, it sounds like a good plan. 

#### 2012-12-23, 23:13:12 - Csaba Pinter
It should be already possible using the multi-stream version.
Adam can you create the virtual device for this?

#### 2012-12-23, 23:13:12 - Csaba Pinter
assigned_to_id: changed from "heffter" to "rankin"

#### 2012-12-23, 23:13:12 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.0"

#### 2013-01-29, 19:29:35 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-04-05, 22:56:39 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2013-04-09, 18:42:50 - Adam Rankin
In this ticket I would include a minor refactor to make the user configurable options simpler, then have code to set the appropriate values intelligently.

Basically,
User -> B, RF, B+RF
Code -> set ImagingMode, RfAcquisitionMode and AcquisitionDataType appropriately

#### 2013-04-15, 20:19:36 - Adam Rankin
@lassoan Have it up and running, currently the new form of the parameters are as follows

* ImagingMode
** 'BMode'
** 'RfMode'
** 'BAndRF'

Following entries only mandatory if BAndRf is selected
* BModeChannelId
* RfModeChannelId

If BMode or RfMode is selected and only one output channel is selected, the code will figure out to use it. If not, you can always specify BModeChannelId or RfModeChannelId.

#### 2013-04-15, 20:48:40 - Adam Rankin
Performance is approx 15FPS for b and rf, release build.

#### 2013-04-15, 20:48:40 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-15, 20:56:16 - Adam Rankin
(In r:2694|plus:2694) test #453 now able to capture both rf and b mode at the same time for sonix video devices

#### 2013-04-15, 20:56:16 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-15, 21:00:14 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-16, 01:13:16 - Andras Lasso
Thanks Adam, very nice work.

#### 2013-04-16, 03:05:33 - Adam Rankin
(In r:2695|plus:2695) test #453 Cleaner implementation for Sonix video devices. Acquired data is now implicit on the existence on child video data sources. If you create a video data source with PortName='B' and/or a PortName='Rf' then data of that type will fill the buffer(s). NOTE: declaring both types will 1/2 the framerate of each type

#### 2013-04-16, 14:58:44 - Adam Rankin
(In r:2696|plus:2696) re #453 updating sonix related config file versions

#### 2013-04-16, 17:47:36 - Adam Rankin
Working well, does anyone else want to test?

#### 2013-04-17, 00:42:02 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-20, 02:58:12 - Andras Lasso
(In r:2721|plus:2721) re #453: Delete vtkPlusDataSource's PortName attribute value properly


## #454 Improve Video For Windows imaging source
Video for Windows imaging source (vtkWin32VideoSource2) is funtional, but it has a few limitations:
* supports only one pixel encoding (YUY2)
* converts the acquired color image to grayscale

These limitations could be resolved if needed (users request it), but don't invest too much time into VFW support, as it is obsolete - see #455.

#### 2012-03-22, 23:16:22 - Andras Lasso
(In r:1563) Fixed #364: Video for Windows works with common webcams. Support for additional image encoding, color image acquisition, etc. can be added in the future (see #454).

#### 2012-03-22, 23:16:22 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:58:43 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2013-11-29, 20:10:08 - Andras Lasso
description: changed from "Video for Windows imaging s..." to "Video for Windows imaging s..."

#### 2013-12-23, 21:36:09 - Andras Lasso
Video for Windows video source is not deprecated and new features will be only added to the media foundation (MMF) video source.

#### 2013-12-23, 21:37:19 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-23, 21:37:19 - Andras Lasso
status: changed from "New" to "Invalid"


## #455 Add support for image capture through Windows Media Foundation interface
Video for Windows and DirectShow interfaces are now obsolete, the new Microsoft media framework is Windows Media Foundation. Plus should be able to capture video through this interface.

http://msdn.microsoft.com/en-us/library/windows/desktop/dd317912(v=vs.85).aspx

http://stackoverflow.com/questions/12941803/where-are-the-directshow-samples-in-the-windows-8-sdk

More info on alternatives:
http://public.kitware.com/IGSTKWIKI/index.php/ITKA2D2,_Generic_VideoGrabber

Example:
http://www.codeproject.com/Articles/559437/Capturing-video-from-web-camera-on-Windows-7-and-8

#### 2012-03-23, 03:31:18 - Andras Lasso
description: changed from "Video for Windows and Direc..." to "Video for Windows and Direc..."

#### 2013-11-29, 19:31:30 - Andras Lasso
description: changed from "Video for Windows and Direc..." to "Video for Windows and Direc..."

#### 2013-11-29, 19:39:19 - Andras Lasso
description: changed from "Video for Windows and Direc..." to "Video for Windows and Direc..."

#### 2013-12-05, 15:34:40 - Adam Rankin
(In r:3013|plus:3013) test #455 re #827 Added Microsoft Media Foundation based capture device

TODO: add resolution selection

Device can be chosen by the type MMFVideo

#### 2013-12-05, 15:34:40 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-12-05, 15:34:40 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-12-05, 20:42:26 - Andras Lasso
Great!

A few things:
* I don't see any CMake option to enable/disable this.
* Use the same name abbreviation for the device name, the CMake option, and the class name, and use the same capitalization as everywhere else in Plus(e.g.,MmfVideo instead of MMFVideo):
e.g., any of these could work
1.
USE_MICROSOFT_MEDIA_FOUNDATION_VIDEO
MicrosoftMediaFoundationVideo
vtkMicrosoftMediaFoundationVideoSource
2.
USE_MICROSOFT_MF_VIDEO
MicrosoftMfVideo
vtkMicrosoftMfVideoSource
3.
USE_MMF_VIDEO
MmfVideo
vtkMmfVideoSource


#### 2013-12-05, 20:55:13 - Adam Rankin
Wrong ticket commit:

In url:https://www.assembla.com/code/plus/subversion/commit/3014|plus:3014 Added missing CMake variable

renaming classes, files and device type name to reflect naming convention

Device can now be created with 'MmfVideo'

Committed to: plus

#### 2013-12-06, 02:08:17 - Andras Lasso
(In r:3017|plus:3017) re #455: Added passing of PLUS_USE_MMF_VIDEO CMake option to PlusLib

#### 2013-12-06, 02:09:16 - Andras Lasso
(In r:3018|plus:3018) re #455: Added PLUS_USE_MMF_VIDEO CMake option to UsePlusLib CMake include file

#### 2013-12-06, 04:38:33 - Andras Lasso
(In r:3019|plus:3019) re #455: Added automatic finding of the latest Windows SDK and adding it to the include and lib paths. Fixed MMF/Mmf capitalization inconsistencies. Fixed vtkMMFVideoSourceTest (it instantiated a Win32VideoSource2).

#### 2013-12-06, 04:41:12 - Andras Lasso
(In r:3020|plus:3020) re #455: Added automatic finding of the latest Windows SDK and adding it to the include and lib paths

#### 2013-12-06, 04:48:53 - Andras Lasso
(In r:3021|plus:3021) re #455: Added more comments about MMF includes


#### 2013-12-06, 04:57:57 - Andras Lasso
Would be nicer to not have any MF headers in the vtkMmfVideoSource.h file, to make sure only the vtkMmfVideoSource refers to MF files. it can be implemented using a vtkInternal private member (as in vtkBkProFocusOemVideoSource.cxx).

Very nice work, this new video source works perfectly!

#### 2013-12-06, 15:26:03 - Adam Rankin
That would be a nice benefit, but I find the vtkInternal concept a bit more difficult to read, maybe we could discuss?

#### 2013-12-06, 15:29:59 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-12-06, 15:30:03 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2013-12-10, 16:01:46 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:46 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-11, 15:52:40 - Adam Rankin
(In r:3042|plus:3042) WIP re #455 re #827 Adding Input Capture Library source to media foundation capture system to enable advanced controls

Custom resolution not working, possibly order of operations needs to be changed

Replacing all tabs with two spaces

#### 2013-12-18, 14:09:35 - Andras Lasso
Well done, Adam. This was quite a complex and long-overdue task and you could implement it very quickly and the device works well!

I'll make a few small enhancements (RGB24 support, device selection, listing, etc) and then it completely replaces the old VFW source.

#### 2013-12-18, 14:25:58 - Andras Lasso
(In r:3071|plus:3071) re #455: Enhanced MmfVideoSource (added support for RGB24, can select any device ID, parameters are correctly written in WriteConfig, test app can print a list of devices and supported modes, command-line parameters can be used to set the device id, resolution, pixel type)

#### 2013-12-18, 14:32:27 - Adam Rankin
(In r:3072|plus:3072) re #455 removing testing query

#### 2013-12-18, 16:08:07 - Andras Lasso
(In r:3073|plus:3073) re #455: MmfVideoSource code review fixes

#### 2013-12-18, 20:34:23 - Andras Lasso
(In r:3075|plus:3075) re #455: Added more detailed logging to vtkMmfVideoSource

#### 2013-12-18, 21:48:32 - Andras Lasso
(In r:3076|plus:3076) re #455: Added more detailed logging to vtkPlusDevice, added safety checks to vtkMmfVideoSource

#### 2013-12-18, 21:49:59 - Andras Lasso
fCal crashes in release mode when disconnecting and a vtkMmfVideoSource is used. @rankin: could you check?

#### 2013-12-18, 23:04:20 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-12-20, 02:19:06 - Andras Lasso
Closing this general ticket. Added a separate ticket for the outstanding disconnect issue: #843

#### 2013-12-20, 02:19:06 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2014-02-20, 18:46:35 - Andras Lasso
re #455: Fixed the requested frame rate setting in the MMF device (earlier the requested frame rate had to be higher than the actually supported highest frame rate)
Commit: r:3175|plus:3175

#### 2014-09-14, 13:03:38 - Andras Lasso
re #455: Added option to skip MMF video test (while MMF video build is enabled) to avoid test errors when no compatible device is available
Commit: r:3678|plus:3678

#### 2015-06-03, 03:39:28 - Andras Lasso
re #455: Added support for WinSDK v7.1A
Commit: r:4171|plus:4171


## #456 Integrate single-wall phantom calibration algorithm into Plus
It would be interesting to have the single-wall phantom calibration for computing the image plane to probe marker transform. It would allow a comparison of the multi-N and the single-wall phantom calibration results.

Elvis Chen wrote on Mar 23, 2012 that he can provide the Matlab code for the single-wall phantom calibration. He has 2 implementations of single-wall phantom calibration based on Prof. Rohling's papers. The 1st implementation was based on the original paper (i.e. iterative solution), the 2nd one is based on the closed-form solution from the 2012 SPIE paper. Both versions were implemented in MATLAB. The original paper is: Rapid Calibration for 3D Freehand Ultrasound, R.W. Prager, R.N. Rohling, A.H. Gee, and L. Berman, Ultrasound in Med.&Biol., vol. 24, no.6, pp855-869, 1998. This is a very good paper and describes everything very well. The single-wall calibration algorithm described in this paper uses an iterative solver. In his experience, it requires more than 100 images to get a stable solution, although if you collect the images carefully, my simulation suggests that about 60 images will suffice. This year in SPIE (2012) a closed-form solution was presented by: Single Wall Closed-form Differential Ultrasound Calibration, Mohammad Najafi, Narges Afsham, Purang Abolmaesumi, and Robert Rohling, SPIE Medical Imaging, 2012, San Diego. While this paper presents a closed-form solution, in practice, an iterative solver should be used to get a more robust answer. The closed-form solution will only work if the data collected are good; since this involves a pseudo inverse of a large matrix. If the data corrected were not good, then the matrix won't be full rank. The advantage of the single-wall calibration is that it is easy to perform. So while it may need a large number of images to get a solution, these images can be collected in relatively short amount of time. His implementation in matlab also has line detection algorithm (RANSAC based). Integration of it into PLUS shouldn't be too difficult provided the linear algebra part is available. For the closed-form solution, the pseudo inverse can be computed using SVD, which I already implemented in C++. On the other hand, if we want to use the iterative solver, we may have to use ITK extensively.

#### 2012-03-23, 18:44:48 - Andras Lasso
description: changed from "" to "It would be interesting to ..."

#### 2012-03-23, 18:47:10 - Andras Lasso
Integration into Plus:
* The iterative algorithm is more robust so use that
* For line detection the algorithm in the temporal calibration can be utilized (https://www.assembla.com/code/plus/subversion/nodes/trunk/PlusLib/src/CalibrationAlgo/TemporalCalibrationAlgo.cxx)
* ITK (and VNL inside ITK) can be used to compute SVD and for various linear and non-linear optimizations


#### 2012-03-23, 18:52:40 - Andras Lasso
Elvis, could you attach the Matlab algorithm code and corresponding tests (test driver code, test data, and expected results)?

#### 2012-03-31, 21:00:34 - Andras Lasso
By Mohammad Najafi on Mar 31 @ 04:26pm

Hello everyone,
I would like to clarify on the 'Single Wall Closed-form Differential Ultrasound Calibration' method. The pseudo inverse of a non-square matrix is calculated by a simple algebraic formula. {A}^-1= {(A^T*A)}^-1* A^T (http://en.wikipedia.org/wiki/Generalized_inverse)
Therefore even if there are many rows in A, the term that is inversed is the size of the columns of A (in this case 17x17). So it is very fast and easy to compute it.
Also it is not true that the matrix is not full rank. On the contrary we always can get the result but it doesn't mean that it is not sensitive to error. In fact the problem is that with low number of images the solution is very sensitive to measurement error. One reason is perhaps the indirect calculation of the solution using substitute variables.
Since you have optimized SVD algorithms, another approach is by using SVD to solve X. I've attached a MATLAB implantation for this. It simulates 50 poses (1000 trials) by adding axial noise (normal distribution) to each column. The MATLAB implementation is very fast (0.07 s for computation of 50 poses once)

Regards,
Mohammad

https://www.assembla.com/spaces/plus/documents/dkJXa2E28r4yfoacwqjQYw/download/dkJXa2E28r4yfoacwqjQYw


#### 2012-03-31, 21:05:42 - Andras Lasso
Mohammad, would you be interested in integrating the algorithm into Plus and try it on real measurement data and compare its performance to the multi-N fiducial phantom?

Line detection algorithm is already available in Plus, so the work would be mainly implementing the algorithm in C/C++ using VNL numerical methods library. We could help with the integration if you have any questions.

#### 2012-04-04, 18:38:27 - Mohammad Najafi
Hi Andras,

Yes in the long run I like to do that but currently I'm working on another calibration method. Thanks, I'll ask for your help on this way.



#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:36:32 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-03-01, 14:42:04 - Andras Lasso
(In r:2546|plus:2546) re #456: Moved all single-wall calibration from the PlusLib repository to the PerkLab sandbox. Will be integrated into Plus after it's been stabilized and well tested.

#### 2013-03-01, 14:42:04 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:58:47 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2014-01-02, 20:38:51 - Andras Lasso
(In r:3111|plus:3111) re #456: Removed Single wall calibration toolbox. Will be added back when the algorithm is stable enough to be used.

#### 2014-01-02, 20:38:51 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-28, 04:12:39 - Andras Lasso
The basic single-wall calibration seems to be very sensitive. You need to perform specific motion patterns, which is not easy to learn. Also, the result is very sensitive to the line segmentation results, so for practical use it seems to be necessary to digitization the wall plane using a tracked pointer. Altogether, it seems to be more complex and less robust than the mult-N-wire calibration. If somebody does not want to invest $50-$200 to a printed fCal phantom then calibration phantom can be built from Lego blocks (http://perk.cs.queensu.ca/contents/tracked-ultrasound-calibration-studies-phantom-made-legor-bricks).

#### 2014-05-28, 04:12:39 - Andras Lasso
status: changed from "New" to "Invalid"


## #457 Add temporal calibration with rotation motion
The old temporal calibration algorithm has been replaced by the correlation-based method. However, in case of the transrectal probe in a stepper there is no way to move the transducer closer/farther to a plane. Therefore, the calibration has to be supported using rotational motion.

#### 2012-04-26, 22:02:08 - Eric Moult
status: changed from "New" to "Accepted"

#### 2012-05-03, 09:20:51 - Csaba Pinter
Andras, do we still need this in reflection with the discussion with Tomi?

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-04, 16:35:05 - Andras Lasso
We don't need this feature anymore, as we'll use the wires in the calibration phantom for measuring position from image.

#### 2012-05-04, 16:35:05 - Andras Lasso
status: changed from "Accepted" to "Invalid"


## #458 Add automatic tests for temporal calibration
Add automatic tests for temporal calibration with translational and rotational motion.

#### 2012-04-26, 22:02:23 - Eric Moult
status: changed from "New" to "Accepted"

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:42:59 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #459 Add OpenIGTLink support for Plus
Add OpenIGTLinkTracker, OpenIGTLinkVideoSource and DataCollectorOpenIGTLink classes 

#### 2012-03-24, 04:19:01 - Tamas Heffter
(In r:1572) re #459: Added OpenIGTLink video and tracker support 

#### 2012-03-24, 04:38:39 - Tamas Heffter
Hi Tamas,

I made some changes and put into the 'development' branch in the repository at github.
The repository location is git://github.com/openigtlink/OpenIGTLink.git.
After cloning the repository in your local machine, please checkout 'development' branch
and you could find the new Socket class with SetReceiveTimeout() and SetSendTimeout()
functions. I left SetTimeout() function for the backward compatibility. SetTimeout() will
set timeout for both receiving and sending.

I haven't tried it on Windows yet. If you have any problem or question, please let me know.

Thanks,

Junichi

#### 2012-03-24, 04:38:39 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2012-03-25, 16:06:34 - Tamas Heffter
(In r:1575) re #459: Fixed code review comments. Simplified Tracker threading. 

#### 2012-03-26, 19:15:33 - Tamas Heffter
(In r:1578) re #459: Added igtl TrackedFrame message handling to Plus. 

#### 2012-03-27, 21:50:14 - Tamas Heffter
(In r:1579) re #459: Send client info only if MessageType present

#### 2012-03-27, 22:41:05 - Tamas Heffter
(In r:1580) re #459: Added example config file for OpenIGTLink server. Display default message types and transform messages on connect. 

#### 2012-04-04, 21:17:58 - Tamas Heffter
(In r:1590) re #459: Added USMESSAGE message type and add Ultrasonix fields from sonix volume as custom filed to TrackedFrame. Added vtkPlusIgtlMessageFactory::AddMessageType function to reach factory from members. 


#### 2012-04-23, 19:41:47 - Tamas Heffter
(In r:1646) re #459: Defined OpenIGTLink version in PlusConfigure.h, added socket address query, fixed data collector file indexing problem. Allow data collector hardware device to run without tracker or video source defined in the configuration file. 

#### 2012-04-23, 23:11:49 - Tamas Heffter
(In r:1651) re #459: Changed GetSocketAddress to GetSocketAddressAndPort as implemented in OpenIGTLink 

#### 2012-04-26, 21:11:36 - Tamas Ungi
(In r:1662) re #459: Removed first failed attempt to make the OpenIGTLink server.

#### 2012-04-27, 17:11:37 - Tamas Heffter
(In r:1663) Fixed #459: Renamed vtkPlusOpenIGTLinkServer to PlusServer, added testing for PlusServer, changed vtkOpenIGTLinkVideoSource singleton implementation to multi instance approach  

#### 2012-04-27, 17:11:37 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2012-04-27, 17:33:57 - Tamas Heffter
(In r:1664) Fixed #459: Changed PlusServer to test connected clients only before we disconnect (it's more robust) 

#### 2012-04-27, 18:53:14 - Andras Lasso
About names:
* If an application works as server only or client only then we should have the 'server' or 'client' in the application name to make it clear.
* I think it would be good to include the 'OpenIGTLink' word in the name as well.
* The 'daemon' word is somewhat misleading, as it refers to a background process, while actually the server/client would be started explicitly by the user. Also the term is used on linux only. I think 'service' is more widely used.


#### 2012-04-27, 18:53:14 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-07-04, 21:30:46 - Andras Lasso
Removed all OpenIGTLink clients from Plus, only kept the PlusServer (OpenIGTLink server).

#### 2012-07-04, 21:30:46 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"

#### 2012-07-04, 21:30:46 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #460 Display temporal calibration warning if the correlation is not good enough
Currently we always return some result from the temporal calibration, even when the acquired signals don't correlate well.
Display a warning or error when the correlation is worse than a certain warning or error threshold.

* Add a GetTrackerVideoCorrelation() method that computes some kind of normalized metric (normalized cross-correlation?) of the fit.
* Return with PLUS_FAIL from GetTrackerLagSec if the correlation is worse than a certain threshold
* In fCal display an error if  GetTrackerLagSec fails, and maybe a warning if the correlation is unusually low

#### 2012-04-26, 22:02:33 - Eric Moult
status: changed from "New" to "Accepted"

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-07-30, 17:59:54 - Adam Rankin
assigned_to_id: changed from "EricMoult" to "rankin"

#### 2012-07-30, 17:59:54 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-07-30, 18:28:33 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-02, 18:11:36 - Adam Rankin
I've created a function GetBestCorrelation() which, depending on the value of SIGNAL_ALIGNMENT_METRIC, will compute the correlation for the best fit lag index (which I now store after computing the tracker lag).

Now, in order for the threshold *comparison in GetTrackerLagSec* to be valid, the computed value would have to be normalized across all metrics. Is this possible? Can the score of SSD be compared to the score of SAD or x-correlation?

*Or I could have N different threshold values, where N is the number of metrics used by the calculation.*

#### 2012-08-02, 18:21:31 - Andras Lasso
Please talk/write to Eric about what metric he would recommend based on his recent experiments.

Andras


From: Adam Rankin
Sent: 2012-08-02 3:12 PM

#### 2012-08-04, 01:53:35 - Eric Moult
I will use the approximately 200 calibration sequences that I have collected to see if an appropriate threshold can be found. I think that it sensible that, as Adam suggested, there are different thresholds for each metric (i.e. a threshold for correlation via SSD, a threshold for correlation via SAD, etc.). Because we have found SSD to be the most effective alignment metric in practice, estimating thresholds for SSD would be top priority.

#### 2012-08-07, 16:13:55 - Adam Rankin
(In r:1976|plus:1976) Fixed #460 Temporal calibration now offers much more feedback. It will also issue a warning if the result breaks a certain threshold. The thresholds are defined per-metric alignment type.

Currently, the values are set astronomically high so that the trigger won't be hit. When a proper threshold value is determined for each metric, they can be updated in the code.

#### 2012-08-07, 16:13:55 - Adam Rankin
status_updated_at: changed from null to "2012-08-07 16:13:59"

#### 2012-08-07, 16:13:55 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #461 Change DataCollector design to stream based devices 
The current implementation of data collector limits the number of devices to an imaging source and to a tracking source, also the implementation of the two sources are almost identical. 

Change the current vtkPlusVideoSource and vtkTracker classes to *vtkPlusDevice* as a common interface for devices. Create a *vtkPlusDeviceFactory* class for instantiate the hardware device libraries (the hardware device libraries should inherit from the  vtkPlusDevice interface library).  Each device can have multiple streams (like BMode+RF video stream) and the DataCollector should only work with the list of streams. When the applications requests a tracked frame from the data collector,  caller needs to specify the main stream (the one we used for matching timestamps), plus additionally some arbitrary number of streams (only the transforms will be retrieved from these and merged/interpolated into the tracked frame). 
In addition, the tracker classes can have multiple tools within a stream, so we can keep the vtkTrackerTool implementation within the tracker hardware devices (maybe we could rename it to *vtkPlusStreamTool*, so each stream could have multiple tools). 

Merge the current implementation of the VideoBufferItem and TrackerBufferItem classes and use only one *StreamBufferItem* class (each stream should have an PlusVideoFrame and custom field container, plus should be ready for transform interpolation). 
Merge the current vtkVideoBuffer and vtkTrackerBuffer to *vtkPlusStreamBuffer* class with all functions (timestamp filtering, transform interpolation, etc). 


*Current configuration file* 

~~~~
  <DataCollection StartupDelaySec='1.0'>
  <Tracker Type='Ascension3DG' BufferSize='500' Frequency='50' LocalTimeOffset='0.0' AveragedItemsForFiltering='20' >
    <Tool Name='Probe' PortName='0' />
    <Tool Name='Reference' PortName='1' />
    <Tool Name='Stylus' PortName='2' />
  </Tracker>

  <ImageAcquisition     Type='SonixVideo'    BufferSize='500'    FrameSize='820 616'  UsImageOrientation='UF'  />
  <OpenIGTLink>
    <Transform Name='ProbeToReference' SendTo='localhost:18944' />
    <Image SendTo='localhost:18944' />
  </OpenIGTLink>
  </DataCollection>

~~~~




*Proposed configuration file* 

~~~~
<DataCollection StartupDelaySec='1.0'>
  <Device Type='Ascension3DG' BufferSize='500' Frequency='50' LocalTimeOffset='0.0' AveragedItemsForFiltering='20' >
    <Stream Name=”Tracker”>
      <Tool Name='Probe' PortName='0' />
      <Tool Name='Reference' PortName='1' />
      <Tool Name='Stylus' PortName='2' />
    </Stream>
  </Device>

  <Device Type='SonixVideo' BufferSize='500' FrameSize='820 616' >
    <Stream Name=”AxialPlane”>
    </Stream>
    <Stream Name=”SagittalPlanePlane”>
    </Stream>
  </Device>

  <Device Type='SonixVideo' BufferSize='500' FrameSize='820 616'  UsImageOrientation='UF' >
    <Stream Name=”RF”> </Stream>
    <Stream Name=”BMode”> </Stream>
  </Device>

  <Device Type='OpenIGTLink'>
    <Stream Name=”AxialPlane” ServerName=”123123” >    </Stream>
    <Stream Name=”SagittalPlanePlane”>    </Stream>
  </Device>
</DataCollection>

~~~~


#### 2012-03-26, 20:16:25 - Tamas Heffter
image:cql18UD4ar4y2cacwqjQWU
Plus stream design 

#### 2012-03-26, 20:16:25 - Tamas Heffter
Attachment added: "PlusStreamDesign.jpg"

#### 2012-03-26, 21:26:09 - Andras Lasso
This design is required before implementing multiple video streams (for biplane US acquisition, stereo endoscope, RF/BMode simultaneous acquisition, full-frame/partial-frame interleaved acquisition, video acquisition by MicronTracker),

#### 2012-03-26, 21:26:41 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-04-18, 16:26:16 - Andras Lasso
Probably Csaba will work on that after May 9. Need to provide a solution for #476 as well.

#### 2012-04-18, 16:26:16 - Andras Lasso
assigned_to_id: changed from null to "pinter"

#### 2012-04-18, 17:36:07 - Tamas Heffter
That would be great because I'll need this pretty soon, so we could work parallel. 

#### 2012-05-31, 19:59:08 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-06-01, 15:32:39 - Csaba Pinter
(In r:1722) Re #461: WIP vtkPlusDevice class added as a common base class for vtkTracker and vtkPlusVideoSource; FrameRate and Frequency replaced with AcquisitionRate in the config files

#### 2012-06-01, 15:33:06 - Csaba Pinter
(In r:1723) Re #461: WIP vtkPlusDevice class added as a common base class for vtkTracker and vtkPlusVideoSource; Failing PlusApp test fixed

#### 2012-06-01, 16:56:42 - Csaba Pinter
(In r:1724) Re #461: WIP Renamed the UBC config files to match the convention and removed AcquisitionRate=-1 from them as it was misleading (setting invalid value while not in use); Cleaned up vtkSonixPortaVideoSource.cxx

#### 2012-06-01, 19:56:37 - Andras Lasso
(In r:1725) re #461: Fixed build errors of some hardware devices

#### 2012-06-01, 19:57:47 - Andras Lasso
(In r:1726) re #461: Removed accidentally committed test code

#### 2012-06-04, 21:13:21 - Csaba Pinter
(In r:1734) Re #461: WIP vtkPlusDevice extended with a GetTrackedFrame function that fills a tracked frame with the image or the transforms from the device by a certain timestamp.

#### 2012-06-05, 21:11:13 - Andras Lasso
(In r:1739) re #461: Fixed video AcquisitionRate parameter reading from configuration file

#### 2012-06-06, 22:36:32 - Csaba Pinter
(In r:1750) Re #461: WIP vtkUsSimulatorAlgo and its test brought to meet coding convention (and replaced non-vtk GetOutputImage function with the regular GetOutput); vtkUsSimulatorVideoSource class added

#### 2012-06-11, 15:42:14 - Csaba Pinter
(In r:1756) Re #461: WIP vtkUsSimulatorAlgo reads configuration (config files added); vtkUsSimulatorVideoSource ready (not tested yet); Unused FrameSize in ImageAcquisition removed from config files; UsSimlatorAlgoTestCompareBaseline fails for now

#### 2012-06-11, 17:05:26 - Csaba Pinter
(In r:1757) Re #461: Fixed UsSimlatorAlgoTestCompareBaseline test

#### 2012-06-11, 19:26:31 - Csaba Pinter
(In r:1759) Re #461: UsSimlatorAlgo and the test project renamed to include the vtk prefix as all other VTK projects; Fixed creating StenciledBackgroundImage in vtkUsSimulatorAlgo; vtkSavedDataVideoSource and vtkUsSimulatorVideoSource are now not singletons

#### 2012-06-11, 20:26:36 - Csaba Pinter
(In r:1761) Re #461: Removed unnecessary (and sometimes incorrect) logging from vtkUsSimulatorAlgoTest, formatting in vtkUsSimulatorAlgo

#### 2012-06-11, 20:41:04 - Csaba Pinter
(In r:1762) Re #461: Fixed build error in vtkUsSimulatorAlgoTest CMake

#### 2012-09-26, 17:55:15 - Adam Rankin
assigned_to_id: changed from "pinter" to "rankin"

#### 2012-09-26, 17:55:18 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.7.0"

#### 2012-09-26, 20:36:37 - Adam Rankin
image:dEGkqgcbKr4QtCacwqjQXA


#### 2012-09-26, 20:36:37 - Adam Rankin
Attachment added: "Streambaseddatacollection.png"

#### 2012-09-26, 20:38:30 - Adam Rankin
What do you guys think about this transition?

#### 2012-09-26, 20:39:04 - Adam Rankin
image:a104E-cbOr4Re3acwqjQWU


#### 2012-09-26, 20:39:04 - Adam Rankin
Attachment added: "Streambaseddatacollection.png"

#### 2012-09-26, 20:39:08 - Adam Rankin
Attachment added: "Streambaseddatacollection.png"

#### 2012-09-26, 20:39:30 - Csaba Pinter
I think a PlusDevice contains PlusStreams instead of being its subclass.

#### 2012-09-26, 20:41:11 - Adam Rankin
Does a data collector connect to multiple devices? Or is it a single device set, with multiple streams?

Edit: Updated attachment

Edit2: Ah yes, the proposed config file.

#### 2012-09-26, 20:42:55 - Adam Rankin
attachment_updated:filesize: changed from "57758" to "57624"

#### 2012-09-26, 20:42:55 - Adam Rankin
attachment_updated:description: changed from null to ""

#### 2012-09-26, 20:47:48 - Csaba Pinter
According to the proposed configuration in the ticket description, there are multiple devices with multiple streams.

#### 2012-09-26, 21:50:57 - Tamas Heffter
I just don't get the 1.7.Y diagram. After you do the vtkPlusStream, why do you need video and tracker stream again? There should be only one buffer for each stream (can be either video without tracker info, or tracker info without video data, or both), so all the current tracker and video classes could be inherited from the new vtkPlusStream and we could finally forget the tracker and video terms :-) 


#### 2012-09-26, 23:03:30 - Andras Lasso
Some thoughts...

h1. Requirements 

Use cases:
* Simultaneous RF-mode image acquisition and sending of B-mode converted RF data through OpenIGTLink
* Recording of images, potentially with different depth settings
* Simulated ultrasound image generation that corresponds to real tracking data
* Simultaneous acquisition of EM tracker and optical data for tracker validation
* Interleaved acquisition of full frames between continuous high-frame-rate acquisition of small-sector images
* Acquisition of stereo video data

Current devices:
* MicronTracker: provides two video streams (the left and right camera) and multiple tool tracking
* Ultrasonix: provides multiple video streams (e.g, one for each depth, sector size, B-mode/RF image type, for each transducer of a biplane probe) and optionally a tracking stream (when using a motorized transducer)
* Simulator: uses a stream as input that contains tracking data; provides an output stream that contains the same tracking data and corresponding simulated image
* Simple tracker and video sources

h1. Potential design 

* Stream: For each timestamp one stream may contain a sequence video frame and/or a number of transforms. A stream stores not just the latest data but at least a couple of seconds (to allow other devices to retrieve data before it is overwritten and allow interpolation). Streams are basically input/output ports of devices. Each stream is identified by its string ID.
* Device: Each device is independent, has its own thread. Each device can pull data from a hardware device or any defined streams (provided by other devices). Devices may own one or more streams, these are the output streams of the device. Devices acquire data and maintain their own internal buffers. Challenge: how to avoid actually copying the pixel data when multiple device refer to the same frame. Potential solution: have a shared list to that stores the pixels of video frames, using reference counting; need to pay attention to avoid memory reallocation, minimize the overhead due to locking, blocking the acquisition in a fast device because a slower device is still processing the output of the fast device, ...). Dynamic behavior of devices: For the sake of simplicity, the input and output streams for each device are defined statically in the config file, they cannot be changed during runtime. Devices may be started/stopped producing output at any time.
* DataCollector: To generalize the datacollector, which currently mixes data of 1 tracking-only and 1 video stream we can define virtual devices. Virtual devices perform the data interpolation and mixing tasks of the datacollector by combining or augmenting existing streams (actually, the simulator device is already such a device). We can keep a singleton DataCollector to instantiate and configure the devices based on the device set config file. The DataCollector could also serve as a central registry that devices could use to declare their own output streams and to retrieve data from other streams.

Virtual (software) devices:
* Mixer: mixes tracking data from multiple streams with one image stream; performs the matching and interpolation tracking data to video data (currently implemented in datacollector)
* Disk storage: stores the input stream contents in file
* Memory storage: collects input stream contents in RAM (very similar to datacollector)
* OpenIGTLinkServer: uses multiple streams as input; does not provide stream output, just sends the input data through OpenIGTLink
* Switcher: uses multiple streams as input (that may contain tracking and video data) and provides the latest received data on the output; mapping from transform names is defined for each input stream; useful for transferring multiple input streams on one output stream (e.g., when sending the latest US image through OpenIGTLink, regardless of the imaging depth)
* RF/B-mode converter


#### 2012-09-27, 17:04:58 - Adam Rankin
attachment_updated:filesize: changed from "57624" to "53764"

#### 2012-09-27, 17:08:28 - Adam Rankin
attachment_updated:filesize: changed from "53764" to "58229"

#### 2012-09-28, 17:48:23 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2012-09-28, 17:58:29 - Adam Rankin
attachment_updated:filesize: changed from "58229" to "66349"

#### 2012-09-28, 19:56:59 - Adam Rankin
With regards to each device having its own thread, should this be the case even for virtual devices?

#### 2012-09-28, 22:55:09 - Andras Lasso
Yes, I think the simplest solution is to have a thread in each device (even in virtual devices).

#### 2012-10-01, 14:37:23 - Adam Rankin
Edit: config file removed, needs revisions.

#### 2012-10-01, 17:40:42 - Andras Lasso
The string-based links between devices, device hierarchies, and streams seems not just hard to read, and hard to write (the config file generator is not a simple solution), but also requires lots of additional error checking in the code. Also, the proposed config file structure does not correspond to the physical reality (a device 'owns' streams), which always complicates the implementation.

What is the advantage of the proposed config file structure?

#### 2012-10-01, 20:43:49 - Adam Rankin
attachment_updated:filesize: changed from "66349" to "66220"

#### 2012-10-02, 14:34:40 - Adam Rankin
A few questions regarding behaviour:

Say the US operator wants to change the depth setting. Would they change the depth setting on the US machine and our software would detect that change? Or would we ask them to change to their desired depth through fCal?

#### 2012-10-02, 15:05:07 - Tamas Ungi
In case of PlusServer, the only way is to turn the knob on the US machine. So PLUS would have to detect this anyway.

#### 2012-10-02, 15:09:09 - Andras Lasso
In some interfaces we can request the depth change (e.g., Ultrasonix), on other systems we can only get notification (e.g., BK), while on some others we need some special processing or manual interaction to find out that the depth has changed (e.g., framegrabber; in this case a potential solution is to do OCR to read the depth that is dispayed on the screen).

For calibration we don't really have to worry about dynamic change of the depth. We can expect the users to not change the depth _during_ calibration. However, the depth may be changed at any time during data acquisition or live streaming to Slicer.

#### 2012-10-02, 17:12:40 - Adam Rankin
I've come up with a new config layout. It allows the pipeline style approach I propose by defining a device as an aggregate of input streams and output streams.
In this manner, you can connect devices in any way you like, and it will simply operate on the data provided to it.
This config can be used for either 'smart' devices or devices that required the operator to signal a change.

*Proposed configuration file* 

~~~~

<DataCollection StartupDelaySec='1.0'>
  <Device Type='Ascension3DG' BufferSize='500' Frequency='50' LocalTimeOffset='0.0' AveragedItemsForFiltering='20' >
    <OutputStream Id='AscensionTracker'>
      <Tool Id='Probe' PortName='0'/>
      <Tool Id='Reference' PortName='1'/>
      <Tool Id='Stylus' PortName='2'/>
    </OutputStream>
  </Device>

  <!-- if smart device: will poll device to see if parameters have changed, if so, will output on the stream that
      matches the new parameters -->
  <Device Type='SonixVideo' SomeParam='no' Threaded='yes' >
    <RfProcessing>
      <RfToBrightnessConversion NumberOfHilberFilterCoeffs='32.0' BrightnessScale='20.0'/>
      <ScanConversion TransducerName='Ultrasonix_L9-4/38'
        TransducerGeometry='LINEAR'
        ImagingDepthMm='55.0'
        TransducerWidthMm='38.0'
        OutputImageSizePixel='220 300'
        OutputImageSpacingMmPerPixel='0.2 0.2'        
      />
    </RfProcessing> 
    <OutputStream Id='SonixVideo' />
    <InputStream Id='SonixVideoAxialPlaneRFMode' BufferSize='500' FrameSize='820 616' ... />
    <InputStream Id='SonixVideoAxialPlaneBMode' BufferSize='500' FrameSize='820 616' ... />
    <InputStream Id='SonixVideoSagittalPlaneRFMode' BufferSize='500' FrameSize='820 616' ... />
    <InputStream Id='SonixVideoSagittalPlaneBMode' BufferSize='500' FrameSize='820 616' ... />
  </Device>

  <!-- smart converter won't do any work if the output is already b-mode -->
  <Device Type='VirtualRFToBModeConverter' SomeParam='yes' Threaded='yes' />
    <OutputStream Id='RFToBModeConverter' />
    <InputStream Id='SonixVideo' />
  </Device>

  <Device Type='OpenIGTLink' ServerName='123123'>
    <OutputStream Id='OpenIGTLinkServer' />
    <InputStream Id='RFToBModeConverter' />
  </Device>

  <!-- fCal knows about all VirtualTrackedFrameListProducer devices, can select to visualize one at a time -->
  <Device Type='VirtualTrackedFrameListProducer'>
    <OutputStream Id='TrackedFrameOutput' />
    <InputStream Id='SonixVideo' />
    <InputStream Id='Probe' />
    <InputStream Id='Reference' />
    <InputStream Id='Stylus' />
  </Device>
</DataCollection>

~~~~


#### 2012-10-12, 15:05:06 - Adam Rankin
(In r:2167|plus:2167) re #461 Merging vtkTrackerBuffer and vtkVideoBuffer into a single vtkPlusDataBuffer.

It is simply the merging of the two, combination of the class definitions and merging of functionalities in places where it diverged.

Updated all calls/requests/project configuration to match.

Temporarily placed in vtkPlusCommon to avoid circular dependencies, final location will be vtkDataCollector.

#### 2012-10-12, 18:59:37 - Adam Rankin
(In r:2169|plus:2169) re #461 Fixing the build. Replaced all instances of vtkTrackerBuffer and vtkVideoBuffer with vtkPlusDataBuffer

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-15, 15:02:40 - Andras Lasso
The config file structure proposed in https://www.assembla.com/spaces/plus/tickets/461#comment:172646133 looks good. There is only one important note: the SonixVideo should have multiple output streams, e.g., one for each transducer and for each permitted depth. The pairing of images with transforms should be done separately for each output stream (there would be multiple 'VirtualTrackedFrameListProducer' device. Finally, to send all outputs through one single device there should be a stream switcher device that can redirect multiple inputs to one output stream by switching between them.

By the way, the VirtualTrackedFrameListProducer is actually a stream mixer device, so we should just use this standard name (rename 'VirtualTrackedFrameListProducer' to 'StreamMixerDevice' or something similar).

#### 2012-10-16, 19:04:30 - Adam Rankin
(In r:2181|plus:2181) re #461 Changing vtkDataCollector to be a child class of vtkObject instead of vtkImageAlgorithm. Changed vtkPlusDevice in be a child of vtkAlgorithm instead of vtkImageAlgorithm.

Clients of vtkDataCollector now request the latest tracked frame from the data collector. They can then request the vtkImageData from the underlying PlusVideoFrame.

This precludes the changes to merging vtkPlusVideoSource and vtkTracker. It will allow vtkPlusDevice to participate in the vtk pipeline using vtkPlusStream(s).

#### 2012-10-16, 20:04:02 - Adam Rankin
(In r:2182|plus:2182) re #461 fixing build, I missed a file

#### 2012-10-22, 13:47:24 - Adam Rankin
(In r:2194|plus:2194) re #461 updating multistream branch to latest trunk to make the end process easier on myself

#### 2012-10-22, 19:11:48 - Adam Rankin
(In r:2195|plus:2195) re #461 changing data collector to new API. changing vtkTracker and vtkPlusVideoSource to vtkPlusDevice

todo: change vtkAlgorithm implementation to work on vtkPlusStream instead of vtkImageData
todo: finish merging old vtkDataCollector functionality into vtkStreamMixerDevice

#### 2012-10-23, 17:37:24 - Adam Rankin
(In r:2200|plus:2200) re #461 Adding stream creation/init/connection code.

#### 2012-10-26, 12:57:50 - Adam Rankin
(In r:2207|plus:2207) re #461 clean build

outstanding: 
-transfer last of functionality from old datacollector to vtkvirtualstreammixer
-handle multiple output streams

#### 2012-10-30, 21:21:59 - Adam Rankin
(In r:2214|plus:2214) re #461 folding trunk into branch

adding functionality to virtual stream mixer device

moving functionality to vtkPlusDevice. now any vtkPlusDevice can output a tracked frame of its buffers

#### 2012-12-06, 18:47:17 - Adam Rankin
I would like to create tickets for each use case as each one will require its own solution.

I would then like to close this ticket and open each use case ticket one at a time for more accurate recording of task completion.

Thoughts?

#### 2012-12-06, 18:49:18 - Csaba Pinter
Definitely. No need to keep this already quite persistent ticket for everything.
But you can link those to this one.

#### 2012-12-06, 23:58:34 - Andras Lasso
I think it's time to increase the major version number (Plus-2.1.0), as multi-stream is a major new functionality and we may want to break backward compatibility. If everything is backward compatible then the version change is not urgent but should be done sometime before the first stable release is published.

A release might be useful from the version that was created just before the multi-stream merge (Plus-1.7.x), as if there was any problem the user could easily try the pre-multi-stream version to see if the root cause of the issue should be searched for in multi-stream specific part of the code.


#### 2012-12-07, 17:04:29 - Adam Rankin
I agree with a 2.1 release.

It will no longer be backward compatible as the format of the configuration files is changing. I would recommend doing all the appropriate work to stabilize and release Plus-1.8 and then merge the multistream under Plus-2.1.

#### 2012-12-17, 20:24:23 - Adam Rankin
Please see tickets for each use case as I address them.

#### 2012-12-17, 20:24:23 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-12-18, 16:21:51 - Andras Lasso
@rankin: I’ve started to review your multi-stream developments. You’ve done a great job in doing all the reorganization, redesign, and implementation work. I have a few questions, comments – see below. This was just a quick first round, let me when you finished the image buffer structure reorganization and then I do some more review.

---

1)  PlusConfiguration_VideoNone_3dConnexion.xml  => How the PlusOpenIGTLinkServer knows which OutputStream to observe?

2)  How fCal knows which OutputStream to observe?

3)  In the sample config files we should use standard device and stream names, corresponding only to the role of the device and stream. It would make them easier to understand and maintain.

Example:
    <Device Id='DeviceAscension3DG' … >
      <OutputStream Id='Output3DG' >   …   </OutputStream>
    </Device>
    <Device Id='DeviceSonixVideo' ... >
        <OutputStream Id='SonixOutput' … />
    </Device>
    <Device Id='FinalMixer' …>
      <OutputStream Id='Final'/>
    </Device>
=>
<Device Id='TrackerDevice' … >
      <OutputStream Id='TrackerStream' >   …   </OutputStream>
    </Device>
    <Device Id='VideoDevice' ... >
        <OutputStream Id='VideoStream' … />
    </Device>
    <Device Id='TrackedVideoMixerDevice' …>
      <OutputStream Id='TrackedVideoStream'/>
    
</Device>

Maybe we could find a better name for “TrackedVideoMixerDevice” and “TrackedVideoStream” (maybe TrackedUltrasoundMixerDevice, TrackerVideoMixerDevice, …).

4)  Can you define multiple OutputStream elements? Maybe it would be nicer to have a child element that would contain all the output stream elements, just to separate better from other child elements.

5)  How do you define if you want the video data in the output stream? I see how you can select transforms, but I don’t see how you can select if you want to output the video (and if the device can provide multiple video channels, which video channel).

6)  The output stream definition should be somewhat more generic, less hardware-independent. Instead of talking about connected “tools” and video we should talk about transforms and images (similarly to how PlusOpenIGTLinkServer inputs are defined).

Example:
    <Device …
        <Tool Name='Probe' PortName='0'></Tool>
        <Tool Name='Reference' PortName='1'></Tool>
        <Tool Name='Stylus' PortName='2'></Tool>
        <OutputStream … >
          <Tool Name='Probe'/>
          <Tool Name='Reference'/>
          <Tool Name='Stylus'/>
        </OutputStream>
      </Device>
=>
    <Device …
        <Tool Name='Probe' PortName='0'></Tool>
        <Tool Name='Reference' PortName='1'></Tool>
        <Tool Name='Stylus' PortName='2'></Tool>
        <OutputStream … >
          <Transform Name='Probe'/>
          <Transform Name='Reference'/>
          <Transform Name='Stylus'/>
          <Image Name=”CameraLeft”>
        </OutputStream>
      </Device>

7)  Would it make sense to implement the PlusOpenIGTLinkServer in Device? There would be some small advantages. I’m not sure if there were any disadvantages. Some advantages: It might be somewhat more consistent if all the outputs are implemented as virtual devices (e.g., save to disk, stream to OpenIGTLink); OpenIGTLink server functionality could be easily added to applications, such as fCal; it could be quite simple to define multiple PlusOpenIGTLinkServer instances with different streams (e.g., one stream with tracking only, another stream with tracked video).

8)  Don’t use smart pointers in method arguments, it just makes things harder to read and it may also result in extra copying

Example:
PlusStatus vtkPlusStream::GetBuffer( vtkSmartPointer<vtkPlusStreamBuffer>& aBuffer, int port )
=>
PlusStatus vtkPlusStream::GetBuffer(vtkPlusStreamBuffer*& aBuffer, int port )

9)  Getting a buffer item is a very expensive operation (it may allocate memory for an image frame and copy all the pixels and fields), so it should be only used when we actually need that data. For example, the usage in bool vtkPlusDevice::GetVideoDataAvailable() does not seem to be justified.


#### 2012-12-18, 20:50:45 - Adam Rankin
1) The OpenIGTLinkServer requests the tracked frame list from the data collector, which returns GetTrackedFrame from the currently selected device
2) fCal requests devices from the data collector. only devices that have Selectable='true' in their configuration will be visible. At the moment fCal does not allow individual stream selection.
3) The device and stream IDs can be anything. Did you mean for the config files in the repository?
4) You can define multiple OutputStream elements. The first working example of this will be the Sonix depth change adapting use case that I will create.
5) That is resolved with the work I am currently doing on the image buffers
6) It would be as easy as renaming the tag from 'Tool' to 'Transform'. Images will be addressed in my latest change
7) I think so! However it will probably be lower priority compared to the crash fixes and use cases in this ticket.
8) Won't this break the reference counting?
9) That function will also be addressed in the upcoming image buffer change

#### 2013-01-29, 19:37:16 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-01-29, 19:37:32 - Adam Rankin
Closed as the overall architecture change has been completed. Individual problems will be addressed in new tickets.


## #462 Revise sonix volume reader class
The current implementation of sonix volume reader is using the old image handling, needs to revise. 

#### 2012-03-29, 18:31:28 - Tamas Heffter
(In r:1583) Fixed #462: Simplified vtkSonixVolumeReader class

#### 2012-03-29, 18:31:28 - Tamas Heffter
status: changed from "New" to "Fixed"


## #463 TrackedFrame::SetTimestamp function should add value to custom fields 
Add timestamp as a custom field on SetTimestamp function call and also set Timestamp member variable if we set the Timestamp as a custom field 

#### 2012-03-29, 22:47:27 - Tamas Heffter
(In r:1585) Fixed #463: Save timestamp as a custom field 

#### 2012-03-29, 22:47:27 - Tamas Heffter
status: changed from "New" to "Fixed"


## #464 Add timestamp increment to EditSeqMetafile app 
Add option to EditSeqMetafile app to increment timestamps on multiple tracked frame list  input (like if we want to merge multiple tracked frame lists we need to increment the timestamps, because we start counting from 0 every time) 

#### 2012-03-29, 22:51:18 - Tamas Heffter
(In r:1586) Fixed #464: Added increment timestamp option to EditSeqMetaFile 

#### 2012-03-29, 22:51:18 - Tamas Heffter
status: changed from "New" to "Fixed"


## #465 Add support for Epiphan framegrabbers
Standalone VTK implementation ready, it provides DVI capture at 1648x1024 (this resolution allows side-by-side acquisition of two imaging streams), 24 bits, 60fps capture.
http://www.epiphan.com/products/frame-grabbers


#### 2012-05-22, 15:18:27 - Andras Lasso
Chris, could you share the existing VTK classes that you have for interfacing with Epiphan framegrabbers?

Vikas & Andinet from Kitware would be ready to implement the Epiphan framegrabber support in Plus and they could benefit from seeing an existing implementation.

thanks!

#### 2012-05-22, 15:18:27 - Andras Lasso
assigned_to_id: changed from "cwedlake" to "vikasrs"

#### 2012-05-22, 15:26:24 - Andinet Enquobahrie
I agree. In that way, we do not have to reinvent the wheel. 


#### 2012-05-22, 18:49:12 - cwedlake
You bet.  Where you want it uploaded?  Still needs some work so there will be minor changes but it is doing everything we need to right now.

#### 2012-05-22, 18:53:22 - Andinet Enquobahrie
Great. You can zip it up and upload it to our simplified web-based file uploader. 

http://www.kitware.com/cgi-bin/uploadfile.cgi

We will then test it, clean it up and add it to PLUS code base.

thanks,
Andinet

#### 2012-05-22, 19:17:00 - cwedlake
Should be uploaded.  Only tested under windows.  I know it won't build under linux/mac only because of me using windows.h and strncmp_s but those should be simple fixes.  There isn't much to it either.  the thing i found the most frustrating was the clipping until i figured out the rounding to multiples of 4.

I added the epiphan DLLs/libs and headers I had in the project although I am not sure that they are all required.

#### 2012-05-22, 19:24:01 - Andinet Enquobahrie
Got it. Thanks!!

#### 2012-05-23, 01:29:56 - cwedlake
No problem.  We are using it at a 1650x1050 (or clipped to 1648x1050 - or smaller) resolution only because that is what the IE 33 US machine is spitting out.  It should be able to handle higher resolutions and other frame rates but I have only tested it on a 1920x1200 output as well and that seemed fine.  Never tested to much clipping with other resolutions but it should still work the same.  I think the comments say a different resolution so just wanted to let you know.

#### 2012-05-23, 21:42:12 - Vikas Revanna Shivaprabhu
Andras,

I noticed that the VTK classes Chris has written uses base class vtkVideoSource and not vtkPlusVideoSource. I understand that earlier versions of PLUS used vtkVideoSource. Will I be able to link Epiphan to fcal without having to make changes to Chris' code ? In not, what is the best approach to make changes to the code so that it uses vtkPlusVideoSource. 

Thanks
Vikas



#### 2012-05-23, 22:40:30 - Andras Lasso
You have to use vtkPlusVideoSource as a base class, which is very different from the old vtkVideoSource class, so probably several changes are needed. I would suggest to clone and rename the ICCapturing class (it's a framegrabber class, should be quite similar to the Epiphan video source class) and override the following methods:
* InternalConnect
* InternalDisconnect
* InternalStartRecording
* InternalStopRecording
* AddFrameToBuffer
* ReadConfiguration
* WriteConfiguration

 You can also have a look at VideoForWindows, and SonixVideo classes as examples.


#### 2012-05-24, 15:42:50 - Andras Lasso
Vikas, it would be good to commit your code regularly so that we can follow the progress and give suggestions. It does not matter if it does not work or does not compile, as long as the code is not built by default.

I would propose the following steps:
* Create an EpiphanVideo directory in PlusLib\\src\\ImageAcquisition
* Copy the files that you received from Chris as is into the EpiphanVideo directory
* Copy the files from PlusLib\\src\\ImageAcquisition\\ICCapturing to the EpiphanVideo directory and rename them to vtkEpiphanVideoSource*
* Commit all the files
* Introduce a PLUS_USE_EPIPHAN_VIDEO build option (disabled by default) => I can do it for you, just let me know
* Add the required SDK files (only headers, static libs, dlls; skip samples and other non-essential files) to PlusLib\  ools\\Epiphan\\ so that the developers don't have download the SDK separately
* Update the vtkEpiphanVideoSource class with functions retrieved from Chris' implementation

Let me know if you need any help in completing the above steps.


#### 2012-05-24, 15:49:52 - cwedlake
is vtkPlusVideoSource build off of vtkVideoSource or vtkVideoSource2?  Everything I did with epiphan was done using vtkVideoSource as the base so if it inserts frames into the buffer differently then that will be something that needs to be changed as well.

#### 2012-05-24, 16:05:13 - Andras Lasso
The vtkPlusVideoSource does not have any resemblance to either vtkVideoSource or vtkVideoSource2. So I think the best approach is what I described above: implement the connect/disconnect/add frame/... methods using Chris' implementation as an example.


#### 2012-05-24, 16:27:53 - cwedlake
Whatever works for me, i was just warning that the inserting into the buffer could be different but if it doesn't match either then it is irrelevant.

#### 2012-05-24, 17:00:30 - Vikas Revanna Shivaprabhu
Andras,

I will check in the code with the changes/additions. Should I commit the changes to plus/trunk ? This is from where I checked out the code.

Thanks
Vikas

#### 2012-05-24, 17:00:30 - Vikas Revanna Shivaprabhu
status: changed from "New" to "Accepted"

#### 2012-05-24, 17:54:51 - Vikas Revanna Shivaprabhu
Chris,

You are right. The way frames are inserted into to the buffer is different with vtkVideoSource and vtkPlusVideoSource. The entire inserting to the buffer part should be rewritten. And standard VCR methods can no longer be used. There is the InternalStartRecording and InternalStopRecording instead. 

#### 2012-05-24, 18:02:32 - Vikas Revanna Shivaprabhu
Chris,

I see that you have used a spawn thread to grab the frames, like so PlayerThreader->SpawnThread((vtkThreadFunctionType)\\  &vtkEpiphanVideoSourceRecordThread,this);
Can you tell me if creating a separate thread is part of vtkVideoSource's method to grab frames ? I don't see this methodology being used in the sample code that comes with Epiphan SDK.

Thanks
Vikas 

#### 2012-05-24, 19:44:44 - Andras Lasso
Should I commit the changes to plus/trunk? => yes

'standard VCR methods can no longer be used' => It's an advantage that you don't have to implement the VCR methods, just simple initialization and grabbing methods. We started with the VCR-like implementation but it turned out that it is a really bad model of what's happening: the VCR model is more complex and at the same time more limiting than necessary.

If the framegrabber driver calls a callback function whenever a new frame is available then you don't need to start your own thread. A typical example is the vtkICCapturingSource.

If the driver just gives you API for requesting frames one-by-one then you can use the SpawnThreadForRecording functionality in the vtkPlusVideoSource base class. It starts a thread that calls the InternalGrab function at regular intervals. This method is used by the vtkOpenIGTLinkVideoSource and vtkSavedDataVideoSource classes.


#### 2012-05-24, 20:25:39 - Vikas Revanna Shivaprabhu
Thank you for the suggestions.  You saved me some hardship. I was just looking at how to proceed without the callback function. Epiphan API provides functionality to request frames one-by-one and does not have a callback function that can be registered when a new frame arrives.

I will take a look at SpawnThreadForRecording. 

#### 2012-05-25, 01:03:53 - Vikas Revanna Shivaprabhu
(In r:1713) re #465: Epiphan video grabber support
Major changes done to vtkEpiphanVideoSource
Device now connects successfully in fcal. 

#### 2012-05-25, 13:48:59 - Andras Lasso
Very good! A few suggestions for the code:
*   You've implemented the timestamping correctly (you don't specify a timestamp for this->Buffer->AddItem, so the current time is used). The vtkAccurateTimer has a 1ms resolution, and much more reliable and accurate than vtkTimerLog::GetUniversalTime,  GetSystemTime, etc., so you can remove the other time functions.
* Need to delete this->cropRect in the destructor
* Read serialNumber from the config file (just add a few lines for read/write in the ReadConfiguration/WriteConfiguration functions)
* Change char serialNumber[15] to char *serialNumber, initialize it to 0 in the constructor, use VTK set macros to set its value, and delete in the destructor (you can set it to NULL with the VTK set macro)
* In InternalStartRecording and InternalStopRecording you should call FrmGrab_Start and FrmGrab_Stop (according to Epiphan documentation it is not essential for local framegrabbers, but critical for network grabbers)
* In vtkEpiphanVideoSource::InternalGrab   if (frame == NULL)  { return PLUS_SUCCESS;  } is strange. It looks to be an error case, so you should log an error or a warning and consider with returning PLUS_FAIL


#### 2012-05-25, 16:06:43 - Vikas Revanna Shivaprabhu
(In r:1714) re #465
* Removed timing vtkTimerLog function. Time stamp now done internally by PLUS
* Added delete this->cropRect in destructor
* Added FrmGrab_Start and FrmGrab_Stop in InternalStartRecording and InternalStopRecording
* Added error message if frame==NULL and changed return value to PLUS_FAIL
* The following specification can read from configuration file:
   SerialNumber
   VideoFormat - Support for RGB8 and Y8 (default Y8)
   CropRectX, CropRectY,CropRectWidth,CropRectHeight (default NULL)
* Cleaned the code
* Ready to be tested by others

#### 2012-05-25, 16:44:47 - Andras Lasso
(In r:1715) re #465: Cleaned up Epiphan build (remove hardcoded paths)

#### 2012-05-25, 16:45:17 - Andras Lasso
(In r:1716) re #465: Cleaned up Epiphan build (removed hardcoded paths)

#### 2012-05-25, 16:48:01 - Andras Lasso
Thanks Vikas. We've ordered an Epiphan USB2VGA LR. We'll test the class when we receive the device.

#### 2012-05-30, 19:36:55 - Andras Lasso
(In r:1719) re #465: Added test for Epiphan framegrabbers. Removed epiphan header file from the public API (vtkEpiphanVideoSource.h). Renamed XML attributes for clipping rectangle definition to: ClipRectangleOrigin and ClipRectangleSize.

#### 2012-05-30, 19:45:39 - Andras Lasso
(In r:1720) Fixed #465: Tested Epiphan framegrabber and everything worked well. Removed configuration warning when Epiphan framegrabber was selected.

#### 2012-05-30, 19:45:39 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-05-30, 20:24:16 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-06-04, 23:22:53 - Andras Lasso
(In r:1737) Fixed #465: Changed Epiphan video source to not log a warning if device serial number is unspecified (just do auto-detect silently)


## #466 Implement OCR functionality to read ultrasound imaging parameters from grabbed screens
Preliminary implementation is already available. Need to be integrated into Plus.

Integration steps:
* Develop a configuration GUI widget to set up and test the OCR parameters (position of text fields, US image, etc.). There is a similar widget in Plus for setting the image position and some segmentation parameters – this new widget could work similarly (see https://www.assembla.com/code/plus/subversion/nodes/trunk/PlusApp/CommonWidgets/SegmentationParameterDialog.*)
* Integrate the algorithm  into Plus (algorithm code, configuration GUI, simple test app, test data sets, automatic non-regressions tests)


#### 2013-05-15, 19:58:54 - Adam Rankin
assigned_to_id: changed from "cwedlake" to null

#### 2015-06-06, 13:33:05 - Andras Lasso
Direct digital interface is available to a number of ultrasound devices with good image quality and ability to change parameters. Compared to this, OCR is very limited, therefore it is not worth investing time into this.

#### 2015-06-06, 13:33:05 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2016-01-25, 17:50:21 - Adam Rankin
An Corp!

#### 2016-01-25, 17:50:21 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-25, 17:50:21 - Adam Rankin
status: changed from "Invalid" to "Accepted"

#### 2016-01-25, 17:50:26 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2016-01-25, 17:50:31 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2016-01-25, 17:50:54 - Adam Rankin
re #466 explore tesseract library for OCR functionality
Commit: r:4467|plus:4467

#### 2016-01-25, 17:52:07 - Adam Rankin
re #466 pointing Lib/App to branch
Commit: r:4468|plus:4468

#### 2016-01-26, 19:48:43 - Adam Rankin
re #466 working external project for adding OCR library tesseract
Commit: r:4470|plus:4470

#### 2016-01-27, 22:59:41 - Adam Rankin
re #466 finding tesseract from pluslib if enabled
Commit: r:4473|plus:4473

#### 2016-01-27, 23:09:15 - Adam Rankin
re #466 Updating build to include dependencies and add proper install command for tesseract
Commit: r:4474|plus:4474

#### 2016-01-27, 23:10:19 - Adam Rankin
re #466 adding dependency and updating tesseract repo to plustoolkit instead of pluslibrary
Commit: r:4475|plus:4475

#### 2016-01-28, 15:54:23 - Adam Rankin
re #466 successful build with leptonica, tesseract external projects
Commit: r:4476|plus:4476

#### 2016-01-28, 15:54:49 - Adam Rankin
re #466 wip: adding screen reader virtual device using tesseract OCR library
Commit: r:4477|plus:4477

#### 2016-01-28, 16:21:55 - Andras Lasso
I guess the class will not be specific to screen reading. So, I would suggest renaming it to vtkVirtualTextReader, vtkVirtualTextRecognizer or something similar. No need to rename it now, as during implementation the actual content and scope of the class may change.

It would be nice to be able to define rectangles where you read numbers, associate each of them with a name, and then use vtkFunctionParser to compute transformation matrix from a user-defined formula. You can use 'if' in vtkFunctionParse, so you can construct any formula. Most of the times a simple linear formula such as scaling = windowHeight/depth would not work, as the ultrasound software can arbitrarily change the transducer origin position in the image on and window size as the image depth is changed.

#### 2016-01-28, 16:23:19 - Adam Rankin
Agreed.

Agreed very much. I haven't even scoped the functionality of the device, I am just testing the tesseract engine. When I've determined that it actually works (or not) we can move forward with a feature discussion!

#### 2016-01-28, 17:58:22 - Adam Rankin
re #466 Only checking for tesseract if it was requested
Commit: r:4478|plus:4478

#### 2016-02-05, 00:58:22 - Adam Rankin
re #466 Cleaning up tesseract detection to only data collection project.

Adding teseract related details to config output

Updating screen reader to use tesseract API
Commit: r:4482|plus:4482

#### 2016-02-05, 00:59:43 - Adam Rankin
re #466 Updating tesseract download script to grab correct revisions of libraries
Commit: r:4483|plus:4483

#### 2016-02-05, 01:02:47 - Adam Rankin
re #466 Merged revision(s) 4467-4483 from branches/rankin-sandbox-OCR/PlusBuild:
Merged revision(s)  from branches/rankin-sandbox-OCR/PlusApp:
Merged revision(s) 4467-4483 from branches/rankin-sandbox-OCR/PlusLib:
Commit: r:4484|plus:4484

#### 2016-02-05, 04:36:02 - Adam Rankin
re #466 Updating build details to point to correct branch
Commit: r:4485|plus:4485

#### 2016-02-05, 04:42:02 - Adam Rankin
re #466 Upgrading tesseract tags to the latest
Commit: r:4486|plus:4486

#### 2016-02-05, 15:21:26 - Adam Rankin
re #466 Updating screen reader to convert from vtkImageData to leptonica PIX
Commit: r:4487|plus:4487

#### 2016-02-06, 17:16:37 - Adam Rankin
re #466 In progress: augmenting screen reader device to read configurable fields
Commit: r:4488|plus:4488

#### 2016-02-07, 22:27:50 - Adam Rankin
re #466 user configurable screen region reading
Commit: r:4489|plus:4489

#### 2016-02-08, 13:55:27 - Adam Rankin
re #466 Grabbing latest tessdata with all languages but English removed (37MB vs 1.2GB)
Commit: r:4490|plus:4490

#### 2016-02-08, 23:22:01 - Adam Rankin
re #466 Renaming device to text recognizer to more accurately describe the devices function
Commit: r:4491|plus:4491

#### 2016-02-09, 22:54:42 - Adam Rankin
re #466 Installing zlib dll to correct path after build

Only including correct targets when finding zlib package

Updating tesseract to use latest dependencies
Commit: r:4493|plus:4493

#### 2016-02-10, 16:21:45 - Adam Rankin
re #466 Switching dependency from externally build zlib and png to libs provided by VTK
Commit: r:4494|plus:4494

#### 2016-02-10, 19:35:16 - Adam Rankin
re #466 Merging trunk intro branch

Merged revision(s) 4492-4495 from trunk/PlusLib:
1063: Add a new interface vtkCapistranoVideoSource to update US imaging parameters of Capistrano Ultrasound probe in on-line

........

Commit: r:4496|plus:4496

#### 2016-02-10, 23:20:12 - Adam Rankin
re #466 Merging trunk into branch

Updating us device to support more item addition
Commit: r:4497|plus:4497

#### 2016-02-14, 19:16:19 - Adam Rankin
re #466 Pass along build_testing to PlusLib
Commit: r:4500|plus:4500

#### 2016-02-14, 19:22:54 - Adam Rankin
re #466 Merging branch into trunk

Merged revision(s) 4500 from branches/rankin-sandbox/PlusBuild:
Pass along build_testing to PlusLib
........
Commit: r:4501|plus:4501

#### 2016-02-29, 16:40:29 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-03-07, 03:45:04 - Adam Rankin
re #466 Adding text recognizer test
Commit: r:4556|plus:4556

#### 2016-03-07, 15:12:07 - Adam Rankin
re #466 linux build fixes
Commit: r:4557|plus:4557

#### 2016-03-07, 15:16:29 - Adam Rankin
re #466 linux build fixes
Commit: r:4558|plus:4558

#### 2016-04-04, 15:08:21 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-04-04, 15:12:56 - Adam Rankin
re #466 Correcting line endings
Commit: r:4583|plus:4583


## #467 Add support for NDI optical trackers
Plus already supports NDI Certus and Polaris optical trackers, but they would require more thorough testing.

#### 2012-04-12, 20:52:38 - Elvis Chen
Please merge this with ticket 336.  With the combined-API from NDI, support for EM and optical (polaris) trackers are the same.

#### 2012-04-12, 21:12:21 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2012-08-31, 12:31:06 - Andras Lasso
assigned_to_id: changed from "chene" to "lassoan"

#### 2012-08-31, 12:31:06 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"


## #468 DataCollector file mode, look for data file next to config file.
It would be convenient to set up testing folders if the function that reads the DataCollector config file in File mode would look for the data file (SequenceMetafile) in the same folder where the config file is. So in a test data folder there would be a config file and a data file. The config file would just say ... SequenceMetafile='Test.mha' ... and the fCal applications would find Test.mha regardless of the absolute path.

#### 2012-04-02, 20:30:50 - Csaba Pinter
You can use relative path too.
If you enter a relative path, it will be relative to the directory that is given in PlusConfig.xml (which is in the same directory as your executable) in the attribute ImageDirectory.
If you set the ImageDirectory the same as DeviceSetConfigurationDirectory, then you get the behavior you described above.

#### 2012-04-03, 15:43:49 - Csaba Pinter
According to a discussion with Andras, Plus will look for relative path from two locations. Beside checking it from the ImageDirectory path defined in PlusConfig, it will also check relative from the loaded device set configuration file.

#### 2012-04-03, 15:43:49 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-04-03, 16:44:39 - Tamas Ungi
Great, that's just what I wanted to suggest. Thanks.

#### 2012-04-05, 20:37:11 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.2"

#### 2012-04-05, 20:37:11 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-05, 20:39:19 - Csaba Pinter
(In r:1598) Fixed #468: Referenced image files are searched for relative to both the image directory (defined in PlusConfig.xml) and the current device set configuration directory; Duplicated configuration file removed, configuration files with the same device set name made to have different names

#### 2012-04-05, 20:39:19 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #469 Save PLUS version in device set configuration files
When we capture tracked image data and save it, the used configuration file is saved next to the metafile.
It would be useful if we knew the used PLUS version when we look up the data later.

#### 2012-04-11, 14:52:38 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.2"

#### 2012-04-11, 15:00:11 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-11, 15:42:07 - Csaba Pinter
(In r:1607) Fixed #469: Plus version and revision is saved in the configuration root element as an attribute named PlusRevision

#### 2012-04-11, 15:42:07 - Csaba Pinter
status: changed from "Accepted" to "Fixed"


## #470 Save any given transform in metafile
Now only the tool to tracker transforms are saved when saving a tracked frame list in metafile.
Sometimes it is needed to save another transform.

#### 2012-04-04, 16:32:40 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-04-04, 16:32:40 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-04-04, 18:07:47 - Csaba Pinter
(In r:1588) Fixed #470: EditSeqMetafile extended with ADD_TRANSFORM operation to be able to add any transform to a metafile

#### 2012-04-04, 18:07:47 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-04-05, 17:06:36 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.2"


## #471 Crash if DataCollector is connected and idle for a long time
If DataCollector (fCal or custom application) is connected to the devices and is idle for more than 30 minutes, the application crashes (screenshot about the crash url:https://www.assembla.com/spaces/plus/messages/1720553|here)


#### 2012-04-05, 21:07:58 - Csaba Pinter
Thomas Wolff also had this problem, but for him it crashed after approximately 4 minutes. When he uses TrackedUltrasoundCapturing from Plus 1.3.1, it does not crash this often.
As his log file (attached) indicates problems in the NDI tracker, I think it is in the acquisition code in the library.

#### 2012-04-05, 21:08:28 - Csaba Pinter
file:b9P1qQF2mr4AAPacwqjQWU
Thomas Wolff using NDI Certus with no video and fCal 1.5.1

#### 2012-04-05, 21:08:28 - Csaba Pinter
Attachment added: "040412_184022_PlusLog.txt"

#### 2012-04-10, 21:45:41 - Siavash Khallaghi
It crashed again after 20~30 minutes. I have attached the log file.

#### 2012-04-11, 02:32:00 - Andras Lasso
Siavash, could you post a link to the log file here?

#### 2012-04-14, 19:13:30 - Siavash Khallaghi
I was sure that I uploaded the log file. I will re-upload when I go back to UBC.

#### 2012-04-16, 19:45:22 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-05-04, 01:18:07 - Siavash Khallaghi
Is there any update on this ticket? I would appreciate a fix or even a work-around. Thank you.

#### 2012-05-04, 01:22:48 - Andras Lasso
We were waiting for the log and the config file. Could you attach them?

#### 2012-05-04, 10:00:23 - Csaba Pinter
We are on the issue, but without log files (in debug but rather trace level) it is difficult.
Thomas Wolff in the lab also met this issue and he is also trying to provide a good log for us to work with.

Siavash: I would appreciate your contribution in the form of a trace level log file and the corresponding configuration file, our job would be much easier that way. Thanks!

#### 2012-05-04, 10:00:23 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-05-04, 13:28:57 - Andras Lasso
Updating tickets (#417, #471, #174, #283, #308, #346, #411, #412, #427, #457, #458, #460)



#### 2012-05-04, 13:28:57 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.2" to "Release Plus-1.5.3"

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-05, 19:00:30 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-06-07, 15:33:47 - Andras Lasso
Tested data collection with NDI Polaris Spectra tracker and Epiphan framegrabber at 60 FPS acquisition using fCal (rev 1748, in debug mode). The application was running continuously for 16+ hours without any problem.

Need to do similar tests with other hardware devices, such as Ultrasonix video source and Ascension tracker.

#### 2012-06-07, 15:38:00 - Csaba Pinter
The shortest time it crashed was using the NDI Certus with no video. According to Thomas Wolff, sometimes it crashed after 5 minutes. It would be worth testing on that system.

#### 2012-07-09, 15:07:25 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-10, 19:31:38 - Adam Rankin
image:dEgjYuYSur4yC8acwqjQXA
Screen capture of the moment I stopped receiving data.

#### 2012-07-10, 19:31:38 - Adam Rankin
Attachment added: "screencap.png"

#### 2012-07-11, 15:16:30 - Adam Rankin
So far, I have been unable to reproduce a crash. I've been testing on an NDI Certus tracker running fCal revision 1892.

I was able to reproduce the error log where the Certus tracker no longer communicates with the host machine, but I am unable to determine why. The NDI API simply states that there is a communications error between the host and the tracker.



#### 2012-07-11, 15:53:52 - Andras Lasso
OK, I think we can close this issue.

How often do you have the communication error? After how long acquisition time?

#### 2012-07-11, 16:57:56 - Adam Rankin
I can't seem to reproduce the communication error. I went to check on the machine and it had had its lenses covered. Perhaps this was the cause? I've reset the tracker and have had no issues after running it for an hour.

#### 2012-07-11, 17:08:38 - Adam Rankin
Correction: It happened again. I disconnected after 58 minutes. Did some work, reconnected to try again, and it happened after a few minutes (5-8).

After inspecting the machine, nothing has changed with the physical configuration of the tracker.

#### 2012-07-11, 17:42:14 - Andras Lasso
Have you restarted fCal when you reconnected? Or just disconnected and connected while keeping fCal running?

#### 2012-07-11, 17:46:39 - Adam Rankin
Restarted fCal. I do not believe the problem is Plus. I will continue investigating.

#### 2012-07-11, 17:51:26 - Andras Lasso
If you cannot make any conclusion then just close this ticket, enter a new ticket with the title 'Communication with NDI Certus tracker randomly breaks', and put it into the Future milestone (very few people use the Certus, so it's not a very high priority for now).

#### 2012-07-11, 18:07:15 - Adam Rankin
Unable to reproduce crash.

#### 2012-07-11, 18:07:15 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #472 Store DisplayableObjects in a vector instead of a map
Store displayable objects in a std::vector instead of a map, because if we need to display the image type and axis type together for the same frame the second object coordinate frame will overwrite the object in the map (because the key is the object coordinate name)

#### 2012-04-16, 19:45:07 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-06-20, 13:49:38 - Csaba Pinter
assigned_to_id: changed from "pinter" to "rankin"

#### 2012-06-21, 19:59:10 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-21, 20:45:40 - Adam Rankin
(In r:1807|plus:1807) re #472: storing displayable objects in a vector instead of a map
- access to displayable objects is now templated, request the class of object you want from the vector of displayable objects

#### 2012-06-22, 16:31:19 - Adam Rankin
(In r:1811|plus:1811) re #472 : adjusting return type to be more restrictive
- now returns base class of objects stored in vector

#### 2012-06-22, 16:44:16 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-06-25, 20:20:31 - Adam Rankin
(In r:1838|plus:1838) re #472: parameterizing the behaviour of vtkImageVisualizer so that any number of screen-aligned objects can be added


## #473 Show message while computing temporal calibration
Currently fCal becomes unresponsive for a few seconds and the image update stops. Show a message in a very visible location (in a popup window?) that explains what's happening.

#### 2012-04-09, 22:37:25 - Csaba Pinter
Also check Volume reconstruction for similar issue

#### 2012-04-10, 16:07:37 - Csaba Pinter
(In r:1604) Fixed #473: Dialog is shown when temporal calibration is computed

#### 2012-04-10, 16:07:37 - Csaba Pinter
status: changed from "New" to "Fixed"


## #474 Sample NDI Aurora config file in the installation package
For those who use PLUS from the PlusApp installation package, could you please put a sample config file in the package for NDI Aurora?

#### 2012-08-22, 16:40:19 - Adam Rankin
add to PlusApp\\InstallFiles.cmake

#### 2012-08-22, 16:40:19 - Adam Rankin
assigned_to_id: changed from null to "pinter"

#### 2012-08-24, 22:52:39 - Csaba Pinter
(In r:2031|plus:2031) Re #474: Moved the NDI Aurora configuration file to the root config directory

#### 2012-08-24, 22:56:29 - Csaba Pinter
(In r:2032|plus:2032) Fixed #474: Aurora config file added to install package

#### 2012-08-24, 22:56:29 - Csaba Pinter
status: changed from "New" to "Fixed"


## #475 Stylus calibration calibrate and show result during calibration
Stylus calibration could calibrate in course of the calibration process and show preminilary results from time to time (eg. every 10 acquired points), similarly like in phantom registration


## #476 Add simulated US image source
Allow tracked US acquisition using a real tracker and a simulated US device. The simulated US and tracking info could be broadcasted to Slicer through OpenIGTLink using OpenIGTLinkBroadcaster, the same way as for any other imaging device.

Design:
* A transform would be defined in the config file for each model
* The US simulator image source would access the transform repository and generate the simulated image using the transform and the model
* How to get the tracker info? RAW tracker buffer? => Need a design, related to #461


#### 2012-04-18, 16:24:58 - Andras Lasso
component_id: changed from "None" to "PlusLib"

#### 2012-04-18, 16:24:58 - Andras Lasso
description: changed from "Add an additional mode (act..." to "Allow tracked US acquisitio..."

#### 2012-04-18, 16:24:58 - Andras Lasso
summary: changed from "Add US simulation mode to OpenIGTLinkBroadcaster" to "Add simulated US image source"

#### 2012-04-18, 17:30:18 - Andras Lasso
image:aQZ9LWIxWr4Bd-acwqjQYw
Use case for the US simulator

#### 2012-04-18, 17:30:18 - Andras Lasso
Attachment added: "SimImageSourceUseCase.jpg"

#### 2012-06-27, 17:18:16 - Csaba Pinter
(In r:1841|plus:1841) Re #476: WIP Fix vtkUsSimulatorVideoSource

#### 2012-06-27, 17:55:00 - Csaba Pinter
(In r:1843|plus:1843) Re #476: WIP Create a function to set background image stencil for the simulator; Use tracker's latest timestamp

#### 2012-06-28, 16:40:54 - Csaba Pinter
(In r:1844|plus:1844) Re #476: vtkUsSimulatorVideoSource works fine; --input-transform-name parameter removed from vtkUsSimulatorAlgoTest because the transform name has already come from the configuration file (it was not used so far)

#### 2012-06-28, 21:13:04 - Andras Lasso
assigned_to_id: changed from "Bartha" to "pinter"

#### 2012-07-06, 19:48:18 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-07-12, 20:22:55 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #477 Make a PlusApp from vtkDataCollectorTrackingTest
The test program (vtkDataCollectorTrackingTest) would be useful for the PlusApp user community to test if their trackers work at all. Could somebody please put it in PlusApp and make sure it is packed in the installer package too? Probably the name should be changed (e.g. TrackingTest).

#### 2012-08-07, 20:58:28 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-07, 20:58:34 - Adam Rankin
status_updated_at: changed from null to "2012-08-07 20:58:34"

#### 2012-08-07, 20:58:34 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-09, 14:29:46 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-08-24, 14:26:22 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-24, 14:53:50 - Adam Rankin
(In r:2020|plus:2020) Fixed #530 Fixed #477

Updating source layout and CMake configuration to comply with request.

#### 2012-08-24, 14:53:50 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-08-24, 19:32:52 - Andras Lasso
(In r:2024|plus:2024) re #477: Moved TrackingTest to PlusLib/src/DataCollection/Applications (it is more convenient there as it is often needed for PlusLib debugging and testing)

#### 2012-08-24, 19:35:02 - Andras Lasso
(In r:2025|plus:2025) re #477: Fixed build error

#### 2012-08-24, 19:37:52 - Andras Lasso
(In r:2026|plus:2026) re #477: Added subdirectory to makefile


## #478 Support VS2010 x64 architecture for Plus
Add support for VS2010 x64 architecture for Plus. 

#### 2012-04-20, 15:09:46 - Tamas Heffter
h1. Prerequisites: 
* Qt 4.7.4-x64:
Qt doesn't provide pre-built VS2010 x64 binaries with the latest release, so we need to compile it:
- Download and extract Qt 4.7.4 source to c:\\Qt\\4.7.4-x64\\  (http://download.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.4.zip)
- Start Visual Studio x64 Win64 Command Prompt (2010)  ( Start / All Programs / Microsoft Visual Studio 2010 / Visual Studio Tools )
- Type the following commands to the console: 

~~~~
$ cd c:\\Qt\\4.7.4-x64\\
$ configure -shared -debug-and-release -opensource -opengl desktop -platform win32-msvc2010 -mp -nomake examples -nomake demos
$ nmake

~~~~




#### 2012-04-20, 15:21:37 - Andras Lasso
Useful for updating the code: http://www.viva64.com/en/a/0004/

#### 2012-04-20, 15:27:55 - Andras Lasso
If there is no specific reason for using Qt-4.8.1 I would prefer to use Slicer4's version (4.7.4 ). It would allow us to build Slicer extensions with Plus. Note that 64-bit build of Qt-4.7.4 does not require perl installation (I hope that Qt-4.8.1 does not really require it either). Build instructions (for VS2008 / Qt-4.7.4) are available here: http://www.slicer.org/slicerWiki/index.php/Documentation/4.0/Developers/Build_Instructions/Prerequisites/Qt#Windows_4.

#### 2012-04-20, 15:57:08 - Tamas Heffter
Thank you, I'll try it first with Qt 4.7.4 
Should we also change the Qt version to 4.7.4 by default? 

#### 2012-04-20, 17:05:58 - Tamas Heffter
(In r:1637) re #478: Fixed compilation errors for PlusLib x64 architecture 

#### 2012-04-20, 17:06:26 - Tamas Heffter
(In r:1638) re #478: Fixed compilation errors for PlusApp x64 architecture 

#### 2012-04-20, 18:52:15 - Tamas Heffter
(In r:1639) re #478: Fixed WindowsAccurateTimer segfault on x64

#### 2012-04-20, 23:04:50 - Andras Lasso
Unfortunately, there seems to be some small differences in floating-point calculation results that cannot be fully eliminated. See http://www.viva64.com/en/b/0074/ and http://msdn.microsoft.com/en-us/library/e7s85ffb(v=VS.90).aspx .

We need to introduce A. separate baselines for x86 and x64 or B. comparison tolerances.

Probably B is a more sustainable solution.


#### 2012-04-21, 05:22:23 - Andras Lasso
(In r:1642) re #478: Fixed PlusMath::Floor (it was much slower and returned different values compared to the 32-bit implementation). Note that PlusMath::Floor(x) still does not return always the same value as Floor(x).

#### 2012-04-23, 16:32:36 - Andras Lasso
(In r:1643) re #478: Print actual and expected transform matrix values in vtkDataCollectorFileTest

#### 2012-04-23, 17:57:02 - Tamas Heffter
(In r:1644) re #478: Changed fiducial recognition to use double instead of float, because it has the same result on both 32 and 64 bit architecture. (Updated baselines too)

#### 2012-04-23, 18:44:41 - Tamas Heffter
(In r:1645) re #478: Updated rotation axis calibration baseline

#### 2012-04-25, 14:48:37 - Tamas Heffter
status: changed from "New" to "Test"

#### 2013-05-15, 19:58:58 - Adam Rankin
assigned_to_id: changed from "heffter" to null

#### 2014-06-05, 01:51:39 - Andras Lasso
There are no test errors on VS2010/x64 (see dashboard)

#### 2014-06-05, 01:51:39 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-06-05, 01:51:48 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #479 Add version information to Plus binaries  
This is a proposal for adding version information to Plus binaries, which could be really helpful identifying the actual dll and app version. 
Under Windows, we just need to add an rc file for each binaries once and CMake will do the rest. 

Here is what I used in another project: 

*Create a new CMake include file (VsInterface.rc.in):* 

~~~~
#include <winresrc.h>

VS_VERSION_INFO VERSIONINFO
  FILEVERSION @VSI_VERSION_MAJOR@, @VSI_VERSION_MINOR@, @VSI_VERSION_PATCH@, @VSI_REVISION@
  PRODUCTVERSION @VSI_VERSION_MAJOR@, @VSI_VERSION_MINOR@, @VSI_VERSION_PATCH@, @VSI_REVISION@
  FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
#ifndef NDEBUG
  FILEFLAGS 0
#else
  FILEFLAGS VS_FF_DEBUG
#endif
  FILEOS VOS_NT_WINDOWS32
#ifdef VsInterface_EXPORTS
  FILETYPE VFT_DLL
#else
  FILETYPE VFT_APP
#endif
  FILESUBTYPE VFT2_UNKNOWN
  BEGIN
    BLOCK 'StringFileInfo'
    BEGIN
      BLOCK '04090000'
      BEGIN
        VALUE 'FileDescription', 'Visualization Subsystem Interface'
        VALUE 'FileVersion', '@VSI_VERSION_MAJOR@.@VSI_VERSION_MINOR@.@VSI_VERSION_PATCH@.@VSI_REVISION@'
        VALUE 'InternalName', 'Visualization Subsystem Interface'
        VALUE 'ProductName', 'Visualization Subsystem Interface'
        VALUE 'ProductVersion', '@VSI_VERSION_MAJOR@.@VSI_VERSION_MINOR@.@VSI_VERSION_PATCH@.@VSI_REVISION@'
      END
    END
    BLOCK 'VarFileInfo'
    BEGIN
      VALUE 'Translation', 0x409, 1252
    END
  END

~~~~

*This is what we need to add to the actual CMake file:* 

~~~~
SET(VsInterface_RESOURCES)
IF (WIN32)
  configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/VsInterface.rc.in 
  ${CMAKE_CURRENT_BINARY_DIR}/VsInterface.rc
  )  
  SET (VsInterface_RESOURCES
    ${CMAKE_CURRENT_BINARY_DIR}/VsInterface.rc
    )
  SOURCE_GROUP(Resources FILES ${VsInterface_RESOURCES}) 
ENDIF()
...
ADD_LIBRARY( VsInterface ${VsInterface_SRCS} ${VsInterface_HDRS} ${VsInterface_RESOURCES} )
...

~~~~


Let me know your thoughts. 

#### 2012-04-24, 19:51:57 - Tamas Heffter
image:dYW-62JKyr4yyCacwqjQWU
Binary version info

#### 2012-04-24, 19:51:57 - Tamas Heffter
Attachment added: "VersionInfo.jpg"

#### 2012-06-02, 14:17:58 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:04 - Andras Lasso
Updating tickets (#433, #479, #514)



#### 2012-06-02, 14:20:04 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-12-11, 21:36:41 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #480 Using Hole Filling with Maximum Distribution produces different results for 32-bit vs. 64-bit
If hole filling is enabled in the test _vtkVolumeReconstructorMaximum1_, different results will be produced between a 32-bit build and a 64-bit build. Hole filling can be enabled by opening the configuration file _SpinePhantomFreehandReconstructionOnlyMaximum.xml_ and changing HoleFilling='Off' to HoleFilling='On'.

Once this is fixed, the test should use hole filling by default, and the output volume should be saved as _vtkVolumeReconstructorMaximum1OutputCompare.vtk_ for use by the test _vtkVolumeReconstructorMaximum2_

#### 2012-04-25, 18:48:46 - Thomas Vaughan
It might actually make sense to leave this one until we've implemented the sticks hole filling, as per #436. If sticks hole filling produces a better result and does not have this problem, then it might not make a lot of sense to invest time in this.

#### 2012-08-08, 23:34:01 - Andras Lasso
@thomasvaughan: We don't have test failures on win64 anymore (http://crunch.cs.queensu.ca/CDash/index.php?project=PLUS). Can this problem be closed or you still need to fix something?

#### 2012-08-22, 16:27:06 - Adam Rankin
assigned_to_id: changed from null to "lassoan"

#### 2012-08-23, 14:21:38 - Andras Lasso
It works correctly now.

#### 2012-08-23, 14:21:38 - Andras Lasso
status: changed from "New" to "Fixed"


## #481 Create a program to calculate error statistics for reconstructed volumes
We need a quick way to calculate error statistics for ultrasound volumes from two datasets (one ground truth, and one testing).

#### 2012-04-26, 20:28:48 - Thomas Vaughan
(In r:1661) Re #481 Added base files for comparing volumes. These are based on vtkSimpleImageFilterExample. These don't do anything yet.

#### 2012-05-03, 23:25:41 - Thomas Vaughan
(In r:1671) Accepted #481 Added CompareVolumes, which is a program that can compare two reconstructed volumes (a ground truth and a testing image) and produce statistics such as mean error, standard deviation, maximum error, 95th percentile, and similar values.

#### 2012-05-03, 23:25:41 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-11, 16:54:48 - Thomas Vaughan
(In r:1691) Re #481 Added functionality to the CompareVolumes program. The program is now capable of exporting fourier transforms of the region of interest. It will also write the cropped volumes themselves to a file.

#### 2012-05-11, 18:08:30 - Thomas Vaughan
(In r:1692) Fixed #481 Added information about the input parameters to the CompareVolumes output, such as the region of interest, the ground truth, the ground truth alpha, and the slices alpha.

#### 2012-05-11, 18:08:30 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"

#### 2012-05-15, 00:48:46 - Thomas Vaughan
(In r:1697) Re #481, added RMS and number of filled holes to the output of CompareVolumes. CompareVolumes now also requires a fifth input - the testing volume's alpha component.

#### 2012-05-16, 15:42:18 - Thomas Vaughan
(In r:1703) Re #481 Corrected the way the number of holes is calculated


## #482 Create PlusServer GUI application
Create a Plus OpenIGTLink server application that could broadcast IGTL messages to the connected clients (similar to the current PlusServer command line tool in PlusLib). 


#### 2012-04-27, 17:21:02 - Tamas Heffter
Also, we have a PlusBroadcasterDaemon application, which is doing similar task, but Plus as a client. I was thinking to add the server mode to this app and than we could choose to run Plus as server or client (just as Slicer OpenIGTLinkIF module), and it could act as a daemon truly - but Andras is right, we need a good name.

#### 2012-06-15, 20:22:32 - Andras Lasso
From Tamas: it would be useful to have a GUI for viewing/editing the MaxNumberOfIgtlMessagesToSend, MaxTimeSpentWithProcessingMs, and ListeningPort parameters

#### 2013-05-15, 19:59:01 - Adam Rankin
assigned_to_id: changed from "heffter" to null

#### 2013-12-22, 04:43:47 - Andras Lasso
Created PlusServerLauncher GUI app

#### 2013-12-22, 04:43:47 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-12-22, 04:43:47 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-22, 04:43:47 - Andras Lasso
status: changed from "New" to "Fixed"


## #483 Change file format for Volume Reconstruction from .vtk to .mha
The .vtk format is obsolete and inconsistent with the data formats that PLUS already uses extensively.

#### 2012-06-29, 20:31:39 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-06-29, 20:31:46 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-06-29, 20:47:31 - Csaba Pinter
fCal supported saving MHA files already, but it was second in the list after VTK files. I'll swich the order.

I also move the metafile saving function from fCal to vtkVolumeReconstructor

#### 2012-06-29, 22:12:18 - Csaba Pinter
(In r:1858|plus:1858) Re #483: SaveReconstructedVolumeToMetafile and SaveReconstructedVolumeToVtkFile functions added to vtkVolumeReconstructor class that save the reconstructed volume (gray levels or alpha) to metafile or VTK file. Saving into a single MHA file needs to be solved before changing VolumeReconstructor to save to metafile (and so change the tests too)

#### 2012-06-29, 22:13:19 - Csaba Pinter
(In r:1859|plus:1859) Re #483: VolumeReconstructionToolbox in fCal offers saving to metafile first; Saving logic moved to vtkVolumeReconstructor, that function is called from VolumeReconstructionToolbox

#### 2012-07-03, 18:51:26 - Andras Lasso
(In plus:1864) VolumeReconstructor tests save mha files; Baselines changed accordingly

#### 2012-07-03, 18:51:26 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2012-07-03, 18:54:13 - Csaba Pinter
(In r:1865|plus:1865) Re #483: Option added to save compressed mha files (on by default); Baselines replaced with compressed metafiles

#### 2012-07-06, 19:49:14 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #484 Make CompareVolumes faster
The program CompareVolumes is very slow due to how the data is sorted when calculating the max, min, and median. It makes use of std::list and std::vector, but transfers elements between these two data structures. There should be a be way that does not involve copying elements unnecessarily.

#### 2012-05-04, 00:03:04 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-11, 14:09:15 - Thomas Vaughan
The ticket was created as a result of observations in Debug mode. As it turns out, it runs in less than a second in Release mode. Closing ticket as invalid.

#### 2012-05-11, 14:09:15 - Thomas Vaughan
status: changed from "Accepted" to "Invalid"


## #485 Add option to output difference volumes from CompareVolumes
The program should take file names as inputs, and output the 'True Difference Volume' and the 'Absolute Difference Volume', which are readily available from the class already.

#### 2012-05-03, 23:27:19 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-04, 00:01:15 - Thomas Vaughan
(In r:1672) Fixed #485 Added the desired features, difference volumes can now be saved

#### 2012-05-04, 00:01:15 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"


## #486 VolumeReconstructor should take a 'skip number' and 'hole filling method' as input
When we test our hole filling in volume reconstruction, we usually create two volumes: a ground truth and a testing volume. The ground truth usually consists of a very dense set of US images. The testing volume consists of a subset of these images (usually every 4th image of the original dataset), with holes filled in.

We need a way to specify how many images we skip over when creating the testing volume *without* changing the volume reconstruction source code.

We also need a way to specify whether to use a kernel or sticks method for hole filling.

#### 2012-05-03, 23:42:27 - Thomas Vaughan
description: changed from "When we test our hole filli..." to "When we test our hole filli..."

#### 2012-05-03, 23:42:27 - Thomas Vaughan
summary: changed from "VolumeReconstructor should take a 'skip number' as input" to "VolumeReconstructor should take a 'skip number' and 'hole filling method' as input"

#### 2012-05-04, 00:03:25 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-04, 01:06:40 - Thomas Vaughan
(In r:1673) Re #486 Added a config file attribute to set the number of frames that are skipped when inserting slices. This needs to be tested.

#### 2012-05-07, 18:53:14 - Thomas Vaughan
(In r:1686) Test #486 Added functionality for multiple hole filling methods to be defined.

Also fixed a multithreading error where the extent of the image was assumed to be the extent for the thread.

#### 2012-05-07, 18:53:14 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2012-05-07, 18:54:55 - Thomas Vaughan
This will be tested by CompareVolumes. Closing this as Fixed.

#### 2012-05-07, 18:54:55 - Thomas Vaughan
status: changed from "Test" to "Fixed"


## #487 Allow temporal calibration to be performed using a calibration phantom
The new correlation-based temporal calibration works well for free-hand US, but when the transducer is in a stabilizer then it is more convenient to do the temporal calibration with the same phantom used for spatial calibration.

Modify the temporal calibration algorithm so that it can use an externally-computed video-based position signal. Modify the iCal application to use the new temporal calibration method.

Change iCalBrachy so that it uses this temporal calibration instead of vtkDataCollectorSynchronizer. Delete vtkDataCollectorSynchronizer class from the repository.

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-28, 21:20:24 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-07-12, 18:29:58 - Csaba Pinter
description: changed from "The new correlation-based t..." to "The new correlation-based t..."

#### 2012-09-13, 16:21:37 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.6.1"

#### 2012-09-17, 14:03:03 - Adam Rankin
milestone_id: changed from "Release Plus-1.6.1" to "Release Plus-1.7.0"

#### 2012-10-12, 22:17:37 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:37 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-28, 02:48:30 - Andras Lasso
(In r:2210|plus:2210) re #487: Added API for setting position signal computed externally. No more modifications should be needed in the TemporalCalibrationAlgo class to allow temporal calibration to be performed using a calibration phantom.

#### 2012-12-07, 21:30:42 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-07-09, 18:58:02 - Adam Rankin
@lassoan Should this be an iCal ticket?

#### 2013-07-09, 19:22:24 - Andras Lasso
Performing the temporal and spatial calibration with the same phantom is useful in general.

The implementation could be just adding a new FRAME_TYPE, e.g., FRAME_TYPE_VIDEO_NWIRE_PHANTOM (and maybe change FRAME_TYPE_VIDEO_PLANE_PHANTOM) and use the FidSegmentation instead of the vtkLineSegmentationAlgo.

#### 2013-12-03, 16:43:00 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-12-10, 21:07:44 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #488 Add a feature to fCal where the user can change the displayed image orientation
It would help visualization during fCal data acquisition if a feature was added where the user could change the camera position (aka image orientation). The sonographer we work with did not like that the image that appeared in fCal was flipped compared to the exam software.

#### 2012-05-04, 20:07:33 - Andras Lasso
summary: changed from "add a feature to fCal where the user could change the camera position (aka image orientation)" to "Add a feature to fCal where the user can change the displayed image orientation"

#### 2012-05-04, 20:08:06 - Andras Lasso
In the US devices you can flip the image for display. In fCal currently the image is always displayed with a fixed orientation, which sometimes does not match what the clinicians would like to see. Introduce options for flipping the image horizontally and/or vertically in the 2D view. It is only for the 2D view, the 3D view is good as is.

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:48 - Andras Lasso
Updating tickets (#448, #449, #488, #511, #438)



#### 2012-06-02, 14:20:48 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-06-05, 19:00:47 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-06, 13:44:22 - Adam Rankin
(In r:1742) re #488: Added a feature to allow the inversion along the X or Y axis of the 2D image in fCal.

#### 2012-06-06, 13:45:20 - Adam Rankin
Feature added in revision: 1742

#### 2012-06-06, 13:45:20 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-06-07, 19:28:56 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2012-06-08, 14:30:10 - Adam Rankin
(In r:1752) re #488v2: patch to clarify the functionality introduced in the feature
- terminology and functionality changed to reference the orientation of the image relative to the MF directions
- a visual marker was added (with toggle option) to indicate the current orientation
- menu items were rearranged visually to a single location for consistency
- new icons were uploaded to clarify button functionality

#### 2012-06-08, 19:02:29 - Adam Rankin
(In r:1753) re #488: updates to variable names, now adhering to naming convention
- renaming of image file to match naming convention
- updated QT files to reference new image name

#### 2012-06-08, 19:04:14 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-06-11, 14:10:26 - Adam Rankin
(In r:1755) re #488: Parameterizing the position and structure of the orientation marker


## #489 Add RF image acquisition support on Ulterius 6.x
On Ulterius 6.x the whole RF processing pipeline is done by the CPU. So, the imaging system always provide RF images, and from the SDK it is always possible to retrieve RF and/or B-mode images. The constant for explicitly enabling RF acquisition does not exist anymore, so need to change the code to handle this correctly.

#### 2012-06-02, 14:04:24 - Andras Lasso
description: changed from "" to "On Ulterius 6.x the RF acqu..."

#### 2012-06-02, 14:04:24 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-09-10, 17:54:47 - Andras Lasso
description: changed from "On Ulterius 6.x the RF acqu..." to "On Ulterius 6.x the whole R..."

#### 2014-10-03, 20:57:00 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-03, 21:15:44 - Andras Lasso
fixed #489: Fixed RF-mode acquisition with Ultrasonix SDK 6.1

Tested in B-mode and simultaneous B/RF-mode acquisition with Ulterius interface in SDK 5.7.4 and SDK 6.1.0.
Commit: r:3792|plus:3792

#### 2014-10-03, 21:15:44 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-10-03, 21:15:44 - Andras Lasso
status: changed from "New" to "Fixed"


## #490 Allow flipping of the displayed image in fCal in 2D view
In the US devices you can flip the image for display. In fCal currently the image is always displayed with a fixed orientation (which sometimes does not match what the clinicians would like to see). Introduce options for flipping the image horizontally and/or vertically in the 2D view. It is only for the 2D view, the 3D view is good as is.

#### 2012-05-04, 20:09:13 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2012-05-05, 12:06:22 - Csaba Pinter
assigned_to_id: changed from null to "pinter"


## #491 Add support for Ultrasonix SDK 6.x
Allow Plus to be used with the new Ultrasonix SDK version 6.x

#### 2012-05-04, 20:55:42 - Andras Lasso
(In r:1676) re #491: Fixed PlusConfigure.h to work with Ultrasonix SDK version numbers that contain 0

#### 2012-05-04, 21:16:24 - Siavash Khallaghi
How long do you think it would take to add support for Ultrasonix SDK version 6.0.1?

#### 2012-05-04, 23:19:05 - Andras Lasso
Making it build is almost ready.

After that we need to find how to replace a few seemingly missing features (RfMode acquisition through Ulterius; GetLastError in Porta) and do thorough testing.

#### 2012-05-04, 23:19:05 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-05-05, 01:16:23 - Andras Lasso
(In r:1677) re #491: Fixed build errors with Ultrasonix SDK 6.0.1. The toolkit is not yet functional as there are ITK and VTK DLL conflicts.


#### 2012-05-05, 01:25:00 - Andras Lasso
Build errors have been resolved, but tests fail due to DLL conflicts.

Remaining problems:
* The ulterius DLL depends on QT DLLs, which are conflicting with the DLLs used by Plus. This should be fixed in the Ulterius SDK by static linking of the libraries, by using manifests, or name mangling.
* The porta DLL depends on ITK, VTK, and QT DLLs, which are conflicting with the DLLs used by Plus. This should be fixed in the Ulterius SDK by static linking of the libraries, by using manifests, or name mangling.
* The porta object does not contain the bool getLastError(char* err, unsigned int sz) method anymore. Is there a replacement?
* The ulterius\\inc\\ImagingModes.h file does not contain RfMode anymore. Does it mean that RF acquisition is not possible through Ulterius?
* The porta_wrapper.cpp file should contain all the necessary header includes 

Enhancement possibilities:
* It would be nice if the SDK would generate a UseUltrasonix.cmake file


#### 2012-05-05, 03:29:06 - Andras Lasso
(In r:1678) re #491: Fixed build regression for Ultrasonix SDK 5.x

#### 2012-05-05, 04:34:34 - Andras Lasso
(In r:1679) re #491: Disable Porta for Ultrasonix SDK 6.x due to ITK and VTK DLL conflicts

#### 2012-05-05, 05:09:00 - Andras Lasso
(In r:1680) re #491: Fixed build errors with Ultrasonix SDK 5.7.1


#### 2012-05-05, 06:08:47 - Andras Lasso
(In r:1681) re #491: Re-enabled Porta for Ultrasonix SDK 6.x for code simplification. There are still ITK, VTK, and QT DLL conflicts that prevents Plus form using this new SDK.

#### 2012-05-05, 14:43:10 - Andras Lasso
Asked a solution for the DLL conflict on the research forum (http://research.ultrasonix.com/viewtopic.php?f=15&t=800&start=0)

#### 2012-05-08, 12:50:24 - Andras Lasso
It seems that we have to wait for a while until Ultrasonix can clean up these dependencies. See the reply from Ultrasonix:


Re: ITK, VTK, QT DLL conflicts with SDK 6.0.1
by stephane.raux » Mon May 07, 2012 11:35 pm

Hi Andras,


Theoretically our SDK should not depend on ITK and VTK. We just have too many dependencies between our modules and one of them ends up pulling a third-party DLL which we don't have control over and this DLL relies on some version of ITK and VTK.

Cleaning up our dependencies is something we plan to do. Unfortunately it is a huge task which requires time. 6.0.x is our first release depending on Qt and for now the only supported option for our SDK users wanting to use Qt is to use the same version as we do. We will try to stay up-to-date with the latest Qt version. What concerns ITK and VTK, we don't have control over what version is used or the build process itself.

Once we are done cleaning our module dependencies, ITK and VTK should not be needed anymore by our SDK. At that time we will see what to do with the Qt DLLs (we will probably make use of the '-qtlibinfix' option).

We are in the process of re-engineering our SDK to ease the task of our users (e.g. the switch to a C interface to allow the use of other compilers as well as making it easier to create wrappers for other languages), enrich the set of features, improve robustness and modernize our tools. This is a long process and we need time to achieve these goals.


Once again we are sorry for the inconvenience.
Stephane
Ultrasound software engineer @ Ultrasonix Medical Corporation
stephane.raux@ultrasonix.com
604-279-8550 ext. 107
stephane.raux
 
Posts: 76
Joined: Wed Oct 26, 2011 1:49 pm
Location: Ultrasonix Medical Corporation, Richmond, BC


#### 2012-05-08, 12:53:21 - Andras Lasso
We are waiting for Ultrasonix to release a new SDK version without the dependencies. Until then the Ultrasonix SDK 6.x will not be officially supported.

Possible workarounds for 6.0.1:
* Use the same QT version as the one used by Ultrasonix
* Don't use Porta (it depends an own ITK and VTK version)


#### 2012-05-08, 12:53:21 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2012-05-08, 12:53:43 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-NAMIC project week 2012 Summer"

#### 2012-06-02, 13:55:51 - Andras Lasso
milestone_id: changed from "Release Plus-NAMIC project week 2012 Summer" to "Release Plus-Future"

#### 2013-04-17, 19:17:06 - Andras Lasso
Ulterius in the 5.7.x SDK is compatible with Exam software with client version up to 6.0.2. Exam software that are 6.0.3 or newer will not work with clients that are built with 5.7.x SDK.

#### 2013-04-17, 19:17:59 - Andras Lasso
Ultrasonix expects to deliver the 7.x SDK later during year 2013. In this SDK version they plan to address the VTK/ITK/QT conflict issue.

#### 2013-05-15, 19:59:05 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2014-02-06, 20:31:07 - Andras Lasso
In Ultrasonix SDK 6.0.7 there are no ITK and VTK dlls anymore. The only remaining issue is Qt. The solution would be to build Qt with custom library names and using a custom namespace (http://qt-project.org/forums/viewthread/9577) when Ultrasonix builds the SDK files. Posted a comment on the research forum, now wait and see.

#### 2014-02-07, 03:58:25 - Adam Rankin
Sweet about time!

#### 2014-02-14, 16:32:45 - Andras Lasso
summary: changed from "Add support for Ultrasonix SDK 6.0" to "Add support for Ultrasonix SDK 6.x"

#### 2014-02-14, 16:32:45 - Andras Lasso
description: changed from "Allow Plus to be used with ..." to "Allow Plus to be used with ..."

#### 2014-02-14, 16:33:46 - Andras Lasso
The 6.1 SDK version is going to use modified Qt DLL names, so it should be possible to build Plus with that.

#### 2014-06-05, 01:53:34 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-05, 19:28:40 - Andras Lasso
re #491: Added Ultrasonix SDK 6.1 support to PlusBuilds
Commit: r:3657|plus:3657

#### 2014-09-05, 19:28:40 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-05, 19:31:36 - Andras Lasso
test #491: Added Ultrasonix SDK 6.1.0 support
Commit: r:3658|plus:3658

#### 2014-09-05, 19:31:36 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-01, 17:00:36 - Andras Lasso
Tested with a Plus built with SDK 6.1.0 and Exam software version 6.0.7 and it worked well (in B mode only, see #489 for RF mode).

#### 2014-10-01, 17:00:36 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-10-02, 21:13:56 - Andras Lasso
re #491: Fixed crash on Ulterius disconnect with SDK 6.x
Commit: r:3784|plus:3784

#### 2014-10-24, 21:03:23 - Andras Lasso
re #491: Clarified Ultrasonix SDK compatibility
Commit: r:3824|plus:3824


## #492 Plus Server crashes without --verbose=5 in Release mode
I can use PlusServer in Debug mode. Also in Release mode if I provide the command line argument --verbose=5. But when I don't set the --verbose option in Release mode, the PlusServer crashes after one or two messages. Here is video to illustrate the problem:
http://www.youtube.com/watch?v=FkHEB3s4mTw
The same error happens with a real tracker (Ascension).

My config file is also available from here:
https://www.assembla.com/code/slicerigt/subversion/nodes/trunk/PlusTestData/StillThanMove40mmNoVideo.xml?rev=62
It uses the saved tracked data from the same folder:
https://www.assembla.com/code/slicerigt/subversion/nodes/trunk/PlusTestData

This problem doesn't happen when the images are sent with the server. I only discovered it when I removed the image message from the PlusOpenIGTLinkServer configuration. I cannot send image messages in my current hardware setup, because in one of the needle navigation scenarios there is no ultrasound involved.

#### 2012-05-06, 00:37:18 - Tamas Ungi
assigned_to_id: changed from "heffter" to null

#### 2012-05-06, 01:30:37 - Tamas Ungi
FYI, --verbose=4 also fixes the problem. In --verbose=3 it crashes after about 10 messages. It seems like the more message we print, the more stable the program becomes.

#### 2012-05-06, 03:46:26 - Andras Lasso
(In r:1682) Fixed #492: Fixed division by zero error in PlusServer when processed data very quickly

#### 2012-05-06, 03:46:26 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-05-06, 03:46:26 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-05-06, 03:47:27 - Andras Lasso
Tomi, please check if there is no such division by zero error in similar components.

#### 2012-05-07, 18:28:51 - Tamas Heffter
(In r:1685) re #492: Fixed division by zero error in fCal when processed data very quickly


## #493 PlusServer not working with real tracker
I tried PlusServer with the Ascension tracker. Two tools (Stylus, Reference), no video. I attach the config file, it worked perfectly with vtkDataCollectorTrackingTest.
The tracker frequency is 100 /s because there is a lag in tracking with vtkDataCollectorTrackingTest at lower frequency values.
At lower frequencies in the config file, there are some messages going out from PlusServer, but when I visualize them in Slicer, they look like flickering rather than tracking, and occasionally the messages stop being sent and the typical problem occurs (warnings, no messages sent).

This is the typical output of PlusServer when failing to send tracking messages (this is repeated continuously):
|WARNING|025.775000| Failed to get tracker buffer item: tracker item not available anymore|in ..\\..\\..\\PlusLib\\src\  racking\\vtkTrackerBuffer.cxx(281)
|DEBUG|025.783000| Number of added frames: 0 out of 0|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollectorHardwareDevice.cxx(795)

I attach a log file with trace level logging. It actually contains three phases. In the first time phase there were errors and no tracking messages. Then in the middle the transforms were sent and received well on the other end. Then the typical problem started with warnings and no messages sent. The typical problem is the third phase with the warning.


#### 2012-05-07, 01:20:28 - Tamas Ungi
file:du0js4L-ir4yqUacwqjQWU
Log file of the error.

#### 2012-05-07, 01:20:28 - Tamas Ungi
Attachment added: "050612_205636_PlusLog.txt"

#### 2012-05-07, 01:20:28 - Tamas Ungi
file:du0kNAL-ir4yqUacwqjQWU
Config file used to produce the error.

#### 2012-05-07, 01:20:28 - Tamas Ungi
Attachment added: "PerkTutorNoUltrasound.xml"

#### 2012-05-07, 04:48:32 - Tamas Ungi
I've added a section for OpenIGTLinkBroadcaster to the config file: https://www.assembla.com/code/slicerigt/subversion/nodes/trunk/PlusTestData/PerkTutorNoUltrasound.xml?rev=63
and verified that we can do the experiments with the current PLUS version with the Broadcaster until PlusServer is fixed.


#### 2012-05-07, 04:48:50 - Tamas Ungi
priority: changed from "High (2)" to "Normal (3)"

#### 2012-05-07, 17:47:48 - Tamas Ungi
(In r:1683) Fixed #493: Fixed data collector hardware device  GetNumberOfFramesBetweenTimestamps function in tracker only mode. Decreased PlusServer DELAY_ON_NO_NEW_FRAMES_SEC to 5 ms. 

#### 2012-05-07, 17:47:48 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2012-05-07, 17:47:48 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2012-05-08, 20:17:13 - Tamas Ungi
(In r:1688) Fixed #493: Added MaxTimeSpentWithProcessingMs and MaxNumberOfIgtlMessagesToSend to PlusOpenIGTLinkServer configuration file to be able to control the frame rate and the number of messages we send. 


## #494 Optimize Ascension tracker reading API
Currently Plus uses the synchronous API for getting measurement data. This may introduce some delay, because the measurements are buffered. It would be better to use the asynchronous API. We may also utilize the timestamp provided by Ascension.


#### 2012-05-07, 18:15:33 - Tamas Ungi
(In r:1684) re #494: Changed Ascension tracker to the asynchronous API

#### 2012-05-11, 22:47:21 - Andras Lasso
Updating tickets (#369, #471, #460, #411, #308, #417, #174, #412, #427, #283, #487, #494)



#### 2012-05-11, 22:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.3" to "Release Plus-1.5.4"

#### 2012-05-11, 23:01:20 - Andras Lasso
Changing the API call reduced the tracker delay by about 0.5 sec (at 50Hz tracker read-out frequency).

#### 2012-05-11, 23:01:20 - Andras Lasso
Estimate: changed from "1.0" to "0.0"

#### 2012-05-11, 23:01:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.3"

#### 2012-05-11, 23:01:20 - Andras Lasso
Sum of Child Estimates: changed from "1.0" to "0.0"

#### 2012-05-11, 23:02:08 - Andras Lasso
status: changed from "New" to "Fixed"


## #495 OpenIGTLink client disconnects if the frame rate is too low
Send keep alive message if there is no new message to send in a certain time (e.g. half of the sending/receiving timeout). 

#### 2012-05-08, 14:14:49 - Tamas Heffter
(In r:1687) fixed #495: Send status OK message to keep alive connection while the sending frame rate is low. 

#### 2012-05-08, 14:14:49 - Tamas Heffter
status: changed from "New" to "Fixed"


## #496 Hole Filling doesn't update the alpha channel of the output image
The code needs to be reworked such that the hole filling step is applied independently of the file writing (currently it is set up as a pipeline where the hole filling is a step immediately prior to writing the volume, and it would need to be called a second time in order to be applied to the alpha channel).

#### 2012-05-15, 01:12:33 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-15, 15:49:34 - Thomas Vaughan
(In r:1699) Fixed #496

#### 2012-05-15, 15:49:34 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"


## #497 Add support for Phidget Spatial accelerometer
Add support for Phidget Spatial accelerometer for pose tracking

#### 2012-05-15, 19:21:57 - Andras Lasso
(In r:1700) re #497: Added basic support for PhidgetSpatial accelerometer

#### 2012-05-15, 22:25:18 - Andras Lasso
(In r:1701) re #497: Added basic support for PhidgetSpatial accelerometer

#### 2012-05-15, 22:33:53 - Andras Lasso
(In r:1702) fixed #497: Removed verbose logging

#### 2012-05-15, 22:33:53 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-05-15, 22:40:32 - Andras Lasso
Basic support has been added.

Limitations: no complex processing or sensor fusion is performed, i.e.,
* the accelerometer is just used as a tilt sensor
* the gyroscope data is not really usable as is, but further processing would be needed
* absolute position and angle is not computed


#### 2012-05-17, 02:25:24 - Andras Lasso
(In r:1704) re #497: Convert the accelerometer measurement value to a transformation composed of two rotations

#### 2012-06-17, 13:10:23 - Andras Lasso
(In r:1795) re #497: Fixed build option for enabling Phidget spatial tracker support


## #498 PlusServer should not forward invalid transforms
If there is an invalid tracker transform then the PlusServer just sends it through OpenIGTLink. It results in flickering in Slicer (whenever there is an invalid transform then the attached model jumps back to a default pose). There should be an option to either
* not send invalid transforms, or
* send the transform without any changes (then the tracker could just send the last known transform and set the status to invalid; this would cause the models to not move if there is any error instead of jumping)

Also, writing a warning on the console each time there is an invalid transform may not be desirable (it may be normal that the tracker gets out of view). Maybe make it an option to show a warning for invalid transforms.

#### 2012-05-15, 22:46:32 - Andras Lasso
description: changed from "If there is an invalid trac..." to "If there is an invalid trac..."

#### 2012-05-15, 22:46:32 - Andras Lasso
Estimate: changed from "1.0" to "0.0"

#### 2012-05-15, 22:46:32 - Andras Lasso
Sum of Child Estimates: changed from "1.0" to "0.0"

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-07-11, 18:08:56 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-12, 15:51:08 - Adam Rankin
(In r:1906|plus:1906) re #498 There is an option available now in the PlusServer to restrict the sending of invalid transforms.

Configuration is accomplished in the <PlusOpenIGTLinkServer> tag with the attribute SendInvalidTransform='true' or 'false'.

Example:
<PlusOpenIGTLinkServer MaxNumberOfIgtlMessagesToSend='10' MaxTimeSpentWithProcessingMs='50' ListeningPort='18944' SendInvalidTransform='true'> 
..<DefaultClientInfo> 
....<MessageTypes> 
.....<Message Type='IMAGE' />
.....<Message Type='TRANSFORM' />
....</MessageTypes>
....<TransformNames> 
.....<Transform Name='ProbeToTracker' /> 
.....<Transform Name='ReferenceToTracker' /> 
.....<Transform Name='ProbeToReference' />
....</TransformNames>
.....<ImageNames>
.......<Image Name='UsImage' CoordinateFrame='Reference' />
.....</ImageNames>
.. </DefaultClientInfo>
</PlusOpenIGTLinkServer>

#### 2012-07-12, 15:53:09 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-07-12, 17:21:16 - Adam Rankin
(In r:1907|plus:1907) re #498 Updates corresponding to code review. Change in terminology and reshaped invalid check to clean up code indentation.

#### 2012-07-12, 17:34:57 - Adam Rankin
(In r:1908|plus:1908) re #498 Order of parameters


## #499 Make tool status display window easier to access in fCal
Now the tool status display widget sits in Configuration toolbox. Although there is a pop-out button near it, it is not as obvious as this feature is needed.
A more visible message is needed near the widget, and the pop-out button should be moved to the common toolbar (where the configuration saving and the options buttons are), and changed it to 'Tracker tool status' button with a suitable icon.

#### 2012-05-16, 15:40:56 - Csaba Pinter
You can detach the tool status display window in Configuration toolbox by clicking the button near it, and so keep it visible when using any other toolbox.
Please don't assign to a milestone right away, it can slip out of our attention this way. Thanks!

#### 2012-05-17, 19:44:09 - Csaba Pinter
description: changed from "When the Capturing tab is s..." to "Now the tool status display..."

#### 2012-05-17, 19:44:09 - Csaba Pinter
summary: changed from "display optical tracking status in Capturing tab (fCal)" to "Make tool status display window easier to access in fCal"


## #500 Volume Reconstructor, Hole Filling: Change Gaussian Weight representation from unsigned long to double
This can avoid loss of precision and will make it clearer if the Gaussian kernel is being computed correctly.
We also need a printout of the values in the array so that we can confirm they are correct.

#### 2012-05-17, 20:08:40 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-05-18, 16:52:36 - Thomas Vaughan
(In r:1707) Re #500, Re #508, Gaussian kernel is now calculated as floating point numbers. There was a bug in the calculation of the Gaussian matrix causing significant bias in weighing toward the x axis, but this has been fixed.

There are also two new hole filling methods, NEAREST_NEIGHBOR and DISTANCE_WEIGHT_INVERSE. These will be compared against the STICKS algorithm.

#### 2012-06-06, 18:59:54 - Thomas Vaughan
Here is a printout of a 5x5x5 kernel, starting from a corner element and working to the end in each axis in the order x, y, z:

|INFO|000.008000| 0.000304572
|INFO|000.008000| 0.00108843
|INFO|000.008000| 0.00166407
|INFO|000.009000| 0.00108843
|INFO|000.009000| 0.000304572
|INFO|000.009000| 0.00108843
|INFO|000.010000| 0.00388967
|INFO|000.010000| 0.0059468
|INFO|000.010000| 0.00388967
|INFO|000.010000| 0.00108843
|INFO|000.011000| 0.00166407
|INFO|000.011000| 0.0059468
|INFO|000.011000| 0.00909188
|INFO|000.011000| 0.0059468
|INFO|000.012000| 0.00166407
|INFO|000.012000| 0.00108843
|INFO|000.012000| 0.00388967
|INFO|000.012000| 0.0059468
|INFO|000.013000| 0.00388967
|INFO|000.013000| 0.00108843
|INFO|000.013000| 0.000304572
|INFO|000.013000| 0.00108843
|INFO|000.014000| 0.00166407
|INFO|000.014000| 0.00108843
|INFO|000.014000| 0.000304572
|INFO|000.014000| 0.00108843
|INFO|000.015000| 0.00388967
|INFO|000.015000| 0.0059468
|INFO|000.015000| 0.00388967
|INFO|000.016000| 0.00108843
|INFO|000.016000| 0.00388967
|INFO|000.016000| 0.0139003
|INFO|000.016000| 0.0212518
|INFO|000.017000| 0.0139003
|INFO|000.017000| 0.00388967
|INFO|000.017000| 0.0059468
|INFO|000.018000| 0.0212518
|INFO|000.018000| 0.0324912
|INFO|000.018000| 0.0212518
|INFO|000.018000| 0.0059468
|INFO|000.018000| 0.00388967
|INFO|000.019000| 0.0139003
|INFO|000.019000| 0.0212518
|INFO|000.019000| 0.0139003
|INFO|000.019000| 0.00388967
|INFO|000.020000| 0.00108843
|INFO|000.020000| 0.00388967
|INFO|000.020000| 0.0059468
|INFO|000.020000| 0.00388967
|INFO|000.021000| 0.00108843
|INFO|000.021000| 0.00166407
|INFO|000.021000| 0.0059468
|INFO|000.021000| 0.00909188
|INFO|000.021000| 0.0059468
|INFO|000.022000| 0.00166407
|INFO|000.022000| 0.0059468
|INFO|000.022000| 0.0212518
|INFO|000.022000| 0.0324912
|INFO|000.023000| 0.0212518
|INFO|000.023000| 0.0059468
|INFO|000.023000| 0.00909188
|INFO|000.023000| 0.0324912
|INFO|000.024000| 0.0496748
|INFO|000.024000| 0.0324912
|INFO|000.024000| 0.00909188
|INFO|000.024000| 0.0059468
|INFO|000.024000| 0.0212518
|INFO|000.025000| 0.0324912
|INFO|000.025000| 0.0212518
|INFO|000.025000| 0.0059468
|INFO|000.025000| 0.00166407
|INFO|000.026000| 0.0059468
|INFO|000.026000| 0.00909188
|INFO|000.026000| 0.0059468
|INFO|000.026000| 0.00166407
|INFO|000.027000| 0.00108843
|INFO|000.027000| 0.00388967
|INFO|000.027000| 0.0059468
|INFO|000.027000| 0.00388967
|INFO|000.027000| 0.00108843
|INFO|000.028000| 0.00388967
|INFO|000.028000| 0.0139003
|INFO|000.028000| 0.0212518
|INFO|000.028000| 0.0139003
|INFO|000.029000| 0.00388967
|INFO|000.029000| 0.0059468
|INFO|000.029000| 0.0212518
|INFO|000.029000| 0.0324912
|INFO|000.030000| 0.0212518
|INFO|000.030000| 0.0059468
|INFO|000.030000| 0.00388967
|INFO|000.030000| 0.0139003
|INFO|000.030000| 0.0212518
|INFO|000.031000| 0.0139003
|INFO|000.031000| 0.00388967
|INFO|000.031000| 0.00108843
|INFO|000.031000| 0.00388967
|INFO|000.032000| 0.0059468
|INFO|000.032000| 0.00388967
|INFO|000.032000| 0.00108843
|INFO|000.032000| 0.000304572
|INFO|000.033000| 0.00108843
|INFO|000.033000| 0.00166407
|INFO|000.033000| 0.00108843
|INFO|000.033000| 0.000304572
|INFO|000.034000| 0.00108843
|INFO|000.034000| 0.00388967
|INFO|000.034000| 0.0059468
|INFO|000.034000| 0.00388967
|INFO|000.034000| 0.00108843
|INFO|000.035000| 0.00166407
|INFO|000.035000| 0.0059468
|INFO|000.035000| 0.00909188
|INFO|000.035000| 0.0059468
|INFO|000.036000| 0.00166407
|INFO|000.036000| 0.00108843
|INFO|000.036000| 0.00388967
|INFO|000.036000| 0.0059468
|INFO|000.037000| 0.00388967
|INFO|000.037000| 0.00108843
|INFO|000.037000| 0.000304572
|INFO|000.037000| 0.00108843
|INFO|000.038000| 0.00166407
|INFO|000.038000| 0.00108843
|INFO|000.038000| 0.000304572

#### 2012-06-06, 18:59:54 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"

#### 2012-06-06, 19:02:08 - Thomas Vaughan
The standard deviation for the above kernel was 1.085254 in each axis, corresponding to 5% of the weight being truncated and 95% being kept.


## #501 Support image and tracking data acquisition using multiple devices in parallel
Currently only one imaging and one tracking device can be used at the same time. Extend Plus to be able to acquire data using any number of devices in parallel.

#### 2012-07-18, 20:40:52 - Andras Lasso
(In r:1934|plus:1934) re #501: Updated vtkSavedDataVideoSource to provide image and tracking data as well. Therefore, we don't need the vtkDataCollectorFile anymore.

#### 2012-07-18, 20:40:52 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-07-18, 20:41:00 - Andras Lasso
(In r:1935|plus:1935) re #501: Updated vtkSavedDataVideoSource to provide image and tracking data as well. Therefore, we don't need the vtkDataCollectorFile anymore.

#### 2012-07-19, 06:09:15 - Andras Lasso
(In r:1936|plus:1936) re #501: Removed vtkDataCollectorFile. Instead the saved data set image source can be used for synchronized replay of pre-recorded image and tracking data. The <File SequenceMetafile='xyz.mha' ... /> element is still supported (internally it generates a saved data set video source), but will be removed in the near future.

Deprecated elements/attributes:

Deprecated: <File SequenceMetafile='xyz.mha' ReplayEnabled='TRUE' /> 
New: <ImageAcquisition Type='SavedDataset' SequenceMetafile='xyz.mha' UseAllFrameFields='TRUE' UseOriginalTimestamps='TRUE' RepeatEnabled='TRUE' />
 UseAllFrameFields: enables reading and replaying tracking data from the sequence metafile
 UseOriginalTimestamps: if enabled then the original timestamp values will be used, if not enabled then the current time will be used for the acquired items
 RepeatEnabled: new name of ReplayEnabled

Deprecated: <ImageAcquisition Type='None' />
New: simply skip the ImageAcquisition element if there is no video source

Deprecated: <Tracker Type='None' />
New: simply skip the Tracker element if there is no tracker


#### 2012-07-19, 06:09:48 - Andras Lasso
(In r:1937|plus:1937) re #501: Removed vtkDataCollectorFile

#### 2012-07-19, 13:32:35 - Andras Lasso
(In r:1938|plus:1938) re #501: Renamed saved data set ImageAcquisition attribute UseAllFrameFields to UseData, with the following possible values:
 UseData='IMAGE' (read the image data only)
 UseData='IMAGE_AND_TRANSFORM' (read image and tracking data as well)

#### 2012-09-26, 17:54:35 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2012-09-26, 17:54:52 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.7.0"

#### 2012-09-26, 21:43:36 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2012-09-28, 21:55:29 - Adam Rankin
Closing this as duplicate.

#### 2012-09-28, 21:55:29 - Adam Rankin
status: changed from "New" to "Invalid"


## #502 Support acquisition of color images
Currently acquisition of 8-bit and 16-bit grayscale images is supported. When a color imaging device, such as a webcam is used then the images are converted to grayscale.

It would be useful to be able to acquire, store, and process color images.

#### 2013-05-15, 20:55:22 - Andras Lasso
BWH would be interested in using this for recording one or two color video streams at 30fps (just for post-operative analysis).

#### 2013-07-09, 16:33:07 - Andras Lasso
Requested by Tamas Ungi as well on July 9, 2013. People often turn on Doppler mode imaging during some US-guided navigation tecnhiques.

#### 2013-07-09, 16:34:07 - Andras Lasso
Implement this after #793.

#### 2013-07-09, 16:34:07 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-07-09, 16:36:03 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-12-03, 16:43:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-01-14, 18:25:07 - Adam Rankin
(In r:3126|plus:3126) re #502 branching plus trunk for color image development

#### 2014-01-14, 18:31:10 - Adam Rankin
(In r:3127|plus:3127) re #502 updating branch to point towards correct PlusApp and PlusLib

#### 2014-01-14, 18:43:39 - Adam Rankin
(In r:3128|plus:3128) re #502 #793 renaming branch to support a broader scope

#### 2014-01-14, 18:44:55 - Adam Rankin
(In r:3129|plus:3129) re #502 #793 updating cmake to point to renamed branch

#### 2014-02-25, 21:50:23 - Adam Rankin
test #502 enabling color image support

enabling color image capture to Mmf video source as a test device. Other devices will have to support color capture on a per-device basis

updated test image files to support added header field to indicate number of channels (still 1, but can now support 3)
Commit: r:3195|plus:3195

#### 2014-02-25, 21:50:23 - Adam Rankin
status: changed from "New" to "Test"

#### 2014-02-26, 14:18:51 - Adam Rankin
test #502 restoring 64bit build
Commit: r:3196|plus:3196

#### 2014-02-26, 14:20:57 - Adam Rankin
re #502 future proofing by adding number of components to an additem call
Commit: r:3197|plus:3197

#### 2014-02-26, 16:56:45 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2014-02-26, 16:58:32 - Adam Rankin
test #502 refactoring colour image mechanism to be indicated via image type

enabled image type override in data source configuration

prepared media foundation api for mjpg conversion (non-interlaced to start)
Commit: r:3198|plus:3198

#### 2014-02-27, 16:15:36 - Adam Rankin
re #502 removing branch, continuing work in personal sandbox
Commit: r:3199|plus:3199

#### 2014-02-27, 16:20:41 - Adam Rankin
re #502 banishing the brits and canadians from the project!
Commit: r:3200|plus:3200

#### 2014-02-27, 16:30:49 - Adam Rankin
re #502 updating sandbox PlusBuild
Commit: r:3201|plus:3201

#### 2014-02-27, 17:02:44 - Adam Rankin
re #502 merging trunk into sandbox
Commit: r:3202|plus:3202

#### 2014-03-04, 13:18:52 - Adam Rankin
re #502 merge trunk into sandbox
Commit: r:3211|plus:3211

#### 2014-03-04, 15:54:23 - Adam Rankin
re #502 removing deprecated tag
Commit: r:3212|plus:3212

#### 2014-03-04, 15:55:32 - Adam Rankin
re #502 merging trunk into sandbox
Commit: r:3213|plus:3213

#### 2014-03-04, 17:57:56 - Adam Rankin
re #502 OpenIGTLinkVideo/vtkOpenIGTLinkVideoSource.cxx and openigtlink server now support color images

OpenIGTLink tracked frame message and image message both retrofitted to support color images
Commit: r:3214|plus:3214

#### 2014-03-04, 19:40:48 - Adam Rankin
re #502 colour -> color
Commit: r:3215|plus:3215

#### 2014-03-04, 19:56:48 - Adam Rankin
test #502 merging open igt link color image support from sandbox
Commit: r:3216|plus:3216

#### 2014-03-06, 01:43:19 - Andras Lasso
@rankin: Is it possible to choose between a color/grayscale output for the MMF video source? (if I acquire US images then I need grayscale, if I acquire endoscopy images then I need RGB)

#### 2014-03-06, 01:56:22 - Adam Rankin
Do you mean live?

Not at the moment.

I could easily add a feature that populated multiple video sources with the same image, converted to different image types.

Then all you would have to do is have two video sources: one set to image type=rgb_color and one image type=us_brightness (I'll have to check exact syntax).

Then you can have two output channels, one for each video source. 

#### 2014-03-06, 02:17:39 - Andras Lasso
No, I mean just static definition.

Is there a sample config file for MMF with color? I've just added ImageType='RGB_COLOR' to the video source and broadcast it to Slicer but in Slicer the volume appears scrambled and in the volume module it appears as single-channel.

#### 2014-03-06, 02:24:25 - Adam Rankin
Hmmm... I will investigate slicer. Is that igtl image message or igtl tracked frame message?

#### 2014-03-06, 02:26:09 - Andras Lasso
Normal image message. If I remove the ImageType then it sends grayscale images that appear correctly.

#### 2014-03-06, 02:30:11 - Adam Rankin
Ok I'll check it out

#### 2014-03-06, 02:31:23 - Andras Lasso
With the same config file, with the ImageType='RGB_COLOR' the image is nice and colorful in fCal!

#### 2014-03-06, 02:32:30 - Adam Rankin
Yeah plus uses the tracked frame message. I've screwed something up for image messages.

#### 2014-03-06, 02:35:55 - Andras Lasso
Saving to metafile from fCal and loading to Slicer from fCal works well, too! So, it seems that only the image messages don't work perfectly yet for color images - but I'm sure you'll be able to fix this very quickly. It's so impressive to see color images everywhere :)

#### 2014-03-06, 17:27:05 - Adam Rankin
re #502 missed one spot where the number of component was not set correctly
Commit: r:3221|plus:3221

#### 2014-03-06, 17:28:15 - Adam Rankin
re #502 Merged revision(s) 3217-3221, 2441-3216 from branches/rankin-sandbox/PlusLib:
branching trunk into sandbox
Commit: r:3222|plus:3222

#### 2014-03-18, 20:42:55 - Andras Lasso
re #502: Added configuration file for color image acquisition using MMF device
Commit: r:3234|plus:3234

#### 2014-03-18, 20:44:23 - Andras Lasso
re #502: Added configuration file for color image acquisition using MMF device (added to installation package)
Commit: r:3235|plus:3235

#### 2014-04-22, 20:09:35 - Andras Lasso
Tried to broadcast a color image from webcam with MMF and with the latest Slicer trunk version and I get this error in the Slicer log (and no image appears):

Warning: In ..\\..\\..\\..\\..\\OpenIGTLinkIF\\MRML\\vtkIGTLToMRMLImage.cxx, line 76
vtkIGTLToMRMLImage (0000000015258390): Unable to cast incoming message to image message. Defaulting display node to greyscale.

Does it work for you?


#### 2014-04-23, 04:58:54 - Andras Lasso
I've fixed the implementation:
* color images are displayed as true color (not with rainbow LUT; the node type had to be set to vtkMRMLVectorVolumeNode)
* no more crash or partial image update if number of components are changed (if there is a mismatch then the image is not updated and an error is logged).

https://github.com/lassoan/OpenIGTLinkIF/tree/color-image-truecolor-display

@rankin: Could you please review and test the changes and submit a pull request if everything is OK? Thanks!

#### 2014-04-23, 17:25:48 - Adam Rankin
Working great under windows, testing under Linux shortly.

#### 2014-05-14, 23:21:28 - Andras Lasso
Works well with latest trunk version of Plus and nightly Slicer release.

#### 2014-05-14, 23:21:28 - Andras Lasso
status: changed from "Test" to "Fixed"


## #503 Implement sensor fusion algorithm for getting full 6-DOF pose from MARG sensors
Data acquisition is supported with the Phidget Spatial magnetic, angular rate, and gravity (MARG) sensor. However, the raw measurement data does not provide full 6-DOF position and orientation information.

Need to integrate a sensor fusion algorithm that can compute the pose from the raw measurement values, such as:
http://www.x-io.co.uk/node/8#open_source_ahrs_and_imu_algorithms
http://www.varesano.net/projects/hardware/FreeIMU#library
http://forum.sparkfun.com/viewtopic.php?f=14&t=22789

#### 2012-05-24, 13:20:43 - Andras Lasso
description: changed from "Data acquisition is support..." to "Data acquisition is support..."

#### 2012-05-24, 13:20:43 - Andras Lasso
summary: changed from "Implement sensor fusion algorithm for getting full 6-DOF pose from IMU sensors" to "Implement sensor fusion algorithm for getting full 6-DOF pose from MARG sensors"

#### 2012-05-24, 13:23:13 - Andras Lasso
description: changed from "Data acquisition is support..." to "Data acquisition is support..."

#### 2012-06-23, 12:27:36 - Andras Lasso
(In r:1820|plus:1820) re #503: Added sensor fusion algorithm to tilt sensor

#### 2012-06-23, 12:27:36 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-06-24, 19:49:25 - Andras Lasso
(In r:1831|plus:1831) re #503: Updated sample config file to utilize the sensor fusion output

#### 2012-08-30, 16:26:37 - Andras Lasso
(In r:2043|plus:2043) re #503: Fixed the sensor fusion algorithm. OrientationSensor tool is now working correctly.

#### 2012-08-30, 19:10:58 - Andras Lasso
(In r:2045|plus:2045) Fixed #503: Cleaned up the sensor fusion algorithm for the PhidgetSpatial tracker

#### 2012-08-30, 19:10:58 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-08-30, 19:11:40 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-09-12, 20:16:54 - Andras Lasso
(In r:2080|plus:2080) re #503: Added 2-DOF tilt sensor function to Phidget spatial tracker


## #504 Add support for BK Pro Focus ultrasound systems
Add support for BK Pro Focus ultrasound system used at Brigham and Women's Hospital at Harvard. Initial work has been done at the 2012 Winter project week (http://www.na-mic.org/Wiki/index.php/2012_Winter_Project_Week:BKPLUSSlicer), more work will be done at the 2012 Summer project week. 

#### 2012-06-13, 19:38:26 - Andras Lasso
(In r:1772) re #504: Added files of initial attempts for BK ProFocus support (by Isaiah)

#### 2012-06-14, 00:04:50 - Andras Lasso
(In r:1774) re #504: Added high-level build options for enabling BK ProFocus

#### 2012-06-14, 23:01:40 - Andras Lasso
(In r:1780) re #504: Renamed BkProFocus interface classes

#### 2012-06-14, 23:06:24 - Andras Lasso
(In r:1781) re #504: Added a stripped-down version of the BK Grabbie-1.1.0, as the original depended on MFC, used precompiled headers, contained lots of unneeded code (Matlab wrapping, examples, etc.), duplicate files, the project did not export defined variables properly, therefore could not be cleanly built as an external project, etc.

#### 2012-06-15, 00:51:32 - Andras Lasso
(In r:1782) re #504: Fixed GrabbieLib build errors

#### 2012-06-15, 01:37:23 - Andras Lasso
(In r:1783) re #504: Removed BkProFocus external project (the stripped-down version will be rebuilt in PlusLib)

#### 2012-06-15, 07:26:12 - Andras Lasso
(In r:1784) re #504: Added support for BK ProFocus scanners (using DALSA framegrabbers with Sapera SDK), not yet tested with real hardware

#### 2012-06-15, 14:11:51 - Andras Lasso
(In r:1785) re #504: Set up Win64 build options so that there are no build errors with default parameters

#### 2012-06-15, 14:14:17 - Andras Lasso
(In r:1787) re #504: Added BK and NDI Polaris sample config files to the release package

#### 2012-06-15, 16:00:07 - Andras Lasso
(In r:1788) re #504: Initialize BK image size with the size of the first frame that it gets after connect

#### 2012-06-15, 16:55:24 - Andras Lasso
(In r:1790) re #504: Added more logging info to image acquisition

#### 2012-06-15, 17:42:02 - Andras Lasso
(In r:1791) re #504: Switched xy image size in the BK image source, initialize buffer size (so that a non-empty buffer is created even when nothing is specified in the config file), added more logging

#### 2012-06-16, 02:14:42 - Andras Lasso
(In r:1792) re #504: Switched back xy image size in the BK image source, because the images are stored in FM (or FU) orientation and it makes no sense to convert them back to the usual MF (or UF) without doing scan conversion

#### 2012-06-16, 03:43:45 - Andras Lasso
(In r:1794) re #504: Fixed one image size computation in the BK image source and added multiple comments where the implementation should be checked

#### 2012-06-19, 14:40:00 - Andras Lasso
(In r:1797) re #504: Updated config file for AMIGO

#### 2012-06-19, 15:43:33 - Andras Lasso
(In r:1798) re #504: Updated config file for AMIGO (for display port 0)

#### 2012-06-19, 15:45:28 - Andras Lasso
(In r:1799) re #504: Read toolbox enable/disable config info from the config file

#### 2012-06-22, 14:44:51 - Andras Lasso
(In r:1809|plus:1809) re #504: Fixed build warning

#### 2012-06-22, 14:46:35 - Andras Lasso
(In r:1810|plus:1810) re #504: Updated the receiver to match the implementation in CuteGrabbie (has not been tested yet)

#### 2012-06-22, 21:48:22 - Andras Lasso
(In r:1812|plus:1812) re #504: Fixed tracking with Ascension MedSafe tracker

#### 2012-06-22, 21:48:59 - Andras Lasso
(In r:1813|plus:1813) re #504: Fixed tracking with Ascension MedSafe tracker

#### 2012-06-22, 22:16:39 - Andras Lasso
(In r:1814|plus:1814) re #504: Removed unnecessary variable from Ascension tracker class, removed atc namespace because it caused build errors with either TrakStar or MedSafe

#### 2012-06-22, 22:20:16 - Andras Lasso
(In r:1815|plus:1815) re #504: Fixed tracking with Ascension MedSafe tracker build error

#### 2012-06-22, 22:23:23 - Andras Lasso
(In r:1816|plus:1816) re #504: Reverted config file changes

#### 2012-06-23, 02:14:37 - Andras Lasso
(In r:1817|plus:1817) re #504: Added possibility to support Ascension 3DG (trakSTAR) and 3DGm (medSAFE) at the same time

#### 2012-06-23, 02:23:04 - Andras Lasso
(In r:1818|plus:1818) re #504: Removed GrabbieLib classes from Plus documentation

#### 2012-06-23, 02:45:01 - Andras Lasso
(In r:1819|plus:1819) re #504: Added possibility to support Ascension 3DG (trakSTAR) and 3DGm (medSAFE) at the same time

#### 2012-06-23, 23:07:37 - Andras Lasso
(In r:1822|plus:1822) re #504: Updated config file for AMIGO (added fake tracker example as a comment), removed maximum number of lines limitation

#### 2012-06-24, 13:48:03 - Andras Lasso
(In r:1824|plus:1824) re #504: Made GrabbieLib build as an external project

#### 2012-06-24, 13:49:24 - Andras Lasso
(In r:1825|plus:1825) re #504: Made GrabbieLib build as an external project

#### 2012-06-24, 14:00:30 - Andras Lasso
(In r:1826|plus:1826) re #504: Made GrabbieLib build as an external project

#### 2012-06-25, 14:54:49 - Andras Lasso
(In r:1835|plus:1835) re #504: Pass the Sapera library path to PlusLib

#### 2012-06-25, 14:54:56 - Andras Lasso
(In r:1836|plus:1836) re #504: Pass the Sapera library path to PlusLib

#### 2012-07-06, 20:35:14 - Andras Lasso
Basic support is implemented, specific issues are tracked in other tickets.

#### 2012-07-06, 20:35:14 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-09-07, 17:04:25 - Andras Lasso
(In r:2058|plus:2058) re #504: Allow acquisition of B-mode images from BK scanners (doing RF->Brightness conversion in the image source)

#### 2014-03-12, 14:59:32 - Andras Lasso
re #504: Added simple config file for BK OEM interface broadcasting
Commit: r:3227|plus:3227

#### 2014-03-12, 14:59:53 - Andras Lasso
re #504: Added simple config file for BK OEM interface broadcasting
Commit: r:3228|plus:3228


## #505 Add support for TeleMed ultrasound systems
Need to add support for ultrasound image acquisition from TeleMed ultrasound systems (http://www.telemed.lt/main_en.htm)

#### 2012-06-28, 21:20:03 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:46 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-06-25, 12:13:37 - Adam Rankin
Does telemed have a research interface and/or an SDK?

Edit: and do we have access to the desired hardware?

#### 2013-06-25, 12:47:17 - Andras Lasso
The idea is that Kitware develops it and we help them as needed.

#### 2013-11-25, 14:54:51 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-06-05, 02:04:26 - Andras Lasso
No new from Kitware about this lately. We will reopen this ticket on request.

#### 2014-06-05, 02:04:26 - Andras Lasso
assigned_to_id: changed from "vikasrs" to null

#### 2014-06-05, 02:04:26 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2014-07-21, 19:05:03 - Vikas Revanna Shivaprabhu
Starting Support for Telemed Ultrasound Probe

re #505
Author : Matthieu Heitz
Company : Kitware
Date : 07-21-14
Commit: r:3519|plus:3519

#### 2014-07-21, 19:05:03 - Vikas Revanna Shivaprabhu
assigned_to_id: changed from null to "vikasrs"

#### 2014-07-21, 20:20:09 - Andras Lasso
assigned_to_id: changed from "vikasrs" to "heitz.matthieu383937"

#### 2014-07-21, 20:20:17 - Andras Lasso
status: changed from "Invalid" to "Accepted"

#### 2014-08-11, 18:31:49 - Matthieu Heitz
re #505: Initial commit for Telemed support

List of squashed commits : ( from older to newer)

 38e9543 Create source and header for new device class : vtkTelemedVideoSource
 5b3066c Add option to use the Telemed US probes in CMakeLists of PlusBuild
 c95f51b Add option to use the Telemed US probes in CMakeLists of PlusLib/src/DataCollection
 76c781e Keep only class skeletons for custom vtkPlusDevice (vtkTelemedVideoSource)
 ee67dab Got the build dir out of the git repo, so don't need .gitignore anymore
 09c542a Update the DataCollection CMakeLists to correctly link the needed libraries
 d5374bf Permute include place to avoid error, and add content of former stdafx.h to vtkTelemedVideoSource.h
 6921e4a Fix linking problem by using link_directories() instead of TARGET_LINK_LIBRARIES()
 17f4828 Delete the using of vtkUsImagingParameters, and class vtkInternal
 ddd9796 Partly fixed a Linking problem (with Windows SDK symbols)
 12d0a02 Add a FindTelemed.cmake module to the PlusBuild project
 3a970ea Add USE_TELEMED_VIDEO in cmake-args for external build of PlusLib in PlusBuild
 9862270 Add and delete a few comments in DataCollection CMakeLists
 0a589da Add a new test file : vtkTelemedVideoSourceTest
 fd9de40 Add the test project to CMakeLists in DataCollection/Testing
 d7ffc07 Add find_package(windowsSDK) to PlusBuild's CMakeLists
 bfa219d Cleaned the vtkTelemedVideoSource class
 7324497 Add 2 classes to drive Telemed probe: TelemedUltrasound & DeviceFilter
 0abc6b8 Add the 2 classes files to the project when PLUS_USE_TELEMED_VIDEO
 1f7f286 Corrected the filenames of 2 Telemed classes added in commit 60324e3
 bb24b66 Add StdAfx file to project, and CMakeLists in DataCollection
 ed3abc5 Changed inclusion of StdAfx in TelemedUltrasound.cxx
 134b0e0 Uncommented including libraries strmif.h and initguid.h
 2f39ca9 Uncommented function Run() in TelemedUltrasound.
 a8ea54d Add some virtual functions of vtkPlusDevice to vtkTelemedVideoSource
 022296e Resolve compiling error due to bad inclusion order in files.
 7443b1e Transfer Finalize() and FreezeDevice() in TelemedUltrasound
 e06b0d7 Add IsTracker() to vtkTelemedVideoSource
 daa952a Fix error in TelemedUltrasound::FreezeDevice(bool freeze)
 c175f4f Fix error in vtkTelemedVideoSource::InternalConnect()
 0f91a42 Add argument when calling CreateDefaultOutputChannel()
 eba6d83 Move the find_package(windowsSDK) to External_PlusLib.cmake
 9f0f981 Change from AFX library (MFC) to STL in entire project
 05a5a55 Clean FindTelemed.cmake, removing unnecessary commented lines
 4aa6fc1 Clean DataCollection/CmakeLists, and remove FindWindowsSDK
 a5ac871 Add brackets for one-line commands after condition (if)
 dea1e3d Remove last inclusion of stdadx.h, in DeviceFilter
 17090a7 Add condition in TelemedUltrasound D'tor in case of double call.
 964909c Delete overrided fucntions : StartRecording and StopRecording
 99c28f0 Add InternalUpdate() function to add frames to the streambuffer.
 7075d63 Change the Connect() function to set some parameters to the device
 92df52e Fixed the bug of overfilling the RAM
 3cf813a Add a variable US_IMAGE_ORIENTATIO in InternalUpdate()
 8bb3805 Set the StartThreadForInternalUpdates to true in TelVidSource C'tor
 8b084c0 Change some parameter values in Connect()
 fd12900 Changed the image tranforming method in InternalUpdate()
 1d1f915 Add 2 xml config files for Telemed, used for server in OpenIGTLink
 edf681e Add condition to ReleaseObject() in TelemedUltrasound::Finalisze()
 d3fc995 Change a few details in main() of vtkTelemedVideoSourceTest
 bb6a86b Uncheck PLUS_USE_BRACHY_TRACKER, not useful
 a4bce00 Formatting SetGainValue(), in TelemedUltrasound
 70c1e7d Formatting SetPowerValue(), in TelemedUltrasound
 ac57c21 Formatting & details fixing in SetDynRangeValue(), TelemedUltrasound
 59b9b53 Add setters for Gain, Power, DynRange in vtkTelVidSrc
 6e9e659 Add a default output channel direclty in the vtkTelVidSrc C'tor
 1fc5ffd Add the Telemed Device in vtkPlusDeviceFactory.cxx
 0f36d40 Change few details in vtkTelemedVideoSourceTest
Commit: r:3592|plus:3592

#### 2015-05-26, 18:05:44 - Andras Lasso
re #505: Fixed Telemed image orientation

It was hardcoded to a wrong value (MF). Made it configurable (the correct value is UN).
Commit: r:4159|plus:4159

#### 2015-06-06, 13:38:44 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #506 Advise the user during free-hand calibration about what motions patterns should be performed
For a good calibration it is important to translate and rotate the transducer in a sufficiently large range along various axes. The software could determine if translation and rotation motion was large enough along all axes and could display messages that would instruct the user to make certain motions to ensure optimal coverage.

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-12-11, 21:37:18 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2014-06-05, 01:42:05 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 19:17:00 - Andras Lasso
It is already documented in the on-screen instructions and user manual.

#### 2014-09-27, 19:17:00 - Andras Lasso
status: changed from "New" to "Invalid"


## #507 Axes of the ImageToProbeTransform are not always orthogonal
The probe calibration algorithm determines the ImageToProbeTransform axes independently, therefore if there is an error in the calibration procedure then the computed coordinate axes may not be orthogonal.

Root cause: most frequently the root cause of the problem is that the phantom description does not match the actual phantom geometry (the wire positions in the phantom are not the same as the actual wire positions) or it may be caused by having a large number of fiducial line intersection point detection errors (the calibration algorithm can remove a limited number of outliers if they are very different from the true positions and the outliers are less than about 5-10% of the data).

The calibration algorithm should be changed so that it always returns the best possible *orthogonal* transform.

The algorithms described in this paper may work: http://iopscience.iop.org/0031-9155/46/2/321/pdf/m10221.pdf

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-05, 17:17:35 - Andras Lasso
description: changed from "The probe calibration algor..." to "The probe calibration algor..."

#### 2012-07-11, 14:24:55 - Csaba Pinter
By Elvis Chen on Jul 11 @ 10:23am
One easy fix is:

[U,S,V] = svd(m(1:3,1:3));
R = U*V';

Now the R is the proper orthonormal matrix. In fact, the S is the scaling matrix (which is different from what PLUS calculates). If one wishes to put the anisotropic scaling back to R, I would do:

sx,sy,sz; // anisotropic scaling from, say, PLUS calibration
R(1:3,1) = R(1:3,1)*sx;
R(1:3,2) = R(1:3,2)*sy;
R(1:3,3) = R(1:3,3)*sz;

then:

m(1:3,1:3) = R;

#### 2012-09-21, 21:43:00 - Andras Lasso
Use an algorithm similar to vtkPivotCalibrationAlgo to optimize 3 translation + 3 rotation + 1 or 2 scaling (1 for curvilinear transducer, 2 for linear transducer).
Use the current LS algorithm result as initial values. Limit the search range to a couple of mm and deg.

Guillermo: work with Csaba until I get back (on Oct 10, 2012).

#### 2012-09-21, 21:43:00 - Andras Lasso
assigned_to_id: changed from "rankin" to "GuillermoCarbajal"

#### 2012-09-21, 21:43:00 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-09-25, 15:29:13 - Csaba Pinter
(In r:2130|plus:2130) Re #507: Fixed build warning

#### 2012-09-25, 15:29:31 - Csaba Pinter
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.7.0"

#### 2012-09-27, 19:53:35 - GuillermoCarbajal
(In r:2136|plus:2136) Re #507:
class vtkSpatialCalibrationOptimizer was modified. A first solution of the optimization problem was implemented using vtk amoeba minimizer to estimate 8 parametes (3 rotation, 3 translation + 2 scales)
Some code was added to vtkProbeCalibrationAlgo for interfacing with vtkSpatialCalibrationOptimizer. This code is currently commented.

#### 2012-09-28, 22:23:59 - GuillermoCarbajal
(In r:2142|plus:2142) Re #507:
* Vectors to store all the segmented points (not only the middles points) and all the probe to matrix transforms were added in vtkProbeCalibrationAlgo. Some code that use those vectors was added but is commented. 
* In class vtkSpatialCalibrationOptimizer was added a first implementation of an algorithm that find the calibration parameters as the argument that minimize the distance between the wires and the projection of the segmented points in the phantom reference frame.

#### 2012-09-28, 22:49:13 - Csaba Pinter
(In r:2143|plus:2143) Re #507: Cleaned up code and enforced coding convention

#### 2012-09-28, 22:53:40 - Csaba Pinter
Guillermo,

Please try to stick to the coding convention and be more exact, because your code was quite inconsistent in terms of formatting and variable and function naming, which makes it very hard to read and also hurts the eyes.

I cleaned it up now, but I don't plan to do it after each commit of yours.
Please also comb through the code for things to fix, there are still lots of them (for example a variable named 'A' is not something that makes the code more readable).

Thanks!

#### 2012-09-29, 08:34:43 - Andras Lasso
Guillermo, it was very quick. I'm looking forward to seeing the results. You can test the algorithm by doing calibration using a phantom description that is slightly different from the actual wire positions of the phantom and/or use only 2 wires for the calibration that are close to each other. This way the LS optimization will result a skewed image, which should be straightened by the new algorithm.

#### 2012-10-01, 20:15:39 - GuillermoCarbajal
(In r:2146|plus:2146) Re #507:
* Some variables and functions were renamed in order to satisfy the required format.
* In vtkProbeCalibrationAlgo.cxx was added the method SetAndValidateImageToProbeTransform2. Basically it does the same than SetAndValidateImageToProbeTransform but doesn't correct the third row of the transformation to make it orthogonal to the first and second. 


#### 2012-10-03, 19:10:34 - Adam Rankin
https://www.assembla.com/code/plus/subversion/changesets/2150
linked to this ticket

#### 2012-10-04, 14:11:02 - Adam Rankin
(In r:2151|plus:2151) re #507 2nd pass cleanup

#### 2012-10-04, 14:14:17 - Adam Rankin
(In r:2152|plus:2152) re #507 Removing incorrect brief. Guillermo, please fill in a correct description.

#### 2012-10-04, 14:17:06 - Adam Rankin
(In r:2153|plus:2153) re #507 minor change to trace output

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-26, 13:37:05 - GuillermoCarbajal
(In r:2208|plus:2208) Re #507:
* presentation for 10/26 meeting was added
* also some auxiliary data was added 

#### 2012-11-02, 13:59:59 - GuillermoCarbajal
(In r:2221|plus:2221) Re #507:
* presentation for 11/2 meeting was added

#### 2012-12-07, 21:30:48 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-01-11, 23:41:57 - GuillermoCarbajal
(In r:2373|plus:2373) re #507: Spatial calibration algorithm improved: Added non-linear optimization step that is performed after the regular calibration is completed. This additional step makes sure that the resulting transform is orthogonal and also the accuracy and precision is improved.

Remaining tasks:
* Add test cases for the new algorithm
* Clean up the committed code


#### 2013-01-12, 17:13:59 - Andras Lasso
(In r:2374|plus:2374) re #507: Fixed linux build errors

#### 2013-01-12, 17:33:52 - Andras Lasso
(In r:2375|plus:2375) re #507: Fixed linux build errors

#### 2013-01-12, 18:02:32 - Andras Lasso
(In r:2377|plus:2377) re #507: Fixed linux build errors


#### 2013-01-12, 18:52:38 - Andras Lasso
(In r:2378|plus:2378) re #507: Fixed linux build errors


#### 2013-01-12, 18:52:46 - Andras Lasso
(In r:2379|plus:2379) re #507: Fixed linux build errors


#### 2013-01-12, 19:23:43 - Andras Lasso
(In r:2380|plus:2380) re #507: Fixed linux build warnings


#### 2013-01-12, 19:50:45 - Andras Lasso
(In r:2381|plus:2381) re #507: Fixed linux build warnings


#### 2013-01-15, 22:25:42 - GuillermoCarbajal
(In r:2383|plus:2383) Re #507:
Tests for the IPEI (In Plain Error, Isotropic scaling), IPEA (In Plain Error, Anisotropic scaling), OPEI(Out of Plane Error, Isotropic scaling) and OPEA (Out of Plane Error, Anisotropic scaling) optimization methods were added.

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-02-13, 20:58:40 - Andras Lasso
assigned_to_id: changed from "GuillermoCarbajal" to "lassoan"

#### 2013-02-13, 21:04:10 - Andras Lasso
(In r:2493|plus:2493) re #507: Simplified implementation of the non-linear calibration optimization step. The optimizer is switched to Amoeba method, as it doesn't require gradients and it optimizes a single-valued cost function. The optimization can be enabled by adding the following attributes to the vtkProbeCalibrationAlgo XML element: OptimizationMethod='2D' (or 3D) and IsotropicPixelSpacing='TRUE' (or FALSE). OptimizationMethod='2D' is recommended. For linear transducers IsotropicPixelSpacing='FALSE' is recommended to allow identification of X and Y pixel spacing separately (caused by speed-of-sound mismatch). For curvilinear transducers IsotropicPixelSpacing='TRUE' is recommended, because after curvilinear scan conversion speed-of-sound mismatch cannot be compensated.

#### 2013-02-13, 21:45:17 - Andras Lasso
(In r:2499|plus:2499) re #507: Fixed memory corruption error in the calibration optimizer

#### 2013-02-17, 03:34:20 - Andras Lasso
Some non-regression tests fail on linux. The root cause is that there are some differences in the fiducial segmentation on linux, which leads to differences in the calibration results as well. Need to replace the calibration/validation data set anyway, because they don't correspond to the same phantom. Hopefully the differences will be negligible with the new data sets.

#### 2013-02-17, 15:48:45 - Andras Lasso
(In r:2507|plus:2507) re #507: Updated test data for spatial calibration optimizer (FreehandCalibration3NWires_fCal2.0_Depth15_1.mha and FreehandCalibration3NWires_fCal2.0_Depth15_2.mha are the first 200 frames of CalibrationSequence5_Depth15_20130107_024735.mha and CalibrationSequence6_Depth15_20130107_024735.mha sequences from the CARS2013 data set)

#### 2013-02-17, 18:02:15 - Andras Lasso
(In r:2508|plus:2508) re #507: Continue clean-up of spatial calibration

#### 2013-02-17, 21:04:02 - Andras Lasso
(In r:2509|plus:2509) re #507: Continued clean-up of spatial calibration

#### 2013-02-19, 23:43:25 - Andras Lasso
(In r:2512|plus:2512) re #507: Moved spatial calibration metric computation to vtkProbeCalibrationAlgo. Changed OPEI/OPEA methods to consider the entire frame as an outlier if of the N-wires on the frame is an outlier (to make the behavior identical to the IPEI/IPEA methods). Simplification of the algorithm implementation is still in progress.

#### 2013-02-19, 23:45:08 - Andras Lasso
(In r:2513|plus:2513) re #507: Moved spatial calibration metric computation to vtkProbeCalibrationAlgo. Changed OPEI/OPEA methods to consider the entire frame as an outlier if of the N-wires on the frame is an outlier (to make the behavior identical to the IPEI/IPEA methods). Simplification of the algorithm implementation is still in progress. Committing missed file.

#### 2013-02-20, 14:51:04 - Andras Lasso
(In r:2514|plus:2514) re #507: Fixed PlusApp build error due to missing GetCalibrationReprojectionError3DMean. Continued clean-up of spatial calibration. Now the same 2d and 3d metric computation is used during optimization as for the final error reporting. IPE is now computed as real in-plane error (instead of computing as the distance between the segmented intersection point and the corresponding wire). Maximum number of optimization iterations increased to 30000.

#### 2013-02-20, 16:33:53 - Andras Lasso
(In r:2515|plus:2515) re #507: Continued clean-up of spatial calibration

#### 2013-02-20, 19:46:44 - Andras Lasso
(In r:2516|plus:2516) re #507: Continued clean-up of spatial calibration

#### 2013-02-20, 19:56:51 - Andras Lasso
(In r:2517|plus:2517) re #507: Continued clean-up of spatial calibration

#### 2013-02-22, 04:00:34 - Andras Lasso
(In r:2523|plus:2523) re #507: Continued cleanup of vtkProbeCalibrationAlgo. Fixed linux IPEI test failure by increasing translation tolerance.

#### 2013-02-22, 13:29:14 - Andras Lasso
(In r:2524|plus:2524) re #507: Decreased convergence tolerance to make IPEI test pass on all Linux boxes

#### 2013-02-25, 01:09:59 - Andras Lasso
(In r:2530|plus:2530) re #507: Switched to Powell optimizer (from Amoeba) in IPEI/IPEA/OPEI/OPEA calibration optimization methods. Powell converges in less iterations and the results are more similar on all platforms (Windows and Linux).

#### 2013-02-26, 15:09:04 - Andras Lasso
(In r:2534|plus:2534) re #507: Renamed vtkSpatialCalibrationOptimizer to vtkProbeCalibrationOptimizerAlgo to better reflect the close relationship with vtkProbeCalibrationAlgo

#### 2013-02-26, 15:11:48 - Andras Lasso
component_id: changed from "None" to "iCalBrachy"

#### 2013-02-26, 15:11:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-02-26, 15:16:05 - Andras Lasso
Orthogonality of the ImageToProbe transformation matrix can be enforced by adding the OptimizationMethod attribute (with value '2D' or '3D') to the vtkProbeCalibrationAlgo element in the device set config file. Isotropic image pixel spacing can be enforced by adding IsotropicPixelSpacing='TRUE' to vtkProbeCalibrationAlgo element.

Example:

<PlusConfiguration version='2.1' >
  ...
  <vtkProbeCalibrationAlgo 
    ImageCoordinateFrame='Image' 
    ProbeCoordinateFrame='Probe' 
    PhantomCoordinateFrame='Phantom' 
    ReferenceCoordinateFrame='Reference' 
    OptimizationMethod='2D' 
    IsotropicPixelSpacing='TRUE'/>
  ...
</PlusConfiguration>


#### 2013-02-26, 15:16:22 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2016-12-03, 17:59:07 - Andras Lasso
re #507: Relaxes tolerances to avoid false test errors due to minor floating point computation differences on various compilers

For example:

Site Name: TESLA
Build Name: vs12x64-win7-trunk
Build Date: 2016-12-03 02:19:12
Test Timing: Passed
vtkFreehandCalibrationOPEIOptimizationMethodTest
Failed

Execution Time (s)
8.42 (mean:7.62 std:1.91) 
Command Line
D:\\D\\PTN-VS2013-64b\\bin\elease\\ProbeCalibration.exe '--config-file=D:/D/PTN-VS2013-64b/PlusLibData/ConfigFiles/Testing/PlusDeviceSet_OPEI_OptimizationMethod.xml' '--calibration-seq-file=D:/D/PTN-VS2013-64b/PlusLibData/TestImages/FreehandCalibration3NWires_fCal2.0_Depth15_1.mha' '--validation-seq-file=D:/D/PTN-VS2013-64b/PlusLibData/TestImages/FreehandCalibration3NWires_fCal2.0_Depth15_2.mha' '--baseline-file=D:/D/PTN-VS2013-64b/PlusLibData/TestImages/OPEI_OptimizationMethod_Calibration.results.xml'
Completion Status
Completed (Failed)
Exit Value
1
Fail Reason
Error regular expression found in output. Regex=[ERROR]


Test output
System start timestamp: 2.07026e+006
Software version: Plus-2.5.0.4955 - Win64
Read configuration file...
Read calibration sequence file...
Segment fiducials...
Segmentation success rate of calibration images: 75 out of 200
Read validation sequence file...
Segment fiducials...
Segmentation success rate of validation images: 73 out of 200
Calibrate...
Additional calibration optimization is requested
Initial cost function value with unconstrained matrix = 0.756312
-0.030 -0.024  0.281 -11.554 
 0.281 -0.012  0.029 -117.312 
 0.013  0.282  0.026 108.974 
 0.000  0.000  0.000  1.000 
Initial cost function value with constrained matrix= 0.857306
-0.030 -0.024  0.281 -11.554 
 0.282 -0.014  0.029 -117.312 
 0.011  0.283  0.026 108.974 
 0.000  0.000  0.000  1.000 
Optimization stopping condition: PowellOptimizer: Cost function values at the current parameter (0.75902) and at the local extrema (0.75902) are within Value Tolerance (1e-008). Number of iterations: 11
-0.030 -0.024  0.280 -11.563 
 0.281 -0.013  0.029 -117.143 
 0.010  0.282  0.025 110.046 
 0.000  0.000  0.000  1.000 
Cost function = 3D
Without optimization:
Translation = [-11.5536 -117.312 108.974 ]
Scale = [0.284672 0.28321 0.28174 ]
XY axes angle = 89.407 deg
Error (mm): mean=0.658186, stdev=0.372557, rms=0.756312
With optimization:
Translation = [-11.5627 -117.143 110.046 ]
Scale = [0.282996 0.282996 0.282996 ]
XY axes angle = 90 deg
Error (mm): mean=0.661597, stdev=0.372023, rms=0.75902
Orientation difference between unoptimized and optimized matrices =  0.221473 deg
Image to probe transform matrix = 
-0.030059 -0.024088  0.280362 -11.562720 
 0.281213 -0.012702  0.029059 -117.143174 
 0.010111  0.281682  0.025286 110.046138 
 0.000000  0.000000  0.000000  1.000000 
Validation 3D Reprojection Error (OPE): Mean: 1.25419mm, StDdev: 0.699471mm
Calibration 3D Reprojection Error (OPE): Mean: 0.639187mm, StDdev: 0.331041mm
Validation 2D Reprojection Error (IPE) for wire 7:G1_g1: Mean: (-0.482456px, 0.808708px), StdDev: (1.30485px, 0.580645px)
Validation 2D Reprojection Error (IPE) for wire 8:L1_h1: Mean: (-0.378535px, -0.0794904px), StdDev: (1.58849px, 0.650417px)
Validation 2D Reprojection Error (IPE) for wire 9:M1_m1: Mean: (-0.29896px, -0.240031px), StdDev: (1.26956px, 0.691063px)
Validation 2D Reprojection Error (IPE) for wire 4:G3_g3: Mean: (-0.574055px, -0.796723px), StdDev: (1.31573px, 0.554419px)
Validation 2D Reprojection Error (IPE) for wire 5:H3_l3: Mean: (2.90614px, -1.03455px), StdDev: (1.6066px, 0.607801px)
Validation 2D Reprojection Error (IPE) for wire 6:M3_m3: Mean: (-0.666415px, -0.45833px), StdDev: (1.16486px, 0.683823px)
Validation 2D Reprojection Error (IPE) for wire 1:H5_h5: Mean: (-0.821053px, 0.377748px), StdDev: (1.33683px, 0.644911px)
Validation 2D Reprojection Error (IPE) for wire 2:L5_i5: Mean: (-0.58028px, 0.0642749px), StdDev: (1.20443px, 0.617166px)
Validation 2D Reprojection Error (IPE) for wire 3:M5_m5: Mean: (-1.57748px, -0.514398px), StdDev: (1.21449px, 0.682374px)
Calibration 2D Reprojection Error (IPE) for wire 7:G1_g1: Mean: (-0.534197px, 1.00211px), StdDev: (0.870527px, 0.594716px)
Calibration 2D Reprojection Error (IPE) for wire 8:L1_h1: Mean: (0.205184px, 0.0911163px), StdDev: (1.40444px, 0.558279px)
Calibration 2D Reprojection Error (IPE) for wire 9:M1_m1: Mean: (0.76993px, 0.359379px), StdDev: (0.913447px, 0.686043px)
Calibration 2D Reprojection Error (IPE) for wire 4:G3_g3: Mean: (-0.200052px, -0.870523px), StdDev: (1.0305px, 0.504332px)
Calibration 2D Reprojection Error (IPE) for wire 5:H3_l3: Mean: (0.671737px, -0.515522px), StdDev: (1.42422px, 0.506478px)
Calibration 2D Reprojection Error (IPE) for wire 6:M3_m3: Mean: (0.699478px, 0.199885px), StdDev: (0.92138px, 0.61167px)
Calibration 2D Reprojection Error (IPE) for wire 1:H5_h5: Mean: (-0.768842px, 0.753747px), StdDev: (0.892978px, 0.438333px)
Calibration 2D Reprojection Error (IPE) for wire 2:L5_i5: Mean: (0.0401558px, 0.283879px), StdDev: (1.19339px, 0.542058px)
Calibration 2D Reprojection Error (IPE) for wire 3:M5_m5: Mean: (-0.250968px, -0.000668297px), StdDev: (1.147px, 0.59527px)
Compare with baseline: D:/D/PTN-VS2013-64b/PlusLibData/TestImages/OPEI_OptimizationMethod_Calibration.results.xml
|ERROR|008.071000| TransformImageToProbe rotation difference (compared to baseline) is higher than expected: 9.10946e-016 degree (threshold: 0 degree). | in D:\\D\\PTN-VS2013-64b\\PlusLib\\src\\PlusCalibration\  ools\\ProbeCalibration.cxx(328)
|ERROR|008.246000| Comparison of calibration data to baseline failed| in D:\\D\\PTN-VS2013-64b\\PlusLib\\src\\PlusCalibration\  ools\\ProbeCalibration.cxx(204)
Exit failure!!!

Commit: r:4956|plus:4956

#### 2016-12-05, 03:54:33 - Andras Lasso
re #507: Relaxed tolerances to avoid false test errors due to minor floating point computation differences on various compilers

Trying to address:
vtkTRUSCalibrationTest 
vtkTRUSCalibrationTest_3NWires 
vtkTRUSCalibrationTest_FrameGrabber

Commit: r:4958|plus:4958

#### 2016-12-06, 05:08:17 - Andras Lasso
re #507: Fixed tolerance setting in vtkTRUSCalibrationTest

Trying to address:
vtkTRUSCalibrationTest 
vtkTRUSCalibrationTest_3NWires 
vtkTRUSCalibrationTest_FrameGrabber

Commit: r:4960|plus:4960


## #508 Volume Reconstructor, Hole Filling: Implementation of additional hole filling algorithms for comparisons
These are Nearest Neighbor, and Inverse Distance Weight

#### 2012-05-23, 15:39:44 - Thomas Vaughan
Note that there are relevant commits (Revisions 1707 and 1708). These do not seem to be linked to the ticket for some reason.

#### 2012-05-23, 15:39:44 - Thomas Vaughan
status: changed from "New" to "Test"

#### 2012-06-09, 01:21:01 - Thomas Vaughan
status: changed from "Test" to "Fixed"


## #509 Volume Reconstructor, Distribution Step: Noise occasionally appears in the data regardless of multithreading
When pasting slices from an artificial dataset (ie one produced by the ultrasound simulator), undesired noise that is not in the .mha will sometimes be put into the final volume.

#### 2012-05-24, 22:44:22 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-06-09, 01:18:55 - Thomas Vaughan
(In r:1754) Re #509, found an issue with overflow in the accumulation buffer. A warning message will appear in a future update to indicate when this happens. It will be enabled only once we have a solution for the issue (when this happens, remove the flag disableAccumulationBufferOverflowWarning).

#### 2012-06-11, 21:29:52 - Thomas Vaughan
(In r:1763) Re #509, Updating code as per Andras' comments

#### 2012-06-12, 22:25:49 - Thomas Vaughan
(In r:1767) Re #509 Fixing obvious logic error in unoptimized vtkPasteSlicesIntoVolume code

#### 2012-06-12, 23:08:48 - Thomas Vaughan
It would appear the above-mentioned issue does not occur when using reverse tri-linear interpolation (both via testing and following the code). I think the issue is now fixed.

#### 2012-06-12, 23:09:03 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"

#### 2012-06-13, 01:07:43 - Andras Lasso
Thanks for the fixes. Probably due to the slightly different output of the algorithms 3 volume reconstruction related tests fail (http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=7578). Please review the results and update the baseline data as needed.

#### 2012-06-13, 01:07:43 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2012-06-14, 16:53:38 - Thomas Vaughan
Fixed in revision 1776

#### 2012-06-14, 16:53:38 - Thomas Vaughan
status: changed from "New" to "Fixed"


## #510 Polaris Spectra wired tools are not detected
Polaris Spectra passive (wireless) tools work well, but active (wired) tools are not detected.

The NDI combined API sample program works well with both active and passive tools and it also seems simpler than the code that is used by Plus now. So probably it would be better to rewrite the NDI tracker class based on this sample (attached).


#### 2012-05-25, 21:34:59 - Andras Lasso
file:b6IkmaPRer4ytcacwqjQWU
NDI combined API sample

#### 2012-05-25, 21:34:59 - Andras Lasso
Attachment added: "CombinedApiSampleSource.zip"

#### 2014-05-28, 00:01:39 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-05-28, 00:01:47 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-29, 02:28:26 - Andras Lasso
fixed #510: Polaris wired and wireless tools are now correctly detected. Wired tools are defined by the PortName attribute (first is '0'), wireless tools are defined by the RomName attribute (specifies the ROM file name).

* PortName attribute should not be specified for wireless tools (if it is defined then it is ignored).
* PortName is not required anymore for OpenIGTLinkTracker and SavedDataSet.
* RequireToolAveragedItemsForFilteringInDeviceSetConfiguration is removed, the AveragedItemsForFiltering attribute is always optional
* ToolName is rename consistently to data source ID
* Fixed NDI Certus build error if Polaris build was disabled
* Renamed GetFirstActiveTool to GetTimestampMaster tool and it now returns the tool that was added first to the channel. It is more predictable than picking the first tool in the map (that depends on the tool name and the hash function). If needed, in the future the master tool might be made selectable by the user.
Commit: r:3341|plus:3341

#### 2014-05-29, 02:28:26 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-05-29, 03:09:59 - Andras Lasso
re #510: Fixed build errors (find&replace missed)
Commit: r:3342|plus:3342

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #511 fCal should not use the Date attribute for determining if the system is calibrated or not
Currently fCal adds a Date attribute to the calibration transforms to indicate that they are result of a valid calibration. This is not intuitive and may lead to misunderstandings (people may add a Matrix but fCal does not use it because the Date is missing)

e.g.,
    <Transform From='Phantom' To='Reference'
      Matrix='0.9968 0.0075 -0.0795 -35.6089
              0.0794 0.0055 0.9968 -124.9852
              0.0079 -1.0000 0.0049 -16.7
              0 0 0 1'
      Date='2011.12.01 17:57:00' Error='0.0'
    />

Recommended solution: Add attributes in the fCal element to remember which calibrations have been performed already.

#### 2012-05-29, 21:40:40 - Csaba Pinter
See this message thread:
https://www.assembla.com/spaces/plus/messages/1942733

#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:48 - Andras Lasso
Updating tickets (#448, #449, #488, #511, #438)



#### 2012-06-02, 14:20:48 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-06-04, 16:04:51 - Andras Lasso
assigned_to_id: changed from "rankin" to "pinter"

#### 2012-07-06, 20:01:35 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-07-06, 20:01:35 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-06, 20:30:34 - Csaba Pinter
Date is not used anymore.

However, it would be useful to have an indication on the toolboxes whether a calibration result transform is present, and if there is one, show its date and error

#### 2012-07-06, 22:23:53 - Csaba Pinter
(In r:1883|plus:1883) Re #511: Replaced tabs with spaces; Formatting in a configuration file; Precision parameter added to vtkPivotCalibrationAlgo::GetPivotPointToMarkerTranslationString

#### 2012-07-06, 22:25:21 - Csaba Pinter
(In r:1884|plus:1884) Test #539; Re #511: StylusCalibrationToolbox and PhantomRegistrationToolbox indicates calibration state; DisplayableObjects are deleted when disconnecting; Error log entries prevented when there is no error

#### 2012-07-06, 22:35:24 - Csaba Pinter
(In r:1885|plus:1885) Test #511: FreehandCalibrationToolbox indicates spatial and temporal calibration state

#### 2012-07-06, 22:35:24 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-12, 20:22:44 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #512 In fCal - Allow temporal calibration without phantom registration result
Currently temporal calibration options in fCal are inactive if phantom registration result is not loaded. Since temporal calibration does not require phantom registration result, users should be able to run it even without performing phantom registration. 

#### 2012-05-31, 16:50:44 - Csaba Pinter
Thank you Vikas for adding the ticket, good point!

#### 2012-05-31, 16:50:44 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-05-31, 16:50:44 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-05-31, 16:50:44 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-06, 19:48:51 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-06, 19:59:56 - Csaba Pinter
I can't reproduce the issue. Start button in the Temporal calibration section is active regardless of the transforms in the configuration file (I also tried with no transforms in the CoordinateDefinitions section at all).
Vikas, can you try to try it or clarify?

#### 2012-07-06, 20:00:45 - Csaba Pinter
image:bfOD5eX6ur4Bj2acwqjQYw


#### 2012-07-06, 20:00:45 - Csaba Pinter
Attachment added: "fCalScreenshot_NoTransformsInConfigFile.jpg"

#### 2012-07-11, 13:28:22 - Vikas Revanna Shivaprabhu
I think when I reported the bug, I was looking at the Calibration tab before the device had successfully connected. Hence the temporal calibration was inactive. If the device is connected, temporal calibration is active even without any transforms in the config file, which is how it is supposed to be. 

Sorry for wasting your time. 

#### 2012-07-11, 13:56:07 - Csaba Pinter
No worries! Thanks for your help!

#### 2012-07-11, 13:56:07 - Csaba Pinter
status: changed from "Accepted" to "Invalid"


## #513 Add documentation for PlusServer
At least a few paragraphs should be written on the wiki in the User's guide section about how to use the PlusServer.

#### 2012-06-01, 23:35:34 - Tamas Ungi
I've added this page:
https://www.assembla.com/spaces/plus/wiki/PlusServer


#### 2012-06-01, 23:35:34 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2012-06-01, 23:35:34 - Tamas Ungi
status: changed from "New" to "Test"

#### 2012-06-02, 03:38:35 - Andras Lasso
Thanks, the description is useful, enough for getting started. Added some more details.

#### 2012-06-02, 03:38:35 - Andras Lasso
status: changed from "Test" to "Fixed"


## #514 Command-line argument names are long and not consistent
There is no consistent naming convention for the command-line arguments of the test applications.

Potential rules could be:
* do NOT prefix parameter or file names with 'input-'
* prefix all output file names with 'output-'
* postfix file name arguments with '-file'; for sequence of tracked frames: '-seq-file', for volumetric images: '-volume-file'
* postfix directory path arguments with '-dir'
* postfix transform names with '-transform'
* always use the '--config-file' argument if there is only one single XML input config file
* always use the '--seq-file' argument if there is only one single input sequence metafile


#### 2012-06-02, 14:17:59 - Andras Lasso
Updating tickets (#448, #433, #449, #479, #488, #511, #514, #438, #417, #471, #174, #283, #308, #487, #498, #41, #150, #424, #435, #456, #506, #507, #45, #263, #278)



#### 2012-06-02, 14:20:04 - Andras Lasso
Updating tickets (#433, #479, #514)



#### 2012-06-02, 14:20:04 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-09-07, 00:46:21 - Andras Lasso
description: changed from "There is no consistent nami..." to "There is no consistent nami..."

#### 2012-09-07, 14:24:00 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-09-07, 14:24:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-09-07, 18:52:50 - Adam Rankin
(In r:2059|plus:2059) Fixed #514

Standardizing parameters to test applications.

#### 2012-09-07, 18:52:50 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-09-12, 16:11:01 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2012-09-12, 16:55:38 - Adam Rankin
(In r:2077|plus:2077) Fixed #514 Correcting any outstanding command line argument normalization.

#### 2012-09-12, 16:55:38 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-09-17, 17:12:16 - Andras Lasso
(In r:2098|plus:2098) re #514: Fixed PlusApp test command-line parameters

#### 2012-09-17, 17:16:24 - Andras Lasso
(In r:2099|plus:2099) re #514: Merged (plus:2098) Fixed PlusApp test command-line parameters into 1.6 branch

#### 2012-09-19, 21:54:16 - Andras Lasso
(In r:2114|plus:2114) re #514: Updated command-line argument names of fCal applications

#### 2012-10-02, 10:36:05 - Andras Lasso
(In r:2147|plus:2147) re #514: Fixed a few remaining command-line parameter name or corresponding output message

#### 2014-03-06, 22:44:19 - Andras Lasso
re #514: Fixed --config-file parameter of PointSetExtractor
Commit: r:3223|plus:3223

#### 2014-03-20, 18:19:51 - Andras Lasso
re #514: Added option to PointSetExtractor for adding a sphere at each point positioni or draw a tube across all point positions
Commit: r:3243|plus:3243


## #515 Pivot calibration produces big error when image acquisition is active and there are invalid tracker frames
Both prerequisites are needed to have the big error

#### 2012-06-01, 20:49:23 - Andras Lasso
(In r:1727) Fixed #515: Tool orientation interpolation with SLERP sometimes produced inaccurate results because the adjustSign option was disabled. Fixed the problem by enabling the adjustSign option and also added a warning that can detect similer errors (or too fast tool rotation) in the future.

#### 2012-06-01, 20:49:23 - Andras Lasso
status: changed from "New" to "Fixed"


## #516 Determine stylus orientation during pivot calibration
Currently only the translation part of the stylustip to reference transform is computed. Compute the stylus orientation as well, assuming that the tracked marker's origin is on the the StylusTip coordinate frame's X axis.

#### 2012-06-01, 22:14:15 - Andras Lasso
(In r:1728) Fixed #516: Now the stylus orientation is determined automatically during pivot calibration (the stylusTip-markerOrigin line is used as X axis of the StylusTip reference frame; this is a good assumption, beause this line is usually parallel with the long axis of the stylus)

#### 2012-06-01, 22:14:15 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-06-01, 22:37:23 - Andras Lasso
(In r:1729) re #516: Updated stylus calibration baseline file

#### 2012-06-02, 02:32:31 - Andras Lasso
(In r:1730) re #516: Added more detailed logging to stylus calibration test

#### 2012-06-02, 13:53:58 - Andras Lasso
The stylus calibration still failes sometimes (http://crunch.cs.queensu.ca/CDash/viewTest.php?onlydelta&buildid=7261), because only the X axis is computed deterministically.

Need to change the implementation to define the Y and Z axis deterministically (e.g., closest to the Y and Z unit vectors).

#### 2012-06-02, 13:53:58 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-06-04, 13:04:52 - Andras Lasso
(In r:1732) Fixed #516: Now all the axes of the stylus calibration output are computed deterministically (the output depends only on the determined stylustip position and the marker sensor orientation)

#### 2012-06-04, 13:04:52 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #517 PlusServer test often fails
Nightly/continuous PlusServer tests often fail (e.g., http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=7260):
|ERROR|005.571000| Couldn't receive tracked frame message from server!|in C:\\Users\\perklab\\devel\\PlusContinuous-bin-x64\\PlusLib\\src\\PlusOpenIGTLink\\vtkPlusIgtlMessageCommon.cxx(117)
|ERROR|005.571000| Couldn't get tracked frame from OpenIGTLink server!|in C:\\Users\\perklab\\devel\\PlusContinuous-bin-x64\\PlusLib\\src\\ImageAcquisition\\OpenIGTLinkVideo\\vtkOpenIGTLinkVideoSource.cxx(243)
|ERROR|005.645000| OpenIGTLink video source connection lost with server - try to reconnect!|in C:\\Users\\perklab\\devel\\PlusContinuous-bin-x64\\PlusLib\\src\\ImageAcquisition\\OpenIGTLinkVideo\\vtkOpenIGTLinkVideoSource.cxx(180)

Probably the retry mechanisms are not robust enough. It may be necessary to add some delay between retry attempts (maybe just a couple of milliseconds).


#### 2012-07-24, 15:37:54 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-07-24, 15:37:57 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-24, 23:54:15 - Adam Rankin
Not really. It's very difficult to reproduce.

I inserted a small sleep after the client makes a receive attempt, and it hasn't happened since. But I can't claim to have fixed it as it's very hard to repro.

#### 2012-07-25, 07:08:18 - Tamas Heffter
Maybe if you generate a high network traffic, you can reproduce it. I guess it's just a tcp response time.  

#### 2012-07-25, 14:39:24 - Adam Rankin
I will return this to the bin. I feel like this is a bit of a chase and there are other bugs that have more immediate solutions.

#### 2012-07-25, 14:39:24 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2012-07-25, 14:39:24 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2012-07-25, 16:38:50 - Andras Lasso
@rankin: Please describe some more details about what you tried and what you found. Where did you add the small sleep? Did you find any effective way to reproduce the problem?

#### 2012-08-22, 16:28:07 - Adam Rankin
assigned_to_id: changed from null to "lassoan"

#### 2012-08-23, 15:17:20 - Andras Lasso
(In r:2012|plus:2012) re #517: Increased the limits in OpenIGTLink socket communication error recovery: maximum number of attempts 3->10, delay between retries 0ms->100ms, operation timeout kept at 500ms

#### 2012-08-23, 15:58:26 - Andras Lasso
Hopefully the limit changes will solve the communication errors. If PlusServer errors do not show up on the dashboard (http://crunch.cs.queensu.ca/CDash/index.php?project=PLUS) any more, then this ticket can be closed.



#### 2012-08-23, 15:58:26 - Andras Lasso
status: changed from "New" to "Test"

#### 2012-08-23, 20:45:06 - Adam Rankin
Just synced to 2012+, error still occured when running tests for another checkin.

Edit: http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=9472

#### 2012-08-23, 20:48:21 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2012-09-05, 17:13:06 - Csaba Pinter
Updating tickets (#517, #567, #543)



#### 2012-09-05, 17:13:06 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:51 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-07, 22:04:40 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2013-12-03, 16:46:42 - Andras Lasso
Reviewed the dashboard and this error doesn't happen anymore.
There is still an error on Linux when PlusServer exits, but that's tracked in #594.

#### 2013-12-03, 16:46:42 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #518 Design new fCal phantom for simpler thread configuration
New features of the new version of fCal phantom:
- Use 5 mm grid for all positioning for intuitive location coordinates (grid holes most importantly).
- Use tilted grid holes to force thread on one side consistently.
- Larger thread fixation posts.
- More thread fixation posts (4 instead of 2).
- One more layer for threads. 5 layer altogether will allow 3 N-layers 10 mm apart each.
- Put a Marked (M) sign on the left side if we look at it from the Front.
- Make interface for handle to avoid hands getting wet.
- Enlarge the phantom in all directions for more freedom of motion.
- Tilted side walls to avoid long echoes.

#### 2012-06-06, 14:55:26 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2012-06-06, 15:01:22 - Csaba Pinter
Can we elongenate the walls upwards to make imaging of the wires easier? Or something to address this, while allowing enough movements in the same time.
Maybe this way the person who calibrates could hold the phantom more easily. The procedure makes you quite wet now.
Just a discussion starter...

#### 2012-06-06, 17:54:13 - Csaba Pinter
One important thing: we need to mark the marked side in the design (what we have done with the marker pen so far). The marked side is the left side if we look at the front.

#### 2012-06-06, 18:02:09 - Siavash Khallaghi
1. I don't know if what I am going to suggest is feasible, but right now it is not easy to image the phantom with curved probes and not get the walls. Is it possible to make the two sides, i.e the ones with the landmarks, into a V-shape so that there is less reflection from the phantom wall?

2. Is it possible to increase the wire length, i.e. increase the distance between *e* and *E* side? This will allow more rotational freedom without getting the walls when calibrating curved probes.

#### 2012-06-06, 18:21:09 - Tamas Ungi
description: changed from "New features of the new ver..." to "New features of the new ver..."

#### 2012-06-06, 18:21:27 - Andras Lasso
It would be also useful to increase the height of the phantom. It would allow larger distance between the N-wire planes and could result in smaller plane tilt errors.

#### 2012-06-06, 18:22:24 - Tamas Ungi
description: changed from "New features of the new ver..." to "New features of the new ver..."

#### 2012-06-07, 01:38:49 - VaultLab
It would be good if there was a little push hole for the square hole where the model 800 ascension tracker sensor fits. This would make it easier to push the sensor out of the phantom - we had a hard time removing it.

#### 2012-06-07, 11:26:03 - Tamas Ungi
Yes, this is already there in the latest design. I'm sorry you don't have that. If you have an older version, drill a hole in the bottom of the model 800 holder to be safe for the future.

#### 2012-06-28, 21:17:04 - Andras Lasso
milestone: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-07-11, 00:16:13 - Tamas Ungi
(In r:1891|plus:1891) Test #518: Most features are implemented. I didn't want to get very far from the original design with this version. Significantly bigger size transducers will probably need another calibration phantom that is proportional.

#### 2012-07-11, 00:16:13 - Tamas Ungi
status: changed from "New" to "Test"

#### 2012-07-11, 11:00:08 - Tamas Ungi
(In r:1894|plus:1894) Test #518: Added a few more holes.

#### 2012-07-11, 19:17:19 - Csaba Pinter
(In r:1899|plus:1899) Re #518: STL model moved to the location where all the other STL files are stored

#### 2012-09-06, 14:56:55 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.5" to "Release Plus-1.5.4"

#### 2012-09-06, 16:03:24 - Tamas Ungi
We have performed successful calibrations with the fCal 2.0 phantom, so I close the ticket.

#### 2012-09-06, 16:03:24 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #519 Memory leak during data collection
vtkTimestampedCircularBuffer<BufferItemType>::CreateFilteredTimeStampForItem leaks memory, because it stores all filtered timestamps in this->TimeStampReportTable. By default recording of these values should be disabled. It should be enabled only temporarily, for diagnostic purposes.

The leak can cause crash on 32-bit systems if fCal runs continuously for about 10 hours.

#### 2012-06-06, 15:13:40 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-06-06, 15:13:40 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-06-06, 15:25:06 - Csaba Pinter
Can this be related to #471?

#### 2012-06-06, 15:26:43 - Adam Rankin
If so, I can bump up the priority of these tickets.

#### 2012-06-06, 15:42:03 - Csaba Pinter
I think it's enough to just re-test #471 after fixing this

#### 2012-06-06, 16:25:01 - Andras Lasso
(In r:1745) Fixed #519: TimeStampReporting has to be enabled to save all the timestamping results

#### 2012-06-06, 16:25:01 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-06-06, 16:25:42 - Andras Lasso
(In r:1746) Re #519: TimeStampReporting has to be enabled to save all the timestamping results - related application changes (DiagDataSync was not updated but rather removed, as it was obsolete anyway)

#### 2012-06-06, 16:44:44 - Andras Lasso
(In r:1747) Re #519: Added back accidentally removed line


## #520 Replace eye icon in fCal with a 3d objects icon
The function of the 'eye' icon in fCal is: show all objects in 3D.

The icon should be replaced with another one that shows multiple 3D objects, such as http://modelview-android.googlecode.com/svn/trunk/graphics/icon_512.png

Also, the icon should be aligned to the right.

#### 2012-06-06, 17:27:45 - Andras Lasso
description: changed from "The function of the 'eye' i..." to "The function of the 'eye' i..."

#### 2012-06-28, 21:16:38 - Andras Lasso
status: changed from "New" to "Fixed"


## #521 Use built-in filtering algorithms for Ascension 3DG
The example programs we get with Ascension have a few filtering options that make the tracking smoother. It would be good to find if these are available in the API, and add config file parameters to switch them on/off.

#### 2012-06-28, 21:08:02 - Andras Lasso
assigned_to_id: changed from null to "pinter"

#### 2012-08-24, 22:50:47 - Csaba Pinter
(In r:2030|plus:2030) Fixed #521: Added tracker attributes FilterAcWideNotch, FilterAcNarrowNotch, FilterDcAdaptive, FilterLargeChange, and FilterAlpha to be able to set different filtering options. FilterAcWideNotch and FilterAlpha make the tracking significantly smoother with increased lag. By default all filtering options are off.

#### 2012-08-24, 22:50:47 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2012-10-01, 16:36:02 - Tamas Ungi
Filters can be defined for individual tools in the Ascension demo software. It this is possible through the API, it would be better to leave this option in PLUS too. Not urgent, but we may want to put these parameters to the Tool elements instead of the Tracker.


## #522 fCal freezes for a while in Image Segmentation Parameters dialog when too many fiducial candidates
When Image Segmentation Parameters is selected in the Image Calibration tab of fCal the program crashes. 

#### 2012-06-08, 15:54:14 - Mattea Welch
file:aXYirmSyir4BTHacwqjQWU
Trace File

#### 2012-06-08, 15:54:14 - Mattea Welch
Attachment added: "060712_155840_PlusLog.txt"

#### 2012-06-08, 17:05:09 - Simrin Nagpal
This happened to me when there were too many candidate points (ie too much white in the US image). Either reduce the gain before going into the seg parameters or change the size of the ROI in the config file in the fCal tag.

#### 2012-06-08, 17:25:28 - Andras Lasso
Mattea, is it this crash (the process exits) or hang (the application does not respond, or very slow to respond)?
Could you take a screenshot of the application when it happens? (just to confirm that it's due to the many detected candidate points)


#### 2012-06-08, 19:24:44 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-06-08, 19:24:44 - Csaba Pinter
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-06-24, 14:38:12 - Andras Lasso
summary: changed from "fCal Crash - Image Segmentation Parameters" to "fCal freezes for a while in Image Segmentation Parameters dialog when too many fiducial candidates"

#### 2012-06-24, 14:53:10 - Andras Lasso
It is not a crash, but a freeze for up to a few ten seconds or more. The root cause is that the fiducial segmentation algorithm computation time grows exponentially with the number of fiducial point candidates. This makes the segmentation parameter tuning very annoying (need to kill & restart fCal many times).

Proposed solution: Set a maximum threshold for the number of fiducial point candidates. If more point candidates are found then stop the processing and return with an error. The user shall be notified that too many candidate points have been found and that caused the error (it would be difficult for the user to figure out what caused the problem otherwise). Don't do any further processing, don't try to detect the lines, etc. if there are too many candidate points, because the actual fiducial points might have been missed and there is a high chance for mislabeling.
 
Implementation: add new segmentation parameter in the config file, set the threshold in the algorithm (FidSegmentation::m_NumDots should be below the threshold), if too many points then return with an error from the algo, stop further processing, and display a message in the segmentation dialog.

#### 2012-06-24, 14:53:10 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2012-06-24, 14:53:26 - Andras Lasso
priority: changed from "Normal (3)" to "High (2)"

#### 2012-06-25, 04:33:03 - Csaba Pinter
We have had this issue for a while, see related ticket (#437)

#### 2012-07-09, 15:05:20 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2012-07-09, 15:05:14 - Adam Rankin
(In r:1887|plus:1887) re #522 #437: Preventing the calculation of a frame if the number of fiducial candidates is too high.

Current arbitrary restriction is 80 candidates. Modifiable in FidPatternRecognition.cxx.

#### 2012-07-09, 18:22:52 - Adam Rankin
(In r:1889|plus:1889) re #522 #437: Modifying the behaviour of FidPatternRecognition to accept an error parameter to the RecognizePattern functions that is populated if the recognition fails.

Calling functions can then query the error on fail and determine what action to take.

#### 2012-07-09, 18:36:26 - Adam Rankin
(In r:1890|plus:1890) re #522 #437: Minor change affecting potential future error returns in SegmentationParameterDialog


## #523 fCal Disconnected - Still can't start PlusServer
When fCal has been disconnected but all windows are still opened PlusServer is not able to make a connection to Slicer. 

#### 2012-06-08, 19:08:57 - Tamas Ungi
And when fCal was closed altoghether, PlusServer could connect. So probably the Disconnect button in fCal doesn't completely release a connection to the devices.

#### 2012-06-08, 19:23:48 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-06-08, 19:23:48 - Csaba Pinter
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-07-17, 20:29:38 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-07-18, 18:17:18 - Andras Lasso
There are a couple of problems in fCal in data collector management:
* The video source is not deleted when the data collector is deleted (Connect, Disconnect, Connect -> at this point the old data collector is deleted, but the video source is not)
* The data collector is not deleted at disconnect. Data collector is just deleted when connecting again. It is because vtkVisualizationController does not set the data collector in ImageVisualizer and PerspectiveVisualizer at disconnect, only at connect.

In general: Initialize...() methods should be called in the constructor only.
InitializeDataCollector(DataCollector *dc) methods should be called SetDataCollector(...) and behave accordingly (when dc is NULL they shall release the data collector).

#### 2012-07-18, 20:42:35 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-07-19, 21:37:02 - Andras Lasso
Probably the CloseBIRDSystem() function should be called in DisconnectInternal().
see s:\\data\\lab.hardware\\Ascension\\3DGuidance_trakSTAR_Installation_and_Operation_Guide.pdf 

#### 2012-07-20, 16:28:02 - Adam Rankin
status: changed from "Test" to "Fixed"


## #524 Workflow of Temporal and Spatial Calibration
Would make more sense to have the Temporal Calibration above the Spacial Calibration in the fCal GUI to prevent people from forgetting to do Temporal Calibration first

#### 2012-06-08, 19:11:45 - Andras Lasso
Or at least move the temporal calibration controls above the spatial calibration controls to indicate that temporal calibration should be done first.
If temporal calibration has not been performed then fCal could display a warning.

#### 2012-06-08, 19:20:08 - Adam Rankin
If the workflow says temporal calibration must be done first, would it be wise/worth it to disable spatial calibration until temporal is done?

#### 2012-06-08, 19:22:36 - Mattea Welch
summary: changed from "Workflow of Temporal and Spacial Calibration" to "Workflow of Temporal and Spatial Calibration"

#### 2012-06-08, 19:24:30 - Tamas Ungi
In some (most of the) cases the correct temporal calibration is saved in the config file. For e.g. if you are using fCal repeatedly. So in some cases it's OK to not run temporal calibration before spatial. Having the GUI for temporal above the spatial, and maybe a note (not warning) that the loaded time offset is used should be enough to remind users.

#### 2012-06-08, 19:31:49 - Andras Lasso
If temporal calibration has not been performed then a text in orange (not a warning:)) could appear near the spatial calibration button that temporal calibration has not yet been performed.

We could store in the DeviceSet configuration file in the fCal element if (and when) the temporal calibration has been performed.


#### 2012-06-08, 20:42:20 - Csaba Pinter
I agree. (change order and display warning)

For the person who works on this: there is an orange color used in the FreehandCalibrationToolbox already (if the calibration error is between 1 and 2 mm), that color should be used here too for consistency

#### 2012-06-28, 21:19:34 - Andras Lasso
Maybe move it to two separate tabs

#### 2012-07-17, 18:50:39 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-07-17, 20:22:21 - Andras Lasso
it's already resolved, see #547


## #525 Organize configuration files in the repository
The number of configuration files became very big and the data/ConfigFiles directory is now a mess. We need to organize it better and find a good way to maintain them.

Suggested solution:
1. Create subdirectories for the institutions that use (added) a configuration file in data/ConfigFiles
2. Only the sample and simulated configuration files remain in the data/ConfigFiles directory. These are the ones that go in the installation package
3. When the configuration file structure changes in any way,
  3.1. Increment the configuration file version number in WriteConfiguration
  3.2. Increment the configuration file version numbers in the existing configuration files to maintain
  3.3. Refresh the wiki page about the configuration file structure if needed
  3.4. Add an entry in the configuration file structure history wiki page (to be created) with the changes just introduced
4. Change the code so that the programs warn the user if the version of the loaded configuration file (3.2) is older than the latest one (the number we updated in 3.1)

#### 2012-06-08, 20:02:30 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2012-06-08, 20:17:24 - Andras Lasso
description: changed from "The number of configuration..." to "The number of configuration..."

#### 2012-06-08, 20:17:45 - Tamas Ungi
I agree, this is much needed. I have been storing my project-specific config files in another repository for a while now. Having such files in sub-folders in the PLUS repository may help those who are looking for more examples. At the same time they wouldn't pollute the device set list of others.

#### 2012-06-08, 20:18:02 - Andras Lasso
description: changed from "The number of configuration..." to "The number of configuration..."

#### 2012-06-08, 20:39:51 - Csaba Pinter
description: changed from "The number of configuration..." to "The number of configuration..."

#### 2012-07-03, 21:12:57 - Csaba Pinter
(In r:1868|plus:1868) Test #525: Configuration files reorganized and renamed

#### 2012-07-03, 21:12:57 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-07-03, 21:14:37 - Csaba Pinter
(In r:1869|plus:1869) Re #525: Updated installed files according to configuration file changes; Removed NwirePhantomFreehand.mha from the package as no installed config file used it

#### 2012-07-12, 20:22:17 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #526 Divide vtkObjectVisualizer into two classes. One for 2D (image) view and one for 3D (objects) view.
By dividing the vtkObjectVisualizer into two independent classes, we can reuse the 2D version in the segmentation parameter dialog and possibly use the 3D view in the phantom calibration dialog (optional).

#### 2012-06-08, 20:39:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-06-18, 15:34:49 - Adam Rankin
(In r:1796) re #526: fragmented vtkObjectVisualizer into three classes:
- vtkImageVisualizer
-- reponsible for 2d visualization
- vtk3DObjectVisualizer
-- responsible for 3d visualization
- vtkVisualizationController
-- responsible for data ownership, controlling visualization mode

Used vtkImageVisualizer in SegmentationParameterDialog to enable features developped for #488.

#### 2012-06-18, 18:03:21 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-06-20, 19:04:44 - Adam Rankin
(In r:1802) re #526: fixed bug related to initialization of transform repository


## #527 PlusLib build failed on Linux
The build of PlusLib failed on Linux (Ubuntu 12.04 / 64 bit) with following error:


~~~~

[  1%] Building CXX object src/PlusCommon/CMakeFiles/vtkPlusCommon.dir/vtkAccurateTimer.cxx.o
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx: In static member function ‘static std::string vtkAccurateTimer::GetDateString()’:
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx:135:27: error: ‘_strdate_s’ was not declared in this scope
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx: In static member function ‘static std::string vtkAccurateTimer::GetTimeString()’:
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx:147:27: error: ‘_strtime_s’ was not declared in this scope
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx: In static member function ‘static std::string vtkAccurateTimer::GetDateAndTimeMSecString()’:
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx:174:16: error: aggregate ‘vtkAccurateTimer::GetDateAndTimeMSecString()::_timeb tstruct’ has incomplete type and cannot be defined
/home/thorsten/devel/Plus/PlusExperimental-build/PlusLib/src/PlusCommon/vtkAccurateTimer.cxx:175:21: error: ‘_ftime_s’ was not declared in this scope
make[5]: *** [src/PlusCommon/CMakeFiles/vtkPlusCommon.dir/vtkAccurateTimer.cxx.o] Error 1
make[4]: *** [src/PlusCommon/CMakeFiles/vtkPlusCommon.dir/all] Error 2
make[3]: *** [all] Error 2
make[2]: *** [PlusLib-prefix/src/PlusLib-stamp/PlusLib-build] Error 2
make[1]: *** [CMakeFiles/PlusLib.dir/all] Error 2
make: *** [all] Error 2

~~~~


#### 2012-06-11, 13:05:14 - Brennecke
file:avqc0cS8yr4B6OacwqjQWU
This patch fixes a couple of cmake errors on Linux

#### 2012-06-11, 13:05:14 - Brennecke
Attachment added: "PlusLib_cmake_build_patch.diff"

#### 2012-06-11, 17:08:40 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-06-11, 17:08:40 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-06-11, 17:08:58 - Andras Lasso
(In r:1758) Re #527: Integrated the proposed cmake file changes (https://bigfiles.assembla.com/spaces/plus/documents/download/avqc0cS8yr4B6OacwqjQWU) for resolving build errors on linux. All suggested changes has been applied except the first change in src/Tracking/CMakeLists.txt (the line 'MicronTracking/vtkMicronTracker.hLIBRARY DESTINATION bin' seems invalid and therefore this line kept unchanged)

#### 2012-06-12, 04:58:26 - Andras Lasso
(In r:1764) Re #527: Fixed linux build errors in PlusLib

#### 2012-06-12, 05:07:12 - Andras Lasso
(In r:1765) Re #527: Disabled windows-only default build options for linux

#### 2012-06-12, 17:27:52 - Andras Lasso
(In r:1766) Re #527: Fixed most of automatic test errors in PlusLib

#### 2012-06-12, 17:41:24 - Andras Lasso
PlusLib now builds without errors and most of the tests pass.

Remaining issues:
* build warnings
* PlusLib test failures: minor numerical differences in the calibration results, PlusServer crashes, gnuplot execution fails
* PlusApp build errors (seems to be trivial problems)

Thorsten, let us know what you would like to use Plus for in Linux and then we will fix the remaining issues acoordingly.


#### 2012-06-12, 17:41:24 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-06-13, 14:30:05 - Brennecke
Thanks for your very quick help! 

I want to use Plus with a Polaris tracker and OpenIGTLink as image source. When I try to build it with Polaris support enabled, I receive a linking problem:


~~~~

Linking CXX shared library /home/thorsten/devel/Plus/PlusExperimental-build/bin/libvtkTracking.so
/usr/bin/ld: /home/thorsten/devel/Plus/PlusExperimental-build/bin/libvtkndicapi.a(ndicapi.c.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC
/home/thorsten/devel/Plus/PlusExperimental-build/bin/libvtkndicapi.a: could not read symbols: Bad value
collect2: ld returned 1 exit status
make[5]: *** [/home/thorsten/devel/Plus/PlusExperimental-build/bin/libvtkTracking.so] Error 1
make[4]: *** [src/Tracking/CMakeFiles/vtkTracking.dir/all] Error 2
make[3]: *** [all] Error 2
make[2]: *** [PlusLib-prefix/src/PlusLib-stamp/PlusLib-build] Error 2
make[1]: *** [CMakeFiles/PlusLib.dir/all] Error 2
make: *** [all] Error 2

~~~~



#### 2012-06-13, 14:30:05 - Brennecke
status: changed from "Fixed" to "New"

#### 2012-06-13, 16:06:05 - Andras Lasso
Try to add the follwoing line in PlusLib\\src\  racking\\CMakeLists.txt after TARGET_LINK_LIBRARIES( vtkTracking ${Tracking_LIBS} ):

SET_TARGET_PROPERTIES(vtkTracking PROPERTIES COMPILE_FLAGS '-fPIC')

let me know if it worked and then I commit the change

#### 2012-06-13, 18:11:10 - Andras Lasso
(In r:1770) Re #527: Undo the addition of 'LIBRARY DESTINATION bin' to install options, as it caused dll files not installed on Windows. Needs further investigation why this might be needed on linux.

#### 2012-06-13, 19:10:41 - Andras Lasso
(In r:1771) Re #527: Fixed installation options (work well for both Windows and Linux)

#### 2012-06-13, 19:41:19 - Andras Lasso
(In r:1773) Fixed #527: Fixed linux build errors in PlusLib, including when Polaris option is enabled

#### 2012-06-13, 19:41:19 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-03-30, 03:31:14 - Andras Lasso
re #527: Added test for RecursiveCriticalSection
Commit: r:4075|plus:4075

#### 2015-05-14, 04:20:53 - Andras Lasso
re #527: Fixed linux build error
Commit: r:4135|plus:4135

#### 2015-05-15, 05:30:34 - Andras Lasso
re #527: Fixed linux build error
Commit: r:4143|plus:4143


## #528 When configuring a development environment, spaces in the PlusBuild root path cause build fail.
For example:

.../Documents/Visual Studio 2008/Projects/PlusBuild/ 

causes the build to fail.

#### 2012-06-13, 14:38:03 - Adam Rankin
description: changed from "For example:

.../Documents..." to "For example:

.../Documents..."

#### 2012-06-13, 15:55:55 - Andras Lasso
We had this problem before and fixed it (https://www.assembla.com/code/plus/subversion/changesets/1470), but maybe some new CMake files has been added which does not use quotation marks around the path names.

Similar fixes should be applied to the corrupt path values as in the 1470 commit.

#### 2012-07-30, 17:59:40 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-01, 19:30:15 - Adam Rankin
(In r:1970|plus:1970) Fixed #528 Space in root path now work. Missing quotes around a vcproj definition fixed.

#### 2012-08-01, 19:30:15 - Adam Rankin
status_updated_at: changed from null to "2012-08-01 19:30:20"

#### 2012-08-01, 19:30:15 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2012-08-02, 13:10:19 - Adam Rankin
status_updated_at: changed from "2012-08-01 19:30:20" to "2012-08-02 13:10:19"

#### 2012-08-02, 13:10:19 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2012-08-02, 13:10:22 - Adam Rankin
(In r:1971|plus:1971) Re #528 More fixes to CMake files to fix spaces in path names error

#### 2012-08-02, 13:12:55 - Adam Rankin
(In r:1972|plus:1972) Re #528 more changes for path names

#### 2012-08-02, 14:47:07 - Adam Rankin
Fixed. Not sure if it was the quotes around the path or the replacing of spaces with semi-colons in the definition.

#### 2012-08-02, 14:47:07 - Adam Rankin
status_updated_at: changed from "2012-08-02 13:10:19" to "2012-08-02 14:47:06"

#### 2012-08-02, 14:47:07 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #529 Volume Reconstructor, Distribution Step: Tidy up type support
The code that implements support for various data types looks very untidy because three function calls are made for each individual data type (for each level of optimization). This should be made nicer and easier to modify by passing these in as a data structure instead.

#### 2012-06-14, 16:57:26 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2012-06-14, 17:07:56 - Thomas Vaughan
(In r:1777) Re #529 Changed homogeneous transform matrix representation for both unoptimized (originally vtkMatrix4x4) and optimized (originally a 2D array of size [4][4]) versions to a 1D array of size 16. This change will make it so that the same struct can be used for both unoptimized and optimized versions of the code.

#### 2012-06-14, 20:58:03 - Thomas Vaughan
(In r:1779) Re #529 Fixed segfault bug

#### 2012-06-15, 16:23:52 - Thomas Vaughan
(In r:1789) Fixed #529 Made the type support for vtkPasteSliceIntoVolume look somewhat cleaner by passing function parameters via struct

#### 2012-06-15, 16:23:52 - Thomas Vaughan
status: changed from "Accepted" to "Fixed"


## #530 Move PlusServer to PlusApp
Move PlusServer from DataCollection/Testing to PlusApp if it is ready and tested

#### 2012-06-14, 23:38:59 - Tamas Heffter
PlusServer command line app will stay in PlusLib and a GUI application will be in PlusApp. If it's not convenient for anybody, please let me know. 

#### 2012-06-14, 23:58:55 - Andras Lasso
I agree that it's not nice to have an application in the Testing directory. Is there any other reason for moving the PlusServer to PlusApp?
Maybe we could have Applications directories in addition to Testing directories and we would move those executables that are useful not just for testing?


#### 2012-06-15, 00:06:25 - Csaba Pinter
Tomi, if you really don't want to move it in PlusApp, then I suggest doing what Andras said: create an Applications directory.

It's very strange that we have a whole wiki page for it that starts like 'PlusServer is an application...', still one can hardly find it because it's hiding in an inner directory named Testing.

#### 2012-06-15, 01:09:16 - Tamas Heffter
Ok, applications dir sound's good to me. An shouldn't we do the same thing with the other applications that we pack with the lib? 
I would keep it in the Lib because it's just a test application (and an example how to use it), without any user friendly feature (and also it's just command line app) and it would be just confusing if we would have another PlusServer GUI app. 


#### 2012-06-15, 01:20:46 - Tamas Ungi
Just an info. PlusServer is the most used application in our lab right now. It runs about 6-8 hours every day. We use it as the absolute front-end of PLUS. So the place of the source code is really strange now.

#### 2012-08-22, 16:37:48 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-24, 14:53:50 - Adam Rankin
(In r:2020|plus:2020) Fixed #530 Fixed #477

Updating source layout and CMake configuration to comply with request.

#### 2012-08-24, 14:53:50 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2012-08-24, 20:02:03 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2012-08-24, 20:02:54 - Adam Rankin
In the end, PlusServer was moved to src/DataCollection/Applications under the expectation that a GUI front-end to PlusServer would be created under PlusApp.

#### 2012-08-24, 20:02:54 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #531 fCal does not remember the last directory that data were saved in
When data are recorded and saved under the 'Capturing' tab in fCal, the application does not remember the last directory that data were saved in; if the user is saving multiple recordings to the same folder, each time the user saves a recording they have to (re-) navigate to that same folder (which can be time-consuming).

Also along this topic:
* Configuration directory browsing start from the current path

#### 2012-07-05, 18:38:20 - Csaba Pinter
description: changed from "When data are recorded and ..." to "When data are recorded and ..."

#### 2012-07-05, 18:43:40 - Simrin Nagpal
In the configuration tab for fCal, you can set the default directory you want to save things in where it says image directory.

#### 2012-07-05, 18:46:07 - Csaba Pinter
Good point, for short-term solution, you can use this feature. Thanks, Simrin!

#### 2012-07-23, 13:11:23 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-07-23, 13:11:23 - Adam Rankin
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-07-23, 14:09:51 - Adam Rankin
(In r:1951|plus:1951) re #531 Capturing toolbox now remembers the last directory you saved a file in (per session). Initializes to plus config's default image directory.

#### 2012-07-23, 15:13:21 - Adam Rankin
status: changed from "New" to "Fixed"


## #532 Use UTC timestamps for OpenIGTLink messages
The current implementation does not take into account if the sender device uses absolute timestamps in the IGTL message. We need to generate a relative timestamp before we put it into the timestamped buffer. 

See thread: https://www.assembla.com/spaces/plus/messages/1999973

Regarding to the OpenIGTLink documentation (http://www.na-mic.org/Wiki/index.php/OpenIGTLink/Timestamp) IGTL messages are using UTC time. 
Save the UTC start time similar to the Plus start time and always convert timestamp: 
- received in UTC to relative (internal Plus timestamp)
- relative (internal Plus timestamp) to UTC before send

#### 2012-06-20, 13:17:51 - Tamas Heffter
Andras: 
I would compute an offset between the relative time and the absolute time similarly as it is done in vtkSavedDataTracker.cxx. Maybe it could be an option in the image source to enable/disable conversion to relative time. Tomi, would this make sense for you? Could you implement it?

Tamas: 
Actually it needs to be a time synchronization only, and could be automated: When we get the first timestamp we just need to check if it's significantly different than our current timestamp (like diff > mMaxTimeDiff) and if so we can synchronize it with computing the relative time ( mTimeOffset = timestamp - GetCurrentTime(); and then ts = timestamp - mTimeOffset ). Unfortunately this (and probably all approaches) will change the temporal calibration, so after every start we need to re-calibrate the system.

#### 2012-06-20, 13:27:10 - Andras Lasso
Actually, we can do it slightly differently than SavedDataTracker: we can subtract the Plus start time to convert the timestamp to relative ( 0 = Plus start time) from absolute (0 = year 1970). I think the conversion from absolute to relative should be done whenever we receive a timestamp through OpenIGTLink and conversion back to absolute should be done whenever we send any data through OpenIGTLink. If you think this might cause problems for certain applications then it could be a bool option in the OpenIGTLink data sources and broadcaster.

#### 2012-06-20, 14:52:53 - Tamas Heffter
It sounds good, at least it would keep the temporal calibration result. And what about the time elapsed since last reboot? This is the base of our timestamp too, so if somebody using it, than it would make a huge difference again. Is there any way we could identify the different timestamps? What are the most common approaches? We could have a function which could try to identify the type of the timestamp we get, but since it's on a different computer I'm not sure it's going to be easy (like we don't have access to the time since last reboot). 
Or, if the timestamp is computed from year 1970, convert it to our Plus start time (temporal calibration will work), if not, do the previous approach, the first item received going to be the actual Plus time (temporal calibration will be necessary, we can display a warning and compute the relative time respect to the received time). 
Or we can just strictly require an absolute timestamp for OpenIGTLink connections, which would solve all the problem. => This approach will work only with realtime data, no chance to receive older data or run simulator with older timestamps

#### 2012-06-20, 15:42:10 - Tamas Heffter
description: changed from "The current implementation ..." to "The current implementation ..."

#### 2012-06-20, 15:42:10 - Tamas Heffter
summary: changed from "Compute relative timestamp in OpenIGTLinkVideoSource and OpenIGTLinkTracker" to "Use UTC timestamps for OpenIGTLink messages"

#### 2012-06-20, 17:02:01 - Tamas Heffter
(In r:1801) Fixed #532: Changed PlusOpenIGTLinkServer to send UTC timestamps, convert from UTC to relative timestamps in vtkOpenIGTLinkTracker and vtkOpenIGTLinkVideoSource. Saved start time in relative and UTC format in vtkDataCollector, vtkTracker and vtkPlusVideoSource

#### 2012-06-20, 17:02:01 - Tamas Heffter
status: changed from "New" to "Fixed"

#### 2012-06-21, 13:43:28 - Brennecke
I tried the updated code and I get the following messages. I seems there is still some gap between the timestamps. I attached the log file.


~~~~

062112_152329.523|ERROR|018.287000| vtkTrackerBuffer: Failed to get tracker buffer timestamp (time: 4.403397)|in ..\\..\\..\\PlusLib\\src\  racking\\vtkTrackerBuffer.cxx(509)
062112_152329.625|ERROR|018.390000| Failed to get tracker item from buffer by time: 4.403397 (Latest timestamp: 17.980886   Oldest timestamp: 17.028000).|in ..\\..\\..\\PlusLib\\src\  racking\\vtkTracker.cxx(676)

~~~~



#### 2012-06-21, 13:44:47 - Brennecke
file:beiAHQU6Cr4BC7acwqjQWU
Log on TRACE level

#### 2012-06-21, 13:44:47 - Brennecke
Attachment added: "062112_152311_PlusLog.txt"

#### 2012-06-21, 13:59:02 - Brennecke
file:bb_z_yU6Kr4zguacwqjQXA
Log from DiagDataCollection

#### 2012-06-21, 13:59:02 - Brennecke
Attachment added: "062112_155526_PlusLog.txt"

#### 2012-06-21, 13:59:47 - Brennecke
file:bCtuMMU6Kr4zguacwqjQXA
TrackerBuffer timestamps

#### 2012-06-21, 13:59:47 - Brennecke
Attachment added: "062112_155526.TrackerBufferTimestamps.txt"

#### 2012-06-21, 14:03:59 - Brennecke
file:dYE4WMU6Kr4yc5acwqjQXA
TrackerBuffer metafile

#### 2012-06-21, 14:03:59 - Brennecke
Attachment added: "TrackerBufferMetafile.mha"

#### 2012-06-21, 14:04:00 - Brennecke
file:dYI5JMU6Kr4yc5acwqjQXA
VideoBuffer metafile

#### 2012-06-21, 14:04:00 - Brennecke
Attachment added: "VideoBufferMetafile.zip"

#### 2012-06-21, 15:30:31 - Andras Lasso
Thorsten, have you synchronized the clocks in the computers that you use? Probably you have to synchronize the clocks to roughly align the data. Once the clocks are aligned with a maximum of about +/-2 sec difference then you can use temporal calibration to automatically determine the remaining time offset (LocalTimeOffsetSec value in the config file).

#### 2012-06-28, 15:08:37 - Brennecke
I now synchronized the computers via NTP. I think I have some strange behaviors. First I cannot see the tools in the tools state display. When I use the Polaris only without OpenIGTLink IMAGE, this is no Problem. I attach a screenshot to clarify the issue.

Also I cannot initiate the temporal calibration, when I start fCal and wait some more then a minute before connecting the devices. I have to start the connection immediately. Otherwise the start button is disabled. I also attach a log file for this issue.

I can start the temporal calibration, but I'm not sure if this runs correctly. Can you please take a look on this log?



#### 2012-06-28, 15:13:08 - Brennecke
file:de0h2WWtmr4yVwacwqjQWU
The log from the temporal calibration run.

#### 2012-06-28, 15:13:08 - Brennecke
Attachment added: "temporal_calibration_062812_164436_PlusLog.txt"

#### 2012-06-28, 15:13:08 - Brennecke
file:de44EIWtmr4yVwacwqjQWU
here I waited some moments before connecting the devices

#### 2012-06-28, 15:13:08 - Brennecke
Attachment added: "062812_165750_PlusLog.txt"

#### 2012-06-28, 15:13:09 - Brennecke
image:de-0i-Wtmr4yVwacwqjQWU
A screenshot from fCal. No tools are visible in tool state display

#### 2012-06-28, 15:13:09 - Brennecke
Attachment added: "fCal_Screenshot.png"

#### 2012-06-28, 16:16:42 - Andras Lasso
It seems there is still some problem with the timestamping:

062812_164452.020|ERROR|016.129000| Failed to get tracker item from buffer by time: 7.635370 (Latest timestamp: 16.077214   Oldest timestamp: 10.531000).|in ..\\..\\..\\PlusLib\\src\  racking\\vtkTracker.cxx(676)

I'm investigating...


#### 2012-06-28, 16:16:42 - Andras Lasso
assigned_to_id: changed from "heffter" to "lassoan"

#### 2012-06-28, 16:16:42 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-06-28, 16:17:27 - Andras Lasso
Thorsten, could you please attach your config files?

#### 2012-06-28, 19:01:03 - Andras Lasso
(In r:1846|plus:1846) re #532: Cleaned up system/universal timestamp usage. Now only the OpenIGTLink sender and receiver knows about the conversion.

#### 2012-06-28, 19:01:34 - Andras Lasso
I could reproduce the problem and fixed it. Please test.

#### 2012-06-28, 19:01:34 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2012-06-29, 13:45:12 - Brennecke
Thanks for the fix! It is now working reliable.

#### 2012-06-29, 18:23:25 - Andras Lasso
status: changed from "Test" to "Fixed"


## #533 Add option to set image coordinate system in PlusServer
Right now, images are sent by PlusServer in the Image coordinate system. There could be a --ImageCoordinateSystem='Reference' kind of command line argument if we need the images in the Reference coordinate system. In this case the Image message (OpenIGTLink) would contain the ImageToReference matrix. This could ease use of live images in Slicer.

#### 2012-06-20, 20:45:31 - Andras Lasso
Clarifications after talking with Tamas: What needed is the coordinate frame where the image is defined. Currently it is always the 'Image' coordinate frame, but it's useful if it can be changed. The coordinate frame name should be also reflected in the OpenIGTLink device name. Moreover, the device name should contain some description about the image contents. 

The device name should be generated from the image's name and coordinate frame as: <Name>_<CoordinateFrame>
Default name: UsImage
Default coordinate frame: Image

Examples:
* UsImage_Image (default, image is represented in the raw IJK coordinate frame)
* UsImage_Reference (image is represented in the reference coordinate frame)
* UsImage_Ras

These information could be stored in an 'image' element: <Image Name='UsImage' CoordinateFrame='Reference' />


~~~~
 <PlusOpenIGTLinkServer MaxNumberOfIgtlMessagesToSend='10' MaxTimeSpentWithProcessingMs='50' ListeningPort='18944' > 
    <DefaultClientInfo> 
      <MessageTypes> 
        <Message Type='IMAGE' />
        <Message Type='TRANSFORM' />
      </MessageTypes>
      <TransformNames> 
        <Transform Name='ProbeToTracker' /> 
        <Transform Name='ReferenceToTracker' /> 
      </TransformNames>
      <ImageNames>
        <Image Name='UsImage' CoordinateFrame='Reference' />
      </ImageNames>
    </DefaultClientInfo>
  </PlusOpenIGTLinkServer>

~~~~




#### 2012-06-20, 21:34:27 - Tamas Heffter
OK, and this could also handle multiple streams later. 
<ImageNames>
  <Image Name='Transverse' CoordinateFrame='Reference' />
  <Image Name='Longitudinal' CoordinateFrame='Reference' />
</ImageNames>

#### 2012-06-24, 12:56:42 - Tamas Ungi
(In r:1823|plus:1823) Re #533: Test config file updated.

#### 2012-06-25, 01:13:29 - Tamas Ungi
(In r:1833|plus:1833) Re #533: Test config file updated with ImageToProbe transform.

#### 2012-06-25, 01:45:27 - Tamas Ungi
The 'ImageNames' part is a little undefined now before we have more video streams. I guess when we have more video streams, the Name attribute in the Image tag will identify the stream. Now, it's a little just hanging in the air.

#### 2012-06-25, 12:49:32 - Tamas Ungi
DeviceName is empty in all image messages sent from PlusServer. This needs to be fixed first.

#### 2012-06-25, 13:05:52 - Tamas Ungi
(In r:1834|plus:1834) Re #533: DeviceName set correctly in image messages. WIP: transforms are not yet computed and set in the image message.

#### 2012-06-25, 15:35:57 - Tamas Ungi
Tomi, what I don't understand is how and why can/should the client change the DeviceName in the Image Message. If we give this freedom to the developers who implement clients, we are giving them a chance to use non-standard message names.

#### 2012-06-25, 19:10:16 - Tamas Heffter
Try to imagine, that multiple clients wants to connect to the server: 
- Client 1 needs 3 images 
- Client 2 needs 1 image

Client 2 doesn't want to receive (and therefore slow down the performance) the other 3 images but the only one it's interested. So it sends a message in the ClientInfo message to send me only that specific image. 

About the device type, it's a good question... Usually the clients are identifying their images by device name, so I think they should be able to set/define the name what they requested (plus they could change it during acquisition). The main idea is that everything needs to be generic because the client won't change their code just to get the data from Plus. 


#### 2012-06-25, 21:25:13 - Tamas Ungi
status: changed from "New" to "Accepted"

#### 2012-06-25, 21:36:03 - Tamas Ungi
(In r:1839|plus:1839) Re #533: Transform inside the Image Message set. The image still cannot be visualized in Slicer using the RealTimeImaging module. Probably there is a slight difference in the final transform between the Image Message and the ImageToReference set up in Slicer. Therefore the reformat slice and the image content are just intersecting each other rather than being identical.

#### 2012-06-25, 21:40:10 - Tamas Ungi
Tomi, how will the Clients tell PlusServer which video streams they want to receive? The video streams need a name that identifies them. E.g. 'UsImage', 'WebCamera', 'Endoscope'. And the Client will probably need to use these 'standard' names to ask/receive the video streams.
What do you think?

#### 2012-06-26, 04:29:37 - Tamas Ungi
Real time imaging works in Slicer, Just 'Transverse' orientation has to be chosen for the reformat transform.

#### 2012-06-26, 14:51:21 - Tamas Heffter
I think  the example xml defines the image and transform perfectly: 
<Image Name='UsImage' CoordinateFrame='Reference' />

So, it will use the Name attribute instead of the currently hard coded 'UsImage' add a prefix ('_') then concatenate the CoordinateFrame name attribute to define the DeviceName in the IMAGE message. The transform that you need to set in the image message going to be the [Name]To[CoordinateFrame] transform (if it's valid). 

You need to change the Client info accordingly (PlusIgtlClientInfo.h): 


~~~~
/*! Transform names to send with igt image message */ 
PlusTransformName ImageTransformName;  

to 

/*! Transform names to send with igt image message */ 
std::vector<PlusTransformName> ImageTransformNames;

and update the following functions, too: 

 /*! Deserialize client info data from string xml data */ 
  PlusStatus SetClientInfoFromXmlData( const char* strXmlData ); 
  
  /*! Serialize client info data to xml data and return in string */ 
  void GetClientInfoInXmlData( std::string& strXmlData ); 

  /*! Copy all non-pointer data */ 
  void ShallowCopy(const PlusIgtlClientInfo& clientInfo); 
 

~~~~


 So, when you send the image message you need to get the image transforms list something like this (vtkPlusOpenIGTLinkServer.cxx): 


~~~~
// Set image transform name
    PlusTransformName imageTransformName = this->DefaultImageTransformName; 
    if ( client.ImageTransformName.IsValid() )
    {
      imageTransformName = client.ImageTransformName; 
    }

to 

// Set image transform names
    std::vector<PlusTransformName> imageTransformNames = this->DefaultImageTransformNames; 
    if ( !client.ImageTransformNames.empty() )
    {
      imageTransformNames = client.ImageTransformNames; 
    }


~~~~


And modify vtkPlusIgtlMessageFactory.cxx like this: 



~~~~
PlusStatus vtkPlusIgtlMessageFactory::PackMessages(const std::vector<std::string>& igtlMessageTypes, std::vector<igtl::MessageBase::Pointer>& igtlMessages, TrackedFrame& trackedFrame, 
    std::vector<PlusTransformName>& transformNames, PlusTransformName& imageTransformName, vtkTransformRepository* transformRepository/*=NULL*/)

to 

PlusStatus vtkPlusIgtlMessageFactory::PackMessages(const std::vector<std::string>& igtlMessageTypes, std::vector<igtl::MessageBase::Pointer>& igtlMessages, TrackedFrame& trackedFrame, 
    std::vector<PlusTransformName>& transformNames, std::vector<PlusTransformName>& imageTransformNames, vtkTransformRepository* transformRepository/*=NULL*/)

~~~~



and 

  

~~~~
 if ( STRCASECMP(messageType.c_str(), 'IMAGE') == 0 )
    {
      igtl::Matrix4x4 igtlMatrix; 
      vtkPlusIgtlMessageCommon::GetIgtlMatrix(igtlMatrix, transformRepository, imageTransformName); 

      igtl::ImageMessage::Pointer imageMessage = dynamic_cast<igtl::ImageMessage*>(igtlMessage.GetPointer()); 
      if ( vtkPlusIgtlMessageCommon::PackImageMessage(imageMessage, trackedFrame, igtlMatrix) != PLUS_SUCCESS )
      {
        LOG_ERROR('Failed to pack IGT messages - unable to pack image message'); 
        numberOfErrors++; 
        continue;
      }
      igtlMessages.push_back(igtlMessage); 
    }

to 

if ( STRCASECMP(messageType.c_str(), 'IMAGE') == 0 )
{
for ( std::vector<PlusTransformName>::iterator transformNameIterator = imageTransformNames.begin(); transformNameIterator != imageTransformNames.end(); ++transformNameIterator)
  {
    PlusTransformName imageTransformName = (*transformNameIterator);
    igtl::Matrix4x4 igtlMatrix; 
    vtkPlusIgtlMessageCommon::GetIgtlMatrix(igtlMatrix, transformRepository, imageTransformName); 

    igtl::ImageMessage::Pointer imageMessage = igtl::ImageMessage::New(); 
    imageMessage->Copy( dynamic_cast<igtl::ImageMessage*>(igtlMessage.GetPointer()) );
    std::string deviceName = imageTransformName.From() + std::string('_') + imageTransformName.To(); 
    if ( vtkPlusIgtlMessageCommon::PackImageMessage(imageMessage, deviceName, trackedFrame, igtlMatrix) != PLUS_SUCCESS )
    {
      LOG_ERROR('Failed to pack IGT messages - unable to pack image message'); 
      numberOfErrors++; 
      continue;
    }
    igtlMessages.push_back( dynamic_cast<igtl::MessageBase*>(imageMessage.GetPointer()) ); 
  }
}


~~~~


and modify vtkPlusIgtlMessageCommon::PackImageMessage and vtkPlusIgtlMessageCommon::UnpackImageMessage to use the device name and add the transform to the tracked frame in the UnpackImageMessage with the transform name constructed from device name. 


#### 2012-06-28, 21:16:11 - Andras Lasso
milestone: changed from "Release Plus-1.5.5" to "Release Plus-1.5.4"

#### 2012-07-11, 05:05:19 - Tamas Heffter
assigned_to_id: changed from "ungi" to "heffter"

#### 2012-07-11, 07:19:15 - Tamas Heffter
(In r:1893|plus:1893) Test #533: Implemented multiple image stream sending through OpenIGTLink. So far we don't have multiple image streams in DataCollector therefore we can only use the 'Image' image name attribute, but we can still send the same image in different coordinate systems. 

#### 2012-07-11, 07:19:15 - Tamas Heffter
status: changed from "Accepted" to "Test"

#### 2012-08-07, 22:20:39 - Andras Lasso
It's working well now.

#### 2012-08-07, 22:20:39 - Andras Lasso
status_updated_at: changed from null to "2012-08-07 22:20:39"

#### 2012-08-07, 22:20:39 - Andras Lasso
status: changed from "Test" to "Fixed"


## #534 STL files are not found if the device set configuration file is moved
If the device set configuration file is saved in a non-default directory then the STL files sometimes are not found. When this happens fCal crashes (not right after starting, but when clicking around, trying to show the 3D view, ...).

1. Need to clean up the STL search paths. Trying to search in parent directory is not acceptable. It may take a very long time and also it does not always work. Need to define a model directory instead.

2. Need to make fCal more robust: fCal must not crash if a model was not loaded.


#### 2012-06-24, 19:23:12 - Andras Lasso
(In r:1827|plus:1827) re #534: Addded ModelDirectory attribute to PlusConfig.xml to specify the STL file locations. STL files are now searched 1. in the specified absolute path; 2. recursively in the (PlusConfig.xml directory)/ModelDirectory; 3. relative to the device set configuration file directory.
Removed recursivce search in parent directory function, because it is not controllable, the parent directory can contain anything and can be arbitrarily large.

#### 2012-06-24, 19:23:12 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-06-24, 19:26:09 - Andras Lasso
(In r:1828|plus:1828) re #534: Use GetAbsoluteModelPath to get the model file path

#### 2012-06-24, 19:52:52 - Andras Lasso
status: changed from "New" to "Fixed"


## #535 Save XML configuration files with nice formatting
XML files saved by Plus contain many extra lines, the matrices and elements with many attributes are difficult to read and edit.


#### 2012-06-24, 19:41:27 - Andras Lasso
(In r:1829|plus:1829) re #535: Added a new XML writing function: PlusCommon::PrintXML.
The output is nicer that with the built-in vtkXMLDataElement::PrintXML, as there are no extra lines, if there are many attributes then each of them is printed on separate line, and matrix elements (those that contain Matrix or Transform in the attribute name and 16 numerical elements in the attribute value) are printed in 4 lines.

#### 2012-06-24, 19:47:50 - Andras Lasso
(In r:1830|plus:1830) Fixed #535: Use the new XML writing function in PlusCommon::PrintXML

#### 2012-06-24, 19:47:50 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-06-25, 18:46:56 - Csaba Pinter
Andras:
I'm planning to create a very simple program that reads an old messy XML configuration file and saves a nice one.
Where do you think I should put it (if you think it makes sense to commit something like this un the Plus repo, about which I'm not sure as in the future there will be no messy config files saved by Plus)?

#### 2012-06-25, 20:22:05 - Andras Lasso
Probably there are not too many (if any) config files that are valuable, saved with ugly formatting, and we want to edit. So, I wouldn't spend time with this. Writing the code is quick (maybe 15 lines), but we would need to document and support it, etc.

#### 2012-06-25, 20:24:51 - Csaba Pinter
OK. I just want to convert Elvis' config files he added not long ago.

#### 2012-07-03, 19:38:17 - Csaba Pinter
(In r:1867|plus:1867) Re #535: Converted recently added configuration files to have the new nice formatting


## #536 Define default models for tools for easier visualization
Define default models and give the possibility to the user to choose among them if they don't have an STL file.
Default freehand and endocavity probe models, needle, stylus etc.
This could be defined as: instead of <DisplayableObject Type='Model' ObjectCoordinateFrame='TransducerOrigin' File='L14-5_38_ProbeModel.stl'...> we could use <DisplayableObject Type='Model' ObjectCoordinateFrame='TransducerOrigin' ModelDefault='FreehandProbe'...>

See comments in https://www.assembla.com/code/plus/subversion/changesets/1828


## #537 Make checksum checking optional in OpenIGTLink client and server classes
MD5 checksum computation and checking in OpenIGTLink image messages has a significant impact on the data transfer rate. Add configuration option to enable/disable checksum checking to allow high-frame-rate image transfer through OpenIGTLink.

#### 2012-07-11, 20:32:41 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2012-07-11, 21:25:21 - Tamas Heffter
(In r:1901|plus:1901) Fixed #537: Added option to enable/disable CRC check in OpenIGTLinkTracker and OpenIGTLinkVideoSource

#### 2012-07-11, 21:25:21 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2012-07-11, 22:04:14 - Tamas Heffter
(In r:1902|plus:1902) re #537: Fixed compilation error caused by merge

#### 2012-07-11, 22:27:49 - Tamas Heffter
status: changed from "Fixed" to "Accepted"

#### 2012-07-11, 22:32:01 - Tamas Heffter
(In r:1903|plus:1903) re #537: Changed all unpack function call to use configurable option for CRC check 

#### 2012-07-11, 22:36:26 - Tamas Heffter
Disable CRC check in Pack() function for Image message and measure the time spent for Pack() with and without CRC checking. 

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:54 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-07, 22:04:46 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2013-11-26, 20:08:56 - Adam Rankin
@lassoan Is there anything left to do for this? This seems completed.

#### 2013-11-26, 20:08:56 - Adam Rankin
assigned_to_id: changed from "heffter" to "rankin"

#### 2013-11-26, 20:25:28 - Andras Lasso
Nothing left to be done in Plus.
CRC is still computed in Pack() methods, as there is no option to skip CRC computation in these methods, but probably the performance impact is acceptable.

#### 2013-11-26, 20:25:28 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #538 Clipping in fCal 3D canvas makes the tools invisible
When the actors are in certain areas relative to the camera, they don't show up. Zooming out rotating shows them.
The used configuration file was the 'No Video + NDI Aurora' with 3 tools and 3 Axis actors for each tool.

#### 2012-07-05, 18:55:53 - Csaba Pinter
The problem is not with the camera settings. When a displayable object having a different type (e.g. Model) is present, this issue does not come up.

Using a different, more reliable representation for axes is needed instead of vtkAxesActor. There is an initial implementation of such actor in Plus that can be improved.

#### 2012-07-05, 19:56:35 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-07-05, 19:56:35 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-05, 19:56:35 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-05, 19:57:20 - Csaba Pinter
(In r:1875|plus:1875) Re #538: vtkToolAxesActor moved from DataCollection/Testing to PlusCommon

#### 2012-07-05, 19:58:23 - Csaba Pinter
(In r:1876|plus:1876) Re #538: vtkToolAxesActor is used instead of vtkAxesActor in vtkDisplayableAxes. It is not as nice yet, but more reliable; Unused member Camera removed from vtk3DObjectVisualizer

#### 2012-07-06, 15:25:45 - Csaba Pinter
(In r:1877|plus:1877) Re #538: vtkToolAxesActor shows cylinders instead of lines; Shaft length can be set

#### 2012-07-06, 15:26:03 - Csaba Pinter
(In r:1878|plus:1878) Re #538: Axes actor shaft length is set

#### 2012-07-06, 18:21:41 - Csaba Pinter
(In r:1880|plus:1880) Re #538: Axes actor shaft uses vtkTubeFilter with the original line source and has an additional cone at the apex; Name is shown; Options added to show/hide labels and name

#### 2012-07-06, 18:22:18 - Csaba Pinter
(In r:1881|plus:1881) Re #538: Displayable axes show the object coordinate frame

#### 2012-07-06, 18:23:31 - Csaba Pinter
image:cW14V0X5Cr4z64acwqjQYw


#### 2012-07-06, 18:23:31 - Csaba Pinter
Attachment added: "AxesScreenshot.png"

#### 2012-07-06, 18:23:53 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-06, 19:49:44 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #539 Disconnecting from the device set in fCal does not destroy the displayable objects
Scenario:
1. Connect to a device set and show 1 Axis actor for Tracker
2. Show all objects in 3D
3. Disconnect
4. Edit the configuration file to show any tool instead of the Tracker (e.g. Reference)
5. Connect
6. Show all objects in 3D
Two axes can be seen in the canvas instead of one

#### 2012-07-05, 18:51:43 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-06, 22:22:43 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-06, 22:25:21 - Csaba Pinter
(In r:1884|plus:1884) Test #539; Re #511: StylusCalibrationToolbox and PhantomRegistrationToolbox indicates calibration state; DisplayableObjects are deleted when disconnecting; Error log entries prevented when there is no error

#### 2012-07-06, 22:25:21 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-07-06, 22:25:21 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-12, 20:22:35 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #540 Segmentation parameter dialog ROI handles jump
The new handles are nicer, but they jump away when grabbed and moved so that the mouse cursor is on the inner corner of the handle.

#### 2012-07-12, 15:53:33 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-12, 20:16:03 - Adam Rankin
(In r:1910|plus:1910) re #540 Recording the offset of the click from the center of the desired handle in order to provide a more smooth and expected control of the ROI and spacing modes.

#### 2012-07-12, 20:16:43 - Adam Rankin
(In r:1911|plus:1911) re #540 comment change

#### 2012-07-12, 20:16:58 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #541 Implement support for capturing RF data for BK ProFocus+Sapera
Required features:
* acquire and store the RF data and geometry information in file
* show an approximate B-mode frame on the screen (to check the integrity of the RF data transfer)


#### 2012-07-06, 17:36:03 - Andrey Fedorov
(In r:1879|plus:1879) Re #541: fixed incorrect increment of the output pointer while copying the RF frame, corrected the RF frame output buffer size


#### 2012-07-06, 20:32:26 - Andras Lasso
description: changed from "" to "Required features:
* acquir..."

#### 2012-07-06, 20:34:40 - Andras Lasso
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2012-07-06, 20:34:40 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-07-11, 15:13:05 - Andras Lasso
(In r:1895|plus:1895) re #541: Improved RF data acquisition: RF data can be stored internally with FM orientation (this is the format provided by US scanners and this order is more suitable for further processing), image type can be specified for video frames (US_IMG_BRIGHTNESS, US_IMG_RF_IQ_LINE, US_IMG_RF_IQ_LINE, ...)
re #279: Implemented simple RF processing (brightness conversion and scan conversion) to be able to show a rough processed Bmode image while acquiring RF frames. Added RfProcessor tool for off-line conversion.

#### 2012-07-11, 15:14:28 - Andras Lasso
(In r:1896|plus:1896) re #541: Show the B-mode frame in fCal while acquiring RF data to allow monitoring the image contents

#### 2012-07-11, 15:18:22 - Andras Lasso
(In r:1897|plus:1897) re #541: Committed remaining modified files

#### 2012-07-11, 15:28:36 - Andras Lasso
(In r:1898|plus:1898) re #541: Removed debug message (printing of Hilbert coefficients)

#### 2012-07-11, 19:52:18 - Andras Lasso
(In r:1900|plus:1900) re #541: Fixed image update in fCal

#### 2012-07-12, 15:13:22 - Andras Lasso
(In r:1905|plus:1905) re #541: Fixed BK interface build errors after UsImageOrientation->DeviceImageOrientation rename

#### 2012-07-13, 16:20:00 - Andrey Fedorov
Currently, the parameters used in reconstructions (angles, depth) should be specified in the configuration file. Since they are available via the OEM interface, does it make sense to instead query them from Plus and then store in the captured RF header file?

#### 2012-07-13, 22:14:00 - Andras Lasso
yes, it would make sense, tracked separately in #553

#### 2012-07-13, 22:16:11 - Andras Lasso
The feature is completed, the remaining specific issues are tracked in separate items: #279, #551, #552, #553


#### 2012-07-13, 22:16:11 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-07-16, 18:50:49 - Andras Lasso
(In r:1928|plus:1928) re #541: The image visualizer uses the brightness image output of the DataCollector, therefore it should use the BrightnessFrameSize for computation.


## #542 Implement B-mode image acquisition through BK OEM interface
BK scanner can send processed B-mode images through the OEM interface. Implement a Plus video source that can acquire these images.

#### 2012-08-08, 19:23:43 - Andras Lasso
assigned_to_id: changed from "lassoan" to null

#### 2012-08-22, 16:38:11 - Adam Rankin
assigned_to_id: changed from null to "fedorov"

#### 2012-08-22, 16:38:11 - Adam Rankin
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:54 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-01-15, 18:15:04 - Isaiah Norton
We may not have the license on the BK system at BWH. I've tried all of the related commands from the manual via serial terminal and they return errors.

#### 2013-01-16, 23:08:40 - Andras Lasso
OK, then we just put it into the future developments ticket list. We will work on it whenever somebody will need this and have the necessary license.

#### 2013-01-16, 23:08:40 - Andras Lasso
assigned_to_id: changed from "fedorov" to null

#### 2013-01-16, 23:08:40 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-Future"

#### 2013-01-16, 23:42:40 - Andrey Fedorov
Just for the record, last time I tried, I was able to capture a JPG screenshot using BK OEM interface.

I don't have a need for this functionality though. For the prostate project, our need is to be able to capture RF with camera link and B-mode using framegrabber simultaneously.

#### 2013-01-16, 23:52:02 - Andras Lasso
We now have the ability to capture data from multiple image sources simultaneously. Should we try to set this up with the BK system?

#### 2013-01-17, 00:01:30 - Andrey Fedorov
Yes, we tried this the Friday before SLC and it didn't work. But hopefully that fix that you did the weekend after (as I heard from Csaba and Adam) resolved the problems. 

Also, if I understood correctly from Adam's explanation, it is currently not possible to save multiple streams simultaneously -- it should only be possible to select a stream from fCal.

I will try again this Friday, but I don't know if there will be enough time because we have something else planned in AMIGO -- we have a visitor to try to figure out if our NDI Aurora is functional. I will let you know.

#### 2013-01-17, 01:29:38 - Adam Rankin
              I have completed the stream capture device. It will require a    real-life test but it has worked with saved data.
    
    I will test it tomorrow with our devices here.
    
    Adam

#### 2013-01-18, 02:32:59 - Andras Lasso
We are working on the multi-stream recording, we should have a well-tested solution for next Friday.

Till then it would be great if you could just test if the single-stream B-mode acquisition works through the BK OEM interface.

#### 2013-01-18, 04:19:57 - Andrey Fedorov
There is no receiver class (at least I don't have one) for collecting B-mode through BK OEM interface. What I can test tomorrow is:

1) BK RF-mode acquisition using camera link
2) BK OEM B-mode acquisition using OEM console (no relation to Plus)

#### 2013-03-29, 15:06:41 - Andras Lasso
@fedorov: Some other research groups would need B-mode acquisition through the OEM interface. Do you have a sample code for B-mode acquisition through the OEM interface that works?

#### 2013-03-29, 19:37:01 - Andrey Fedorov
Andras, I have an example code from BK that shows how to capture single frame from OEM. I am no longer at AMIGO, and cannot access that machine remotely, so I will send you that code next week. If I remember correctly, it is very similar to the way we obtain depth and other parameters for the probe. You post a formatted query to OEM TCP socket, and read the response into buffer.

#### 2013-04-03, 15:00:02 - Andrey Fedorov
here's the code (BMP and PNG also supported)

int CaptureJPG()
{
  WSAIF wsaif;

  TcpClient oemClient(&wsaif, 2*1024*1024, params.GetOemPort(), params.GetScannerAddress());
  TcpClient tbxClient(&wsaif, 2*1024*1024, params.GetToolboxPort(), params.GetScannerAddress());
  ParamSyncConnection paramSync(&oemClient, &tbxClient);


  bool connected = paramSync.ConnectOEMInterface();

  if (!connected)
  {
    cout << 'Could not connect to OEM interface ' << endl;
  }


  oemArray jpg;

  char query[] = 'query:capture_image \\'JPG\\';';
  cout << 'query = ' << query << endl;

  
  oemClient.Write(query, strlen(query));
  


  char buf[4*1024*1024];
  memset(buf, 0, sizeof(buf));
  std::cout << 'Before client read' << std::endl;
  size_t numBytes = oemClient.Read(&buf[0],2*1024*1024);
  std::cout << numBytes << ' read!' << std::endl;

  // First detect the #
  int n=0, k=0;
  for ( n = 0; buf[n]!='#' && n < numBytes; n++ ) ;
  n++;

  int numChars = (int)buf[n] - (int)('0');
  n++;
  std::cout << 'numChars = ' << numChars << std::endl;
  int jpgSize = 0;
  for ( k = 0; k < numChars; k++, n++) 
  {
    jpgSize = jpgSize * 10 + ((int)buf[n] - '0');
  }
  std::cout << 'jpgSize = ' << jpgSize << std::endl;

  FILE * f;
  f = fopen('c:\\\\andrey\\\\bktest.jpg', 'wb');
  if(f!=NULL){
    fwrite(&buf[n],1,jpgSize,f);
    fclose(f);
  }

  return 0;
}

#### 2013-04-03, 15:14:53 - Andras Lasso
Thanks Andriy. Could you please also attach a sample image (preferable with the same image contents) in PNG, JPG, and BMP formats?

#### 2013-04-03, 16:49:26 - Andrey Fedorov
image:bXWG-gNh4r4OoPacwqjQXA
BK capture via OEM interface, BMP format

#### 2013-04-03, 16:49:26 - Andrey Fedorov
Attachment added: "bktest.bmp"

#### 2013-04-03, 16:49:47 - Andrey Fedorov
image:b-xBoENh4r4PRdacwqjQXA
BK capture via OEM interface, JPG format

#### 2013-04-03, 16:49:47 - Andrey Fedorov
Attachment added: "bktest.jpg"

#### 2013-04-03, 16:50:01 - Andrey Fedorov
image:cgEAxoNh4r4PJcacwqEsg8
BK capture via OEM interface, PNG format

#### 2013-04-03, 16:50:01 - Andrey Fedorov
Attachment added: "bktest.png"

#### 2013-04-03, 16:50:47 - Andrey Fedorov
file:cImn7GNh4r4OkvacwqjQWU
code used to capture images included with this ticket

#### 2013-04-03, 16:50:47 - Andrey Fedorov
Attachment added: "TestParametersLibrary.cpp"

#### 2013-04-03, 16:51:10 - Andrey Fedorov
done, the image is the same -- acquired in 'freeze' mode

#### 2013-04-03, 19:01:47 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-04-03, 19:01:47 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-04-04, 01:38:44 - Andras Lasso
(In r:2642|plus:2642) re #542: Add option for BK image acquisition through the OEM interface

#### 2013-04-04, 01:48:20 - Andras Lasso
(In r:2643|plus:2643) re #542: Added video source for image acquisition through BK OEM interface (not functional yet)

#### 2013-04-04, 01:50:00 - Andras Lasso
(In r:2644|plus:2644) re #542: Fixed build error

#### 2013-04-04, 23:07:08 - Andras Lasso
(In r:2647|plus:2647) re #542: Added option to disable BK tests (to prevent trying to execute BK tests when an actual hardware is not available)

#### 2013-04-04, 23:14:44 - Andras Lasso
(In r:2648|plus:2648) re #542: Video source is now available for image acquisition from BK scanners through the OEM interface. It should work correctly, but only tested without an actual hardware (defining OFFLINE_TESTING in vtkBkProFocusOemVideoSource.cxx). Example configuration file: PlusConfiguration_BkProFocusOem_TrackingNone.xml for testing. CMake variables that controls which BK interfaces are supported: PLUS_USE_BKPROFOCUS_VIDEO enables generic BK support and acquisition through the OEM interface. PLUS_USE_BKPROFOCUS_CAMERALINK has to be enabled to also support RF acquisition through the CameraLink interface.

#### 2013-04-04, 23:17:12 - Andras Lasso
Image acquisition through the BK OEM interface is ready. Should be tested with real hardware.

#### 2013-04-04, 23:17:12 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2013-04-04, 23:17:12 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-04-05, 17:41:10 - Andrey Fedorov
Tested, not working. fCal says 'Connection successful'. Will attach trace level log.

Also, tried it twice, and both times had application crash popup message on US console, and the scanner shut down. This is very scary! If this happens during the case, it would be a major issue.

Tried to use BK RF configuration, and the message is BK device not supported. Looks like I need to reconfigure?

#### 2013-04-05, 17:41:30 - Andrey Fedorov
file:amYnH2NHGr4QWFacwqjQWU


#### 2013-04-05, 17:41:30 - Andrey Fedorov
Attachment added: "040513_133609_PlusLog.txt"

#### 2013-04-05, 17:44:23 - Andrey Fedorov
I don't see  PLUS_USE_BKPROFOCUS_CAMERALINK flag in cmake interface. Do I need to reconfigure from scratch? I am not very familiar with windows cmake.

#### 2013-04-05, 17:52:10 - Andrey Fedorov
ok, didn't realize I need to update PlusBuild manually (of course!). Enabled options, building again now.

#### 2013-04-05, 18:40:13 - Andrey Fedorov
(In r:2649|plus:2649) re #542: fix incorrect file name


#### 2013-04-05, 18:50:17 - Andras Lasso
This is the key issue:
040513_133615.642|TRACE|005.735000| Query from vtkBkProFocusOemVideoSource: query:capture_image 'PNG';|in ..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusOemVideoSource.cxx(243)
040513_133615.667|ERROR|005.759000| Failed to send query through BK OEM interface (query:capture_image 'PNG';)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusOemVideoSource.cxx(247)

It may be possible that the connection and query should be performed in the same thread.
Could you add the following two lines at the end of vtkBkProFocusOemVideoSource::InternalConnect() to see if we can acquire frames from the same thread?

~~~~

this->Recording=true; 
InternalUpdate();

~~~~


You can also test with the vtkBkProFocusOemVideoSourceTest (you don't need a config file and you don't have to manually click on the GUI, etc).

#### 2013-04-05, 19:22:58 - Andrey Fedorov
there more compile errors, so I didn't get there yet

#### 2013-04-05, 19:26:57 - Andrey Fedorov
2>PlusBkProFocusCameraLinkReceiver.cxx
3>vtkUsSimulatorAlgoTest.cxx
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\PlusBkProFocusCameraLinkReceiver.cxx(182) : error C2248: 'vtkBkProFocusCameraLinkVideoSource::NewFrameCallback' : cannot access protected member declared in class 'vtkBkProFocusCameraLinkVideoSource'
2>        c:\\alireza\\plusbuild-bin-qt-4.7.3\\pluslib\\src\\datacollection\\bkprofocus\\vtkBkProFocusCameraLinkVideoSource.h(70) : see declaration of 'vtkBkProFocusCameraLinkVideoSource::NewFrameCallback'
2>        c:\\alireza\\plusbuild-bin-qt-4.7.3\\pluslib\\src\\datacollection\\bkprofocus\\vtkBkProFocusCameraLinkVideoSource.h(21) : see declaration of 'vtkBkProFocusCameraLinkVideoSource'
2>vtkBkProFocusCameraLinkVideoSource.cxx
3>Linking...
3>   Creating library C:\\alireza\\PlusBuild-bin-Qt-4.7.3\\bin\elease\\vtkUsSimulatorAlgoTest.lib and object C:\\alireza\\PlusBuild-bin-Qt-4.7.3\\bin\elease\\vtkUsSimulatorAlgoTest.exp
3>Embedding manifest...
3>Build log was saved at 'file://c:\\alireza\\PlusBuild-bin-Qt-4.7.3\\PlusLib-bin\\src\\UsSimulatorAlgo\  esting\\vtkUsSimulatorAlgoTest.dir\elease\\BuildLog.htm'
3>vtkUsSimulatorAlgoTest - 0 error(s), 0 warning(s)
4>------ Build started: Project: vtkAccurateTimerTest, Configuration: Release x64 ------
4>Compiling...
4>vtkAccurateTimerTest.cxx
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusCameraLinkVideoSource.cxx(84) : error C2079: 'vtkBkProFocusCameraLinkVideoSource::vtkInternal::PlusReceiver' uses undefined class 'PlusBkProFocusReceiver'
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusCameraLinkVideoSource.cxx(94) : error C2228: left of '.SetPlusVideoSource' must have class/struct/union
2>        type is 'int'
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusCameraLinkVideoSource.cxx(99) : error C2228: left of '.SetPlusVideoSource' must have class/struct/union
2>        type is 'int'
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusCameraLinkVideoSource.cxx(374) : error C2664: 'AcquisitionInjector::AddDataReceiver' : cannot convert parameter 1 from 'int *' to 'IAcquisitionDataReceiver *'
2>        Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast
2>..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusCameraLinkVideoSource.cxx(387) : error C2664: 'AcquisitionInjector::RemoveDataReceiver' : cannot convert parameter 1 from 'int *' to 'IAcquisitionDataReceiver *'
2>        Types pointed to are unrelated; conversion requires reinterpret_cast, C-style cast or function-style cast

#### 2013-04-05, 19:31:55 - Andrey Fedorov
(In r:2651|plus:2651) re #542: fixing compile errors


#### 2013-04-05, 20:46:16 - Andrey Fedorov
@lassoan: I tried your suggestion adding the two lines, and it doesn't seem to work. I have a blank window popup, and console messages are these:

$ ./bin/Debug/vtkBkProFocusOemVideoSourceTest.exe
|INFO|000.003000| PlusLib version: 2.0.0 (debug build)
|INFO|000.164000| Initialize...
|ERROR|001.696000| Failed to send query through BK OEM interface (query:capture_image 'PNG';)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\BkProFocus\\vtkBkProFocusOemVideoSource.cxx(248)
|INFO|001.696000| Start recording...
|ERROR|006.696000| Frames are not received from the device for several seconds|in ..\\..\\..\\..\\PlusLib\\src\\DataCollection\  esting\\vtkBkProFocusOemVideoSourceTest.cxx(131)
|ERROR|006.698000| VTK log: ERROR: In ..\\..\\vtk\\Filtering\\vtkExecutive.cxx, line 756|vtkStreamingDemandDrivenPipeline (000000000449C620): Algorithm vtkBkProFocusOemVideoSource(000000000449D820) returned failure for request: vtkInformation (0000000004D015E0)|  Debug: Off|  Modified Time: 21205|  Reference Count: 1|  Registered Events: (none)|  Request: REQUEST_INFORMATION|  FORWARD_DIRECTION: 0|  ALGORITHM_AFTER_FORWARD: 1|||||in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusLogger.cxx(65)
|ERROR|006.698000| Last error: 6|in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusLogger.cxx(69)

#### 2013-04-05, 20:54:29 - Andras Lasso
Could you check the queryWrittenSize value?
Does it work if you skip the if (queryWrittenSize!=query.size()) checking and just go on and try to receive the image data anyway?


#### 2013-04-09, 03:38:22 - Andras Lasso
@ben.xkang: Andriy at Brigham and Women's hospital already gave a try to this new class, but the problem was that the image request query  (query:capture_image 'PNG';). sending failed. He didn't have more time for testing and he won't have access to the scanner for a couple of more days, so it would be great if you could investigate this issue. First test if it works as is. If not, then maybe the sending was actually successful, only the return value was incorrect, so try to bypass the (queryWrittenSize!=query.size()) checking and see if the image reception still fails. If it still fails then it would be useful to do step-by-step debugging of the this->Internal->OemClient->Write call to see what goes wrong.

#### 2013-04-09, 06:42:42 - ben.xkang
@Andras: I am new here.  Could you first provide me how to download the source from the repo and build it?  Afterwards, I would like to test the OEM function.

#### 2013-04-09, 06:42:42 - ben.xkang
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2013-04-09, 11:44:12 - Andras Lasso
See build instructions here: https://www.assembla.com/spaces/plus/wiki/Windows_Build_Instructions


#### 2013-04-09, 21:16:16 - Andras Lasso
(In r:2670|plus:2670) re #542: Added PLUS_TEST_BKPROFOCUS option to PlusConfigure.h.in and UsePlusLib.cmake.in

#### 2013-04-09, 21:20:54 - ben.xkang
@Andras: I have build PLUS from the source code and checked out PLTools into the <Plus-bin> directory.  How to start the test?  Which solution should I use? 

#### 2013-04-09, 21:28:05 - Andras Lasso
@ben.xkang: Open PlusLib.sln, choose the vtkBkProFocusOemVideoSourceTest as active project.Put breakpoints in vtkBkProFocusOemVideoSource::InternalUpdate().

#### 2013-04-11, 13:34:29 - ben.xkang
@lassoan Tried several times, but always got the following error.  Any suggestion?

Error  703  error LNK2019: unresolved external symbol 'public: virtual __thiscall AcquisitionGrabberSapera::~AcquisitionGrabberSapera(void)' (??1AcquisitionGrabberSapera@@UAE@XZ) referenced in function __unwindfunclet$??0vtkInternal@vtkBkProFocusVideoSource@@QAE@PAV1@@Z$1  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  708  error LNK2019: unresolved external symbol 'public: class SapBuffer * __thiscall AcquisitionGrabberSapera::GetBuffer(void)const ' (?GetBuffer@AcquisitionGrabberSapera@@QBEPAVSapBuffer@@XZ) referenced in function 'protected: virtual enum PlusStatus __thiscall vtkBkProFocusVideoSource::InternalConnect(void)' (?InternalConnect@vtkBkProFocusVideoSource@@MAE?AW4PlusStatus@@XZ)  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  709  error LNK2019: unresolved external symbol 'public: bool __thiscall AcquisitionSettings::LoadIni(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)' (?LoadIni@AcquisitionSettings@@QAE_NV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) referenced in function 'protected: virtual enum PlusStatus __thiscall vtkBkProFocusVideoSource::InternalConnect(void)' (?InternalConnect@vtkBkProFocusVideoSource@@MAE?AW4PlusStatus@@XZ)  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  707  error LNK2019: unresolved external symbol 'public: __thiscall SaperaViewDataReceiver::SaperaViewDataReceiver(class SapBuffer *)' (??0SaperaViewDataReceiver@@QAE@PAVSapBuffer@@@Z) referenced in function 'protected: virtual enum PlusStatus __thiscall vtkBkProFocusVideoSource::InternalConnect(void)' (?InternalConnect@vtkBkProFocusVideoSource@@MAE?AW4PlusStatus@@XZ)  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  706  error LNK2019: unresolved external symbol 'public: __thiscall AcquisitionSettings::AcquisitionSettings(void)' (??0AcquisitionSettings@@QAE@XZ) referenced in function 'public: __thiscall vtkBkProFocusVideoSource::vtkInternal::vtkInternal(class vtkBkProFocusVideoSource *)' (??0vtkInternal@vtkBkProFocusVideoSource@@QAE@PAV1@@Z)  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  704  error LNK2019: unresolved external symbol 'public: __thiscall AcquisitionSettings::~AcquisitionSettings(void)' (??1AcquisitionSettings@@QAE@XZ) referenced in function __unwindfunclet$??0vtkInternal@vtkBkProFocusVideoSource@@QAE@PAV1@@Z$1  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  705  error LNK2019: unresolved external symbol 'public: __thiscall AcquisitionGrabberSapera::AcquisitionGrabberSapera(void)' (??0AcquisitionGrabberSapera@@QAE@XZ) referenced in function 'public: __thiscall vtkBkProFocusVideoSource::vtkInternal::vtkInternal(class vtkBkProFocusVideoSource *)' (??0vtkInternal@vtkBkProFocusVideoSource@@QAE@PAV1@@Z)  D:\\PLUS_build\\20>vtkBkProFocusVideoSource.obj
Error  710  error LNK1120: 7 unresolved externals  D:\\PLUS_build\\20>D:\\PLUS_build\\bin\\Debug\\vtkImageAcquisition.dll


#### 2013-04-11, 14:06:33 - Andrey Fedorov
Ben, you need to enable BK in the CMake (PLUS_USE_BKPROFOCUS_VIDEO)  but keep the BK_USE_PROFOCUS_CAMERALINK flag off. I have not tried this configuration (I have cameralink enabled), but you shouldn't need sapera libraries for using OEM interface. If you have cameralink enabled, you need to point it to the Sapera libraries (they are in PLTools, you need to point CMake to the directories).

Note you will also need to initialize the path to Grabbie libraries in CMake, once you enabled BK.

#### 2013-04-11, 14:25:47 - Andrey Fedorov
(In r:2681|plus:2681) re #542: queryWrittenSize is query.size()+2, this tested switching betweeen different probes


#### 2013-04-12, 01:04:25 - Andras Lasso
@fedorov: did you have time to test this after the +2 fix?

#### 2013-04-12, 02:18:07 - Andrey Fedorov
Andras, yes of course I tested before commit. Sorry for a confusing commit message.

--
Sent from my Android phone, sorry for the typos

#### 2013-04-12, 14:29:08 - ben.xkang
@Andrey: Sure I enabled PLUS_USE_BKPROFOCUS_VIDEO and provided the path to Sapera libraries in PLTools.  However, there is no BK_USE_PROFOCUS_CAMERALINK in CMake.  I update the source (PLUS and PLTools) and tried again.  Still no BK_USE_PROFOCUS_CAMERALINK in CMake.  In which CMake file the BK_USE_PROFOCUS_CAMERALINK is defined?


#### 2013-04-12, 15:58:13 - Andras Lasso
We checked this with Ben and it turned out he tried the Plus-1.6 branch that didn't have the option for disabling the CameraLink interface

#### 2013-04-12, 20:26:38 - Andras Lasso
We've tested the OEM interface with Ben and it worked.

However, using the query:capture_image 'PNG' there is a considerable delay and the user interface on the BK becomes less responsive. So, we should use the grab on/off queries instead. Ben will check if he can add this capture mode to the vtkBkProFocusOemVideoSource class.

Also, a small change had to be made in GrabbieLib: The problem was that GrabbieLib tried to get the host information from the IP  address (by using gethostbyaddr). This gethostbyaddr failed with an error message like: the address is valid but no such host can be found. Passing the IP address to gethostbyname instead worked well. So, we changed the code to always get the host by name.

@fedorov: Please test if the connection works correctly on your system after this change (update&rebuild GrabbieLib, then build Plus and see if the connection is OK).

#### 2013-04-12, 20:28:06 - Andras Lasso
If the connection is fine and capturing works through the OEM interface at BWH as well, then we'll close this ticket and create a new one for the performance improvement for Ben.

#### 2013-04-12, 20:28:06 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2013-05-04, 15:13:59 - Andras Lasso
@fedorov: It would be great if you could test if this works for you. It seemed to work at Children's Hospital, but there were performance issues (frame rate was low and it slowed down the software on the BK machine as well). There is a faster acquisition option (using the grab on/off query), but that may require extra license.

#### 2013-05-07, 13:08:19 - Andrey Fedorov
@lassoan: tested, connects fine. I get about 3.5 fps in release mode. After I connect, cursor on the BK console starts blinking (I don't think I've seen this before). I do not know if any other instabilities/slowdown is introduced. On disconnect fCal crashes.

#### 2013-05-07, 13:08:52 - Andrey Fedorov
After disconnecting (crash), cursor blinking stops.

#### 2013-05-07, 13:32:10 - Andras Lasso
Thanks a lot for the testing. Do you see any error message in the log after the crash? Is there a chance that you can reproduce this in debug mode? (if not, then it's not an issue, then I close this ticket and enter a new ticket just for this disconnect problem)

This 3.5fps acquisition is certainly quite limited, but may be still usable for certain purposes. Also, I think the continuous acquisition (grab on/off command) requires extra license, while this kind of grabbing does not. The responsiveness/stability of the BK scanner software may be improved if we set the frame rate to 1-2fps.

#### 2013-05-07, 14:17:43 - Andrey Fedorov
I had to stop because they needed the scanner for the neuro case, also was not able to test the cameralink parameters readout, which is actually a lot more important for me. Will try to get some time on it later this week again...

#### 2013-05-07, 14:28:29 - Andras Lasso
Thanks Andriy, no problem at all, just focus on what is important to you.

#### 2013-05-07, 14:38:58 - Andras Lasso
Image acquisition through the OEM interface works.
Two remaining issues are tracked in separate tickets:
* Crash on disconnect: #753
* Performance improvement: #754

#### 2013-05-07, 14:38:58 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-05-07, 14:39:15 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.0.1"

#### 2013-05-07, 15:27:54 - Andrey Fedorov
Andras, I would also mention somewhere in the documentation for Plus BK OEM the issue about blinking cursor. If I was to use this mode of acquisition, I would first spend time to make sure it does not introduce any issues on the BK console. I think it is fair to warn the users.

#### 2013-05-07, 16:00:59 - Andras Lasso
I mention BK OEM limitations on the Hardware_setup page, added a comment to the sample BK OEM config file, and describe the performance issue in #754. Let me know if you think we should add more info about this to anywhere.

#### 2013-05-07, 21:38:37 - Andrey Fedorov
Andras, this looks good. In addition to that, the cursor is blinking, but maybe it's a non-relevant detail.


## #543 PlusServer probably not sending messages in order of timestamp
When we send more than one OpenIGTLink message from the PlusOpenIGTLinkServer, the receiving client occasionally gets older messages after more recent ones. When we set MaxNumberOfIgtlMessagesToSend='1' in the PlusOpenIGTLinkServer config xml element, the broadcasted transforms don't randomly jump back to older positions. So the problem is probably that when more than one message is sent, they are not sent in the order of timestamps.
Since there is a workaround by setting MaxNumberOfIgtlMessagesToSend to 1, the priority of this issue is low.

#### 2012-07-12, 02:39:37 - Tamas Ungi
First step in debugging this issue could be to record incoming transform messages using Transform Recorder. After stopping Slicer in debug mode, the transform series could be observed and checked if the time stamps are in order or not.

#### 2012-08-22, 16:43:34 - Adam Rankin
assigned_to_id: changed from null to "ungi"

#### 2012-08-22, 16:43:34 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-09-05, 17:13:06 - Csaba Pinter
Updating tickets (#517, #567, #543)



#### 2012-09-05, 17:13:06 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-23, 16:29:29 - Andras Lasso
assigned_to_id: changed from "ungi" to "lassoan"

#### 2012-10-23, 16:32:10 - Andras Lasso
(In r:2199|plus:2199) Fixed #543: PlusServer now always sends the OpenIGTLink messages in in correct order, even when MaxNumberOfIgtlMessagesToSend attribute is >1. The problem was that the starting timestamp was not computed correctly and so in each packet some already transmitted items were sent again.

#### 2012-10-23, 16:32:10 - Andras Lasso
status: changed from "New" to "Fixed"


## #544 Make Ulterius shared memory transfer configurable using the device set configuration file
Currently the SharedMemoryStatus flag in vtkSonixVideoSource cannot be set using the device set configuration. Add a 'UseSharedMemory' attribute to the 'ImageAcquisition' element and connect it to the value of vtkSonixVideoSource::SharedMemoryStatus in vtkSonixVideoSource::ReadConfiguration and vtkSonixVideoSource::WriteConfiguration.


#### 2012-07-09, 20:15:36 - Siavash Khallaghi
We (Saman and I) wanted to add this feature to Plus a long time ago (around November 2011). Because we did not want to mess things up with configuration files, we added a member variable, *SharedMemoryStatus*, to vtkSonixVideoSource defined in line 349 vtkSonixVideoSource.h and a Set/Get macro which we called prior to the InternalConnect() in our own application.

If it is not too much trouble, I would like to ask you guys to support the Set/Get macro, defined in line 259 of vtkSonixVideoSource.h.

Thanks

#### 2012-07-09, 20:36:04 - Andras Lasso
This ticket is about get/set the flag from the device set config. The implementation is exactly the same as all other configuration parameters in the video source (values are read/written from the config files and can be set using get/set macros), so it's difficult to mess anything up.

Siavash, if you have time then it would be great if you could add these few lines yourself, it should take less than an hour, including testing.
We planned to implement it once we've completed all the 1.5.4 items.


#### 2012-07-09, 20:40:47 - Siavash Khallaghi
Andras, normally I would implement it myself, but I have a very tight deadline for Friday. I am sorry but I can't do it this time. :(

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-23, 19:45:31 - Andras Lasso
(In r:2201|plus:2201) Fixed #544: For Ultrasonix systems shared memory transfer through Ulterius can now be requested through the device set config file (setting the SharedMemoryStatus attribute to '1'). Also, if the AcquisitionRate attribute is unspecified (<=0) in the config file then the actual frame rate is used as AcquisitionRate.

#### 2012-10-23, 19:45:31 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-10-23, 19:45:31 - Andras Lasso
status: changed from "New" to "Fixed"


## #545 TransducerOriginPixelToTransducerOrigin transform is computed inaccurately
See https://www.assembla.com/spaces/plus/messages/2066353

#### 2012-08-22, 16:41:14 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"


## #546 Communication with NDI Certus tracker randomly breaks
After a period of approximately 1 hour, the NDI ceases communication with the host.

Tested on an NDI Certus with fCal build 1892.


## #547 Split Freehand Calibration tab to Temporal and Spatial
Having the two together makes the toolbox extremely complicated.

The tabs won't fit, so it is necessary to come up with a new method:
* Customize the tabs so that they can be multi-line
* Make the toolboxes drop-down frames (something like in iCalBrachy)

#### 2012-07-26, 17:28:13 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-26, 18:42:12 - Csaba Pinter
(In r:1963|plus:1963) Re #547: FreehandCalibrationToolbox split into TemporalCalibrationToolbox and SpatialCalibrationToolbox; Tab widget replaced with Toolbox; Known issue: warning messages don't show the set color

#### 2012-07-26, 18:57:43 - Csaba Pinter
(In r:1964|plus:1964) Re #547: Clean up setting widgets part in main window; Obsolete empty widget deleted from SpatialCalibrationToolbox

#### 2012-07-26, 18:59:02 - Csaba Pinter
Suggestions:
* Make the tab switching buttons narrower (90% or so) - Adam
* Padding is too big around the toolbox contents

#### 2012-07-27, 00:02:09 - Csaba Pinter
(In r:1966|plus:1966) Test #547: State message color fixed; Padding reduced; Toolbox panel styled

#### 2012-07-27, 00:02:09 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-08-08, 23:50:27 - Andras Lasso
Looks good except at 1024x768 resolution (SonixTouch) there are unneeded ugly scrollbars (see attached screenshot)

#### 2012-08-08, 23:50:51 - Andras Lasso
image:dH-Ofm4Bmr4BfvacwqjQYw
fCal unneeded scrollbar

#### 2012-08-08, 23:50:51 - Andras Lasso
Attachment added: "fCalUnintendedScrollbars.JPG"

#### 2012-08-09, 18:06:26 - Csaba Pinter
Yes, I noticed it the other day on SonixTouch, but I haven't had time to fix it yet

#### 2012-08-09, 20:40:43 - Csaba Pinter
(In r:1985|plus:1985) Re #547: No scrollbars appear now at smaller resolutions

#### 2012-08-24, 17:36:55 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #548 Refactor Initialize and SetDisplayAccordingToState functions in fCal toolboxes
The two functions do similar things and after the recent changes it is not clear why they are separated like this.

#### 2012-08-17, 13:58:34 - Csaba Pinter
(In r:1997|plus:1997) Test #548: Initialize functions renamed to OnActivation and ensuring that all code related to other than updating the view according to session data are in either the constructor or the SetDisplayAccordingToState functions

#### 2012-08-17, 13:58:34 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-09-04, 20:26:13 - Adam Rankin
Closed as working in build plus:2045

#### 2012-09-04, 20:26:13 - Adam Rankin
status: changed from "Test" to "Fixed"


## #549 Save displayed image orientation setting into the fCal config file
In fCal the displayed image orientation can be selected, however this setting is not kept when restarting the application. Please save/load the displayed image orientation setting from the device set config file.
<fCal ... DisplayedImageOrientation='MARKED_RIGHT_FAR_UP' ... />

DisplayedImageOrientation=
 MARKED_RIGHT_FAR_UP
 MARKED_LEFT_FAR_UP
 MARKED_RIGHT_FAR_DOWN
 MARKED_LEFT_FAR_DOWN


#### 2012-07-13, 16:03:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-13, 18:25:18 - Adam Rankin
(In r:1922|plus:1922) re #549 displayed image orientation in vtkImageVisualizer is now loaded from config file and the config is updated when the value is changed

Test files were updated to add new visualization parameter.

re #449 line shift tolerance value is now saved out to file when parameters are saved

#### 2012-07-13, 18:41:09 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #550 Screenshot/Record buttons in fCal are disabled
I updated the source code today, and the Snapshot/Record buttons appear disabled. They were not disabled when I used the same configuration files a week ago.

#### 2012-07-13, 15:20:14 - Andrey Fedorov
image:a-I7qEZp4r4yVmacwqjQXA
Screenshot of fCal GUI with the acquisition buttons disabled

#### 2012-07-13, 15:20:14 - Andrey Fedorov
Attachment added: "fcal-sag-40mm.jpg"

#### 2012-07-13, 15:20:14 - Andrey Fedorov
file:a-I9sYZp4r4yVmacwqjQXA
Log file produced by fCal

#### 2012-07-13, 15:20:14 - Andrey Fedorov
Attachment added: "071312_111640_PlusLog.txt"

#### 2012-07-13, 15:24:24 - Andras Lasso
Root cause of the problem: fCal expects some configuration settings that it should not require.

Workaround: Add the missing elements, for example:


~~~~
  <fCal
    NumberOfCalibrationImagesToAcquire='200'
    NumberOfValidationImagesToAcquire='100'
    NumberOfStylusCalibrationPointsToAcquire='200'
    RecordingIntervalMs='100'
    MaxTimeSpentWithProcessingMs='70'
    ImageCoordinateFrame='Image'
    ProbeCoordinateFrame='Probe'
    ReferenceCoordinateFrame='Reference'
    TransducerOriginCoordinateFrame='TransducerOrigin'
    TransducerOriginPixelCoordinateFrame='TransducerOriginPixel'
    TemporalCalibrationDurationSec='10'
  />

  <CoordinateDefinitions>
    <Transform From='Image' To='Probe'
      Matrix='
        -0.0683412  -0.0064516  0.0417947  16.3721
        0.0434727  0.00290642  0.0658372  -27.4971
        -0.00553304  0.0744595  0.00105147  48.8042
        0  0  0  1'
       Error='0.475259' Date='060612_154721'/>
    <Transform From='Image' To='TransducerOriginPixel'
      Matrix='
        1  0  0  -410
        0  1  0  5
        0  0  1  0
        0  0  0  1'
       Date='2011.12.06 17:57:00'/>
    <Transform From='Phantom' To='Reference'
      Matrix='
        -0.339698  0.940469  0.0110627  -6.53095
        0.939399  0.339842  -0.0451359  -94.2699
        -0.0462085  -0.0049403  -0.99892  14.0551
        0  0  0  1'
       Error='0.600242' Date='060612_154610'/>
    <Transform From='StylusTip' To='Stylus'
      Matrix='
        0.035089  0.000562193  -0.999384  1.52424
        -0.0160199  0.999872  0  -0.695891
        0.999256  0.01601  0.0350935  43.4069
        0  0  0  1'
       Error='0.202318' Date='060612_154516'/>
    <Transform From='TransducerOriginPixel' To='TransducerOrigin'
      Matrix='
        0.0813304  0  0  0
        0  0.0746369  0  0
        0  0  0.07799  0
        0  0  0  1'
       Date='060612_154723'/>
  </CoordinateDefinitions>


~~~~



#### 2012-07-13, 15:27:58 - Andras Lasso
Fix needed:
* Data acquisition should be enabled even without any tracking information.
* ImageCoordinateFrame='Image' and ProbeCoordinateFrame='Probe' is not required for capturing
* CoordinateDefinitions are not required for capturing
* When there is an error condition then the text above the 'Snapshot' button should be orange or red and/or an warning or error icon should be displayed there.


#### 2012-07-13, 15:27:58 - Andras Lasso
assigned_to_id: changed from null to "pinter"

#### 2012-07-13, 15:29:32 - Andrey Fedorov
Andras, thank you. I confirmed that adding the transforms enabled the buttons.

#### 2012-07-13, 15:39:32 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-07-13, 17:07:09 - Csaba Pinter
(In r:1919|plus:1919) Test #550: Capturing toolbox is not disabled on warnings; State labels changed to orange when there is a warning, else set to black

#### 2012-07-13, 17:07:09 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2012-07-13, 19:23:02 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-07-20, 13:16:30 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #551 Segfault when disconnecting the BK video source
Very often when the BK video source is disconnected fCal crashes with a segfault. It seems that the PlusBkProFocusReceiver::DataAvailable(int lines, int pitch, void const* frameData) callback is called by Sapera after the frame receiver object is destroyed. Probably the order of disconnecting/destroying frame receivers is not correct in vtkBkProFocusVideoSource::InternalDisconnect() or some stop or destroy step is missed.

#### 2012-07-13, 16:13:58 - Andras Lasso
Andriy, it's specific to the BK system, so it would be good if you could have a look at it yourself, but we can also plan a remote debugging session sometime.

#### 2012-07-13, 16:13:58 - Andras Lasso
assigned_to_id: changed from null to "fedorov"

#### 2012-07-13, 16:28:17 - Andrey Fedorov
status: changed from "New" to "Accepted"

#### 2012-07-17, 13:19:47 - Andrey Fedorov
(In r:1929|plus:1929) re #551:

It seems that the function AcquisitionGrabberSapera::StopGrabbing() does not properly abort the transfer. 

Here's how it is done in AcquisitionGrabberSapera::StopGrabbing():

    BOOL result = saperaTransfer->Freeze();
    saperaTransfer->Wait(500);



And this is the code from AcquisitionGrabberSapera::Destroy():

     BOOL result = saperaTransfer->Freeze();
     if( saperaTransfer->Wait(500) != TRUE)
     {
         saperaTransfer->Abort();
      }

What is done in StopGrabbing() but not in Destroy(), is the cleanup of the injector:

    saperaProcessor->GetAcquisitionInjector()->CleanupInjection();

Demo_AcquisitionLibrary does not use stopGrabbing() at all, just Destroy().

So the solution could be not to use StopGrabbing(), but just Destroy().

With the changes in this commit, I am able to connect/disconnect repeatedly and close fCal without crash.




#### 2012-07-17, 13:29:45 - Andras Lasso
Great! If you don't plan to do further testing then you can set the status of this ticket to Fixed.

#### 2012-07-17, 13:40:28 - Andrey Fedorov
status: changed from "Accepted" to "Fixed"


## #552 Linear scan conversion with BK 8848 sagittal array is wrong
From Andriy:
Sagittal array does not behave well. When I do the reconstruction with 40 mm (the value you had originally), it looks ok, but squeezed a bit.
When I change to 60 mm (which seems to be the width of the array), it looks like it for a moment shows correct image, but then very quickly looks like voxels increase in the LR dimension, and I have in the end the screenshot attached.


#### 2012-07-13, 23:22:17 - Andrey Fedorov
summary: changed from "Linear scan conversion with BK stepper is wrong" to "Linear scan conversion with BK 8848 sagittal array is wrong"

#### 2012-07-20, 13:18:59 - Andrey Fedorov
As of PlusLib svn r1945, the problem is still there.

#### 2012-07-23, 14:47:33 - Andras Lasso
Fixed in r1949 (the commit comment format was wrong, that's why the commit hasn't been associated with this ticket)

#### 2012-07-23, 14:47:33 - Andras Lasso
status: changed from "New" to "Fixed"


## #553 Retrieve BK scan conversion parameters from the OEM interface
Currently, the parameters used in reconstructions (angles, depth) should be specified in the configuration file. Since they are available via the OEM interface, it would make sense to instead query them from Plus and then store them in the captured RF header file or in the XML config file.

#### 2012-07-16, 17:17:50 - Andras Lasso
Scan conversion parameters would be much simpler to be saved in the device set configuration file, similarly to other acquisition parameters.
It would be better to move the RfProcessing params elemtn under the video source element in the config file and make it the VideoSource's responsibility to read/write the RfProcessing element.


#### 2012-07-20, 00:43:30 - Andras Lasso
(In r:1945|plus:1945) re #553: Added the possibility to save the RF processing parameters into the XML tree (in case of the video source provides the processing parameters). The RfProcessing parameters in the XML tree are now under DataCollection/ImageAcquisition/RfProcessing.

#### 2012-07-20, 00:43:57 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2012-07-20, 00:51:50 - Andras Lasso
Note: any earlier config files have to be updated to the new structure to allow reading of RfProcessing parameters

Old structure:


~~~~
<PlusConfiguration version='1.4'>
  <DataCollection …>
    <ImageAcquisition   …/>
  </DataCollection>
  <RfProcessing>
    <RfToBrightnessConversion NumberOfHilberFilterCoeffs='32.0' BrightnessScale='20.0'/>
    <ScanConversion
      TransducerName='Ultrasonix_BPC8-4/10'
      TransducerGeometry='CURVILINEAR'
      RadiusStartMm='10.0'
      RadiusStopMm='82.0'
      ThetaStartDeg='-75.0'
      ThetaStopDeg='75.0'
      OutputImageStartDepthMm='-3.0'
      OutputImageSizePixel='820 616'
      OutputImageSpacingMmPerPixel='0.15 0.15'/>
  </RfProcessing>
</PlusConfiguration>


~~~~


New structure:


~~~~
<PlusConfiguration version='1.4'>
  <DataCollection …>
    <ImageAcquisition   …>
      <RfProcessing>
        <RfToBrightnessConversion NumberOfHilberFilterCoeffs='32.0' BrightnessScale='20.0'/>
        <ScanConversion
          TransducerName='Ultrasonix_BPC8-4/10'
          TransducerGeometry='CURVILINEAR'
          RadiusStartMm='10.0'
          RadiusStopMm='82.0'
          ThetaStartDeg='-75.0'
          ThetaStopDeg='75.0'
          OutputImageStartDepthMm='-3.0'
          OutputImageSizePixel='820 616'
          OutputImageSpacingMmPerPixel='0.15 0.15'/>
      </RfProcessing>
    </ImageAcquisition>
  </DataCollection>
</PlusConfiguration>


~~~~



#### 2012-08-10, 14:41:05 - Andrey Fedorov
(In r:1986|plus:1986) Re #553: adding code to interact with the BK OEM interface and query
acquisition/reconstruction related parameters via OEM TCP client from
CommandAndControl.


#### 2012-08-10, 14:41:58 - Andrey Fedorov
status: changed from "New" to "Accepted"

#### 2012-08-10, 14:57:25 - Andrey Fedorov
Current issues:

1) Need to figure out what is the meaning of the parameter names provided by OEM. Currently, for 8848 curved transducer we have this:

Start line X: 0.00933471 mm
Start line Y: -0.00658264 mm
Start angle: 19.6185 deg
Start depth: -0.0196801 mm
Stop line X: -0.00933471 mm
Stop line Y: -0.00658264 mm
Stop angle: 160.381 deg
Stop depth: 53.6878 m

for the linear array:

Start line X: 0.0302374 mm
Start line Y: -5.82077e-011 mm
Start angle: 90 deg
Start depth: -0.0287255 mm
Stop line X: -0.0302374 mm
Stop line Y: -5.82077e-011 mm
Stop angle: 90 deg
Stop depth: 55.9246 m

I can only make sense of Stop depth (depth) and angles.

2) currently setting of the parameters on RfProcessor is somewhat cumbersome, since it actually has to pass the recon parameters to individual processors, which are not exposed to VideoSource.

3) there are a lot of very important parameters that can be queried from OEM, need to look what can be set and where. For example, need to look if transducer model can be set somehow. It is available in the config file, but probably should be reset when known from OEM.

#### 2012-08-10, 15:42:46 - Andras Lasso
1) The Start/Stop line parameters didn't seem to make any sense. Maybe you could ask BK about them.

2) Probably the simplest would be to add GetBrightnessConverter() and GetScanConverter() methods to RfProcessor and set the parameters by rfProcessor->GetScanConverter()->SetImagingDepthMm(150.0);

3) In vtkBkProFocusVideoSource::InternalConnect() you can get the parameters from the scanner, store them in member variables (you can overwrite the members that previously has been set in vtkBkProFocusVideoSource::ReadConfiguration), and when the config file is saved you can save those member variables (by writing it into the XML data element in vtkBkProFocusVideoSource::WriteConfiguration)

#### 2012-08-14, 22:58:53 - Andrey Fedorov
(In r:1988|plus:1988) Re #553: added methods to set reconstruction related parameters from BK video source. Note that Radius of curvature cannot be queried from OEM and is a preset for 8848 probe. TODO: RfProcessor WriteConfiguration is not called, need to fix this.


#### 2012-08-15, 16:12:35 - Andras Lasso
(In r:1990|plus:1990) re #553: Added WriteConfiguration method to vtkDataCollector

#### 2012-08-15, 16:14:06 - Andras Lasso
(In r:1991|plus:1991) re #553: Update device set configuration data from the devices before saving it into XML

#### 2012-08-17, 14:00:05 - Andrey Fedorov
(In r:1998|plus:1998) Re #553: added saving of the addition acquisition parameters.

Transducer name is saved as 'BK-<model number><scan plane>'. For 8848, scan plane can be either S or T. TransducerName attribute is added to RfProcessor, since it manages saving of that tag.

TransducerWidth initialization is added. BK OEM interface QUERY_SCANAREA returns Start/Stop Line X/Y in m. Start/StopLineX appear to be defined relative to the center of the active are of the transducer and are used to set transducer width (for linear probe only). Note that changing width on the console results in the change of Start/StopLineX (for sagittal array) and in the change of Start/StopLineAngle (for transverse). These changes can now be correctly captured via OEM interface. Tested passing to fCal configuration file that corresponds to S, while active surface was T, RfProcessor was correctly initialized.

TODO: Probably we need a bit smarter initialization of the reconstructed image size based on the dimensions of the scanned area and the width of the RF line. I will ask BK how we can query the RF line physical width, cannot find this in OEM specs. 


#### 2012-08-17, 14:07:29 - Andrey Fedorov
Correction: since we know the number of lines and samples for RF, and also the physical dimensions of the scanned area, this should be sufficient for estimating the pixel size of the reconstructed image, no additional data is needed from OEM.

#### 2012-08-17, 14:20:55 - Andrey Fedorov
I just realized the dimensions for reconstruction are not important, since these are used only for visualization in fCal, the original data is saved in full as RF.

#### 2012-08-17, 14:20:55 - Andrey Fedorov
status: changed from "Accepted" to "Test"

#### 2012-08-24, 14:58:37 - Andras Lasso
Is this ticket fixed? We would like to close the 1.5.4 release in about a week and it would be good to know by then if this ticket is fixed or we should move it to the next release.

#### 2012-08-24, 15:02:45 - Andrey Fedorov
I consider it fixed, I just thought maybe you could review before we close it.

#### 2012-08-24, 16:45:49 - Andras Lasso
(In r:2021|plus:2021) re #553: Added documentation and did some cleanup in PlusBkProFocusReceiver (no functional change has been done)

#### 2012-08-24, 18:39:24 - Andras Lasso
(In r:2022|plus:2022) re #553: Cleaned up PlusBkProFocusReceiver (removed B-mode acquisition because without scan conversion it was a partial implementation only; fixed decimation, now a fraction of the RF samples can be acquired for better performance; cleaned up buffer size computations)

#### 2012-08-24, 18:40:41 - Andras Lasso
@fedorov: I've cleaned up the PlusBkProFocusReceiver, it would be great if you could test it. There may be also a solution for the observed image artifacts near the end of the scanlines, see the TODO: comment in PlusBkProFocusReceiver.cxx.

#### 2012-08-24, 18:54:29 - Andras Lasso
(In r:2023|plus:2023) re #553: Cleaned up PlusBkProFocusVideoSource and the RF processor (added some documentation; changed parameter setting functions from InitConverter... to simply Set...; set parameters in all scan converters so that the order of parameter setting / transducer selection does not matter; in the future if scan conversion with two different transducers are needed then two RF processors will have to be instantiated)

#### 2012-08-24, 18:58:22 - Andras Lasso
The testing is not urgent. If the testing won't be completed till the release creation (sometime next week), then we will simply not include this ticket in the list of fixed tickets for this release (and will be reported as fixed in an upcoming release).

#### 2012-08-24, 22:30:29 - Andrey Fedorov
Andras, I am planning to test these changes Tuesday morning, if the equipment is available (am waiting for the confirmation of this).

#### 2012-08-28, 20:14:31 - Andrey Fedorov
There is a crash, see screenshot for details.

I am using the attached config file, the same that worked before (Aug 10 commit).

#### 2012-08-28, 20:14:54 - Andrey Fedorov
image:ahOJIW8u0r4zoxacwqjQXA


#### 2012-08-28, 20:14:54 - Andrey Fedorov
Attachment added: "phantom_crash.jpg"

#### 2012-08-28, 20:15:15 - Andrey Fedorov
file:aunOcK8u0r4A3tacwqjQWU


#### 2012-08-28, 20:15:15 - Andrey Fedorov
Attachment added: "PlusConfiguration_BkProFocusBmode-Axial-Misconfig.xml"

#### 2012-08-28, 20:40:24 - Andras Lasso
We are investigating this now.

#### 2012-08-28, 20:46:37 - Andras Lasso
file:b11F7g8ver4ALNacwqjQXA
Configuration file to conform with new model ID definitions

#### 2012-08-28, 20:46:37 - Andras Lasso
Attachment added: "PlusConfiguration_BkProFocusBmode-Axial-Misconfig-updated01.xml"

#### 2012-08-28, 20:47:04 - Andras Lasso
Andriy, could you try this file?
file:b11F7g8ver4ALNacwqjQXA


#### 2012-08-28, 21:00:03 - Andras Lasso
@fedorov: A slight change has been made in the config file structure last week (see https://www.assembla.com/code/plus/subversion/node/diff/1969/2009/trunk/PlusLib/data/ConfigFiles/PlusConfiguration_BkProFocus_OpenIGTLinkTracker.xml) and due to a bug the fCal didn't recover nicely from reading a non-conforming config file. @rankin is fixing the bug to avoid crash regardless of the config file structure. I've created the ... updated 01 config file by applying the same changes that were done to the example config files. It should work with the current code, but let us know if it does not.

#### 2012-08-28, 21:01:27 - Adam Rankin
Crash has been fixed. Displayable objects now require IDs. IDs are defined as an attribute in a <DisplayableObject> tag.

fCal requires the following tags for:
- hiding/showing the phantom
<fCal
...
PhantomModelId='PhantomModel'
/>
- updating the volume after reconstruction
<fCal
...
ReconstructedVolumeId='Volume'
/>

#### 2012-08-28, 21:36:12 - Andrey Fedorov
Confirmed, the crash is resolved.

The next issue is the updated code does not correctly reconstruct b-mode in fCal. See screenshot attached. Andras, I think this may be related to the cleanup you did -- do you know what's wrong?

#### 2012-08-28, 21:36:38 - Andrey Fedorov
image:bY_bdA8vGr4zAiacwqjQWU


#### 2012-08-28, 21:36:38 - Andrey Fedorov
Attachment added: "bmode_recon_issue.jpg"

#### 2012-08-28, 21:38:34 - Andrey Fedorov
I should be able to do more testing tomorrow if there are updates, but I don't have time this week to debug the problem.

#### 2012-08-28, 22:30:12 - Andras Lasso
(In r:2035|plus:2035) re #553: Fixed image size in BK receiver (the unit of 'sample' argument of PlusBkProFocusReceiver::Prepare is now 'byte'; previously it was assumed to be '16-bit sample')

#### 2012-08-28, 22:33:17 - Andras Lasso
Most probably I interpreted the 'sample' argument of PlusBkProFocusReceiver::Prepare incorrectly (I thought that sample refers to the number of samples in the line, but from the attached image it seems that it refers to the length of line in bytes). Sorry for introducing this regression, I've committed a fix, hopefully it works correctly now.

#### 2012-08-28, 22:36:53 - Andrey Fedorov
Andras, no worries. Sorry I can't test today, not at the hospital right now. I plan to test again tomorrow around noon, unless the equipment is not available due to clinical use.

#### 2012-08-29, 17:11:58 - Andrey Fedorov
Andras, I am at r2036, and the problem is still there.

I am here with the US machine and will be able to do more testing until 3pm. After that I won't be at the hospital until next week to test this.

I will also look around the code myself at what might be going on, while waiting for your feedback.

#### 2012-08-29, 17:12:48 - Andrey Fedorov
image:dbX8Ym8FWr4B4XacwqjQYw


#### 2012-08-29, 17:12:48 - Andrey Fedorov
Attachment added: "bmode_recon_issue_remains.jpg"

#### 2012-08-29, 17:13:18 - Andrey Fedorov
also note the problem is a bit different now, the brightness for the two segments is not the same

#### 2012-08-29, 17:41:34 - Andrey Fedorov
(In r:2037|plus:2037) re #553: m_Frame pointer is char*, so need to multiply by BYTES_PER_SAMPLE while setting the output pointer


#### 2012-08-29, 17:53:08 - Andrey Fedorov
r2037 seems to fix the earlier issue.

The next issue is that the depth of the b-mode image shown in fCal does not match the depth of the image on the BK console (will attach screenshots). I believe this is a new issue, I think I checked the depth was matching in my earlier experiments. I will look into this, but Andras please let me know if you have any specific ideas.

#### 2012-08-29, 17:53:37 - Andrey Fedorov
image:b1VRzQ8Gir4yunacwqjQYw


#### 2012-08-29, 17:53:37 - Andrey Fedorov
Attachment added: "fCal_capture.jpg"

#### 2012-08-29, 17:54:54 - Andrey Fedorov
image:cJE62M8Gir4B8sacwqjQWU


#### 2012-08-29, 17:54:54 - Andrey Fedorov
Attachment added: "bk_capture.jpg"

#### 2012-08-29, 18:17:10 - Andras Lasso
It seems that the line length is not computed correctly.

Check the numberOfRfSamplesPerLine computation in PlusBkProFocusReceiver::Prepare.

After the cleanup it was:
(1) int numberOfRfSamplesPerLine = (samples-HEADER_SIZE_BYTES/BYTES_PER_SAMPLE) / m_Decimation;

then you had that error and I've found some documentation that indicated that samples is defined in bytes, so I changed it to:
(2) int numberOfRfSamplesPerLine = (samples-HEADER_SIZE_BYTES) / BYTES_PER_SAMPLE / m_Decimation;

It may be possible that samples is defined in 16-bit samples instead of bytes, so (1) is correct. So, please try to compute the numberOfRfSamplesPerLine as (1).


#### 2012-08-29, 18:36:03 - Andrey Fedorov
(In r:2039|plus:2039) re #553: the 'sample' from BK in Prepare() is 16-bit. Updated the code to use this convention. Verified agreement between the fCal reconstructed image and the BK console image (to be attached to the issue). The artifact at the F edge of the reconstructed image is still present (TODO).


#### 2012-08-29, 18:44:07 - Andras Lasso
Great!

For the artifact at the F edge, check the comment in PlusBkProFocusReceiver.cxx:

    // TODO: check if header->LineLength can be used to make the numberOfSamplePairsToCopy computation more accurate
    // (now there might be junk pixels at the end of the line if the line lenght is different for different lines) 

For computing the number of samples in input we use the pitch now:
int numberOfSamplePairsInInput=((pitch-HEADER_SIZE_BYTES)/(2*BYTES_PER_SAMPLE))/m_Decimation;

we could try to use the header->LineLength:
int numberOfSamplePairsInInput=((header->LineLength-HEADER_SIZE_BYTES)/(2*BYTES_PER_SAMPLE))/m_Decimation;



#### 2012-08-29, 18:44:59 - Andrey Fedorov
image:cIEHmY8GKr4AQ3acwqjQXA
fCal reconstructions are saved using 'print screen'. BK reconstructions saved from console. The content of the image corresponds to the identical location imaged -- the capture was 'frozen' on the console.

#### 2012-08-29, 18:44:59 - Andrey Fedorov
Attachment added: "fcal-bk-verification.jpg"

#### 2012-08-29, 18:48:52 - Andrey Fedorov
Andras, I will look into this, but don't have time today anymore (other meetings and commitments). I won't have time to get back to this before next week, so please decide if you want to include this ticket into release. I would keep it open until we are completely satisfied with the solution. I think it is quite good, but not perfect yet.

#### 2012-08-30, 16:56:02 - Andrey Fedorov
(In r:2044|plus:2044) re #553: pitch in DataAvailable() is in bytes, need to divide by 2 to get number of 2x8 samples.


#### 2012-08-30, 17:02:18 - Andrey Fedorov
Andras, I forgot we have a biopsy case today, so I was in AMIGO and had some time to look into this.

The number of samples in the same for each line, so this was not an issue. What I also found is that the (pitch - header) had few samples more than what was passed to Prepare(). It looks like there are some samples in the buffer that are not properly initialized, and that's why we have this issue. If I reduce the number of samples, at some point I am able to get rid of the artifact.

Interestingly, I did some experiments with the phantom, and it looks like we  are getting artifacts in the area that shows correctly on BK b-mode console.

Having said all of this, I actually think the issue is very minor, since we do not expect important data to be on the edge of the image. It might be interesting to resolve this, but I do not consider it is worth the effort. That's why I am closing the issue. Please reopen if you think this is important.

#### 2012-08-30, 17:02:18 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #554 Image mode in fCal is cropping part of the image.
Image mode in fCal is cropping part of the image.

#### 2012-07-16, 17:19:53 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-16, 17:47:32 - Adam Rankin
(In r:1926|plus:1926) re #554 Image visualizer now properly calculates aspect ratio. Problem was a call to a function that was returning a fixed frame size, instead of the size of the actual image data.

#### 2012-07-16, 17:47:41 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-07-16, 18:45:44 - Andras Lasso
(In r:1927|plus:1927) re #554: Fixed DataCollector GetBrightnessFrameSize (the size was not updated)

#### 2012-07-16, 18:51:26 - Andras Lasso
Adam, please test if this works correctly now. Thanks!

#### 2012-07-16, 18:51:26 - Andras Lasso
status: changed from "Fixed" to "Test"

#### 2012-07-16, 19:10:42 - Adam Rankin
Confirmed fixed.

#### 2012-07-16, 19:10:42 - Adam Rankin
status: changed from "Test" to "Fixed"


## #555 Transform in OpenIGTLink image message should be used
In the OpenIGTLinkVideo type of ImageAcquisition, the transform in the OpenIGTLink IMAGE message is dropped now. It should rather be recorded in the TrackedFrame (that is generated from the IMAGE message). To define the transform name for this transform, an extra parameter should be added to the ImageAcquisition config tag. E.g. ImageCoordinateFrame='Reference'. This would mean that the the transform in the IMAGE message is loaded in the TrackedFrame as 'ImageToReference' transform.

Note that OpenIGTLink has a strange interpretation of the image transform. To stay compatible with Slicer, the transform in the image should treat the center of the image as the origin.

#### 2012-07-17, 16:40:57 - Andras Lasso
Instead of ImageCoordinateFrame='Reference' use EmbeddedTransformName='ImageToReference' - or whatever attribute name is used in #556.

#### 2012-08-22, 16:42:14 - Adam Rankin
assigned_to_id: changed from null to "lassoan"

#### 2012-08-22, 16:42:14 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-08-23, 12:13:25 - Andras Lasso
What’s the status of this?
@ungi, do you do conversion to/from image center/corner based transforms?
@heffter, do you use transforms embedded in the image?


#### 2012-08-23, 12:54:01 - Tamas Heffter
Yes, transforms are embedded in the image.

#### 2012-08-23, 12:56:17 - Tamas Ungi
I've never used the OpenIGTLinkVideo as an image acquisition method. I fixed a similar issue #557 with this change: https://www.assembla.com/code/plus/subversion/changesets/1932

#### 2012-08-23, 13:37:29 - Tamas Heffter
In the OpenIGTLinkVideoSource, we just use the image data _without_ the transform field. We can reconstruct a plus transform name from the IGT image message transform name if it's available and add it as a custom field (like we do with TRACKEDFRAME message. 

#### 2012-08-23, 19:35:43 - Andras Lasso
(In r:2013|plus:2013) Fixed #555: If ImageAcquisition / ImageMessageEmbeddedTransformName attribute is defined (e.g., ImageMessageEmbeddedTransformName='SomeImageToTracker') then the transform embedded into the OpenIGTLink IMAGE message is acquired (with the transform name defined by ImageMessageEmbeddedTransformName)

#### 2012-08-23, 19:35:43 - Andras Lasso
status: changed from "New" to "Fixed"


## #556 Rename OpenIGTLinkServer Image coordinate frame attribute name
Currently the transform name that is embedded into the IMAGE message is defined by the CoordinateFrame='Reference' attribute:

  <PlusOpenIGTLinkServer ...> 
    <DefaultClientInfo> 
    <ImageNames>
      <Image Name='Image' CoordinateFrame='Reference' />
    </ImageNames>
    </DefaultClientInfo>
  </PlusOpenIGTLinkServer>

The problem is that the 'CoordinateFrame' word does not define the role of the attribute, only the type (that it is some kind of coordinate frame).

The attribute should be renamed to EmbeddedTransformName and should contain the full transform name:

  <PlusOpenIGTLinkServer ...> 
    <DefaultClientInfo> 
    <ImageNames>
      <Image Name='Image' *EmbeddedTransformToFrame='Reference'* />
    </ImageNames>
    </DefaultClientInfo>
  </PlusOpenIGTLinkServer>


#### 2012-07-17, 19:37:51 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2012-07-17, 19:49:54 - Tamas Ungi
There is no space in PlusIgtlClientInfo to hold a full transform. It only defines a 'CoordinateFrame'. So fixing this is more complicated.

#### 2012-07-17, 19:49:54 - Tamas Ungi
assigned_to_id: changed from "ungi" to null

#### 2012-07-17, 22:34:15 - Tamas Heffter
Why do we need the full transform name? Isn't going to be the from frame always the same as the Image Name attribute? 

#### 2012-07-17, 22:44:54 - Andras Lasso
Although we would most of the time embed an 'ImageToSomething' transform, we could embed any transform name we need. I like EmbeddedTransformName='ImageToReference' because it is short and clear. EmbeddedTransformToFrame='Reference' is not too bad either.

If there are something that prohibits the use of EmbeddedTransformName then we can use EmbeddedTransformToFrame.

#### 2012-07-17, 23:11:03 - Tamas Heffter
The only thing is that it's not going to be consistent with the current frame attributes (and therefore we could have the same errors as before with the transform names, however we could check if it's valid or not). I can implement it if needed. 


#### 2012-07-18, 03:08:50 - Tamas Ungi
I currently cannot imagine any case when the 'From' part would be anything else than the Image Name.
Another complication with explicit 'From' part is that it would be a logical consequence to put the full transform name in the Device Name of the image message. But OpenIGTLink allows max. 20 characters for Device Name. So 'Image_ImageToReference' cannot be a Device Name. It's better to have 'Image_Reference'. Then, at least we know that we have to put it on 'ReferenceToRAS' to display the image in RAS. Just 'Image' is not enough.

So this is really just the renaming of the attribute and the member names in the code (to stay consistent). It could be kept as a low priority issue.

#### 2012-07-18, 11:57:54 - Andras Lasso
OK, so due to the max. length limitation rename the attribute name to EmbeddedTransformToFrame.  The same name should be used in #555.

This should be changed ASAP, because if we do it later then there are going to be many config files with the old name.

#### 2012-07-18, 11:57:54 - Andras Lasso
assigned_to_id: changed from null to "ungi"

#### 2012-07-18, 14:49:10 - Tamas Ungi
assigned_to_id: changed from "ungi" to null

#### 2012-07-19, 14:48:35 - Tamas Heffter
description: changed from "Currently the transform nam..." to "Currently the transform nam..."

#### 2012-07-19, 14:48:43 - Tamas Heffter
status: changed from "New" to "Accepted"

#### 2012-07-19, 15:41:03 - Tamas Heffter
(In r:1940|plus:1940) Fixed #556: Changed OpenIGTLink server CoordianteFrame attribute to EmbeddedTransformToFrame 

#### 2012-07-19, 15:41:03 - Tamas Heffter
assigned_to_id: changed from null to "heffter"

#### 2012-07-19, 15:41:03 - Tamas Heffter
status: changed from "Accepted" to "Fixed"

#### 2012-07-19, 15:50:34 - Tamas Heffter
(In r:1942|plus:1942) Fixed #556: Commit missing changes 


## #557 Image transform not according to OpenIGTLink protocol
According to the OpenIGTLink protocol, the image transform in the image should be interpreted as the image origin being in the center of the image volume. (Not in the corner.) So image positions are wrong in the 3D viewer when transferred from PLUS to Slicer.
OpenIGTLinkIF module code in Slicer can be checked for the transforms that need to be applied to any image transform that is sent over OpenIGTLink.

#### 2012-07-18, 01:35:03 - Tamas Ungi
(In r:1932|plus:1932) Test #557: A conversion from VTK to OpenIGTLink convention added. It needs to be tested in practice.

#### 2012-07-18, 01:35:03 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2012-07-18, 01:35:03 - Tamas Ungi
status: changed from "New" to "Test"

#### 2012-07-23, 22:35:52 - Tamas Ungi
It has been tested using PlusServer and real hardware. The image showed up in Slicer in the correct position and orientation.

#### 2012-07-23, 22:35:52 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #558 Make SegmentationParameterDialog more robust
While testing fCal with PlusConfiguration_DataCollectionOnly_File and tried to open the segmentation dialog the SegmentationParameterDialog::resizeEvent(QResizeEvent* aEvent) crashed because m_ImageVisualizer was NULL.

If possible, create all vtkObjects in the constructor and initialize them as much as possible (you can set up connections, etc.), and delete them in the destructor. That way it's much easier to make sure that all the pointers point to valid objects.  In general, we should not have Initialize...() methods, because the object is very fragile between the constructor and the Initialize method call. Also, it's not clear if Initialize can be called multiple times or if Initialize shall be called when certain member variables are changed. => These comments are valid for all fCal classes, not just for the segmentation parameter dialog.


#### 2012-07-19, 12:46:28 - Csaba Pinter
All of the Initialize() functions in the fCal classes are for handling the event when a certain toolbox becomes active. Probably it's time to rename these functions.
In the CommonWidgets, ToolStateDisplayWidget is the only one that has something similar, except for the ones mentioned. I'll look into that one.

#### 2012-07-19, 13:13:32 - Andras Lasso
Having methods that are called when on toolbox activation/deactivation is good. It's just have to be renamed to Activate/Deactivate, OnActivate/OnDeactivate, or something similar. I would create all objects in the constructor because NULL checks have to be added in every method call that use objects that are not created in the constructor.

#### 2012-07-19, 13:34:39 - Csaba Pinter
I agree, they are better names. By the way, no objects are created in those functions.

#### 2012-07-20, 16:05:01 - Adam Rankin
(In r:1946|plus:1946) re #558 Changed order of creation of objects so that even if the configuration file is missing required information, the SegmentationParameterDialog will still create the visualization objects.

As a precaution, I put a guard around the pointer access.

#### 2012-07-20, 16:06:05 - Adam Rankin
In general, I have gone back and restructured things to be created at construction time. The only 'Initialize' functions that remain are class internal functions for initializing objects.

#### 2012-07-20, 16:06:12 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2012-07-20, 16:07:05 - Adam Rankin
(In r:1947|plus:1947) re #558 Renaming init functions to be more descriptive of actual behaviour.


## #559 Difficult to change configuration file directory in fCal
In fCal when you try to change the configuration directory then in the folder selector popup some system directory is selected by default. Instead, the current directory should be shown as default (so that you can easily select a subdirectory or parent directory relative to the current device set directory).

#### 2012-07-23, 15:13:42 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-23, 16:01:43 - Adam Rankin
(In r:1952|plus:1952) re #559 Device configuration selection dialog now starts from the last selected directory. Defaults to vtkPlusConfig::GetInstance()->GetDeviceSetConfigurationDirectory()

#### 2012-07-23, 16:01:54 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #560 fCal error messages in simulation modes
When running the simulation modes, error messages appear
* no video message in stylus calibration simulation mode - there should not be any video defined or expected in this scenario, the message is invalid
* number of candidates error in spatial calibration simulation mode - the number of candidates can be significantly higher than the number of defined wires, so this message is invalid. If it refers to the found fiducials (in this case the message is wrong), then it's a problem, but the calibration worked, so it is unlikely

#### 2012-07-25, 14:38:42 - Adam Rankin
I noticed a few error messages in fCal. I'll work on trimming them down to none.

#### 2012-07-25, 14:38:48 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-26, 15:32:07 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-07-26, 15:31:57 - Adam Rankin
(In r:1956|plus:1956) re #560 Cleaning up the visualization for fCal by properly handling missing configuration elements. Gracefully disable rendering and disable toolboxes that require rendering elements.

#### 2012-07-26, 15:43:44 - Csaba Pinter
FYI If you write 'Fixed #560 ...' instead of 'Re #560 ...' in the commit message, Assembla sets it to fixed for you.

#### 2012-07-26, 16:09:49 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2012-07-26, 16:40:51 - Adam Rankin
(In r:1958|plus:1958) Fixed #560 Removed duplicate functionality of enabling/disabling toolboxes. Tied missing image data handling into existing disable method.

#### 2012-07-26, 16:40:51 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-07-26, 17:28:30 - Csaba Pinter
Thanks!


## #561 Objects without valid ObjectToWorld transformation show up in 3D
Only those objects should appear that have a valid ...ToWorld transform.

I connected to SonixTouch w/ GPS and all the tools and the image appeared at the world 0,0,0, when there was no calibration matrix present. The image should not appear without ImageToProbe transform, the stylus (assigned to the Stylustip coordinate frame) without StylustipToStylus and so on. It would be easiest to check the ObjectToWorld transform in the transform repository. If it's invalid, then hide the object.

#### 2012-07-25, 22:30:05 - Andras Lasso
Actually, there are 3 states:
-object position is not known at all (not all the required transforms are available): probably the best is to not show the object
-object position is invalid (all the required transforms are available, but the transform is invalid, e.g., the tracker is out of view): probably the best is to show the object with a different representation (e.g., surface model in red and semitransparent; image with a red border and semitransparent)
-object position is valid: show it normally


#### 2012-07-26, 12:22:56 - Csaba Pinter
I wasn't clear with the 'invalid' transform.
What Andras wrote is the way it was before and it is the expected behavior.

#### 2012-07-26, 16:41:17 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-07-29, 20:20:02 - Adam Rankin
Running fCal with the simulated tracking seems to hide the tools when it should. Continuing to investigate with real tools.

#### 2012-07-30, 14:16:20 - Adam Rankin
Unable to reproduce. Latest version is working as intended.

#### 2012-07-30, 14:16:20 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #562 PlusServer not working in revision 1955. Video stream not sent to Slicer.
PlusServer from revision 1955 didn't work. It didn't send the video stream to Slicer. Switch back to 1933, which was working fine.

#### 2012-07-26, 16:26:36 - Adam Rankin
Incorrect configuration in config file. Added warnings to vtkPlusOpenIGTLinkServer::ReadConfiguration in order to notify users of an invalid configuration.

#### 2012-07-26, 16:26:36 - Adam Rankin
status: changed from "New" to "Fixed"


## #563 RF acquisition initialization through Ulterius sometimes fails
Switching to RF mode acquisition sometimes fails with the following error message:
|ERROR|003.778000| Received frame size (2015232 bytes) doesn't match the buffer size (0 bytes)!|in C:\\Users\\perklab\\devel\\PlusContinuous-bin\\PlusLib\\src\\ImageAcquisition\\SonixVideo\\vtkSonixVideoSource.cxx(303)
(see http://crunch.cs.queensu.ca/CDash/testDetails.php?test=125059&build=8938)

If we restart the acquisition then everything seems to work fine.

It may be possible that the this->Ult.getDataDescriptor((uData)this->AcquisitionDataType, this->DataDescriptor) method returns an invalid DataDescriptor (that results in a computed buffer size=0) if it is called too quickly after the previous ulterius call.

A potential solution could be to wait a bit and retry a few times the getDataDescriptor call if the detect the computed buffer size is 0.


#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:30:59 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-06-25, 12:22:45 - Adam Rankin
I haven't seen this happen in quite some time, I'd like to mark it as closed and then re-open it if the issue re-occurs.

#### 2013-06-25, 12:47:55 - Andras Lasso
OK

#### 2013-06-25, 13:48:25 - Adam Rankin
Invalid: unable to reproduce

#### 2013-06-25, 13:48:25 - Adam Rankin
status: changed from "New" to "Invalid"


## #564 Wire names don't disappear when canceling Spatial calibration
When the user clicks Cancel, the wire names should disappear

#### 2012-07-26, 18:59:19 - Adam Rankin
(In r:1965|plus:1965) Fixed #564 Wire names and result set properly hide themselves upon completion of segmentation.

#### 2012-07-26, 18:59:19 - Adam Rankin
status: changed from "New" to "Fixed"


## #565 Set speed of sound from config file
Some artificial phantoms have a gel of very different speed of sound. We need to be able change this setting through Ulterius and then prepare separate config files for each phantom.

#### 2012-07-27, 14:31:35 - Tamas Ungi
The Ulterius parameter to set is 'soundvelocity'.

#### 2012-07-27, 14:34:29 - Tamas Ungi
assigned_to_id: changed from null to "Tamas Ungi"

#### 2012-07-27, 15:07:15 - Tamas Ungi
(In r:1967|plus:1967) Fixed #565: Parameter 'SoundVelocity' added to the SonixVideoSource config tag.

#### 2012-07-27, 15:07:15 - Tamas Ungi
status: changed from "New" to "Fixed"


## #566 Bmode image is not received when using shared memory for the second time
If we connect to exam using Ulterius with *UseSharedMemory* set to true, and if the application crashes, in the second connection we cannot get Bmode image from the data collector. The issue resolves if we restart the exam software.

#### 2012-07-27, 21:51:19 - Siavash Khallaghi
description: changed from "If we connect to exam using..." to "If we connect to exam using..."

#### 2012-07-27, 21:58:46 - Andras Lasso
This problem is in the Exam software and/or Ulterius (all resources are released when the Plus application process is terminated, so if there is any unreleased resource then it must be in the Exam software).

It's quite unlikely that Ultrasonix is going to invest any time into fixing problems in Ulterius 5.7, as Ulterius 6.0 is a complete rewrite and still requires a lot of work.

The problem should be reported on the Ultrasonix research forum (and the URL of the posting should be included in this ticket as a comment).


#### 2012-07-27, 22:00:26 - Andras Lasso
Siavash, please follow-up on this with Ultrasonix.

#### 2012-07-27, 22:00:26 - Andras Lasso
assigned_to_id: changed from null to "siavashk"

#### 2012-07-27, 22:10:10 - Siavash Khallaghi
status: changed from "New" to "Accepted"

#### 2012-07-27, 22:10:51 - Siavash Khallaghi
You can follow up on this in the Sonix research forum:
http://research.ultrasonix.com/viewtopic.php?f=6&t=845

#### 2012-08-08, 23:26:55 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2012-08-08, 23:30:29 - Andras Lasso
This seems to be low priority (Ultrasonix replied on the forum that they cannot reproduce the problem and then nobody from UBC followed up with more detailed instructions or description of the problem).

#### 2013-05-07, 22:04:52 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2013-05-15, 19:59:09 - Adam Rankin
assigned_to_id: changed from "siavashk" to null


## #567 Control frame size through Ulterius
If different image size is acquired from an Ultrasonix machine between calibration and data collection. The calibration will be invalid. To prevent such accidents, the image size setting could be defined in the config file, and set through Ulterius. I don't know if it's possible yet.

#### 2012-08-04, 01:04:44 - Tamas Ungi
I couldn't find this option without doubt in the imaging presets config file of the exam software. Somebody should ask Ultrasonix.

#### 2012-08-04, 01:43:56 - Andras Lasso
One possible way to find out before asking in the research forum: make a copy of all files in the exam software directory, start the exam software, change the image size, exit exam software, compare all files to the backed up files. If there is any difference between the files it may be the parameter that we should set through ulterius.

#### 2012-08-22, 16:42:53 - Adam Rankin
assigned_to_id: changed from null to "ungi"

#### 2012-08-22, 16:42:53 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-09-05, 17:13:06 - Csaba Pinter
Updating tickets (#517, #567, #543)



#### 2012-09-05, 17:13:06 - Csaba Pinter
milestone_id: changed from "Release Plus-1.5.4" to "Release Plus-1.5.5"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:31:01 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-12-03, 16:43:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2015-06-06, 13:41:29 - Andras Lasso
It is now possible to get the ImageToTransducer transform from Ulterius that accounts for this.

#### 2015-06-06, 13:41:29 - Andras Lasso
status: changed from "New" to "Fixed"


## #568 Show phantom model does not seem to do anything
With this config file http://www.assembla.com/spaces/plus/documents/bVtsmG4A4r4BfvacwqjQYw/download/bVtsmG4A4r4BfvacwqjQYw
after I switch to 3D view and turn on/off 'Show phantom model' option nothing happens, the phantom model and wires are always displayed.

#### 2012-08-09, 14:30:02 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-08-09, 14:30:03 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-09, 14:37:58 - Adam Rankin
When I loaded that config file, I received two errors in fCal related to a missing detail in the <fCal ... /> section of the config.

I added
<fCal
    PhantomCoordinateFrame='Phantom'
   ....
/>

to the config file and it worked as expected.

#### 2012-08-09, 14:37:58 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-08-09, 15:44:31 - Andras Lasso
OK, I see. Unfortunately there is one problem with this implementation: a DisplayableObject cannot identified by its ObjectCoordinateFrame. Several objects may refer to the same coordinate frame and you don't know which of them is the specific one that you want to show/hide.

If we want to identify an element then we have to define an 'Id' attribute. Then you can use the find child element by Id method to get the element.

Could you change the implementation to something like the following?

<DisplayableObject Id='Phantom' Type='Model' ObjectCoordinateFrame='Phantom'...      />
...
<fCal PhantomDisplayableObjectId='Phantom' .... />



#### 2012-08-09, 15:44:31 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2012-08-09, 18:15:56 - Csaba Pinter
Makes sense, I like the idea

#### 2012-08-09, 19:56:37 - Adam Rankin
Phew because I just started testing!

#### 2012-08-09, 19:56:37 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-08-09, 20:17:47 - Adam Rankin
(In r:1984|plus:1984) Fixed #568 DisplayableObjects now have an ID attribute that allow unique lookup by ID.

Changed phantom model hide/show to use new phantom ID functionality.

#### 2012-08-09, 20:17:47 - Adam Rankin
status: changed from "Test" to "Fixed"


## #569 Reconstructed volume in fCal does not appear in correct position
With this config file http://www.assembla.com/spaces/plus/documents/bVtsmG4A4r4BfvacwqjQYw/download/bVtsmG4A4r4BfvacwqjQYw
acquire a couple of frames and do a volume reconstruction. The model does not appear at the same position where the image is sweeped.

#### 2012-08-08, 23:56:52 - Andras Lasso
image:c5YWA04Bqr4BoTacwqjQXA


#### 2012-08-08, 23:56:52 - Andras Lasso
Attachment added: "screenshot-1344470027165.jpg"

#### 2012-08-09, 03:59:37 - Tamas Ungi
This is an interesting issue. Last time I imported a reconstructed volume in Slicer, it didn't appear in the correct position either. I thought it was a RAS-LPS conflict, and I didn't really care. But we are planning to use reconstructed volumes for needle navigation in the near future, so this has to be fixed.

#### 2012-08-09, 04:17:18 - Andras Lasso
When you load the volume into Slicer then it's an RAS-LPS conversion only, which has to be fixed in Slicer (see http://www.na-mic.org/Bug/view.php?id=2173).

The volume reconstruction looks OK, most likely just the reconstructed surface model is represented in an incorrect coordinate system. It used to work correctly, so probably it's a regression that has been introduced recently.

#### 2012-08-09, 16:13:27 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-22, 15:44:22 - Adam Rankin
(In r:2007|plus:2007) Fixed #569

Essentially, the reconstructed volume is created in the reference object coordinate frame. This was fine when the world coordinate frame was the same as the reference coordinate frame (as is the case in most config files). However, in the given config file the world coordinate frame is 'Tracker' which breaks the visualization of the volume.

The solution was to create a displayable object attached to a coordinate frame to correct the missing transform. Now, simply create a displayable object of type polyData in the reference coordinate frame and assign it an ID.

Example:
<DisplayableObject Type='PolyData' ObjectCoordinateFrame='Reference' Id='Volume'/>

Then, in the config file section 'VolumeReconstruction' you must tell it which ID is used to display the reconstructed volume.

Example:
<VolumeReconstruction
    ...
    VolumeDisplayableObjectId='Volume'
    ...
</>

#### 2012-08-22, 15:44:22 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-08-22, 18:05:58 - Adam Rankin
(In r:2008|plus:2008) Re #569

Restructuring config files so fCal specific information is in the fCal tag.

Changed vtkDisplayableModel to not require a filename.


## #570 Micron Tracker - Markers go in and out of view rapidly
The tool state goes in and out of view rapidly. The status message flickers between 'Ok' and 'Missing'. I am confident that the markers are being tracked without the jitter. I tested with the previous version of fCal (most probably, June release) and this issue does not occur.

I tried changing the Image Acquisition 'Buffer Size' and fCal 'RecordingIntervalMs' and 'MaxTimeSpentWithProcessingMs' parameters.

#### 2012-08-10, 14:39:03 - Andras Lasso
Can you reproduce the problem with the vtkDataCollectorTrackingTest.exe test application (https://www.assembla.com/spaces/plus/wiki/Diagnostic_and_test_tools)?


#### 2012-08-16, 14:37:31 - Vikas Revanna Shivaprabhu
I was not able to reproduce the issue with vtkDataCollectorTrackingTest.exe. Tracking is stable with this application..


#### 2012-08-16, 15:02:23 - Andras Lasso
OK. Then set the log level in fCal to debug, reproduce the problem, and attach the generated log file to this ticket. The log file is in ...\\Output\\<date>_<time>_PlusLog.txt .

#### 2012-08-16, 15:22:59 - Vikas Revanna Shivaprabhu
I am sorry, I tested vtkDataCollectorTrackingTest.exe with the previous version of PLUS when I said tracking is stable. I now tested with the latest version of PLUS, and the issue persists in vtkDataCollectorTrackingTest. Tracking flickers a lot. 

#### 2012-08-16, 15:34:09 - Andras Lasso
Set the log level to debug (--verbose=4) and attach the log produced by the vtkDataCollectorTeackingTest. Send the logs generated by both the current and old (that works as expected). What is the SVN revision of the old version that works well?

#### 2012-08-16, 15:56:36 - Vikas Revanna Shivaprabhu
file:d1jzRo57Or4y1MacwqjQYw
Log file of vtkDataCollectorTrackingTest, latest version of PLUS

#### 2012-08-16, 15:56:36 - Vikas Revanna Shivaprabhu
Attachment added: "081612_114357_PlusLog-Latest.txt"

#### 2012-08-16, 15:57:31 - Vikas Revanna Shivaprabhu
file:awgEIe57Sr4AFYacwqjQYw
Log file of vtkDataCollectorTrackingTest, PLUS build version 1715 

#### 2012-08-16, 15:57:31 - Vikas Revanna Shivaprabhu
Attachment added: "081612_114829_PlusLog-Version1715.txt"

#### 2012-08-16, 15:59:35 - Vikas Revanna Shivaprabhu
The PLUS build version that works well is 1715. Would you like to give a version number of a specific file ?

The error message that is logged is produced after I hit the close button. 

#### 2012-08-16, 18:02:10 - Andras Lasso
(In r:1992|plus:1992) re #570: Changed logging so that by default the log level defined in the PlusConfig.xml file will be used (if --verbose=... parameter is not used). Fixed SetLogLevel setting: a few places the default value was set (the log level was set before parsing the command line)

#### 2012-08-16, 18:02:10 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-08-16, 18:02:16 - Andras Lasso
I don't see any change between 1715 and the current version that would explain the jumping. I've added some more detailed loggin, so please update Plus, set the log level to 5, and send the logs again.

#### 2012-08-16, 18:02:16 - Andras Lasso
assigned_to_id: changed from "lassoan" to null

#### 2012-08-16, 18:48:41 - Vikas Revanna Shivaprabhu
file:d_xfiS59ir4ysZacwqjQXA
Log file of vtkDataCollectorTrackingTest, latest version of PLUS, verbose=5

#### 2012-08-16, 18:48:41 - Vikas Revanna Shivaprabhu
Attachment added: "081612_144556_PlusLog.txt"

#### 2012-08-16, 18:51:49 - Vikas Revanna Shivaprabhu
Hope this helps


#### 2012-08-16, 19:14:22 - Andras Lasso
(In r:1993|plus:1993) re #570: Fixed MicronTracker tool status setting

#### 2012-08-16, 19:14:22 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-08-16, 19:14:55 - Andras Lasso
I've committed a fix, please check now.

#### 2012-08-16, 19:14:55 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-08-16, 19:23:54 - Vikas Revanna Shivaprabhu
That fixed it. The tracking is now stable. Thanks.

#### 2012-08-16, 19:42:55 - Vikas Revanna Shivaprabhu
I am now able to perform capturing and volume reconstruction using fCal. Thanks a lot for your help.

#### 2012-08-16, 19:47:52 - Andras Lasso
(In r:1994|plus:1994) re #570: Changed logging so that by default the log level defined in the PlusConfig.xml file will be used (if --verbose=... parameter is not used). Fixed SetLogLevel setting: a few places the default value was set (the log level was set before parsing the command line)

#### 2012-08-16, 22:09:08 - Andras Lasso
Very good. I've cleaned up the MicronTracker (removing reference handling, changing logging, unused methods, see #348).
It would be nice if you could check if still everything is OK for you.

#### 2012-08-16, 22:09:08 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #571 Clean up MicronTracker interface classes
MicronTracker tracking seems to work fine, but the interface classes (PlusLib\\src\  racking\\MicronTracking\\Utils) are implemented very poorly. Need a review and clean-up including:
* VERY IMPORTANT PROGRAMMING NOTE in MicronTrackerInterface.cpp
* check ownedByMe handling (probably it should be set to false if the handle is not created by new)
* consistent return values (sometimes int, sometimes bool; sometimes non-zero means error, sometimes 0, false)
* check timestamp computation (mtGetLatestFrameTime(cam) function can provide accurate enough without filtering)

There also seem to be a larger time lag in the tracking in Plus than in the MicronTracker CPP demo.

#### 2012-08-17, 18:02:00 - Andras Lasso
description: changed from "MicronTracker tracking seem..." to "MicronTracker tracking seem..."

#### 2012-08-17, 18:03:38 - Andras Lasso
(In r:2001|plus:2001) re #571: Added build option to test the accuracy of the timestamps provided by the MicronTracker device

#### 2012-08-17, 18:03:38 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:59:12 - Adam Rankin
assigned_to_id: changed from "lassoan" to null


## #572 FakeTracker crashes in Release mode
When connecting to fake tracker (e.g. using the configuration named 'Simulation mode for Stylus calibration') in Release mode, it crashes. In Debug mode, it works fine.

#### 2012-08-18, 12:06:04 - Andras Lasso
You can try to debug it with the Application Verifier or with DevPartner Studio.

#### 2012-08-20, 14:39:56 - Csaba Pinter
priority: changed from "Normal (3)" to "High (2)"

#### 2012-08-20, 15:01:31 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-20, 15:01:35 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-20, 15:47:31 - Adam Rankin
(In r:2004|plus:2004) Fixed #572 yeah... oops? Fixed out of bounds memory access error.

Also cleaned up initialization of a few member variables and moved in-constructor initialization to constructor list init.

#### 2012-08-20, 15:47:31 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-08-20, 16:54:30 - Adam Rankin
(In r:2005|plus:2005) Re #572 Smart pointer constructor instead of base object constructor


## #573 Make sure the L14-5 probe model is correctly oriented in the 3D view
According to discussions with Elvis Chen, the STL model may be not oriented well in fCal's 3D view.
It is necessary to check if the L14-5 probe model is oriented the good way (the marked side points to the same side of the phantom in reality and in the fCal).
If it is rotated, the ModelToObject transform needs to be changed in every config file that shows the L14-5 probe.

#### 2012-08-20, 15:47:46 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-20, 18:07:34 - Adam Rankin
(In r:2006|plus:2006) Fixed #573 Corrected orientation and translation of L14-5 Probe configuration entries.

New transform is
-1 0 0 29.7
0 -1 0 1.5
0 0 1 -14
0 0 0 1

#### 2012-08-20, 18:07:34 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #574 Possible memory leak - crash during vector resize after connecting/disconnecting multiple times during volume reconstruction
Experimenting with parameters in the volume reconstruction file from #569 when a crash occurred.

Will attempt to repro later.

#### 2012-08-22, 16:38:31 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-22, 20:21:41 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-22, 21:13:32 - Adam Rankin
Confirmed. Able to repro. std::bad_alloc hit.

Will investigate.

#### 2012-08-23, 20:53:52 - Adam Rankin
(In r:2014|plus:2014) Fixed #574

Certain toolboxes were not overriding the reset function of the AbstractToolbox. This was causing memory leaks as allocated memory was not cleaned up when connect/disconnect actions were invoked.

#### 2012-08-23, 20:53:52 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #575 Remove image to reference transformation from reconstructed volume. Allow the displayableObject mechanism to place the volume in *any* coordinate frame
Currently the reconstructed volume is mapped back to the reference coordinate system. This forces the displayable object configuration to always use the reference coordinate system. By disconnecting this hard coded transformation, we may put the reconstructed volume in any coordinate system.

#### 2012-08-22, 15:46:40 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-08-22, 16:23:22 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #576 Deprecate and remove the GetDisplayableObjectsByCoordinateFrame functionality of vtk3DObjectVisualizer
Deprecate and remove and use GetObjectById instead.

Modify the fCal tag in the configuration files to properly define unique IDs of displayable objects to work with.

#### 2012-08-22, 16:25:58 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-22, 16:43:09 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.5.4"

#### 2012-08-22, 20:16:03 - Adam Rankin
(In r:2009|plus:2009) Fixed #576

Function to access objects by coordinate frame has been removed. Can now only access by ID.

ID fields added to fCal section parameters and config files updated accordingly.

#### 2012-08-22, 20:16:03 - Adam Rankin
status: changed from "New" to "Fixed"


## #577 Volume reconstructor algorithm run flag is not properly reset when the device set is disconnected/connected.


#### 2012-08-23, 20:54:27 - Adam Rankin
Fixed by implementing the Reset function on VolumeReconstructionToolbox

#### 2012-08-23, 20:54:27 - Adam Rankin
status: changed from "New" to "Fixed"


## #578 Add support for CHRobotics MARG sensor tracker
Add support for CHRobotics CHR-UM6 sensor as a tracking device.

#### 2012-08-23, 23:17:49 - Andras Lasso
(In r:2017|plus:2017) re #578: Started implementation of CHRobotics tracker (WIP)

#### 2012-08-24, 00:56:49 - Andras Lasso
(In r:2018|plus:2018) re #578: Implementation of CHRobotics tracker (WIP)

#### 2012-08-24, 12:20:26 - Andras Lasso
(In r:2019|plus:2019) re #578: Fixed build errors

#### 2012-08-24, 21:44:30 - Andras Lasso
(In r:2027|plus:2027) re #578: ChRobotics firmware is queried and definition is loaded from file (WIP)

#### 2012-08-29, 20:32:41 - Andras Lasso
(In r:2041|plus:2041) re #578: Euler angle reading from ChRobotics works (WIP)

#### 2012-08-29, 21:04:38 - Andras Lasso
(In r:2042|plus:2042) Test #578: Cleaned up ChRobotics interface

#### 2012-08-29, 21:04:38 - Andras Lasso
status: changed from "New" to "Test"

#### 2012-08-30, 19:44:39 - Andras Lasso
status: changed from "Test" to "Fixed"


## #579 Pattern recognition fails using the fCal 2.0 simulation configuration file
Need to be fixed so that it can serve as a good example

#### 2012-08-25, 17:54:17 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-08-29, 19:55:02 - Adam Rankin
(In r:2040|plus:2040) Fixed #579 Captured data using fCal phantom 2.0

Updated code to reduce the quantity of warning output.

#### 2012-08-29, 19:55:02 - Adam Rankin
status: changed from "New" to "Fixed"


## #580 US parameters to be stored in mha files
When we record a tracked frame list, some ultrasound imaging parameters might be forgotten, and they would be important in later processing. Depth, soundvelocity, sector size, BMode/RF etc. These extra parameters could be added to the mha file headers.

#### 2012-08-31, 11:31:55 - Andras Lasso
We already store most of these parameters in the config file that is saved along with each mha file. The XML format is more flexible, better structured, easier to edit, and can be directly used to acquire images again with the same settings. If we keep the XML then saving into the mha is redundant (and it will be unclear which info will be used if you do some processing, etc.). If we don't save an XML then we may lose some details that are hard to save into (tag=value) format.

We might save the xml line-by-line into the mha header, e.g.,
AcquisitionConfigXml_001=<PlusConfig...>
AcquisitionConfigXml_002= <DataCollection...>
...
However, this way we may need an additional step to extract the XML to reuse for new acquisitions and retrieval of parameters is quite complex (require mha parsing, composition of the xml string, xml parsing, and retrieval params from the xml tree).

Do you have any specific use case?


#### 2012-08-31, 11:51:16 - Tamas Ungi
My case is the following: I recorded a tracked frame list with a config file where the depth was not set explicitly (depth=-1). Later, I wanted to process this recorded data, but I forgot what depth was used on the US machine. In the saved config file I just see depth=-1, which doesn't help.

I am also recording RF data for a tissue characterization project. I assume they will need not only the depth but all the other parameters too, that we almost never set explicitly in the config file.

#### 2012-08-31, 12:28:38 - Andras Lasso
The current solution to both use cases is the following:
* If the parameter (e.g., depth) can be specified for the US device: the user should specify it in the XML, the video source will use it for initializing the acquisition and will be also saved in the output.
* If the parameter cannot be specified for the US device but it can be obtained from the US device: the video source should obtain it and save it to the XML when WriteConfiguration() is called (see an example in the vtkBkProFocusVideoSource.cxx: upon Connect() the class collects some info from the US system and sets it into the RF processor object and it is also saved into the XML in WriteConfiguration()).
* If the parameter cannot be specified for the US device and cannot be obtained from the US device: the user should specify it in the XML, it may be used within the application, and will be saved in the XML as well.

Depth=-1 is a poor practice. All the parameters that can be specified for the US device should be specified explicitly to allow exact reproduction of the acquisition later.

If there is a way to query the imaging depth from the US device then the video source should do it (probably in Connect()). Would this solve your problem?


#### 2012-08-31, 14:55:01 - Tamas Heffter
Just a few comments: 


* We already do something similar in vtkSonixVolumeReader (I needed it for the MUSiiC library), we basically just save all the imaging parameters to the tracked frame as a custom frame field and read it at PlusUsMessage::SetTrackedFrame method if available: 


~~~~
trackedFrame.SetCustomFrameField('SonixTransmitFrequency', strTransmitFrequency.str()); 
trackedFrame.SetCustomFrameField('SonixSamplingFrequency', strSamplingFrequency.str()); 
...
 if ( this->m_TrackedFrame.IsCustomFrameFieldDefined('SonixTransmitFrequency') )
{
...
}
~~~~

 
* The other thing in my mind is unfortunately you cannot force the user to use the same depth you have in the config file, because you can override that setting from the US console (and in the OR looks like they do it pretty often). We can still check the depth every time we receive a frame and either modify the config file (you can have different depth recordings, so it's not a good practice) or save it to each tracked frame  (since you can change the imaging parameters any time, maybe this would be the most adequate solution). 


#### 2012-08-31, 14:59:32 - Csaba Pinter
It is also not good practice to change the image settings _in course_ of image acquisition, because then the captured data becomes inconsistent.
I would have the application stop the recording process when an imaging parameter is changed during capturing, and allow saving the data collected so far along with a configuration file containing the paramterers present at the time the user started the recording.

#### 2012-08-31, 15:08:23 - Tamas Heffter
We used to have a plan to fulfill this inconsistent data in the buffer problem by checking the largest image size in the buffer and save all the images with that size (with a black frame around it)  with the original frame size as an custom frame field (so, on read we can crop the image to the original size if we want). This is a step forward to the multiple streams approach (#461). But actually the image size won't change if we change the depth, however it could change if we change the display parameter in the admin (full screen vs normal or something like that). 

#### 2012-08-31, 15:35:08 - Andras Lasso
There are two separate discussions:
1. Where to store data. Probably we all agree that we should keep storing per-frame data in the metafile and all constant data in the XML config file.
2. What data to acquire: what data (depth, sector size, etc.) to acquire, what frequency (constant for the sequence or per-frame), on what device.

@ungi:
Do you have any issue with where we store the data (1)?
Do you have any specific need for acquiring more data (2)? If yes, please specify what data you need, with what frequency, on which imaging device.


#### 2012-08-31, 15:48:40 - Tamas Ungi
1.
Yes, we all agree that parameters that don't change during image acquisition should be stored in the XML and parameters that change should be stored in the mha with custom fields for each frame.

2.
Although most US acquisition cases could theoretically be accomplished with fixed imaging parameters, we cannot guarantee that the depth knob won't be turned during acquisition. Along with all the other parameters that have knobs on the US console. Focus, gain, etc. So all these should ideally be stored along with the frames.


#### 2012-08-31, 16:53:50 - Andras Lasso
Of course it would be nice to always store all information, but the implementation workload can be significant and collecting lots of data may impact the performance. So, we can just deal with very specific needs (specific data, frequency, imaging device).

So, I close this ticket for now and you can enter separate tickets for any specific needs (such as you did for depth in #582).


#### 2012-08-31, 16:53:50 - Andras Lasso
status: changed from "New" to "Invalid"


## #581 PlusApp automatic GUI tests sometimes fail
By andreistate on Aug 31 @ 02:39am
PlusApp-bin\\BuildAndTest.bat can fail even though generated code is likely fine
The above batch file is normally run from a command window. On a system with more than one display monitor, if that command window is located on a non-primary monitor, tests 1, 3, and 4 fail, possibly because the program windows open on the same non-primary monitor the command window is on.

Second issue; independently of the number of monitors (so even with a single monitor), if one uses a non-Wndows-7 desktop theme (such as Windows Classic), at a minimum tests 1 and 4 will fail.

This should help reproduce the above behavior:

C:\\Users\\andrei\\devel\\PlusExperimental-bin\\bin\elease>PlusVersion.exe
|INFO|000.000000| PlusLib version: 1.5.3
|INFO|000.000000| Plus SVN revision: 2033
|INFO|000.018000| Build mode: Win32
|INFO|000.058000| Supported tracker devices:
- ChRobotics (ver: Plus-1.5.3)
- FakeTracker (ver: Plus-1.5.3)
- OpenIGTLinkTracker (ver: OpenIGTLink v@PLUS_OPENIGTLINK_VERSION)
- SavedDataset (ver: Plus-1.5.3)

|INFO|000.259000| Supported video capturing devices:
- Epiphan (ver: Plus-1.5.3)
- NoiseVideo (ver: Plus-1.5.3)
- OpenIGTLinkVideo (ver: OpenIGTLink v@PLUS_OPENIGTLINK_VERSION)
- SavedDataset (ver: Plus-1.5.3)
- UsSimulator (ver: Plus-1.5.3)


#### 2012-08-31, 14:14:37 - Andras Lasso
By Csaba Pinter on Aug 31 @ 09:56am
Unfortunately we have lots of issues with the GUI tests and it is very unreliable. I applied many fixes (mostly workarounds for problems they claimed to fix), but they only partially help apparently.
Although the project owner keeps telling me (in the answers to my emails) that the Sikuli project is still alive, the website and the environment has not been touched since last September.
Maybe it is time to discuss whether we should continue using Sikuli.

By Andras Lasso on Aug 31 @ 10:11am
@pinter: Can you drop an email to the Sikuli guys, asking about solutions for the specific problems we have?
* The lack of robustness in text recognition seems to be a Sikuli issue that we could report.
* Are the multi-screen issues caused by a Sikuli bug that we should report (or could be an enhancement request for a multi-screen Find function)?
* Can we report the theming related problem to Sikuli or we should implement it differently (using OCR instead of finding graphics, adding alternative graphics, increase the tolerance...)?

#### 2012-08-31, 14:16:08 - Csaba Pinter
* Inability to perform when screen is locked under Windows

#### 2012-10-09, 15:45:20 - Csaba Pinter
We reached the decision to stop using Sikuli for GUI testing.

What shall we do with this issue:
* Leave the tests in PlusApp for the time being
* Remove them altogether
?

#### 2012-10-09, 18:25:25 - Andras Lasso
I've talked to Sonia about it. She doesn't have any update on Sikuli, but Kitware pushes the QtTesting project instead, so if we want use a tool that is properly support then probably we should try QtTesting.

I would suggest not to remove QtTesting until we add similar tests using QtTesting.

#### 2012-10-09, 18:26:34 - Csaba Pinter
Agreed.

I create a ticket for it then.

#### 2012-10-09, 18:32:44 - Csaba Pinter
See #614

#### 2012-10-09, 18:32:44 - Csaba Pinter
status: changed from "New" to "Invalid"


## #582 Adaptation to parameter changes in PlusServer
The depth is frequently changed during US-guided interventions. Since we have different ImageToProbe matrices for each depth, stored in different config files, the PlusServer should be restarted now at each change in depth. This takes unacceptably long time during interventions.

A possible solution: ImageToProbe matrices could be stored for every possible depth in one config file. PlusServer could always apply the one for the actual depth parameter.

#### 2012-08-31, 16:06:02 - Tamas Heffter
I agree, plus server should be able to choose between different configuration files, and more over, it should send the transform repository persistent transforms as a transform repository message (or within the tracked frame message) to the connected clients if they requested. 

#### 2012-08-31, 16:23:28 - Tamas Ungi
How would choosing between config files work?
I only thought of adding extra attributes to matrices in the transform repository. As we store now date, time and error, we could store depth, zoom, and frequency (and any other parameters that may change image geometry). And PlusServer could choose between these (from one transform repository).

If these attributes are not given, we can give a warning, and just send the any of the given ImageToProbe transforms for backwards compatibility. (In old config files, only one is given anyways.)

#### 2012-08-31, 16:49:42 - Andras Lasso
The need is clear: allow changing image depth without connect/reconnect.

I would suggest to use a different image stream for each depth (or any other configuration setting), because it is very hard (if not impossible) to synchronize multiple pipelines where information can abruptly change at anytime (you cannot interpolate between abrupt changes, so an infinitely small time difference can cause a large position change, etc.).

We need to have a 'master' configuration file anyway, so we can just as well (and for simplicity we should) store all information related to a procedure in one XML file.

So, the proposed implementation:
* Have one XML config file.
* Define multiple output streams for the imaging device: one for each supported depth. Example: UsImageDepth40, UsImageDepth50, UsImageDepth60.
* Define a separate calibration matrix for each stream. Example: UsImageDepth40ToProbe, UsImageDepth50ToProbe, UsImageDepth60ToProbe.
* Implement a 'switcher' device that can automatically redirect multiple _synchronized_ input streams to one virtual output stream. There wouldn't be any mixing, synchronization, etc. just pure forwarding, so having discrete switches would not cause any problem. The output of the switcher could replace the different inputs (e.g., UsImageDepth40ToTracker -> UsImageToTrackerl; either defined manually or performed automatically), so a single image/transform name could be broadcasted.


~~~~


<DataCollection ... >

  <Device Type='Ascension3DG' BufferSize='500' Frequency='50' LocalTimeOffset='0.0' AveragedItemsForFiltering='20' >
    <Stream Name=”Tracker”>
      <Tool Name='Probe' PortName='0' />
      <Tool Name='Reference' PortName='1' />
      <Tool Name='Stylus' PortName='2' />
    </Stream>
  </Device>

  <Device Type='SonixVideo' >
    <Stream Name=”AxialPlaneDepth40” Depth='40' ... />
    <Stream Name=”AxialPlaneDepth50” Depth='50' ... />
    <Stream Name=”AxialPlaneDepth60” Depth='60' ... />
    <Stream Name=”SagittalPlanePlane” ... />
  </Device>

  <Device Type='Switcher' >
    <Stream Name=”AxialPlane” ... >
      <Input Source='AxialPlaneDepth40' />
      <Input Source='AxialPlaneDepth50' />
      <Input Source='AxialPlaneDepth60' />
    </Stream>
  </Device>

</DataCollection>

<CoordinateDefinitions>
  <Transform From='AxialPlaneDepth40' To='Probe'   Matrix='1 0 0 -410 ...'    />    
  <Transform From='AxialPlaneDepth50' To='Probe'   Matrix='1 0 0 -710 ...'    />    
  <Transform From='AxialPlaneDepth60' To='Probe'   Matrix='1 0 0 -910 ...'    />    
</CoordinateDefinitions>


~~~~



#### 2012-08-31, 16:52:14 - Tamas Heffter
This approach sounds good to me, but not sure Transform repository is ready for these custom fields (it needs to now which transform to use). 
What if we add another xml structure to store all the different calibration results and on pre-defined settings change (like depth) we just update the current transform repository with the right calibration file.  For this, data collector should get a notification to update transform repository (and it needs to have access to transform repository) with transform selected. 

~~~~
<CalibratedCoordinateDefinitions>
    <Transform From='Image' To='TransducerOriginPixel'
      Matrix='1 0 0 -410 0 1 0 5 0 0 1 0 0 0 0 1'
      Date='2011.12.06 17:57:00'
      DepthMm='50'
    />
    <Transform From='Image' To='TransducerOriginPixel'
      Matrix='1 0 0 -410 0 1 0 5 0 0 1 0 0 0 0 1'
      Date='2011.12.06 17:57:00'
      DepthMm='60'
    />
</CalibratedCoordinateDefinitions>
~~~~

  

#### 2012-08-31, 16:59:23 - Andras Lasso
It would make the programs extremely complicated if a transform could not be defined by its (from,to) name.

Instead of changing the transform repository we can just let the switcher update the transform names. The switcher can easily do that by creating an alias in the transform repo: AxialPlaneToAxialPlaneDepth40=[identity].


#### 2012-08-31, 17:14:00 - Tamas Heffter
I like Andras' approach, however it will take a while we could implement it (it depends on the stream based data collection). 
@pinter Do you have any estimate when could you finish the task #461? 

#### 2012-08-31, 18:09:48 - Csaba Pinter
It all depends on the priorities. Now my focus is not on Plus.
If it is needed for your work, maybe you could contribute.

#### 2012-09-25, 15:46:00 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.0"

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-11, 21:24:00 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-01-29, 19:29:45 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-06-04, 02:04:31 - Adam Rankin
priority: changed from "Normal (3)" to "Highest (1)"

#### 2013-06-04, 02:04:43 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-06-05, 18:00:36 - Adam Rankin
(In r:2841|plus:2841) re #582 Ensuring proper destruction of data collector when a new device set is constructed

#### 2013-06-05, 18:01:30 - Adam Rankin
(In r:2842|plus:2842) re #582 vtkSonixVideoSource is no longer a singleton. It still behaves like a singleton due to static member variable pointing to the latest created instance, but this allows a future implementation of the SDK to enable non-singleton behaviour

#### 2013-06-05, 18:24:27 - Adam Rankin
(In r:2843|plus:2843) re #582 correct param name for depth and removing garbage code

#### 2013-06-05, 18:33:41 - Adam Rankin
(In r:2844|plus:2844) re #582 checking probe id to enable plane switch detection

#### 2013-06-05, 18:48:09 - Adam Rankin
(In r:2845|plus:2845) re #582 correct parameter lookup when probeid changed

#### 2013-06-05, 19:00:55 - Adam Rankin
(In r:2846|plus:2846) re #582 correctly initializing variable, investigating timeout when requesting param details

#### 2013-06-05, 21:01:42 - Adam Rankin
summary: changed from "Adaptation to depth changes in PlusServer" to "Adaptation to parameter changes in PlusServer"

#### 2013-06-11, 19:17:12 - Adam Rankin
(In r:2852|plus:2852) re #582 typo in configuration toolbox

#### 2013-06-18, 18:39:31 - Adam Rankin
(In r:2862|plus:2862) re #582 replacing device id with channel id

adding reply status reporting in igt messages

fixing crash in plus server

#### 2013-06-18, 21:02:46 - Adam Rankin
(In r:2864|plus:2864) re #582 enabling scan plane switch handling for bk pro device

#### 2013-06-18, 23:09:24 - Andrey Fedorov
(In r:2865|plus:2865) re #582 scan plane switching in the bk, bug fixes and enabling autoUpdate

#### 2013-06-24, 19:04:11 - Adam Rankin
(In r:2868|plus:2868) re #582 adding result handling to channel ID request command and preventing disc capture device from returning its fake output channel as a valid output channel

#### 2013-06-24, 19:36:15 - Adam Rankin
(In r:2869|plus:2869) re #582 adding custom attribute concept to channels

#### 2013-06-24, 20:00:39 - Adam Rankin
(In r:2870|plus:2870) re #582 fixing linux build

#### 2013-06-25, 01:43:15 - Adam Rankin
(In r:2871|plus:2871) re #582 readability of volume reconstruction command

#### 2013-06-27, 17:09:28 - Adam Rankin
(In r:2876|plus:2876) re #582 second half of bk plane depth switching, not sure why I didn't commit this earlier

#### 2013-06-28, 18:14:14 - Adam Rankin
(In r:2880|plus:2880) re #582 adding exception handling to bk device

#### 2013-06-28, 18:22:07 - Adam Rankin
(In r:2881|plus:2881) re #582 forcing init of parameters

#### 2013-06-28, 18:27:04 - Adam Rankin
(In r:2882|plus:2882) re #582 reducing error to warning as it seems to occurs in normal operation

#### 2013-06-28, 18:50:16 - Adam Rankin
(In r:2883|plus:2883) re #582 adding guard to see if race condition is the problem

#### 2013-06-28, 18:51:24 - Adam Rankin
(In r:2884|plus:2884) re #582 this .. self

#### 2013-06-28, 18:56:51 - Adam Rankin
(In r:2885|plus:2885) re #582 attempting a disconnect/connect when a new plane switch is received

#### 2013-06-28, 19:09:37 - Adam Rankin
(In r:2886|plus:2886) re #582 attempting lighter weight disconnect/connect

#### 2013-06-28, 19:29:35 - Adam Rankin
(In r:2887|plus:2887) re #582 trying to stop sapera before param request

#### 2013-07-05, 18:38:36 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-07-09, 18:54:00 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-08-03, 19:33:11 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-08-28, 15:24:44 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-10-21, 18:55:12 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-10-27, 20:06:20 - Andras Lasso
What's the status if this?
Does it work? With what devices and for what parameters?

#### 2013-10-28, 12:52:09 - Adam Rankin
I am working on that this week. It does work, for the Sonix device only (other devices can be made to work in much shorter order). I have to complete my testing of the ImageToProbe transform being updated in order to be confident enough to check in.

#### 2013-10-28, 12:52:09 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-12-10, 16:01:46 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:46 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-13, 05:25:04 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2014-01-20, 17:29:48 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2014-10-01, 14:17:40 - Andras Lasso
priority: changed from "Highest (1)" to "Normal (3)"

#### 2014-12-10, 21:09:01 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #583 Plus does not build when Phidget Spatial Tracking is enabled.
Missing file AhrsAlgo.h referenced from files in the src/tracking/phidget.../xio folder.

#### 2012-09-04, 20:23:10 - Andras Lasso
(In r:2046|plus:2046) Test #583: Added missing header file

#### 2012-09-04, 20:23:10 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-09-04, 20:23:10 - Andras Lasso
status: changed from "New" to "Test"

#### 2012-09-04, 20:23:27 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-1.5.4"

#### 2012-09-04, 20:33:55 - Adam Rankin
Confirmed successful build plus:2046

#### 2012-09-04, 20:33:55 - Adam Rankin
status: changed from "Test" to "Fixed"


## #584 Validate that SonixGPS is turned off on disconnect from device set.
See title.

#### 2012-09-07, 22:11:55 - Andras Lasso
Comment from Tamas: Probably it's not turned off because Plus server is stopped with CTRL-C

Possible solutions:
* catch the CTRL-C (http://www.cplusplus.com/forum/beginner/1501/, http://msdn.microsoft.com/en-us/library/windows/desktop/ms682541(v=vs.85).aspx)
* exit if a key is pressed


#### 2012-09-12, 16:59:57 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 02:01:04 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-29, 22:17:51 - Andras Lasso
Verified, it works as expected.

#### 2014-09-29, 22:17:51 - Andras Lasso
status: changed from "New" to "Invalid"


## #585 Add a quit mechanism to PlusServer
Implement Q button to quit.

Add a text line after starting instructing the user how to quit.

#### 2012-09-07, 22:30:16 - Andras Lasso
And/or capture and handle ctrl-c

#### 2012-09-11, 18:47:44 - Adam Rankin
Code is completed, but is platform specific. Setting up a VM of Linux to test it before commiting.

#### 2012-09-11, 18:47:44 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-09-12, 15:01:25 - Adam Rankin
(In r:2074|plus:2074) Fixed #585

Linux tests outstanding. Will test later today once VM is set up.

#### 2012-09-12, 15:01:25 - Adam Rankin
status: changed from "Test" to "Fixed"


## #586 Plus cannot build unless Phidget, Polaris are checked in CMake
Possibly intended behaviour. If so, close ticket as invalid.

Build failed when these check boxes were not ticked (and subsequent configure->generate action).

#### 2012-09-11, 20:31:08 - Andras Lasso
The build directory was corrupted (moved to another directory) after the configure step.
Tested a clean build with Phidgets and Polaris disabled and there was no issue.

#### 2012-09-11, 20:31:08 - Andras Lasso
status: changed from "New" to "Invalid"


## #587 Determine the tracking issue with the NDI aurora
Best result:
stylus calib of 1.2mm error
Phantom reg with 4.x mm error

worst:
stylus of 3.x mm error
phantom reg with 65.x mm error

Lessons learned:
Don't put tool plug box on the tracking plate
No need to uncoil wires, doesn't seem to affect tracking
Probe did not appear to affect tracking quality

#### 2014-06-05, 01:40:38 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 18:55:29 - Andras Lasso
I don't see any actionable item here. @rankin: please reopen the ticket if there is anything to be done with this.

#### 2014-09-27, 18:55:29 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2014-09-30, 00:16:38 - Adam Rankin
Yeah I don't even... who writes a ticket like this! We should ban them.


## #588 Enable reusing an existin ITK, VTK, and OpenIGTLink build for building Plus
Enable reusing an existin ITK, VTK, and OpenIGTLink build for building Plus to reduce the build time.

#### 2012-09-12, 05:35:35 - Andras Lasso
(In r:2073|plus:2073) Fixed #588: It is possible to reuse existing ITK, VTK, and OpenIGTLink builds. Just specify ITK_DIR, VTK_DIR, OpenIGTLink_DIR when configuring PlusBuild to avoid downloading and building in Plus.

#### 2012-09-12, 05:35:35 - Andras Lasso
status: changed from "New" to "Fixed"


## #589 Deal with limitations on linux
* PlusServer cannot handle 'q' key to quit gracefully (disconnecting first)
* gnuplot has to be installed manually on the linux OS
* Many HW devices are not supported

#### 2012-09-12, 16:29:35 - Adam Rankin
If desired, ncurses library can be used to handle async keyboard input.

#### 2014-05-19, 15:04:18 - Andras Lasso
PlusServer is only used for testing now, so 'q' button limitation is not relevant anymore.
Gnuplot should be replaced by vtk charting (see #644).

Remaining task would be the improvement of HW devices support. Instead of having a generic ticket for that, add tickets for each specific HW device on request.

#### 2014-05-19, 15:04:18 - Andras Lasso
status: changed from "New" to "Invalid"


## #590 Calibration algorithms give different results on linux
Find out the source of the difference.

See http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=10107

#### 2012-09-12, 21:48:59 - Csaba Pinter
(In r:2082|plus:2082) Re #590: Increased tolerance added to tests that failed under Linux when running under non-Windows OS

#### 2012-09-12, 21:48:59 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2013-05-15, 19:59:16 - Adam Rankin
assigned_to_id: changed from "pinter" to null


## #591 fCal leaks memory if too many candidates are detected during probe calibration
Open the segmentation parameter dialog, place the transducer in a position to see many point candidates => fCal leaks about 5MB/sec and after it runs out of memory the application crashes

#### 2012-09-13, 20:56:38 - GuillermoCarbajal
file:cc9amu_Eur4zgoacwqjQWU
log file of a crash

#### 2012-09-13, 20:56:38 - GuillermoCarbajal
Attachment added: "091312_165029_PlusLog.zip"

#### 2012-09-17, 17:01:33 - Adam Rankin
Confirmed. Investigating.

#### 2012-09-17, 17:01:33 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-09-17, 17:05:53 - Adam Rankin
Deep copy of tracked frame in segmentation parameter dialog.

Testing fix now.

#### 2012-09-17, 17:05:53 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-09-17, 18:11:12 - Adam Rankin
(In r:2101|plus:2101) Fixed #591

Allocating memory on the stack instead of on the heap.

SegmentationParameterDialog no longer does a deep copy of the tracked frame. It requests it from the vtkDataCollector.

#### 2012-09-17, 18:11:12 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2012-09-17, 18:21:08 - Adam Rankin
(In r:2102|plus:2102) re #591

Properly de-allocating memory after allocation. Unbreaking freeze image functionality.

#### 2012-09-17, 18:27:30 - Adam Rankin
(In r:2103|plus:2103) re #591

Cleaner way to manage memory in SegmentationParameterDialog.


## #592 Pattern recognition mysteriously fails sometimes
Andras discovered, that using the C5-2 probe and the fCal2.0 phantom, the pattern recognition fails even when all the candidates are found, and there are no artifacts in the image. With very little probe movement, on a very similar image, the pattern is recognized correctly.

#### 2012-09-16, 19:12:09 - Csaba Pinter
summary: changed from "Pattern recognition misteriosly fails sometimes" to "Pattern recognition mysteriously fails sometimes"

#### 2012-09-16, 19:14:18 - Csaba Pinter
file:c2AzBSadir4QkHacwqjQYw
Two example images for this issue

#### 2012-09-16, 19:14:18 - Csaba Pinter
Attachment added: "exportedImages.zip"

#### 2012-09-16, 20:33:54 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-09-17, 13:12:27 - Csaba Pinter
The problem is with the permutation generator in the FidLabeling::FindPattern function. If the right combination is the last one, e.g. combination (3,2,1) in case of 4 line candidates, it is not examined, so not recognized.

#### 2012-09-17, 14:06:52 - Csaba Pinter
(In r:2094|plus:2094) Re #592: Combination generator fixed in FidLabeling::FindPattern (it skipped the last combination); Test baselines updated accordingly (more images are segmented, thus the differences)

#### 2012-09-17, 14:29:33 - Csaba Pinter
Fortunately the pattern recognition on the second image could be fixed with changing segmentation parameters (CollinearPointsMaxDistanceFromLineMm from 0.6 to 0.61), so no further code changes are needed.

#### 2012-09-17, 14:33:57 - Csaba Pinter
(In r:2095|plus:2095) Fixed #592, Fixed #593: Merging changes for #592 and #593 from trunk to 1.6

#### 2012-09-17, 14:33:57 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-09-17, 17:18:24 - Andras Lasso
(In r:2100|plus:2100) re #592: Added more logging to help investigation of fiducial pattern recognition optimization in the future


## #593 Enable saving of frozen images from Segmentation Parameter Dialog
It would very helpful to be able to save the images on which pattern recognition fails from the window where we found the error (in Segmentation Parameter Dialog, after we pressed Freeze).
A single-frame metafile and the used configuration file need to be saved too.

#### 2012-09-16, 18:45:23 - Csaba Pinter
(In r:2093|plus:2093) Test #593: Added 'Export Image' button to SegmentationParameterDialog so that frozen images can be saved to a single-frame metafile

#### 2012-09-16, 18:45:23 - Csaba Pinter
status: changed from "New" to "Test"

#### 2012-09-16, 18:47:04 - Csaba Pinter
The exported image is saved without compression, so that it can be read easily in imageJ (a single-frame images is 450-500 KB).

If we agree on this, the ticket can be set to fixed.

#### 2012-09-17, 14:33:57 - Csaba Pinter
(In r:2095|plus:2095) Fixed #592, Fixed #593: Merging changes for #592 and #593 from trunk to 1.6

#### 2012-09-17, 14:33:57 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #594 PlusServer test fails on linux
Apparently the application crashes on exit.

#### 2012-09-17, 14:03:25 - Adam Rankin
milestone_id: changed from "Release Plus-1.6.1" to "Release Plus-1.7.0"

#### 2012-09-17, 15:47:09 - Csaba Pinter
Crashes on linux when disconnecting at PlusServer.cxx:DisconnectClients where i=3 when calling testClientList[i]->StopRecording

#### 2012-10-12, 22:17:38 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:38 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:31:10 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-12-03, 16:47:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-05-18, 15:30:03 - Andras Lasso
re #594: Added mutexes OpenIGTLink tracking and video devices to prevent crash when calling Disconnect from another thread

Also removed unused OpenIGTLinkReceiveServer class.
Commit: r:3314|plus:3314

#### 2014-05-18, 15:30:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-18, 18:56:48 - Andras Lasso
re #594: Removed mutexes from OpenIGTLink tracking and video devices as they create an overhead and not necessary. Ignore SIGPIPE signal to prevent crash on linux when a client is disconnected.
Commit: r:3315|plus:3315

#### 2014-05-19, 15:04:58 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-05-19, 15:23:38 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-03, 13:20:41 - Andras Lasso
re #594: Ignore SIGPIPE signal to prevent crash on linux when a client is disconnected.
Commit: r:3358|plus:3358

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"

#### 2015-08-26, 03:19:02 - Andras Lasso
re #594 Adding timeout to PlusServer commands test to speed up tests on Linux

Commit: r:4299|plus:4299


## #595 ITK dependency is not set correctly
change the line as suggested in the mail below


From: Alvaro Gomez [mailto:agomez@fing.edu.uy] 
Sent: September 17, 2012 10:24 AM
To: Andras Lasso
Subject: PlusBuild CMakeLists.txt

Hi Andras,

In the CMakeLists.txt of the PlusBuild trunk
https://subversion.assembla.com/svn/plus/trunk/PlusBuild/CMakeLists.txt

in the paragraph of 

#------------------------------------------------------------------------------
# Specify target dependencies
#------------------------------------------------------------------------------
it says:

IF ( NOT ITK_DIR )
  # ITK_DIR is not supplied, so it is built inside Plus, therefore we need to specify dependencies to make sure it is built early enough
  SET(ITK_DEPENDENCIES)
  LIST(APPEND PlusLib_DEPENDENCIES vtk)   
ENDIF()

Line 268 should perhaps be:

  LIST(APPEND PlusLib_DEPENDENCIES itk)   

Alvaro





#### 2012-10-18, 14:27:27 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-10-18, 14:27:27 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-10-18, 14:27:27 - Andras Lasso
component_id: changed from "None" to "PlusBuild"

#### 2012-10-18, 14:27:27 - Andras Lasso
milestone_id: changed from "Release Plus-1.6.1" to "Release Plus-1.7.2"

#### 2012-10-18, 14:27:27 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-10-18, 17:12:27 - Andras Lasso
(In r:2189|plus:2189) Fixed #595: ITK target dependency fixed (it was not set correctly for standalone ITK builds)

#### 2012-10-18, 17:12:27 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #596 Saving several GB large files sometimes fails
> 1) most critical problem: when we set fCal in continuous capturing during sagittal sweep, and then try to save the resulting dataset, very often fCal would crash. With the sweep settings they use, we end up with 700-800 RF frames. I tried reducing capturing rate to 15 FPS and experimenting with the number of frames to get the threshold, but the problem seems to be random -- sometime it would crash with 250 frames, sometime after 400. During the patient study we captured several sections during the sweep 200-300 frames each. Even with those sections, the size of MHA file is several Gb. Is it possible to set the mode to save each frame separately? Could this be because of some OS issues dealing with very large files?

This version we used was built in 64-bit Debug mode. I will build in Release and will let you know. The crash was actually reproducible with 'air scan' at full sweep -- we tried it before the patient was in, and that's when we found it.

#### 2012-09-17, 18:01:54 - Andras Lasso
Tested with simulated image source ('Simulation mode for freehand spatial calibration with phantom containing 3 NWires', PlusConfiguration_File_fCal_1.2.xml) and it recorded and saved 6GB files without problems, both in debug and release mode builds.

Could you please test if you can reproduce the crash with this simulated image source?
Do you have a log of the crash?

#### 2012-09-17, 18:01:54 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-09-27, 18:44:14 - Andrey Fedorov
I can reproduce the crash using the simulated RF with fCal in Release mode

https://www.dropbox.com/s/qnij0vrktlxbtd5/test_rf.mha
https://www.dropbox.com/s/427bnb5ekiidsut/test_rf_config.xml
https://www.dropbox.com/s/km0nbfkgm00z4pv/PlusConfiguration_File_fCal_1.2.xml

but have not been able to reproduce with fCal in Debug mode with debugger attached.

#### 2012-09-28, 10:26:03 - Andras Lasso
@rankin: Could you please check this? It should be possible to reproduce the problem on your PC (see above). Andriy uses a 64-bit build.

#### 2012-09-28, 10:26:03 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2012-09-28, 10:26:26 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-09-28, 23:42:15 - Andras Lasso
@fedorov: I couldn't reproduce the error in 64-bit debug or release builds using the provided config file (https://www.dropbox.com/s/km0nbfkgm00z4pv/PlusConfiguration_File_fCal_1.2.xml). I can reliable acquire over 4GB of data. 
* How much virtual memory you have allocated on your computer?
* Could you acquire trace-level logs of the crash?


#### 2012-10-01, 18:19:05 - Andrey Fedorov
@lassoan: the settings show about 24G of virtual memory allocated. I will attach the trace-level log to the issue.

#### 2012-10-01, 18:19:26 - Andrey Fedorov
file:ciyt6Oc_qr4ONLacwqEsg8


#### 2012-10-01, 18:19:26 - Andrey Fedorov
Attachment added: "100112_112100_PlusLog.txt"

#### 2012-10-01, 23:16:38 - Andras Lasso
@fedorov: I still cannot reproduce the issue. Could you please try this http://sdrv.ms/V8g2qx build on your computer (in simulation mode, the same way as you did before to reproduce the crash)?


#### 2012-10-02, 15:30:19 - Andrey Fedorov
@lassoan: yes, I am able to reproduce the crash with the binary build you provided.

#### 2012-10-02, 16:00:50 - Andras Lasso
OK, so it seems to be a problem specific to that PC. It would be great if you could test the same thing on another computer.

I would temporarily add lots of additional logs to find out where the issue actually occurs. If the crash is reliably reproducible then with this approach we can locate the error very quickly. If you can set up remote access to the computer I can do this when I get back from MICCAI on Oct 10.

#### 2012-10-02, 16:03:25 - Andrey Fedorov
Andras, yes -- I will do all of this and will follow up with you.

#### 2012-10-05, 14:14:13 - Andrey Fedorov
I was able to get to the location of crash in the debugger, but is is not helpful -- it is crashing in CapturingToolbox::Save(), QFileDialog::getSaveFileName(). This happens only for large number of frames, and does not happen all the time.

Looking at the trace, there are messages related to data acquisition from VideoBuffer after the Save() was invoked -- is this expected?

Also, the reported FPS is clearly wrong -- the actual number of recorded frames in the time acquisition is completed does not match the expected # of frames with the reported 'actual' FPS.

100512_093230.725|TRACE|064.705000| CapturingToolbox::Save|in ..\\..\\PlusApp\\fCal\  oolboxes\\CapturingToolbox.cxx(418)
100512_093230.732|DEBUG|064.712000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.747|DEBUG|064.727000| Need to skip newly added frame - new timestamp (651.169334) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.759|DEBUG|064.739000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.769|DEBUG|064.749000| Need to skip newly added frame - new timestamp (651.225391) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.782|DEBUG|064.762000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.793|DEBUG|064.773000| Need to skip newly added frame - new timestamp (651.280762) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.805|DEBUG|064.785000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.816|DEBUG|064.796000| Need to skip newly added frame - new timestamp (651.336105) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.829|DEBUG|064.809000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.839|DEBUG|064.819000| Need to skip newly added frame - new timestamp (651.391419) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.851|DEBUG|064.831000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.861|DEBUG|064.841000| Need to skip newly added frame - new timestamp (651.446705) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.873|DEBUG|064.853000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.884|DEBUG|064.864000| Need to skip newly added frame - new timestamp (651.503405) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.898|DEBUG|064.877000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.909|ERROR|064.889000| Unknown transducer geometry: 0, skipping scan conversion|in ..\\..\\..\\PlusLib\\src\fProcessingAlgo\\vtkRfProcessor.cxx(85)
100512_093230.909|DEBUG|064.889000| Need to skip newly added frame - new timestamp (651.559162) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)
100512_093230.926|DEBUG|064.906000| vtkVideoBuffer: Failed to prepare for adding new frame to video buffer!|in ..\\..\\..\\PlusLib\\src\\ImageAcquisition\\vtkVideoBuffer.cxx(239)
100512_093230.937|DEBUG|064.917000| Need to skip newly added frame - new timestamp (651.614434) is not newer than the last one (652.006905)!|in c:\\andrey\\plus-1.6.0\\plus-1.6\\plusbuild-bin\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(98)


#### 2012-10-05, 15:19:27 - Andrey Fedorov
Correction: FPS issue seems to be present only in my Plus-1.6 build. With the current trunk version, FPS makes a lot more sense (~20, while in 1.6 it goes as high as 150, and the number of captured frames does not match the reported FPS).

#### 2012-10-05, 15:27:43 - Andrey Fedorov
And another clarification: I can reproduce bogus FPS in 1.7/trunk version as well, but only in Debug mode.

#### 2012-10-05, 16:19:24 - Andrey Fedorov
@lassoan: tried to run your packaged Plus-1.7 build on a VirtualBox Win7 64 bit (the only other 64 bit windows I have access to), and there is an error about missing SapClassBasic72.dll. Google doesn't help. What do I need to install to have this library?

#### 2012-10-05, 16:24:29 - Csaba Pinter
I searched for this file (SapClassBasic72.dll), but this file doesn't exist on my system at all.
Using dependency walker which DLL tries to use this file?

#### 2012-10-05, 16:29:30 - Andrey Fedorov
looks like vtkImageAcquisition?.. I will attach screenshot.

#### 2012-10-05, 16:30:05 - Andrey Fedorov
image:dRolqsdWKr4O19acwqjQWU


#### 2012-10-05, 16:30:05 - Andrey Fedorov
Attachment added: "Screenshot2012-10-05at12.29.03.png"

#### 2012-10-05, 16:32:17 - Andrey Fedorov
I think this is a dependency of BK libraries. I will see if I can resolve it by installing BK prerequisites. Weren't they supposed to be packaged with other libs? And how do I point to them if I install BK prerequisites?

#### 2012-10-05, 16:37:21 - Csaba Pinter
There is no such file in the PLTools/BK directory, so maybe installing the prerequisites would help.

As a temporary solution, you can copy the file (provided you have it) to the Plus-bin/bin directory, as unlike Slicer (with the launcher), Plus copies every needed file in that folder. On the long run, if it turns out to be needed, we can add it to PLTools.


#### 2012-10-05, 17:19:25 - Andrey Fedorov
@lassoan: Andras, what version of Dalsa drivers should I use? There's 7.00 and 7.20 in PLTools. I see your compiled Plus probably uses 7.00, because this is the only place where I see SapClassBasic70.dll. My builds are using version 7.20.

#### 2012-10-05, 21:23:02 - Andras Lasso
Sorry guys I had to give 3 presentations today and just got back to my computer now. SapClassBasic72.dll is part of the DALSA Sapera installer package. When you run the installer copies the dlls into the Windows system directories, that's why I chose not to include in the Plus package (because then we could end up having slightly different copies of the dlls in different directories). I now added a comment to the Hardware setup page that this Sapera package has to be installed, but let me know if we should do more (more documentation, adding the dlls to the Plus package, etc.).

#### 2012-10-06, 09:36:35 - Andras Lasso
(In r:2155|plus:2155) re #596: Fixed actual frame rate computation (the computation method was incorrect when the recording took a long time, e.g., in debug mode)

#### 2012-10-06, 09:36:43 - Andras Lasso
(In r:2156|plus:2156) re #596: Fixed actual frame rate computation (the computation method was incorrect when the recording took a long time, e.g., in debug mode)

#### 2012-10-06, 12:03:53 - Andras Lasso
(In r:2157|plus:2157) re #596: Improved responsiveness and made warning messages more clear during fCal recording

#### 2012-10-06, 12:04:09 - Andras Lasso
(In r:2158|plus:2158) re #596: Improved responsiveness and made warning messages more clear during fCal recording

#### 2012-10-06, 12:08:18 - Andras Lasso
@fedorov: I could not reproduce the crash, so probably the best is if you can share your screen when you reproduce it and we debug it together.

#### 2012-10-06, 12:08:18 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2012-10-06, 12:08:18 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-10-07, 07:55:09 - Andras Lasso
(In r:2159|plus:2159) re #596: Added division by zero checks to Capturing toolbox

#### 2012-10-07, 22:37:41 - Andras Lasso
@fedorov: To understand the location and root cause of the crash a bit better it would be great if you could temporarily split the operations in CapturingToolbox::Save() to as many separate lines as possible and add a log message after each line.

It might be also possible that the QT save dialog crashes in certain conditions (when there is not enough memory and/or some network resources are not available, etc.), so we'll add another Save button that just saves the captured frames into a file with automatically generated filename, without showing the file popup (#613). This will also make the saving a single-click operation.

#### 2012-10-07, 23:13:49 - Andrey Fedorov
Andras, the specific line in CaptureToolbox is known -- it is crashing in QFileDialog::getSaveFileName().

It looks like the frame callbacks are still invoked while Save() is in progress. Is this expected? Could the issue be related to some concurrent access to the buffer or related data?

Also, I will be away Thu-Fri, but if you have something to test before, I can do that Mon-Wed. Since the issue is reproducible without BK, this is very easy to do now.

Andras, which version of Dalsa drivers should I use -- 7.0 or 7.20? I noticed your version was linked against 7.0.

#### 2012-10-07, 23:27:14 - Andras Lasso
The QFileDialog::getSaveFileName is a long line. Do you know where and what crashes exactly? You may need to split it into multiple lines to know for sure.

  fileName = QFileDialog::getSaveFileName(NULL, tr('Save captured tracked frames'),
    QString('%1/TrackedImageSequence_%2').arg(m_LastSaveLocation).arg(vtksys::SystemTools::GetCurrentDateTime('%Y%m%d_%H%M%S').c_str()), filter);
  m_LastSaveLocation = fileName.mid(0, fileName.lastIndexOf('/')); 

Use the most recent DALSA Sapera version (7.20). It seems to be much better than the 7.0 version (where some dlls were duplicated and 32/64-bit mixed, etc.). The default Sapera version in PlusBuild is 7.20, but you can double-check what version you use in the DALSASAPERA_DIR variable in your PlusBuild CMake cache.

The frame callbacks are called always but when the recording is stopped they are just used for updating the display, they are not added to the recording buffer. Copying of the frames into the recording buffer and writing the recording buffer to file are both done on the main thread, so no concurrent update/writing can happen.

I strongly suspect that there is an error is related to the file name selection (either in the string processing for constructing the default filename or the in the dialogbox).


#### 2012-10-07, 23:29:01 - Andrey Fedorov
Ok, I will debug this tomorrow. Thanks!

#### 2012-10-08, 14:36:28 - Andrey Fedorov
Andras, I modified the code as follows, and the crash is still coming from getSaveFileName:

  QString filter = QString( tr( 'SequenceMetaFiles (*.mha *.mhd)' ) );
  QString fileName;
  QString dir = QString('/');
  fileName = QFileDialog::getSaveFileName(NULL, tr('Save captured tracked frames'), dir, filter);

#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-18, 13:37:47 - Andrey Fedorov
With PlusLib r2187, using 'Save' button allows to avoid the crash. 'Save As' still leads to a crash.

#### 2012-10-18, 14:03:31 - Andras Lasso
The saving problem is solved with the avoidance of the popup. Entered a new ticket for the popup crash: #617.

#### 2012-10-18, 14:03:31 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #597 Add an option to save recorded data directly to disk
Sometimes very large amount of continuous data recording is needed. For this it would be useful to have an option to automatically write recorded data to disk.
It could be a continuous background task or in chunks, when a predefined number of frames have been acquired.

#### 2013-04-15, 15:37:12 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-04-15, 15:37:57 - Andras Lasso
@rankin, please check, this may have been completed already.

#### 2013-04-15, 15:53:00 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-15, 17:02:32 - Adam Rankin
This sounds exactly like vtkBufferedDiscCapture. I'd say mark completed.

#### 2013-04-15, 17:02:32 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-15, 17:02:32 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-05-15, 19:59:21 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2013-12-23, 21:11:17 - Andras Lasso
Yes, the disk capture device implements this feature.

#### 2013-12-23, 21:11:17 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-23, 21:11:17 - Andras Lasso
status: changed from "Test" to "Fixed"


## #598 Add multi-thread support for fCal to improve usability
When running an algorithm, the CPU is crushed, causing the UI to perform very poorly.

Protecting the main thread from CPU intensive tasks will allow fCal to respond very nicely even when heavy algorithms are being run.

#### 2012-09-17, 18:14:08 - Csaba Pinter
We discussed this some time ago, and this is why we use timers where we can.
The gain/labor ratio is not that high as most of the tasks can already be performed quite well in fCal. It's true that there are computaionally heavy algorithms that we run, but with the only exception of the temporal calibration (where we pop up a window notifying the user that they have to be patient), they finish reasonably quickly.
If more pressing reasons come along, we may have to consider this though.

#### 2012-09-17, 18:42:24 - Andras Lasso
I agree that this is not a priority. The main use case of fCal is calibration, so it should be just good enough for that purpose.

Slicer is intended to be used for prototyping clinical applications (with PlusServer running on the data acquisition computer), so the GUI will run not just in a different thread, but in a different process, most of the time on a different computer.


#### 2013-11-25, 19:14:09 - Adam Rankin
Closing ticket as invalid.

#### 2013-11-25, 19:14:09 - Adam Rankin
status: changed from "New" to "Invalid"


## #599 Add config file parameter to control decimation of the BkProFocus imaging source
Amount of data generated by the vtkBkProFocusVideoSource is huge. Probably the RF scanlines need not to be acquired at full resolution. Expose the decimation parameter of the PlusBkProFocusReceiver as a parameter in the device set configuration file.

#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:31:15 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-12-03, 16:47:21 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #600 Add a button to reset tracker in fCal
The gyroscopes in accelerometer devices sometimes need manual reset. Add a 'Reset tracker' button in fCal to initialize this function instead of doing it automatically at Connect().

Specifically, for vtkPhidgetSpatialTracker the CPhidgetSpatial_zeroGyro(this->SpatialDeviceHandle) function should be called from vtkPhidgetSpatialTracker::Reset() instead of from vtkPhidgetSpatialTracker::Connect().
For now, no Reset method is needed for any other tracker.


#### 2012-09-17, 20:12:31 - Adam Rankin
Determining acceptable UI solution.

#### 2012-09-17, 20:12:31 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-09-17, 20:30:34 - Andras Lasso
Adding a button in the config tab, below the Connect, somewhere near the tracking tool status area.

#### 2012-09-18, 16:12:48 - Adam Rankin
(In r:2108|plus:2108) Re #600

Adding a reset tracker button to the device set selector dialog. It is only visible when the connected tracker says that it is resettable.

Currently only implemented for the Phidget accelerometer based tracking system.

Can be implemented for any system by overriding the IsResettable() and Reset() functions of any vtkPlusDevice

#### 2012-09-18, 16:13:54 - Adam Rankin
The button has been added. Would you mind verifying that it works with the Phidget tracking system?

#### 2012-09-18, 16:13:54 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2012-09-18, 16:14:02 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-09-18, 19:23:38 - Andras Lasso
Tested with the Phidget sensor and it works correctly.

#### 2012-09-18, 19:23:38 - Andras Lasso
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2012-09-18, 19:23:38 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2012-10-07, 22:21:12 - Andras Lasso
(In r:2161|plus:2161) re #600: Added ZeroGyroscopeOnConnect attribute to PhidgetSpatial tracker to enable gyro reset when using the sensor with the PlusServer (where 'Reset tracker' button is not available)


## #601 Cannot set default image saving directory in fCal
'Selection of the folder for storing dump files is not working -- it always uses the default directory. I tried to change 'Dump directory' (I think this is the name) where it saves debugging information, but it always used the default one in PlusBuild-bin/bin/Debug/Output, I think.'


#### 2012-09-17, 19:20:47 - Adam Rankin
In order to configure the output location, you may modify the image directory edit box in the configuration tab.

Note: this location is used for both input and output. If you are using a file sequence as input to fCal, you must have this location set to desired image directory.

During a single run, the Save functionality of the capturing tab will remember the last directory you saved to, and prompt you with that directory next time.

If possible, could you confirm that this is the way it's working for you, and if not, could you describe what is going wrong?

#### 2012-09-17, 19:20:47 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-09-17, 20:04:00 - Adam Rankin
Ahhhh... I think I understand. Do you mean the 'Dump buffers into files...' action under the little gear icon?

Investigating.

#### 2012-09-17, 20:04:00 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2012-09-17, 20:10:31 - Adam Rankin
(In r:2105|plus:2105) Fixed #601

Output directory was not exported in the build of Plus. Now it is exported as the same input image directory.

If you want to change an existing installation, you need only modify PlusConfig.xml in the bin/$(ConfigurationName)/ folders.

#### 2012-09-17, 20:10:31 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2012-09-17, 20:13:56 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2012-09-18, 16:14:59 - Adam Rankin
Assigning the ticket to Andrey to verify that the output directory is now exported on a fresh deployment. (for existing environments, modify value in PlusConfig.xml)

#### 2012-09-18, 16:14:59 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-18, 13:49:57 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #602 Change label if maximum recording frame rate is selected in fCal
'setting capture rate to 30 FPS appears to mean 'maximum possible FPS'. It might make sense to have separate 'max' position for the slider.'

Double-check if the highest settings indeed means 'maximum' FPS. If that's the case then display 'maximum' instead of a specific number.


#### 2012-09-17, 19:54:32 - Adam Rankin
More info:

5) Do you remember what FPS did you get when you selected the maximum option and what did you get if you moved the slider on step lower?

A: When I placed it to the right hand side limit, I think I was getting 50-70 fps. If I put it one step lower from the limit, I was getting consistently about 15 fps, as expected.



#### 2012-09-17, 20:00:26 - Adam Rankin
After checking it out, setting it to 30FPS did indeed limit it to 30 FPS. 

I did notice a 'surge' as processing caught up to video, but then it stabilized under 30 FPS.

Is there a situation where I can reproduce the higher sustained recording rate?

#### 2012-09-17, 20:00:26 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-09-17, 20:44:59 - Andras Lasso
There may be a mismatch if the video source does not respect the requested frame rate. E.g., the actual rate of putting new frames into the recording buffer is higher than the AcquisitionRate set in the config file. This is the case for the BK video source, which records a frame whenever its callback function gets called with a new frame.

#### 2012-09-17, 20:47:06 - Andras Lasso
Andriy, could you please test what frame rate you get if you change the AcquisitionRate value in the config file to 60?
To get accurate estimations we may need to set this value so that it matches the actual acquisition rate (or get the frame rate value through the OEM interface).

#### 2012-09-17, 20:47:06 - Andras Lasso
assigned_to_id: changed from "rankin" to "fedorov"

#### 2012-09-27, 17:49:02 - Andrey Fedorov
If I change AcquisitionRate to 60 in xml, I have max sampling rate at 60 in fCal too.

But the actual sampling FPS goes all the way up to 100-280 after some time, and stays there (see screenshot).

The frame rate I am getting from OEM is ~17, but I do not know if this is the b-mode or RF frame rate, over OEM or over the camera link (documentation doesn't elaborate). If I measure frame rate of getting frames over OEM (ProFocus screencaptures), I am getting abut 3FPS.



#### 2012-09-27, 17:49:02 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2012-09-27, 17:49:42 - Andrey Fedorov
image:c3sgCecmSr4QG8acwqEsg8


#### 2012-09-27, 17:49:42 - Andrey Fedorov
Attachment added: "fCal-fps.jpg"

#### 2012-09-27, 17:59:22 - Andrey Fedorov
I cannot consistently reproduce this issue with very large FPS. Tested again with prescribed AcquisitionRate 60. In the recording mode, up until ~800 captured frames actual FPS stayed ~19, after 800 quickly increased to ~37. When I stopped and tried to save -- crash. When it crashes, I am not prompted to debug, and the output log does not have any hints on what happened.

#### 2012-09-27, 18:16:49 - Andras Lasso
Are any errors logged near that time when the FPS jumps? Are any errors logged before the crash? If not, could you reproduce  the error and collect logs at debug level?
Is fCal built in debug mode? Started with the debugger?

#### 2012-10-07, 07:57:01 - Andras Lasso
Fixes committed, see #596. It should work correctly now, please test.

#### 2012-10-07, 07:57:01 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-10-18, 13:51:02 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #603 ICCapturing Testing - image orintation not set
After launching vtkICCapturingSourceTest1.exe lots of following error appears and the image is not shown:
|ERROR|004.093000| Failed to convert image data to the requested orientation, from XX to MF|in ..\\..\\..\\PlusLib\\src\\PlusCommon\\PlusVideoFrame.cxx(1133)

The problem is that the orientation is not set (e.g. frameGrabber->SetDeviceImageOrientation(US_IMG_ORIENT_MF);) .

I propose change file vtkICCapturingSourceTest1.cxx as in following patch.

47c47,48
<
---
>       std::string imageOrientation('MF');
>
59a61
>       args.AddArgument('--image-orientation', vtksys::CommandLineArguments::EQUAL_ARGUMENT, &imageOrientation, 'Image orientation (Default: MF).');
67a70,79
>       US_IMAGE_ORIENTATION orientation = US_IMG_ORIENT_XX;
>       if (imageOrientation.compare('UF')==0) orientation = US_IMG_ORIENT_UF;
>       else if (imageOrientation.compare('UN')==0) orientation = US_IMG_ORIENT_UN;
>       else if (imageOrientation.compare('MF')==0) orientation = US_IMG_ORIENT_MF;
>       else if (imageOrientation.compare('MN')==0) orientation = US_IMG_ORIENT_MN;
>       else if (imageOrientation.compare('FU')==0) orientation = US_IMG_ORIENT_FU;
>       else if (imageOrientation.compare('NU')==0) orientation = US_IMG_ORIENT_NU;
>       else if (imageOrientation.compare('FM')==0) orientation = US_IMG_ORIENT_FM;
>       else if (imageOrientation.compare('NM')==0) orientation = US_IMG_ORIENT_NM;
>
82a95
>       frameGrabber->SetDeviceImageOrientation(orientation);


I use Win7 64, Visual Studio 2008 32, PlusLib rev. 2119.

Bartlomiej Pycinski

#### 2012-09-21, 11:50:58 - Bart??omiej Pyci??ski
description: changed from "After launching vtkICCaptur..." to "After launching vtkICCaptur..."

#### 2012-09-21, 11:50:58 - Bart??omiej Pyci??ski
summary: changed from "ICCapturing Testing not " to "ICCapturing Testing - image orintation not set"

#### 2012-09-21, 12:56:01 - Csaba Pinter
Hi Bartłomiej!
Can you attach the configuration file you're using? Most probably the source of your problem lies there.
Thanks!

#### 2012-09-21, 13:01:02 - Andras Lasso
The low-level video source tests don't use the data collector and don't use config files. So, the suggested fix is good as is. I commit it soon.

#### 2012-09-21, 13:01:02 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-09-21, 13:01:02 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-09-21, 13:19:48 - Andras Lasso
(In r:2120|plus:2120) Fixed #603: Added missing image orientation initialization.
Simplified vtkICCapturingSourceTest1.cxx: use smart pointers, remove unnecessary logging callback (all VTK errors and warnings are redirected to stdout globally).
Fixed typo (orinted=>oriented).

#### 2012-09-21, 13:19:48 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2012-09-21, 13:21:40 - Andras Lasso
Thanks Bartłomiej for reporting this. Let us know if the test still doesn't work as expected.

#### 2012-09-24, 10:58:05 - Bart??omiej Pyci??ski
Now the test works without any troubles. Thanks for the commit!


## #604 Data capturing problem with ImagingControls framegrabber and Polaris
By Bartłomiej Pyciński on 2012-09-21 09:04
Failed to get video buffer
I am trying to proceed whole callibration process, but there are some problems with acquiring the image. When I try to perform temporal calibration or when I try capture video at 'Capturing' tab I get errors, that I can't figure, what do they mean.

092112_135834.593|ERROR|092.435000| Failed to get video buffer item UID from time: 80.260686|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(838)
092112_135834.613|ERROR|092.455000| Failed to get tracked frame list from data collector (last recorded timestamp: 76.474543|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(549)

I can connect to the framegrabber without problem and I can see streaming, anyway.

I use ICC framegrabber, Polaris Spectra tracker, Win7, VS2010 32bit, PlusLib rev 2119.

Thanks for help for advance. Full logs and config file attached.
Bartłomiej Pyciński

PlusConfiguration.xml6.54 KB
https://www.assembla.com/spaces/plus/documents/dK7KGUa-Wr4OPEacwqjQYw/download/dK7KGUa-Wr4OPEacwqjQYw

092112_141829_PlusLog.txt1.81 MB
https://www.assembla.com/spaces/plus/documents/dK7L6Ka-Wr4OPEacwqjQYw/download/dK7L6Ka-Wr4OPEacwqjQYw

092112_135702_PlusLog.txt3.27 MB
https://www.assembla.com/spaces/plus/documents/dK7LoQa-Wr4OPEacwqjQYw/download/dK7LoQa-Wr4OPEacwqjQYw


#### 2012-09-21, 14:19:02 - Andras Lasso
It seems that the storing of the frames cannot keep up with the acquisition of new data.
* Try to increase the ImageAcquisition BufferSize (to a max of about 500)
* Try to lower the frame rate (to a min of about 10 fps)
* Set the debug level to INFO or DEBUG to reduce the time spent with printing log messages
* Try to decrease the CPU load by building the application in DEBUG mode and not running any other application in parallel


#### 2012-09-21, 14:19:02 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2012-09-21, 18:48:38 - Andras Lasso
(In r:2124|plus:2124) Test #604: Fixed raw video and tracker frame collection in fCal (in vtkDataCollector::GetTrackedFrameList the videoEnabled/trackingEnabled arguments were only used in the method and were not passed to other called member functions, which therefore sometime computed incorrect timestamps; now raw tracking and video data can be acquired using GetTrackingData and GetVideoData calls instead of passing additional bool flags to GetTrackedFrameList) 

#### 2012-09-21, 18:48:38 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2012-09-21, 18:50:09 - Andras Lasso
assigned_to_id: changed from "lassoan" to "bpycinski"

#### 2012-09-24, 12:10:29 - Bart??omiej Pyci??ski
After the commit, no errors appear, both in Debug and Release mode. I have other problems now, but I will create the new ticket. I am closing this one.

Thank you for your help!

#### 2012-09-24, 12:10:29 - Bart??omiej Pyci??ski
status: changed from "Test" to "Fixed"


## #605 Teporal calibration wrong intensity compute
While temporal calibration, only several points from image sequence are being properly chosen. I suppose that the inscription on image's header influences on proper line. I attach scans to show, what I mean. 

Maybe possible solution would be to add a ROI on the image?



#### 2012-09-24, 12:46:16 - Bart??omiej Pyci??ski
image:duED_8bKur4RHSacwqjQYw
temporal calibration report

#### 2012-09-24, 12:46:16 - Bart??omiej Pyci??ski
Attachment added: "cal4.png"

#### 2012-09-24, 12:48:57 - Bart??omiej Pyci??ski
image:a0L2_4bKyr4RGQacwqjQWU
ultrasound image

#### 2012-09-24, 12:48:57 - Bart??omiej Pyci??ski
Attachment added: "cal5.png"

#### 2012-09-24, 15:31:30 - Csaba Pinter
Probably the issue is what you suggest, and this is what we do in course of the spatial calibration.
I need to look into it more.

#### 2012-09-24, 16:52:57 - Andras Lasso
To reduce the amount of acquired data in general it would be useful to clip the ROI in the video source (as in the Epiphan video source). Actually, I need this right now for connecting to a Medison system using the ImagingControl framegrabber, so I'll implement this.

In addition to this low-level clipping, a ROI definition in the temporal calib algo can be useful, too. I will not implement this now.

#### 2012-09-25, 13:04:09 - Bart??omiej Pyci??ski
I found simple solution for my hardware - I substituted values of upper pixels with black colour. It was just few lines of code in file PlusLib/src/ImageAcquisition/ICCapturing/vtkICCapturingSource.cxx.   

@@ -171,7 +171,16 @@
 
   this->FrameNumber = frameNumber; 
 
-  const int frameSize[2] = {static_cast<DShowLib::Grabber*>(FrameGrabber)->getAcqSizeMaxX(), static_cast<DShowLib::Grabber*>(FrameGrabber)->getAcqSizeMaxY()}; 
+  //myBlock begin
+  const int strip = 125;
+  const int sizeX = static_cast<DShowLib::Grabber*>(FrameGrabber)->getAcqSizeMaxX();
+  const int sizeY = static_cast<DShowLib::Grabber*>(FrameGrabber)->getAcqSizeMaxY();
+  const int frameSize[2] = {sizeX, sizeY}; 
+  unsigned char* tmpPtr = dataPtr;
+  tmpPtr += sizeX*(sizeY-strip);     //count from bottom of image
+  std::memset (tmpPtr, 0, sizeX*strip);
+  //myBlock end
+  
   int frameBufferBitsPerPixel = static_cast<DShowLib::Grabber*>(FrameGrabber)->getVideoFormat().getBitsPerPixel(); 
   if (frameBufferBitsPerPixel!=8)
   {
  

For me, the problem is fixed. If anybody in the future would have similiar problem, there is a solution.

#### 2012-09-25, 15:45:51 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.0"

#### 2012-09-26, 07:52:59 - Andras Lasso
(In r:2131|plus:2131) re #605: Added clipping capability to ICCapturing video source (the clipping region can be defined by the ClippingRectangleOrigin and ClippingRectangleSize attributes of the video source)

#### 2012-09-26, 07:52:59 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-09-26, 07:54:40 - Andras Lasso
Thanks for the proposed change of altering the image intensity values. Clipping the image is somewhat more generic and also reduces the amount of processed and transferred data, so I implemented that. If intensity value changing is needed then it can be added later on request.

#### 2012-09-26, 07:54:40 - Andras Lasso
status: changed from "New" to "Fixed"


## #606 fCal Phantom 3.0
Feel free to describe the motivation/reasons for creating the phantom.

Describe some of the structures of the phantom and why they were chosen.

Etc...

#### 2012-09-25, 15:50:28 - Adam Rankin
From Guillermo:

'I uploaded to the repository the 4 parts of the fCal 3.0 in separated .stl files.
They are in PlusLib/docs/fCal/CAD
fCal 3.0 consist in two main walls (front and back), a part in which you can put the sensors and others pats (unions)  that are used for assembling.
Please, look the files and let me know any sugestions, modification or change.'

#### 2012-09-25, 17:39:36 - GuillermoCarbajal
fCal 3.0 is made up of 4 parts:
* front and back wall:
     ** dimensions are 220 x 150 x 10 mm
     ** separation between holes is 5mm in the upper grid and 10 mm in the lower grid. The upper grid is for using with the linear probe and the lower grid is for the curvilinear probe (top grid can also be used with the curvilinear probe)
     ** all the holes are uniquely identified by a letter and a number
     ** holes design is similar to fCal 2.0
     ** both walls have 6 holes of 7mm diameter for assembling.
     ** separation between front and back walls is 4cm
* left wall
    **  It was designed to put sensors on it
    ** dimension 55mm x 30 mm x (4mm + 40mm + 4mm)
    ** holes for the sensors are similar to fCal 2.0
    ** It has a hole of 7mm diameter for assembling.
* unions 
   ** there are 5 unions. 
   ** dimension is (4mm + 40 mm + 4mm) x 40 mm x 20 mm 
    ** It has a hole of 7mm diameter for assembling.

The main idea behind the design is reduce the volume of the different parts in order to reduce the cost.

#### 2012-09-25, 17:55:38 - Csaba Pinter
Just some thoughts:

* The rectangular marker holder hole in the 'Left' part has a small circular hole that is essential if one wants to remove the marker and it's stuck. In the assembled model, that hole is obstructed, one cannot access it. As I think the idea is to glue the parts together, this would be an issue.
* The letters (and the numbers a bit as well) are confusing, because the column 'A' can mean two completely different spatial position. Would it be useful or possible to differenciate them somehow? Maybe with a prefix for the numbering and letters of one of the grids?
* Is the large grid for the probes with wide range of depth? If I want to image that grid, am I supposed to image it holding the probe on the side of lower or the higher numbers? In case the lower numbers, isn't the distance from the probe too far (we can't stick the probe in as the distance between the walls is 4cm)? If the higher, isn't it a problem that the marker connects to the other side?
* Will the fitting of the parts with the wedges accurate enough?

#### 2012-09-26, 09:03:38 - Andras Lasso
The assembly will be held together by screws, there will be no glue.

My understanding is that the probe will be always outside of the phantom (we may even fill the phantom with gel). The distance between the front/back planes may still be too small, but then we'll just print larger spacers.


#### 2012-09-26, 09:03:45 - Andras Lasso
Nice work Guillermo! A few suggestions:
* Move landmark point 3, 7, and 8 closer to the center of the part
* Make the numbering of the landmark points more straightforward. For example, a convenient order would be: 1, 4, 9, 2, 3, 10, 5, 8, 11, 6, 7, 12 (so, rename 4->2, 9->3, 2->4, etc.)
* Engrave labeling into every part: front: OK as is; back: add 'fCal 3.0'; spacer with sensor holder: add 'fCal 3.0 sensor block' (or 'fCal 3.0 sensor'); other spacers: add 'fCal 3.0 spacer block' (or 'fCal 3.0 spacer')
* Rename 'union' to 'spacer' everywhere (filename, documentation, ...)
* Put the 'Left' label on the side of the front or back part
* Q6 hole is missing


#### 2012-09-26, 22:06:43 - GuillermoCarbajal
(In r:2133|plus:2133) Re #606: 
New version of fCal 3.0 with some modifications:
•  Circles were replaced by triangles. We think (Sue Sue, Tamas and me) that position of the wires is determined  with more precision in triangles than in circles. As in fCal 2.0 triangles were tilted 20 grades and edges were rounded for threading more easily.
•  Base of  triangles is 2mm and the height is also 2 mm.
•  Some registration holes were moved and renamed.
•   Dimension of sensor holder block was modified in order to get more space to put something in the lower hole just in case sensor getting stuck.  I think the space now is enough. 
•  Back, Spacer and sensor holder were labeled.
•  Nomenclature was changed.  Columns of the small grid  now are referenced with lowercase letters and columns of the big pattern are referenced with uppercase letters. In both walls (front and back) there is a hole called A1 for instance but you can distinguish between them with the prefix fA1 or bA1 (front A1 or back A1).
•  Upper wire holders were moved down and lower wire holders were moved in direction to the lateral sides. I think this will help when threading the wires.

Please, look at the new version (PlusLib\\docs\\fCAL\\CAD\\fCal3.0) and let me know your comments

#### 2012-09-26, 23:26:16 - Andras Lasso
OK for me. Print it and let's see how it works.

#### 2012-09-27, 14:45:26 - GuillermoCarbajal
(In r:2134|plus:2134) Re #606: fCal stl files moved to a folder

#### 2012-09-27, 14:53:25 - GuillermoCarbajal
(In r:2135|plus:2135) Re #606: fCal stl files moved to the folder of the other stl files

#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2012-12-07, 21:31:18 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-17, 12:49:44 - Adam Rankin
Is this considered complete?

#### 2013-05-17, 12:59:29 - Andras Lasso
Not completed yet. To do:
* wiring recommendation (XML description and screenshots)
* non-regression test case with test config file, image sequence, baseline data

#### 2013-05-29, 19:04:43 - Adam Rankin
Some comments on the fCal 3.0:


* Only one side of the 5mm spacing grid has holes. The other side is solid. Please add holes
* The letters on both sides are denoted with capital letters, one side should be lower case (as per fCal 2.0)


#### 2013-05-29, 19:04:43 - Adam Rankin
assigned_to_id: changed from "GuillermoCarbajal" to null

#### 2013-05-30, 16:31:55 - Adam Rankin
assigned_to_id: changed from null to "msoehl"

#### 2013-05-30, 16:32:19 - Adam Rankin
(In r:2821|plus:2821) re #606 2nd run at a config file for fCal 3.0 wire 1.0

#### 2013-05-30, 16:54:51 - Adam Rankin
More comments:

* Not all landmark dimples have the same depth
* Landmark #12 does not have the same Z value as #9, not a problem, just a warning to others


#### 2013-06-06, 18:47:34 - Adam Rankin
(In r:2847|plus:2847) re #606 updates to fcal 3.1 config file

#### 2013-10-29, 19:17:57 - Adam Rankin
Closing this ticket as the phantom exists, provides adequate calibration and has been thoroughly tested.

#### 2013-10-29, 19:17:57 - Adam Rankin
assigned_to_id: changed from "msoehl" to "rankin"

#### 2013-10-29, 19:17:57 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-10-29, 19:37:51 - Andras Lasso
The following items are still not done. Either create a new ticket for them or leave this issue open.

To do:
* wiring recommendation (XML description and screenshots)
* non-regression test case with test config file, image sequence, baseline data
* Only one side of the 5mm spacing grid has holes. The other side is solid. Please add holes
* The letters on both sides are denoted with capital letters, one side should be lower case (as per fCal 2.0)
* Not all landmark dimples have the same depth
* Landmark #12 does not have the same Z value as #9, not a problem, just a warning to others


#### 2013-10-29, 19:37:51 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2013-12-03, 16:47:31 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-06-05, 02:05:36 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-01, 17:42:16 - Andras Lasso
assigned_to_id: changed from "rankin" to null

#### 2014-10-06, 21:15:11 - Andras Lasso
The fCal-3.1 phantom is usable. Remaining enhancement requests are tracked in #941.

#### 2014-10-06, 21:15:11 - Andras Lasso
status: changed from "New" to "Fixed"


## #607 Create a GUI to create/maintain Plus configuration files
Prevent user errors by creating a configuration file generator from a database of known devices/phantoms/segmentation configs/etc...

Always allow the user to add his own custom elements (new phantom, new params, etc..)

#### 2012-10-01, 14:19:18 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2012-10-01, 17:24:22 - Andras Lasso
Developing a convenient config file generator requires significant effort, but it's much more, continuous work to maintain it. It would mean that after any configuration related change the generator shall be also updated (and of course the example config files still have to be maintained the same way).

Instead of developing a generator wizard I would rather invest time in creating better documentation for the configuration file structure, potentially (partially) automatically generated.

#### 2012-10-02, 16:12:13 - Adam Rankin
I agree that it would require a non-trivial amount of effort.

I would argue though, that it would save all of us time (more than the time spent developing it) because we would see a reduced amount of complaints/tickets/emails regarding incorrect configuration files.

Essentially, it would create a more robust product. If we design it correctly, we could push an update to the template XML file, and a new configuration file can be generated. This would trivialize updates to the software for our end users.

#### 2012-10-02, 16:30:06 - Andras Lasso
I agree that such a tool would have some value to some people. Anyway, the cost/benefit ratio is quite high and we have much more pressing needs, so we have time to further discuss this and decide when to implement this.

#### 2012-10-02, 18:00:48 - Csaba Pinter
priority: changed from "High (2)" to "Normal (3)"

#### 2012-10-02, 18:03:55 - Csaba Pinter
It's not a priority now, but I think it would reduce user support needs.

It wouldn't be a big effort to implement, as we only have to expose the XSL template on a GUI. As long as we maintain the XSL, this tool would be up-to-date, so maintenance wouldn't be too burdensome either.

I think this tool will be worth to develop when we don't have very urgent tasks.

#### 2012-10-04, 14:17:08 - Andras Lasso
We can implement such tool sometime, but I think it's low priority (compared to other things that we have to do) because of the followings:

High cost:
* A few years ago no free tool existed that allowed creating/editing an XML file based on XSL. Do you know any that is available now?
* Everything can be solved with a custom editor app, but the development would take several weeks and the continuous maintenance would take even more of our time.

Small benefit:
* The XSL and editor can only prevent syntax errors. There are many constraints, logic, constraints, which cannot be encoded in XSL. So, we cannot prevent generation of invalid or dysfunctional config files.
* The users would need working examples and documentation of the configuration anyway. But if these existed then there would be little need for an editor.
* In the config files now it's easy to add comments, extra blocks that are used by a custom application only, etc. Probably this wouldn't be compatible with the editor, so we could end up being able to use the editor only for some toy examples and not for real work.



## #608 fCal crash on saving config file
My reproducible scenario
- Open fCal
- Select attached config file
- Connect
- Click on Save icon (disk)
- Click Save...
The crash happens at this point.
Trace level log file attached too.

#### 2012-10-01, 15:44:42 - Tamas Ungi
file:dQKdP8c94r4O7DacwqjQYw
log file

#### 2012-10-01, 15:44:42 - Tamas Ungi
Attachment added: "100112_114220_PlusLog.txt"

#### 2012-10-01, 15:44:42 - Tamas Ungi
file:dQKfaGc94r4O7DacwqjQYw
config file

#### 2012-10-01, 15:44:42 - Tamas Ungi
Attachment added: "AscensionBasic.xml"

#### 2012-10-01, 18:34:32 - Csaba Pinter
The crash occurs using config files with names less than 15 character long. When the new file name is determined and already present date string is checked it calls substring to get the last 15 characters. If the file name is shorter than that, it crashes. Im fixing it now

#### 2012-10-01, 18:34:32 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-10-01, 18:34:32 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-10-01, 18:37:26 - Csaba Pinter
(In r:2145|plus:2145) Fixed #608: Crash fixed when saving configuration files shorter than 15 characters

#### 2012-10-01, 18:37:26 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-10-02, 18:18:28 - Csaba Pinter
(In r:2148|plus:2148) Merged revision(s) 2145 from trunk:
Fixed #608: Crash fixed when saving configuration files shorter than 15 characters


## #609 Add default filter to Ascension 3DG config files
By default, no filtering is applied on Ascension 3DG tracking data. Since it's recommended to use FilterAcWideNotch='1' for smooth tracking data, this should be defined in all example config files in PLUS.

#### 2012-10-09, 15:38:31 - Csaba Pinter
assigned_to_id: changed from null to "pinter"

#### 2012-10-09, 15:38:31 - Csaba Pinter
component_id: changed from "None" to "PlusLib"

#### 2012-10-09, 15:38:31 - Csaba Pinter
milestone_id: changed from null to "Release Plus-1.6.1"

#### 2012-10-09, 15:38:31 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2012-10-09, 15:39:24 - Csaba Pinter
(In r:2163|plus:2163) Fixed #609: FilterAcWideNotch='1' attribute added to Ascension config files (so that filtering is on by default)

#### 2012-10-09, 15:39:24 - Csaba Pinter
status: changed from "Accepted" to "Fixed"

#### 2012-10-09, 15:42:21 - Csaba Pinter
(In r:2164|plus:2164) Re #609: Merged config files with Ascension filtering in 1.6.1


## #610 Plus tutorial using no special hardware
According to a former discussion with Tamas, it would significantly boost the currency of Plus, if we had a tutorial that can be done at home using no special hardware.

A possible approach is a MicronTracker-like home-made tracking system, consisting only of a webcam, and printed markers.

The biggest component we don't have is a (checkerboard) camera calibration algorithm, but there may be an open-source method we can integrate.

#### 2012-10-02, 15:37:40 - Tamas Ungi
If one wants to do a webcam tracker, IGSTK should be checked. They probably use OpenCV or something like that.
Unfortunately the biggest advantage of PLUS (ultrasound) is not so easy to try at home.

#### 2012-10-02, 17:09:20 - Tamas Heffter
Victor Grzeda used checker board calibration and webcam in his project, see: for http://perk.cs.queensu.ca/projects/carm-encoding

#### 2012-10-02, 17:14:01 - Csaba Pinter
Thanks!

#### 2012-10-23, 15:26:42 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 02:01:33 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-07-07, 22:05:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"


## #611 Freehand spatial calibration fails when connected to 2.0 phantom simulation.
2 errors in log:
Failed to get tracked buffer item by timestamp 0
Failed to get tracked frame list from data collector (last recorded timestamp: 0

#### 2012-10-02, 21:11:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-10-02, 21:13:03 - Adam Rankin
Found error in #2123

mostRecent*Uid used to be passed through, now firstVideoUidToAdd is passed in with a value of 0

#### 2012-10-02, 21:13:03 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-10-02, 21:13:48 - Adam Rankin
(In r:2149|plus:2149) Fixed #611 Intializing firstVideoUid / firstTrackerUid to the mostRecent*Uid

#### 2012-10-02, 21:13:48 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2012-10-03, 14:42:53 - Andras Lasso
@rankin: I've added some comments to https://www.assembla.com/code/plus/subversion/changesets/2149 - please check. Thanks!


## #612 Add support for double tracking for vtkDataCollector


#### 2012-10-05, 00:18:21 - Siavash Khallaghi
Basically the idea is to read two trackers from the configuration file. On *DataCollector->Connect()*, both trackers should get connected to the hardware.
When *DataCollector->StartRecording()* is called, the frame container should read tracking information from both sources.
When *TrackedFrameList->WriteToMetaFile()* is called, the mha file should have two sets of transforms, i.e. *ProbeToTracker1*, *ReferenceToTracker1*, *ProbeToTracker2* and *ReferenceToTracker2*.

#### 2012-10-05, 00:21:06 - Adam Rankin
Fantastic idea. See ticket #461! It's the overall ticket to address exactly this issue.

#### 2012-10-05, 00:21:31 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-10-05, 00:21:31 - Adam Rankin
component_id: changed from "None" to "PlusLib"

#### 2012-10-05, 00:21:31 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.0"

#### 2012-10-05, 00:28:47 - Csaba Pinter
I set to invalid, because this ticket will be fixed exactly when #461 is fixed, so there's no need to track both (duplicate).

Samira, Siavash, please follow #461 on this,

#### 2012-10-05, 00:28:47 - Csaba Pinter
status: changed from "New" to "Invalid"

#### 2012-10-05, 00:30:09 - Adam Rankin
I thought about that. I propose keeping this as a separate task because this would involve creating some sort of VirtualTrackerMerger device that would automatically rename transforms coming from both devices.

Thoughts?

#### 2012-10-05, 00:30:28 - Siavash Khallaghi
Adam, it seems that there won't be a solution for #461 before May 9, 2012. Is it possible to comment on an easy fix for this issue?
Basically, modifying a local version of DataCollector, let's call it *PatchedDataCollector*, so that it provides us with transform stamping in a crude way, until a definitive solution is available?

#### 2012-10-05, 00:30:28 - Siavash Khallaghi
status: changed from "Invalid" to "New"

#### 2012-10-05, 00:44:50 - Csaba Pinter
We can make twenty easy 'easy fixes' in this topic, but #461 solves everything at once, this one included. As validation of a tracker using another is a use case of that ticket (it is exactly what is described here), there is no need to this one.

Siavash, what is the May 9, 2012 date you mention?
If you need this feature sooner than a month, you can implement it.
Otherwise, this is invalid.

#### 2012-10-05, 00:52:44 - Siavash Khallaghi
The last comment on #461 was *'Probably Csaba will work on that after May 9. Need to provide a solution for #476 as well.'* So that is why I assumed #461 will not get resolved until May 9.

We (Samira and I) need it before October 14, so basically we need to find a temporary solution for this. Samira and I will talk about this probably tomorrow, but in the mean while, I would appreciate your feedback.

Maybe it is not a bad idea to continue discussion on this thread instead of #461, since this is just a temporary solution.

#### 2012-10-05, 00:52:54 - Siavash Khallaghi
assigned_to_id: changed from "rankin" to "siavashk"

#### 2012-10-05, 00:58:28 - Adam Rankin
Ah welcome to the wierdness that is Assembla's layout. The comment order is top to bottom = oldest to newest BUT page 1 is latest, page 2 is older...

Unfortunately I am fully commited to the multi stream implementation. It will address your issue but it will be approximately 1 to 2 months. If this is urgent, I suggest you talk to Andras Lasso (I will add him to this ticket).

#### 2012-10-05, 01:36:44 - Csaba Pinter
May 9 2012 _was_ 5 months ago. We slipped with our plans, this is why Adam is working on it now.

If you asked me, I would say if you need this so fast, implement it yourselves, because it doesn't make sense for us to work on a temporary solution in the middle of working on the permanent solution. If you agree, assign this issue to yourself.

#### 2012-10-05, 01:50:41 - Tamas Ungi
Matthew Holden used two computers as a temporary solution over the summer. He had to synchronize the two recordings later using a characteristic motion pattern in the beginning of the recording. Two PLUS instances were running at the same time on the two computers.

#### 2012-10-05, 01:55:42 - Csaba Pinter
Actually what Tamas says could work for you until we provide the safe and permanent solution.
This way you don't have to engage in serious programming for the sake of a temporary development, which would be thrown away later.

#### 2012-10-05, 02:09:56 - Tamas Ungi
I'm sure Matthew will share every detail with you on request. I think he used Matlab for offline synchronization. If this system setup could work for you at all.

#### 2012-10-05, 15:05:14 - Adam Rankin
Siavash,

If you want to program a temporary solution, could you create a branch/user sandbox of the trunk and do development in there?

#### 2012-10-05, 20:59:28 - Siavash Khallaghi
Of course. This was actually my plan.

#### 2012-10-05, 22:23:28 - Andras Lasso
I would recommend to use the TemporalCalibration algorithm class to synchronize the two tracker streams. It should be just generalized a bit: instead of SetTrackerFrames(vtkTrackedFrameList* trackerFrames) and SetVideoFrames(vtkTrackedFrameList* videoFrames) the methods should be SetReferenceFrames(vtkTrackedFrameList* trackerFrames, PositionMetricType metricType) and SetDelayedFrames(vtkTrackedFrameList* trackerFrames, PositionMetricType metricType), where enum PositionMetricType { METRIC_POSITION, METRIC_IMAGE }. Then, depending on the metricType, ComputeTrackerPositionMetric or ComputeVideoPositionMetric should be called. This change should be done after @EricMoult has merged his latest improvements in the temporal calibration algorithm.


#### 2012-10-12, 22:17:39 - Andras Lasso
Updating tickets (#331, #461, #369, #507, #517, #537, #596, #487, #505, #543, #412, #612, #606, #544, #563, #567, #582, #594, #444, #599, #542, #601, #602, #417, #436)



#### 2012-10-12, 22:17:39 - Andras Lasso
milestone_id: changed from "Release Plus-1.7.0" to "Release Plus-1.7.1"

#### 2013-02-10, 15:49:21 - Adam Rankin
It is now quite possible to connect two trackers. You may write a virtual device to perform any operations on these two trackers. See vtkVirtualStreamMixer for an example as to how to utilize input data.

#### 2013-02-10, 15:49:21 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-04-30, 18:52:00 - Andras Lasso
assigned_to_id: changed from "siavashk" to "rankin"


## #613 Add save button to capture toolbox
Currently the capture toolbox only have a 'Save as...' button, which always require specification of a filename. Although a new name is automatically generated for the file and it's enough to just click enter, but it's still an extra click and when there is not enough memory or when there are network issues then the file save dialog may not appear or may take long time to appear (it might even crash the application, but this is not confirmed, see #596).

Suggested implementation:
* have a 'Save as...' button that does exactly the same as the current 'Save...' button. 
* have a 'Save' button, that just saves the buffer with the default filename without asking anything (optionally, near this save button there could be a textbox, maybe an editbox that shows the directory and the base filename)

#### 2012-10-07, 22:29:13 - Andras Lasso
Adam, it would be great if you could implement this till Wednesday (Andriy will not be available this week after Wednesday). It would allow Andriy to test if the fCal crash during save is related to the file dialog.

#### 2012-10-07, 22:29:13 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2012-10-07, 22:29:13 - Andras Lasso
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-10-07, 22:29:13 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.7.0"

#### 2012-10-09, 12:45:09 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-10-09, 13:08:57 - Adam Rankin
(In r:2162|plus:2162) Re #613 Save button added, old Save button renamed to SaveAs

Cleaned up line endings

#### 2012-10-09, 14:22:04 - Adam Rankin
Button added. Let me know if it does what you want.

#### 2012-10-09, 14:22:04 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2012-10-09, 19:02:07 - Andras Lasso
Thanks for the quick implementation Adam, it works well. Two small things would be needed to make the GUI more obvious to use:
* Give some feedback about where the file is saved (and that the save was successful), e.g., write something like this in a textbox below the button 'Saving completed to file C:/fullpath/filename.mha' (clear this textbox when new frames acquired that are not saved yet)
* Remove the '...' from the Save button label (as the user is not prompted for additional data) 

#### 2012-10-09, 19:03:20 - Andras Lasso
@fedorov: Could you please test if you can reproduce the saving issue in #596 if the simple Save button is used (when the file dialog is not invoked)?

#### 2012-10-09, 19:05:13 - Csaba Pinter
@rankin: I think such a messagebox is shown in SegmentationParameterDialog when saving the frozen image. You can use that (to save time)

#### 2012-10-09, 19:13:50 - Andras Lasso
I would prefer having a message display method that does not require any extra clicks or mouse moves to acknowledge. Popups are OK for exceptional cases or rarely used functions, but not ideal for such regular informational message. Adding 1 extra mouse move and 1 extra click to the currently needed 3 clicks and 2 moves would be 50% and 33% increase without any added value.

#### 2012-10-09, 19:17:17 - Csaba Pinter
Do you want me to change that messagebox in SegmentationParameterDialog too?

#### 2012-10-09, 19:19:13 - Andras Lasso
That's OK, as it is not used frequently and it would not be trivial to find a place for a non-intrusive message on the GUI and a criteria to hide the message (timeout? button press? new image received?).

#### 2012-10-09, 20:52:52 - Adam Rankin
(In r:2165|plus:2165) re #613 Updated to show save results

#### 2012-10-09, 20:54:31 - Adam Rankin
Use a read only multi-line edit to show saved filename. Let me know if this is good.

#### 2012-10-09, 21:13:34 - Andras Lasso
Thanks for the changes, it works perfectly now.

#### 2012-10-09, 21:13:34 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2012-10-18, 13:36:27 - Andrey Fedorov
Tested several times with simulated and real acquisition, PlusLib r2187: when I use 'Save' button, there is no crash!!!

Still, if I use Save As, fCal crashes.


## #614 Revise the new Sikuli capabilities and switch to QtTesting framework if needed
Note: Sikuli has been revived (got some funding and new owners), so before ditching it, we should wait for a release and try it.

We need to find a substitute for Sikuli for automated GUI testing, and QtTesting seems to be the best candidate (Slicer community also uses this one).

Tests need to be created for the same tasks that we cover with Sikuli at the moment.
If QtTesting proves to be a good solution for the automated tests, we can remove the Sikuli tests once we have the QtTesting variant.

Edit: QtTesting is a viable candidate as demonstrated by the url:https://github.com/IGSIO/OpenIGTLinkIO|IGSIO/OpenIGTLinkIO project!

#### 2012-10-23, 15:27:00 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2013-01-03, 19:22:04 - Csaba Pinter
description: changed from "We need to find a substitut..." to "Note: Sikuli has been reviv..."

#### 2013-01-03, 19:22:04 - Csaba Pinter
summary: changed from "Switch to QtTesting automated GUI testing framework" to "Revise the new Sikuli capabilities and switch to QtTesting framework if needed"

#### 2016-07-13, 16:42:01 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.4.0"

#### 2016-07-13, 16:43:00 - Adam Rankin
description: changed from "Note: Sikuli has been reviv..." to "Note: Sikuli has been reviv..."

#### 2016-07-13, 16:43:09 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2016-07-13, 16:44:27 - Adam Rankin
Reclassifying as a bug as currently UI tests do not work.

#### 2016-07-13, 18:13:01 - Adam Rankin
url:http://doc.qt.io/qt-5/qttestlib-tutorial3-example.html|http://doc.qt.io/qt-5/qttestlib-tutorial3-example.html
url:http://stackoverflow.com/questions/4753845/build-qt-tests-with-cmake|http://stackoverflow.com/questions/4753845/build-qt-tests-with-cmake

#### 2016-08-15, 19:18:41 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-28, 20:17:57 - Adam Rankin
re #614 Preparing for transition to QTest

Cleaning up PlusApp CMake files

Applying formatting changes to PlusApp code
Commit: r:4840|plus:4840

#### 2016-08-28, 20:17:57 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-28, 20:20:51 - Adam Rankin
re #614 removing Sikuli from PlusLib
Commit: r:4841|plus:4841

#### 2016-08-28, 21:40:52 - Adam Rankin
re #614 reverting to non-smart pointer logic, memory management is already handled
Commit: r:4842|plus:4842

#### 2016-08-29, 02:55:33 - Adam Rankin
re #614 Removing last remnants of Sikuli infrastructure

Creating empty Qt test for ToolStateDisplayWidgetTest and SegmentationParameterDialogTest
Commit: r:4843|plus:4843

#### 2016-08-29, 02:59:21 - Adam Rankin
re #614 correcting auto-fail test
Commit: r:4844|plus:4844

#### 2016-11-09, 19:37:20 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"

#### 2016-11-09, 19:37:20 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #615 Add support for 3dConnexion SpaceNavigator 3D mouse device
Add support for 3dConnexion SpaceNavigator 3D mouse device. It's requested by Eli Gibson (Robarts), to be able to manipulate transforms in 3D Slicer. It may be useful for other projects as well.

#### 2012-10-12, 17:19:47 - Andras Lasso
(In r:2168|plus:2168) Fixed #615: 3dConnexion SpaceNavigator devices are now supported. See example config file here: data/ConfigFiles/PlusConfiguration_NoVideo_3dConnexion.xml.


#### 2012-10-12, 17:19:47 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-10-12, 20:45:18 - Andras Lasso
(In r:2171|plus:2171) re #615: Fixed linux build error (3dConnexion device is supported on Windows only, as the linux SDK is completely different and it's unclear if anybody would use it)


#### 2012-10-12, 21:04:56 - Andras Lasso
(In r:2172|plus:2172) re #615: Renamed sample 3dConnexion config file (PlusConfiguration_VideoNone_3dConnexion.xml)


#### 2012-10-12, 21:06:08 - Andras Lasso
(In r:2173|plus:2173) re #615: Added PlusConfiguration_VideoNone_3dConnexion.xml to the installation package



#### 2013-06-15, 16:39:47 - Andras Lasso
(In r:2859|plus:2859) re #615: Added missing IsTracker() override in 3dConnexionTracking class

#### 2016-09-14, 16:18:08 - Adam Rankin
re #615 removing warning and bug relating to storing of class pointer in user data
Commit: r:4866|plus:4866


## #616 Save volume reconstruction output to different file formats
Unfortunately image orientation in mha is not read correctly by ITK v3. This will stay a problem in many programs, including Slicer for a long time. We need to choose another file format (e.g. nrrd), or come up with a workaround to be able to use reconstructed images in IGT (and other) applications.

#### 2012-10-16, 22:26:48 - Andras Lasso
There are two problems with the mha file reading in Slicer, see http://www.na-mic.org/Bug/view.php?id=2173.

We can make these errors asymptomatic if we save the images in LPS orientation.


#### 2012-10-17, 02:28:03 - Andras Lasso
Fixed saving of reconstructed volumes. Now when the reconstructed volume is loaded into Slicer it appears in the correct position. The problem was that the origin was not saved into the header. Also, the anatomical image orientation was set to LPS to match the assumption of Slicer (that ignores the anatomical image orientation attribute and always assumes LPS orientation).

#### 2012-10-17, 02:28:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-10-17, 02:28:03 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-10-17, 02:28:18 - Andras Lasso
component_id: changed from "None" to "PlusLib"

#### 2012-10-17, 02:28:18 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.7.2"


## #617 Save as dialog box can cause random crash on certain computers
When displaying the 'Save as' dialog box when trying to save a captured sequence in fCal randomly causes crash on a computer. If the popup is not displayed (and a preset file name is used instead) then there is no crash.

The crash is coming from getSaveFileName:
QString filter = QString( tr( 'SequenceMetaFiles (*.mha *.mhd)' ) );
QString fileName;
QString dir = QString('/');
fileName = QFileDialog::getSaveFileName(NULL, tr('Save captured tracked frames'), dir, filter);

Maybe upgrade to a more recent QT version could resolve the issue. We use the same QT version as the current 3D Slicer, so do the upgrade when the QT upgrade is done in Slicer.

#### 2012-10-18, 14:04:24 - Andras Lasso
description: changed from "When displaying the 'Save a..." to "When displaying the 'Save a..."

#### 2014-05-19, 15:33:51 - Andras Lasso
Workaround is available (use auto-naming) and the problem is likely to be fixed in future Qt versions, so closing this issue now.

#### 2014-05-19, 15:33:51 - Andras Lasso
status: changed from "New" to "Invalid"


## #618 Optimize temporal calibration
Need to verify temporal calibration results and fix/optimize as needed.

#### 2012-11-05, 19:04:55 - Andras Lasso
(In r:2241|plus:2241) re #618: Do not cancel temporal calibration if there is an error during data collection

#### 2012-11-12, 13:57:31 - Andras Lasso
(In r:2252|plus:2252) re #618: Fixed minor issues in temporal calibration. There is still a remaining problem: tracking principal axis is not computed from the common video/tracker range, so outlier frames outside the common range may throw off the calibration.

#### 2012-11-13, 02:24:34 - Andras Lasso
(In r:2257|plus:2257) fixed #618: Clip data to common range before doing principal motion axis computation (before this change the principal motion axis computation was performed before the clipping and it resulted in inaccurate axis direction when there were outlier frames at the beginning or at the end of the frame list)

#### 2012-11-13, 02:24:34 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2012-11-13, 02:27:44 - Andras Lasso
@EricMoult: I've fixed the clipping/PCA order and tried on a few sequences. Please test again on the full test data set. Thanks!

#### 2012-11-13, 02:27:44 - Andras Lasso
status: changed from "Fixed" to "Test"

#### 2012-11-13, 15:21:44 - Andras Lasso
I've run temporal calibration on the 20 baseline sequences. If I used all the frames then there were still a few inaccurate calibrations (e.g., Trial13). After I cut an 2sec at the beginning and end of each data set then I could reproduce very similar results as we had earlier ([-0.057 -0.06 -0.058 -0.065 -0.061 -0.059 -0.066 -0.059 -0.057 -0.059 -0.056 -0.061 -0.06 -0.062 -0.06 -0.062 -0.058 -0.053 -0.053 -0.058], mean=-0.059, stdev=0.003).

A standard deviation of 3msec is quite good, as it means that in 99% of the cases the time shift error is under 10msec. With a speed of 1cm/sec it means 0.1mm error, which should be acceptable (although there is rotational motion, which may cause larger dislocation at a large image depth; and need more data to confirm that the distribution is normal, now the 3sigma = 99% is just an assumption).

#### 2012-11-13, 15:24:07 - Andras Lasso
(In r:2259|plus:2259) re #618: Added command-line option to TemporalCalibrationAlgoTest to specify the maximum time lag (--max-time-offset-sec)

#### 2012-12-07, 21:31:24 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-18, 20:58:14 - Eric Moult
(In r:2793|plus:2793) re #618: Two changes: 

(1) I changed from using amplitude normalization to std normalization. This change was made because it seems that normalization by std is more robust than by amplitude (based on our collected US sequences). As a result normalization by std produces lower variances in time-offset between trials (for fixed imaging parameters; again, based on our collected US sequences).

(2) I changed the max time-offset from 2 s to 0.5 s. Note that the 0.5 s max-time offset is desirable because (a) the time-offsets are all under 0.5 s (and thus within the +/-0.5 s range created by a max-time offset of 0.5 s) and (b) the +/-0.5 s range allows for a period of probe motion that is as low as 1 s. On the other hand, with a 2 sec max time-offset, we must assume that the period of probe motion is greater than 4 s(which it often isn't). Note that if the period of probe motion is less than 2 times the max time-offset and the signal is (perfectly/ nearly) periodic, there is a risk that the sliding signal is shifted over by a period during the alignment process (i.e. the computed time-offset will be: true time-offset + 1 period of probe motion). I changed the max time-offset for 2 s to 0.5 s both in the TemporalCalibrationAlgoTest.cxx file and as the default in the TemporalCalibrationAlgo.cxx file.

#### 2013-12-03, 16:48:00 - Andras Lasso
Temporal calibration is stable now

#### 2013-12-03, 16:48:00 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2014-09-22, 14:00:04 - Andras Lasso
re #618: Improved temporal calibration documentation and error logging
Commit: r:3704|plus:3704


## #619 Improve documentation of device set config files
Documentation of device set config files is not comprehensive. There is an overview on the Configuration_file_structure page and there are many example config files at https://www.assembla.com/code/plus/subversion/nodes/trunk/PlusLib/data/ConfigFiles. However, detailed information about the attributes is available by reading the code only.

Add a decription of attributes in the class documentation of each vtkPlusDevice derived files.

#### 2012-12-07, 21:32:42 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2012-12-07, 21:56:33 - Andras Lasso
Is it a duplicate, has it been fixed, or you think that the documentation is good enough already?

#### 2012-12-07, 21:56:33 - Andras Lasso
status: changed from "Invalid" to "New"

#### 2012-12-07, 22:00:51 - Adam Rankin
It has been marked as a duplicate.

#### 2012-12-07, 22:00:51 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2012-12-07, 22:04:04 - Andras Lasso
OK, thanks, I see now.

#### 2013-04-30, 18:49:50 - Andras Lasso
assigned_to_id: changed from null to "rankin"


## #620 fCal doesn't show devices when re-connected
When disconnected with show all devices on, fCal doesn't show devices on re-connection. It has to be switched off and on again.

#### 2012-10-23, 15:26:17 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.7.2"

#### 2012-12-07, 21:31:31 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:19 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:19 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-04, 15:20:12 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-07, 15:42:57 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-05-07, 15:43:00 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-05-08, 22:53:50 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-05-09, 15:41:06 - Adam Rankin
I'm not sure what fixed this but it appears to working as desired.

I believe the change that hid the visualizers on disconnect forced a reset of the state.

#### 2013-05-09, 15:41:06 - Adam Rankin
status: changed from "New" to "Fixed"


## #621 Image orientation arrows in fCal are incorrectly displayed for RF data
Connect to the 'RF data collection' device set (in ConfigFiles/Testing). Go to the Capturing tab.
The M arrow points to the right and the F arrow points down => this is wrong. M and F are mixed up.

Note that B-mode data is always stored in MF orientation in Plus, while RF-mode (non-scan-converted) data is always stored in FM orientation (see Ultrasound_image_orientation).

Also note that if RF processing parameters are defined in the config file then fCal can convert the acquired RF-mode images to B-mode images for display. If the images are converted to B-mode then they are displayed as B-mode and so the arrows should be displayed as usual for B-mode images (M/U direction horizontal; F/N direction is vertical).

Currently, in the 'RF data collection' the scan conversion is not performed because the TransducerGeometry='CURVILINEAR' attribute is missing from the ScanConversion element. This missing attribute should be added to the config file.

#### 2012-10-23, 15:40:44 - Andras Lasso
description: changed from "Connect to the 'RF data col..." to "Connect to the 'RF data col..."

#### 2012-12-07, 21:31:37 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:20 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-04-05, 22:58:07 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-05, 22:58:17 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-07, 21:22:51 - Adam Rankin
(In r:2654|plus:2654) re #717 Adjusting function declaration to be exported in the dll. Should suppress last warnings

test #621 adding functionality for RF image orientation to image visualizer

#### 2013-04-07, 21:22:51 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-07, 22:22:15 - Adam Rankin
This config file is missing. Could the description be updated to represent a current example case for testing?

#### 2013-04-08, 01:17:01 - Andras Lasso
(In r:2659|plus:2659) re #621: Fixed PlusConfiguration_SonixRP_L14-5_RF_NDICertus_fCal_1.0.xml config file and added a new config file (PlusConfiguration_DataCollectionOnly_SavedDatasetRf.xml) for testing RF data acquisition in simulation mode.

#### 2013-04-08, 01:24:35 - Andras Lasso
Added a sample config file: PlusConfiguration_DataCollectionOnly_SavedDatasetRf.xml.

I may have written earlier that when no RF processing params are available then there is no need to display anything, but actually showing the raw (only brightness converted) RF data is a necessary feature. So, when no RF processing parameters are specified then we should do one of these:
* A. Display RF data with default RF processing parameters (brightness conversion with default parameters, no scan conversion). Although not much visible from this RF data, what is visible is very important because it can be used to verify the correct orientation of the image (when one side of the transducer surface is touched then changes are visible in the corresponding side of the raw RF image so the user can check if the correct side was touched).
* B. Log a meaningful error message, explaining that image is not displayed because RF processing params are not available (so that the user can fix the issue). Currently this message floods the log: VTK log: ERROR: In ..\\..\\vtk\\Filtering\\vtkDemandDrivenPipeline.cxx, line 727|vtkStreamingDemandDrivenPipeline (09D621D8): Input port 0 of alg
orithm vtkOpenGLImageSliceMapper(0AC63478) has 0 connections but is not optional.


#### 2013-04-08, 01:24:35 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-04-08, 02:09:21 - Andras Lasso
fCal is leaking about 4-8kB/sec when PlusConfiguration_DataCollectionOnly_SavedDatasetRf.xml is used, the selected channel is the TrackedVideoDevice, and you are on the Capturing tab.

#### 2013-04-08, 03:44:48 - Adam Rankin
(In r:2661|plus:2661) test #621 visualization of data from an Rf device with no Rf processing is now properly disabled in fCal. An error message is logged.

VTK pipeline errors (and memory leak) have been properly avoided by not displaying NULL data input.

#### 2013-04-08, 03:44:48 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-08, 14:15:07 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-08, 18:41:18 - Adam Rankin
2d visualization not showing when it should

#### 2013-04-08, 18:41:18 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-04-08, 18:41:18 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-04-08, 19:33:15 - Adam Rankin
(In r:2666|plus:2666) test #621 cleaner approach to Rf visualization prevention

#### 2013-04-08, 19:33:15 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-09, 00:58:53 - Adam Rankin
Confirmed working under both Rf and B mode cases.

#### 2013-04-09, 00:58:53 - Adam Rankin
status: changed from "Test" to "Fixed"


## #622 PlusServer fails to send data if it is idle for a while
If a client connects to PlusServer, disconnects, after 10-15 seconds connects again, then frames are not sent (but error messages are displayed).

#### 2012-11-05, 05:29:56 - Andras Lasso
(In r:2240|plus:2240) fixed #622: Made PlusServer more robust. Even if it's idle for a while (no client is connected), it'll restart sending frames when a client connects again. The problem was that the server tried to send all the frames since the last client connection, but those were not available in the buffers anymore (because there could be a long time between the last clients disconnect and a new client connect).

#### 2012-11-05, 05:29:56 - Andras Lasso
status: changed from "New" to "Fixed"


## #623 User guide needs update for fCal Probe calibration
In the user guide it said to use 'water' . We should specify that it's 'room temperature water' and sound velocity is 1490.

#### 2012-11-07, 23:44:52 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.2"

#### 2012-11-08, 01:25:42 - Andras Lasso
@uthainual: please add those details to the user guide that you miss. If you need more info then just ask any Plys developer. Thanks!

#### 2012-11-08, 01:25:42 - Andras Lasso
assigned_to_id: changed from null to "uthainual"

#### 2012-11-09, 16:47:11 - Anonymous
I do not have a permission to edit the page
https://www.assembla.com/spaces/plus/wiki/System_calibration

#### 2012-11-09, 16:48:05 - Csaba Pinter
@Anonymous: You have to be a member and logged in to be able to edit the page

#### 2012-11-09, 16:48:05 - Csaba Pinter
assigned_to_id: changed from "ungi" to "uthainual"

#### 2012-12-07, 21:31:40 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:20 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-11-26, 17:13:57 - Adam Rankin
assigned_to_id: changed from "ungi" to "rankin"

#### 2013-11-26, 17:15:35 - Adam Rankin
Confirmed that the wiki guide on probe calibration reports the requested information.

https://www.assembla.com/spaces/plus/wiki/System_calibration
@ Spatial Calibration

#### 2013-11-26, 17:15:35 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #624 Temporal Calibration sometimes does not work
fCal temporal calibration sometimes does not work with no reason. 

#### 2012-11-07, 23:44:49 - Adam Rankin
Can you provide any details?

What did you do? What did the program do? Did it quit? Did it crash? Was the little dot red?

#### 2012-11-07, 23:45:06 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.2"

#### 2012-11-08, 00:03:59 - Paweena U-Thainual
I did the probe calibration for C5-2 using fCal 2.0  During the temporal calibration when we click 'start' and nothing happen so we click again and again until it work and suddenly it stop at 15%, 40%,... or etc. 
Then we have to start again. We finally made it but it's so random since we don't know what exactly the cause of this problem.

#### 2012-11-08, 01:16:36 - Andras Lasso
Thanks for reporting this, we'll fix this problem soon. 1.7.x releases are development snapshots only. I would recommend to use the latest stable release (1.6.x).

#### 2012-11-08, 01:16:36 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2012-12-07, 21:31:52 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-02-01, 18:01:20 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-05-04, 15:20:22 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-07, 22:06:37 - Andras Lasso
This should have been fixed by now. Just need to test.

#### 2013-05-07, 22:06:37 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-09-27, 03:08:02 - Andras Lasso
(In r:2970|plus:2970) re #624: Fixed temporal calibration, now repeated calibrations are performed correctly (temporal calib worked well only for the first time after starting fCal, subsequent calibrations contained the previous calibration data sets)

#### 2013-09-27, 03:31:11 - Andras Lasso
(In r:2971|plus:2971) re #624: Fixed temporal calibration algorithm member variables references (added this-> to make clear they are member variables)

#### 2013-10-21, 19:31:11 - Adam Rankin
Has been working with no issues. Closing as fixed.

#### 2013-10-21, 19:31:11 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2014-08-21, 19:58:34 - Andras Lasso
re #624: Added check for missing vtkTemporalCalibrationAlgo element (it was crashing when the element was missing)
Commit: r:3627|plus:3627


## #625 fCal slow-down when editing segmentation parameters
Using PlusApp_1.7.1.2174, during the probe calibration, image registration using fCal on SonixTouch. When we try to edit the ROI (pink frame) the warning pop up that 'too many candidate' and suddenly the program was freezed or hanged  and cannot even close it. 


#### 2012-11-08, 00:19:53 - Andras Lasso
description: changed from "During the probe calibratio..." to "Using PlusApp_1.7.1.2174, d..."

#### 2012-11-08, 00:19:53 - Andras Lasso
summary: changed from "Error on PlusApp_1.7.1.2174" to "fCal slow-down when editing segmentation parameters"

#### 2012-11-08, 00:19:56 - Andras Lasso
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-11-08, 01:21:01 - Andras Lasso
Thanks for reporting this, we'll investigate this problem soon.

In general, if the imaging parameters are set correctly and so there are not too many and points that look like fiducial points then there should be no slowdowns.

#### 2012-11-08, 01:21:01 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2012-11-08, 01:21:21 - Andras Lasso
milestone_id: changed from null to "Release Plus-1.7.2"

#### 2012-11-13, 21:38:01 - Adam Rankin
  <Segmentation
    ApproximateSpacingMmPerPixel='0.078'
    MorphologicalOpeningCircleRadiusMm='0.27'
    MorphologicalOpeningBarSizeMm='1.0'
    RegionOfInterest='27 27 793 589'
    MaxLinePairDistanceErrorPercent='10'
    AngleToleranceDegrees='10'
    MaxAngleDifferenceDegrees='10'
    MinThetaDegrees='-70'
    MaxThetaDegrees='70'
    MaxLineShiftMm='10.0'
    *MaxCandidates='20'*
    ThresholdImagePercent='10'
    CollinearPointsMaxDistanceFromLineMm='0.6'
    UseOriginalImageIntensityForDotIntensityScore='0'
  />

#### 2012-11-27, 19:14:34 - Andras Lasso
The current implementation fails to detect fiducials if there are too many point candidates. The correct operation would be to just use the N highest-ranked fiducial candidates for the rest of the calibration process.

Specifically, FidPatternRecognition::RecognizePattern(TrackedFrame* trackedFrame, PatternRecognitionError& patternRecognitionError) should not return with an error if( m_FidSegmentation.GetDotsVector().size() > m_MaxNumberOfCandidates ) but simply ignore all the fiducial candidates over the maximum number and return with a warning.

The maximum number of fiducial candidates should be passed to m_FidSegmentation object (to limit the number of returned maximum fiducial candidate count) or to the m_FidLineFinder object (that would ignore all the candidates over the maximum count) instead of used in FidPatternRecognition.

We should set a good default value for the MaxCandidates value that works well for most of the cases and not too big to cause inconvenient delays (maybe 20?). Add the MaxCandidates value to the XML file only if it differs from the default value to make the config files simpler (and the default value easier to modify).

Change the MaxCandidates name to NumberOfMaximumFiducialPointCandidates everywhere (XML attribute name, member variable name).

A few other findings in these classes:
* m_CandidateFidValues objects could be probably removed
* passing vector by value is inefficient:
** FidLineFinder::SetCandidateFidValues(std::vector<Dot> value) 
** FidLineFinder::SetDotsVector(std::vector<Dot> value)
** std::vector<std::vector<Line> >  FidLineFinder::GetLinesVector()
** std::vector<Pattern*> GetPatterns()
** std::vector<NWire> GetNWires()


#### 2012-11-28, 00:17:54 - Csaba Pinter
Good points!

One thing that came to mind: if the maximum candidates number is lower than the number of wires, then log a warning or error.

#### 2012-11-29, 20:13:41 - Adam Rankin
(In r:2290|plus:2290) Re #625

Implementing suggested fix for too many candidates check.

Removing max number of candidates from configuration files except where automated tests require augmented values. Value will be written if it differs from DEFAULT_NUMBER_OF_MAXIMUM_FIDUCIAL_POINT_CANDIDATES.



#### 2012-11-29, 20:14:41 - Adam Rankin
New solution tested with saved data and SonixTouch+Ascension.

Please comment or close when satisfied!

#### 2012-11-29, 20:14:41 - Adam Rankin
assigned_to_id: changed from "rankin" to "uthainual"

#### 2012-11-29, 20:14:41 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-12-07, 21:31:58 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-01-21, 18:08:13 - Adam Rankin
Going to close this as I presume it's fixed.

#### 2013-01-21, 18:08:13 - Adam Rankin
status: changed from "Test" to "Fixed"


## #626 The RF processor does not fill the UltrasoundImageType field correctly
from Andras:

You are right. The RF processor does not fill the UltrasoundImageType field correctly.

Adding one line may fix the problem:

...
    else if (STRCASECMP(operation.c_str(),'BRIGHTNESS_SCAN_CONVERT')==0)
    {
      // do brightness and scan conversion
      vtkImageData* brightnessImage=rfProcessor->GetBrightessScanConvertedImage();
      // Update the pixel data in the frame
      rfFrame->GetImageData()->DeepCopyFrom(brightnessImage);
      rfFrame->GetImageData()->SetImageOrientation(US_IMG_ORIENT_MF);
>>>>>>>>>      rfFrame->GetImageData()->SetImageType(US_IMG_BRIGHTNESS);  <<<<<<<<<<<< add this line
    }
    else
    {
      LOG_ERROR('Unknown operation: '<<operation);
      exit(EXIT_FAILURE);
    }

#### 2012-11-12, 19:03:09 - Andrey Fedorov
(In r:2253|plus:2253) re #626: initialize output image type to MF for the brightness scan convert operation to


#### 2012-11-12, 19:03:24 - Andrey Fedorov
status: changed from "New" to "Fixed"

#### 2012-11-13, 02:50:31 - Andras Lasso
(In r:2258|plus:2258) re #626: Updated scan conversion baseline test files according to code fix (UltrasoundImageType field value is now correct: BRIGHTNESS)


## #627 fCal crashes when attempting to connect to an NDI Polaris using the NDI Certus device type.
It should report an error and continue gracefully.

#### 2014-03-05, 20:32:23 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-03-05, 20:32:26 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-03-05, 20:32:30 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-03-21, 15:33:49 - Adam Rankin
re #627 Merged revision(s) 3216, 3226 from trunk/PlusLib/data/ConfigFiles/PlusDeviceSet_Server_SimulatedUltrasound_3DSlicer.xml:


Commit: r:3244|plus:3244

#### 2014-03-21, 15:36:10 - Adam Rankin
re #627 Merged revision(s) 3216 from trunk/PlusLib:

Commit: r:3245|plus:3245

#### 2014-03-21, 15:38:43 - Adam Rankin
re #627 Merged revision(s) 3209-3215, 2439-3209, 3217-3245 from trunk/PlusLib:

Commit: r:3246|plus:3246

#### 2014-03-21, 15:39:38 - Adam Rankin
re #627 Merged revision(s) 2439-3246 from trunk/PlusLib:
Commit: r:3247|plus:3247

#### 2014-03-21, 16:17:12 - Adam Rankin
re #627 Merged revision(s)  from branches/rankin-sandbox/PlusApp:
Commit: r:3248|plus:3248

#### 2014-03-21, 17:10:18 - Adam Rankin
re #627 restoring incorrectly merged files
Commit: r:3249|plus:3249

#### 2014-03-21, 17:11:07 - Adam Rankin
re #627 Merged revision(s)  from trunk/PlusLib:
Commit: r:3250|plus:3250

#### 2014-05-12, 17:04:28 - Adam Rankin
re #627 Merged revision(s) 3287-3305 from trunk/PlusBuild:

Merged revision(s) 3287-3305 from trunk/PlusApp:

Merged revision(s) 3287-3305 from trunk/PlusLib:
Commit: r:3306|plus:3306

#### 2014-05-26, 16:10:32 - Andras Lasso
If no Certus device is attached to the system then the application crashes (due to the TransputerDetermineSystemCfg call in NDI's toolkit, which determines the system configuration causes the application to crash). There is nothing we can do about this, so I just added this information to the documentation on the wiki.

#### 2014-05-26, 16:10:32 - Andras Lasso
status: changed from "Accepted" to "Invalid"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #628 Update documentation for the configuration file structure for multistream
Make this:
url:https://www.assembla.com/spaces/plus/wiki/Configuration_File_Documentation|https://www.assembla.com/spaces/plus/wiki/Configuration_File_Documentation
up to date

It would be good to save the current documentation for the 1.8 branch

#### 2012-12-11, 15:13:04 - Csaba Pinter
description: changed from "Make this:
https://www.asse..." to "Make this:
https://www.asse..."

#### 2012-12-11, 15:13:04 - Csaba Pinter
summary: changed from "Improve the documentation for the configuration file structure" to "Update documentation for the configuration file structure for multistream"

#### 2012-12-11, 17:23:45 - Csaba Pinter
description: changed from "Make this:
https://www.asse..." to "Make this:
https://www.asse..."

#### 2012-12-11, 21:37:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-12-17, 20:21:35 - Adam Rankin
description: changed from "Make this:
https://www.asse..." to "Make this:
url:https://ww..."

#### 2012-12-17, 20:22:06 - Adam Rankin
Partially complete.

Basic outline of xml attributes created.
Some details filled in about devices.

Reverting to New status until ticket is completed.

#### 2012-12-17, 20:22:06 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-02-19, 21:32:45 - Adam Rankin
Documentation is reasonable. Going to close the ticket until more work is needed.

#### 2013-02-19, 21:32:45 - Adam Rankin
status: changed from "New" to "Fixed"


## #629 Segmentation Parameter Dialog causes lots of VTK pipeline related errors.
Fix them!

#### 2012-11-29, 20:25:25 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2012-12-07, 21:33:01 - Adam Rankin
milestone_id: changed from "Release Plus-1.7.2" to "Release Plus-1.8.1"

#### 2013-01-16, 17:48:29 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-02-01, 18:01:20 - Andras Lasso
Move all tickets from Plus-1.8.1 to Plus-2.1, as in Plus-1.8.x only urgent bugfixes and minor features will be made. New developments and larger changes will be done in 2.x (trunk)

#### 2013-02-01, 18:01:20 - Andras Lasso
milestone_id: changed from "Release Plus-1.8.1" to "Release Plus-2.1"

#### 2013-02-26, 18:43:16 - Adam Rankin
It's not the segmentation parameter dialog, it's the 2d visualizer when the input is disconnected... deal with this later by hiding the 2d renderer when seg dialog is shown.

#### 2013-02-26, 21:37:22 - Adam Rankin
(In r:2536|plus:2536) test #686 Stream mixer determines answeres to queries based on input channels

test #685 tool status window updates after a channel change, so does reset tracker button

test #684 fCal now configures default selected channel id

fixed #629 hiding no-input image actor when segmentation parameter dialog is shown

Updated capture client with save button

#### 2013-02-26, 21:37:22 - Adam Rankin
status: changed from "New" to "Fixed"


## #630 Create ohloh.net site for Plus
Adam suggested that Plus would need a nice site. This is not the nicest, but it is a good presentation of the open-source projects.
See Slicer's site: http://www.ohloh.net/p/slicer

#### 2012-12-06, 15:31:24 - Csaba Pinter
summary: changed from "Creare ohloh.net site for Plus" to "Create ohloh.net site for Plus"

#### 2012-12-07, 18:07:45 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2013-04-22, 04:21:02 - Csaba Pinter
Site created:
https://www.ohloh.net/p/plustoolkit

#### 2013-06-18, 14:29:19 - Adam Rankin
status: changed from "New" to "Fixed"


## #631 Make vtkOpenIGTLinkTracker compatible with TDATA messages
Brainlab sens TDATA message type through OpenIGTLink:
http://www.na-mic.org/Wiki/index.php/OpenIGTLink/ProtocolV2/Type/TrackingData


#### 2012-12-07, 04:07:54 - Tamas Ungi
(In r:2303|plus:2303) Re #631: WIP. TDATA messages are received. But for some reason a test with PlusServer cannot send TRANSFORM messages, so the tracking data is probably not usable yet.

#### 2012-12-07, 04:30:53 - Tamas Ungi
When trying to debug the PlusServer, I put a breakpoint at vtkPlusOpenIGTLinkServer.cxx:304
The program strangely stops there occasionally and then TRANSFORM messages are sent to Slicer.
But when I remove the breakpoint, messages are not sent to Slicer. So the problem must be related to some real-time buffering feature.

#### 2012-12-07, 04:41:02 - Tamas Ungi
When I manage to stop vtkPlusOpenIGTLinkServer::DataSenderThread with a debug breakpoint, then remove the breakpoint and let the program go, PlusServer is working for about 10 seconds. Then it stops working again... it needs to be debugged further.

#### 2012-12-07, 05:24:20 - Tamas Ungi
(In r:2304|plus:2304) Re #631: Adding a modified version of TrackingDataServer to PlusApp diagnostic tools. This standalone application simulates tracking data through TDATA messages. This helps debugging the OpenIGTLinkTracker.

#### 2012-12-07, 18:07:20 - Adam Rankin
AquisitionRate was 0. Add check and warning.

#### 2012-12-07, 18:07:20 - Adam Rankin
assigned_to_id: changed from "ungi" to "rankin"

#### 2012-12-07, 18:07:34 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.7.2"

#### 2012-12-07, 18:08:53 - Tamas Ungi
(In r:2305|plus:2305) Fixed #631: The ticket was fixed at the first commit. The reason my test didn't work was I accidentally set AcquisitionRate='0'.

#### 2012-12-07, 18:08:53 - Tamas Ungi
status: changed from "New" to "Fixed"


## #632 Fix linux build warnings


#### 2012-12-11, 21:14:05 - Adam Rankin
Fixed. 

const std::vector<Type>&

instead of

std::vector<Type>&

#### 2012-12-11, 21:14:09 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-12-11, 21:14:16 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.8.1"

#### 2013-01-16, 17:48:10 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-07-05, 01:12:33 - Andras Lasso
(In r:2916|plus:2916) re #632: Fixed some linux warnings

#### 2013-07-05, 01:57:03 - Adam Rankin
(In r:2918|plus:2918) re #632: Fixed some linux build warnings


#### 2015-08-26, 12:52:11 - Andras Lasso
re #632: Attempt to fix linux build warning in PlusCommon

[  5%] Building CXX object src/PlusCommon/CMakeFiles/vtkPlusCommon.dir/PlusCommon.cxx.o
/.../PlusLib/src/PlusCommon/PlusCommon.cxx: In function ‘PlusStatus PlusCommon::CreateTemporaryFilename(std::string&amp;, const string&amp;)’:

/.../PlusLib/src/PlusCommon/PlusCommon.cxx:225:30: warning: ignoring return value of ‘char* tmpnam(char*)’, declared with attribute warn_unused_result [-Wunused-result]


Commit: r:4301|plus:4301

#### 2015-09-01, 19:59:43 - Adam Rankin
re #632 updating common includes to use newer include to prevent compiler warnings and future compiler errors
Commit: r:4321|plus:4321

#### 2015-09-30, 21:39:53 - Andras Lasso
re #632: Fixed linux build warning fgets result is not used
Commit: r:4373|plus:4373


## #633 3dConnexion tracker not working
I have compiled PLUS in 64-bit. I didn't find any configuration option to add the 3dConnexion tracker, so I expected it to work. I get the following error when I try to use it with the config file from the PlusApp installer package:

d:\\PlusExperimental-64bit-Release\\bin\elease>TrackingTest --config-file=d:\\Plus
App_2.0.0.2311\\config\\PlusConfiguration_VideoNone_3dConnexion.xml
|INFO|000.001000| PlusLib version: 2.0.0
|ERROR|000.005000| No devices created. Please verify configuration file and any
error produced.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(117)
|ERROR|000.015000| Unable to parse data collection XML tag.|in ..\\..\\..\\..\\PlusL
ib\\src\\DataCollection\\Applications\  rackingTest.cxx(254)

When I tried to use it by merging the 3dConnexion tracker type with a file that has been working with Plus 2.0.0, I got an error message saying that 'Unable to create device: 3dConnexion' from vtkPlusDeviceFactory.cxx(210)

#### 2012-12-09, 00:43:32 - Andras Lasso
It seems that the 3dConnexion tracker has been accidentally deleted.
@rankin: Please restore this tracker and double check that all other recent enhancements and fixes are preserved in the latest trunk version.

#### 2012-12-09, 00:43:32 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2012-12-11, 21:22:16 - Adam Rankin
Restored. Do we have one in the lab to try out?

#### 2012-12-11, 21:22:16 - Adam Rankin
status: changed from "New" to "Test"

#### 2012-12-11, 21:22:22 - Adam Rankin
milestone_id: changed from null to "Release Plus-1.8.1"

#### 2013-01-16, 17:48:18 - Adam Rankin
status: changed from "Test" to "Fixed"


## #634 fCal crash during data recording
I compiled PLUS in 64-bit. Then started fCal to record data using Epiphan video and OpenIGTLinkTracker. Short data recording sessions went well. When I left the recording for longer time, fCal crashed after 1898 frames.
I attach the log file.
PLUS revision number: 2311.

#### 2012-12-09, 00:07:37 - Tamas Ungi
file:120812_190019_PlusLog.txt


#### 2012-12-09, 00:07:37 - Tamas Ungi
Attachment added: "120812_190019_PlusLog.txt"

#### 2012-12-09, 00:07:45 - Tamas Ungi
Issue Type: changed from "Enhancement" to "Bug"

#### 2012-12-09, 00:07:50 - Tamas Ungi
component_id: changed from "None" to "PlusLib"

#### 2012-12-09, 00:07:55 - Tamas Ungi
component_id: changed from "PlusLib" to "None"

#### 2012-12-09, 00:44:40 - Tamas Ungi
Update after more testing: I repeated this test on the same hardware with the same config file, and couldn't reproduce the problem. I could fill my available computer memory (over 3 GB) by recording tracked frames with fCal, and no errors happened.

#### 2012-12-09, 04:00:06 - Csaba Pinter
Strange. We should repeat this test several times in debug mode with the process attached to the debugger.
(My guess is that this crash has already been there in the 1.x versions before the multistream merge)

#### 2012-12-11, 21:22:38 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-12-11, 21:22:41 - Adam Rankin
component_id: changed from "None" to "PlusApp-fCal"

#### 2012-12-11, 21:22:48 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2012-12-18, 15:52:40 - Andras Lasso
fCal reproducibly crashes even without any data recording, just if it stays connected for about 10-20 minutes. Happens in both debug and release mode. Not due to memory leaks.

The problem seems to be related to passing around vtkSmartPointer<vtkPlusStreamBuffer>, see attached screenshots.

Maybe the root cause of the problem is the lack of vtkPlusStreamBuffer::operator=.

Or, maybe there is an issue with reference counting with vtkSmartPointer simultaneously in multiple threads? Even if it's not the root cause of the crash, the current way of iterating through the frame buffer is quite expensive, as the StreamBuffer seems to get copied and deleted in each iteration: for( StreamBufferMapContainerConstIterator bufIt = stream->GetBuffersStartConstIterator(); bufIt != stream->GetBuffersEndConstIterator(); ++bufIt) { vtkSmartPointer<vtkPlusStreamBuffer> buffer = bufIt->second; ...}. I would consider storing just pointers (instead of smart pointers) in an STL container, or storing the VTK objects in a VTK container (e.g., vtkCollection, which manages reference counting properly, without copying the object each time it is accessed).


#### 2012-12-18, 15:53:34 - Andras Lasso
image:at1W86ssSr4RLvacwqEsg8
fCal crash screenshot 1

#### 2012-12-18, 15:53:34 - Andras Lasso
Attachment added: "2012-12-182-37-16AM.png"

#### 2012-12-18, 15:53:51 - Andras Lasso
image:aEc0-essSr4Pp7acwqEsg8
fCal crash screenshot 2

#### 2012-12-18, 15:53:51 - Andras Lasso
Attachment added: "2012-12-183-19-41AM.png"

#### 2012-12-18, 15:56:30 - Adam Rankin
I am in the process of reworking the image buffer structure. Once that is complete I will investigate!

#### 2013-01-16, 17:45:57 - Adam Rankin
I suspect this has been fixed by Andras' fixes to the smart pointer usage.

Can I set this to fixed?

#### 2013-01-16, 18:13:28 - Tamas Ungi
I think Isaiah ran some longer recording sessions yesterday. He didn't report any crash during that, so it's probably fixed.

#### 2013-01-16, 23:10:38 - Andras Lasso
I agree, it should be OK now. A new ticket should be entered if the problem occurs again.

#### 2013-01-16, 23:10:38 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-09-04, 23:09:24 - Adam Rankin
re #634 Using thread safe function mktemp to generate temp filename instead of tmpnam

Commit: r:4344|plus:4344


## #635 Create application that combines PlusServer and data recording
Many applications use Slicer as GUI, and use PLUS through the PlusServer. To be able to record lossless data (Slicer may not process the full bandwidth), data recording should be implemented on the PLUS side (as the capturing function in fCal).
I can think of two options:
1. Add PlusOpenIGTLinkServer to fCal. The server is just a class, and doesn't require additional GUI. So this is not much work. Slicer could run parallel with fCal and display the data that is being recorded by fCal.
2. Add data recording option to PlusServer. This would require implementation of 'start rec / stop rec' command messages in PlusServer, or a PlusServer GUI.

The second option would probably be a better design on the long run. But this is an important feature, so implementing the first until the second is ready would be appreciated too.


#### 2012-12-11, 21:23:34 - Adam Rankin
Could create a virtual device to record a stream to disk.

#### 2012-12-11, 21:23:36 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-12-11, 21:23:38 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2012-12-11, 21:37:23 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-01-16, 21:06:23 - Andras Lasso
(In r:2386|plus:2386) re #635: Added remote control mechanism to PlusServer. Commands can now be sent to PlusServer through OpenIGTLink (GET_REXEC, STRING type) and PlusServer replies after execution (RTS_REXEC, STATUS type). Custom commands can be registered at the vtkPlusCommandProcessor. Command names and parameters are encoded in XML: <Command Name='SomeCommand' SomeParam='35' SomeOtherParam='46' />. Replies can be any custom string. See the PlusServerRemoteControl application for a simple example. The two existing commands (start and stop data collector) just print a message in the server - real working commands will be added later (start recording, stop recording, save to file, volume reconstruction, etc.).

#### 2013-01-16, 21:06:23 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-17, 18:00:04 - Andras Lasso
(In r:2392|plus:2392) re #635: PlusServer can now record images, triggered by commands sent remotely through OpenIGTLink. VirtualStreamCapture device is used for writing the acquired frames to file, so any number of streams can be recorded in parallel.

#### 2013-01-18, 00:10:38 - Andras Lasso
(In r:2394|plus:2394) re #635: Added SuspendRecording and ResumeRecording command, so now recording can be started/paused/stopped. Changed the command processor to execute all commands on the main thread (separate processing thread is kept for now; separate processing thread may reduce latency but increases complexity of resource sharing between multiple threads).

#### 2013-01-18, 15:12:52 - Andras Lasso
(In r:2395|plus:2395) re #635: Fixed PlusServer shutdown error. Added more parameters to the remote control application.

#### 2013-01-18, 18:43:00 - Andras Lasso
(In r:2396|plus:2396) re #635: Fixed looped playback timestamping in vtkSavedDataVideoSource. The problem was that vtkDataCollector::SetLoopTimes() just initialized the loop times for the first simulated data source. Now default initialization is added for all sources. vtkDataCollector::SetLoopTimes hasn't been fixed: it should be extended to properly handle multiple streams (determine the common time range among all streams) or should be removed completely.

#### 2013-01-21, 00:54:42 - Andras Lasso
(In r:2403|plus:2403) re #635: Fixed loop range synchronization in vtkDataCollector (to finalize the vtkSavedDataTracker must be merged with vtkSavedDataVideoSource). Fixed looped playback in vtkSavedDataVideoSource. Fixed typo in PlusConfiguration_SavedDataset_TemporalCalibration.xml. vtkPlusDevice GetTrackedFrameList must be fixed as well to make it work correctly for multiple streams.

#### 2013-01-22, 19:44:13 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.0"

#### 2013-01-22, 19:45:10 - Andras Lasso
file:a7wWM0zmWr4PHhacwqjQYw
Sample configuration and remote control batch files for the demonstration of multi-stream saving capabilities

#### 2013-01-22, 19:45:10 - Andras Lasso
Attachment added: "MultiStreamSavingExample.zip"

#### 2013-01-24, 16:25:31 - Andras Lasso
(In r:2425|plus:2425) re #635: Fixed volume reconstruction config reading

#### 2013-01-24, 16:27:19 - Andras Lasso
(In r:2426|plus:2426) re #635: Added missing makefile

#### 2013-01-24, 17:06:28 - Andras Lasso
(In r:2427|plus:2427) re #635: Updated PlusApp according to volume reconstruction API changes

#### 2013-01-24, 20:18:27 - Andras Lasso
(In r:2428|plus:2428) re #635: Fixed pose computation of the reconstructed volume. Now the reconstructed volume that is sent through OpenIGTLink appears in correct position in Slicer.

#### 2013-01-24, 23:51:02 - Andras Lasso
(In r:2429|plus:2429) re #635: Changed command processor to allow processing commands in the background (e.g., reconstruct volume while sending live images)

#### 2013-01-25, 16:53:50 - Andras Lasso
(In r:2430|plus:2430) re #635: Added live volume reconstruction to PlusServer. Now there is no need to acquire all the frames before the volume reconstruction, but frames can be added to the volume on-the-fly. A snapshot of the reconstructed volume can be requested any time (even during the reconstruction). Functionality is complete, but need some more testing, clean-up, and performance optimization.

Example commands for a live volume reconstruction:
PlusServerRemoteControl.exe --command=START_RECONSTRUCTION --device=TrackedVideoDevice --output-image-name=recvol_Reference
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=SUSPEND_RECONSTRUCTION
@echo Please start volume rendering of the sent volume
timeout /t 10
PlusServerRemoteControl.exe --command=RESUME_RECONSTRUCTION
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=GET_RECONSTRUCTION_SNAPSHOT
PlusServerRemoteControl.exe --command=STOP_RECONSTRUCTION
pause


#### 2013-01-26, 23:04:39 - Andras Lasso
(In r:2432|plus:2432) re #635: Fixed update logic in the volume reconstructor to allow repeated reconstructions with hole filling. 

#### 2013-01-26, 23:06:03 - Andras Lasso
(In r:2433|plus:2433) re #635: Add frames after a volume reconstruction snapshot request is completed to make sure frames are added even if snapshot requests are very frequent

#### 2013-01-26, 23:07:37 - Andras Lasso
(In r:2434|plus:2434) re #635: Prevent regeneration of multiple simulated images for the same tracking timestamp to improve performance

#### 2013-01-26, 23:11:12 - Andras Lasso
(In r:2435|plus:2435) re #635: Updated sample config files for the US simulator. PlusServer with the Test_PlusConfiguration_SimulatedUS.xml can be used for testing image acquisition start/stop and live volume reconstruction without any hardware device.

#### 2013-01-27, 03:54:27 - Gabor Fichtinger
Cool!  Someone could as well start setting up Perk Tutor w/ SimUS.
 
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com] 
Sent: January-26-13 6:11 PM

#### 2013-01-28, 21:47:52 - Andras Lasso
(In r:2436|plus:2436) re #635: Fixed curvilinear reconstructor output orientation (the output was actually computed for FU oriented images, while actually the RF images are expected to always have FM orientation). Fixed flipping of RF data (where IQ pairs in rows or columns must be kept when the rows or columns are reordered for flipping).

#### 2013-01-29, 05:14:38 - Andras Lasso
(In r:2437|plus:2437) re #635: Updated the BK video source according to the fixed curvilinear scan converter (BK provides the scanline closest to the marked side, so the lines shall be inserted in reverse order). The order might be dependent on the used transducer or imaging mode, so maybe the scanline reordering can be made configurable through the config file in the future.

#### 2013-02-25, 15:14:40 - Andras Lasso
(In r:2531|plus:2531) re #635: Changed PlusServer remote command execution interface to send and receive STRING messages. Any device name is accepted. Reply is sent back as a string message to ...Reply device.

#### 2013-04-02, 17:39:15 - Adam Rankin
Is this ticket satisfied? The framework and client exist, and we are now addressing individual issues?

#### 2013-04-03, 01:17:55 - Tamas Ungi
This is done, tested, and works well, according to my experience.

#### 2013-04-03, 01:17:55 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2013-04-19, 20:46:26 - Andras Lasso
(In r:2718|plus:2718) re #635: Removed GET_DEVICE_IDS from the command list in the help (the command has been removed, as it's not needed anymore; operations are identified by using the channel ID only)

#### 2013-04-19, 21:40:08 - Andras Lasso
(In r:2719|plus:2719) re #635: Fixed volume reconstruction remote command (it was crashing and did not reply properly)


## #636 Merge all recent changes into the trunk
During the multi-stream branch merge into the trunk (commit 2318) some recent developments have been skipped:
* vtkBkProFocusVideoSource (commit 2223)
* Linux build errors (https://www.assembla.com/spaces/plus/messages/2548853)

Until the trunk is fixed the latest stable branch (https://subversion.assembla.com/svn/plus/branches/Plus-1.8).

#### 2012-12-11, 15:16:07 - Csaba Pinter
I fixed the build errors in the weekend in 2312 and asked Adam to clean it up. He said he was going to do it today.

#### 2012-12-11, 15:30:59 - Andras Lasso
I've reviewed all the files one-by-one in the 2318 commit and found the followings:

Some developments have been not merged:
* vtkBkProFocusVideoSource.cxx
* vtkPhidgetSpatialTracker.cxx,h
* vtkSonixVideoSource.cxx
* vtkUsSimulatorVideoSource.cxx (WriteConfiguration is missing)

Questions and minor comments:
* Why this->SpawnThreadForRecording has been removed (vtkEpiphanVideoSource.cxx, vtkOpenIGTLinkVideoSource.cxx, ...)? Is a thread always created? Thread is probably not needed if a callback function is used.
* vtkNDICertusTracker.cxx => Why the no threading version has been removed in PlusStatus vtkNDICertusTracker::StartTracking()?
* Clarify the role of vtkPlusDevice::IsTracker(). The current comment (Answer the question: are you a tracker?) is not helpful. What happens if the device provides both video and tracking data?
* Remove the 'AR:' from comments (// AR: update the number of frames.)
* int frameSize[2]; => always initialize to {0,0}
* Why the AddDefaultBuffer(aBuffer, 0); calls are needed? Couldn't we add a default buffer by default?
* vtkPlusStreamBuffer::vtkPlusStreamBuffer() => Initialize the buffer size to 500 might be a bit too large for video devices

Also, please review all the commits between 2299 and 2314 to make sure that everything is included in the latest trunk version (e.g., the linux build error is there because the fix was done in 2312 and it was not included in the latest trunk).


#### 2012-12-11, 16:38:30 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2012-12-11, 16:38:33 - Adam Rankin
component_id: changed from "None" to "PlusLib"

#### 2012-12-11, 16:38:35 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2012-12-11, 17:05:50 - Adam Rankin
_vtkUsSimulatorVideoSource.cxx (WriteConfiguration is missing)_
The write configuration did nothing but call the superclass::writeconfiguration. Write configuration is now virtual so it will have the same behaviour.

_Why this->SpawnThreadForRecording has been removed (vtkEpiphanVideoSource.cxx, vtkOpenIGTLinkVideoSource.cxx, ...)? Is a thread always created? Thread is probably not needed if a callback function is used._
Architecture simplicity. The small overhead of having a thread for the cleanliness of the architecture was considered a positive step.

_vtkNDICertusTracker.cxx => Why the no threading version has been removed in PlusStatus vtkNDICertusTracker::StartTracking()?_
Merge loss. Fixed. But overriding the architecture seems like a hack. Does the NDI Certus only work if no threading is specified?

_Clarify the role of vtkPlusDevice::IsTracker(). The current comment (Answer the question: are you a tracker?) is not helpful. What happens if the device provides both video and tracking data?_
Function removed. Legacy code from a first attempt.

_Remove the 'AR:' from comments (// AR: update the number of frames.)_
Those are not comments from me. Still remove?

_int frameSize[2]; => always initialize to {0,0}_
Done.

_Why the AddDefaultBuffer(aBuffer, 0); calls are needed? Couldn't we add a default buffer by default?_
These functions were added for the automated tests that create devices directly. I could rename them to be more indicative that they shouldn't be used? Alternatively I could create configuration files for the automatic tests that don't have them and remove these functions.

_vtkPlusStreamBuffer::vtkPlusStreamBuffer() => Initialize the buffer size to 500 might be a bit too large for video devices_
Done.

#### 2012-12-11, 18:59:48 - Andras Lasso
>> vtkUsSimulatorVideoSource.cxx (WriteConfiguration is missing)
> The write configuration did nothing but call the superclass::writeconfiguration. Write configuration is now virtual so it will have the same behaviour.

It was a placeholder, to be completed later, but never mind. There should have been a comment there. In general it's good that code that doesn't do anything is removed.

>> Why this->SpawnThreadForRecording has been removed (vtkEpiphanVideoSource.cxx, vtkOpenIGTLinkVideoSource.cxx, ...)? Is a thread always created? Thread is probably not needed if a callback function is used.
> Architecture simplicity. The small overhead of having a thread for the cleanliness of the architecture was considered a positive step.

There are quite a lot of things are going on in vtkPlusDevice::vtkDataCaptureThread. The overhead may be negligible, but there is some interference with the real data capturing: self->InternalUpdateRate is computed while it should be computed from the actual callback rate; UpdateTime modified is called even if no update has been performed. So, some mechanism is required for disabling at least some of the operations in the data capture thread. The simplest may be to not even start the thread.

> Remove the 'AR:' from comments (// AR: update the number of frames.)

I have no idea who put the 'AR:' in the comments. Maybe they were intended for you to review? Anyway, after you've reviewed them they can be removed (either just the AR or the whole comment).

> Why the AddDefaultBuffer(aBuffer, 0); calls are needed? Couldn't we add a default buffer by default?

The best would be to avoid these calls entirely. If no buffer is defined in the config file or by the developer then the device should create its own default buffer (maybe in the Connect() method).

#### 2012-12-17, 19:52:46 - Adam Rankin
(In r:2342|plus:2342) re #636 Removing poorly designed functions. Adding config file information where necessary to properly init devices

Removing comments

#### 2012-12-17, 19:53:25 - Adam Rankin
I will address the always-threaded architecture shortly.

#### 2013-01-29, 19:35:32 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-01-29, 19:35:49 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-02-15, 21:18:59 - Adam Rankin
Not sure if this ticket should still exist. It just seems to be lingering.

#### 2013-02-15, 21:21:56 - Andras Lasso
If all the comments of 2012-12-11 13:59 are fixed then I think this can be closed.

#### 2013-02-19, 17:37:45 - Adam Rankin
(In r:2510|plus:2510) test #636 re-adding single threaded option to vtkPlusDevice. Now the configuration file can specify if the device is not to run its own InternalUpdate thread. This is used for devices with callback mechanisms.

#### 2013-02-19, 17:37:45 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-19, 20:45:26 - Adam Rankin
(In r:2511|plus:2511) re #636 Having constructors of certain devices force single thread by default. Can be overridden by the configuration file

#### 2013-02-19, 21:31:12 - Adam Rankin
Confirm accurate recording FPS numbers with SonixVideo source.

#### 2013-02-19, 21:31:12 - Adam Rankin
status: changed from "Test" to "Fixed"


## #637 Use different postprocessing on acquired US images to improve image quality
This may be an idea for a student project in the future.

Stephen Aylward suggested that we look into this toolkit:
http://mi.eng.cam.ac.uk/~rwp/stradx/
If it's not open-source now, Kitware can share their similar code if we want to integrate it into PLUS. It does homogeneity correction and/or corrects displacements due to varying pressure of the US probe on the tissue during scanning.

He also suggested to look into Danielle's work:
http://www.midasjournal.org/browse/publication/655
to see if we can harvest code/ideas.

#### 2012-12-12, 04:39:59 - Andras Lasso
StradX is not open-source. It would be interesting to know a bit more about what Kitware could contribute for the homogeneity/displacement correction.

We started from the Synchrograb4D version (Danielle's addition to Synchrograb), however the 4D add-on was removed due to increased complexity. With the multi-stream design it'll be easy to reintroduce 4D reconstruction (volume reconstruction of different heart phases) by adding a virtual splitter device.


## #638 Support multiple image buffers in a single device
This will allow devices that output stereo vision to be used to their full potential.

#### 2012-12-17, 20:23:49 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-16, 19:28:52 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-01-18, 15:29:33 - Adam Rankin
status: changed from "Test" to "New"

#### 2013-01-21, 21:35:56 - Adam Rankin
(In r:2406|plus:2406) re #638 Adding <Image> tag to device configuration.

Symmetric to <Tool> tag except that it's used to represent image buffers. Currently devices write to Device.Images[0] but future devices can do smart lookup of image buffers by ID.

Added clear option to fCal message log context menu

Removed notion of selectable devices, all devices shown to clients that request the list.

Reconciled all config files to use the same convention for naming devices and laying out config files. Should make it easier to search-replace.
Fixed tests to use new device names.

Properly initialized vtkPlusStreamTool and vtkPlusStreamImage

#### 2013-01-21, 21:41:32 - Adam Rankin
Do we have any stereo devices to test this change?

#### 2013-01-21, 21:41:32 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-01-22, 14:54:37 - Andras Lasso
Yes, the MicronTracker can acquire a stereo image stream

#### 2013-02-19, 21:32:07 - Adam Rankin
Going to close this ticket as it's tracked as a use case for the 2.0 change. Multiple video sources are now supported.

#### 2013-02-19, 21:32:07 - Adam Rankin
status: changed from "Test" to "Fixed"


## #639 Change Epiphan parameter name to be generic
The Epiphan API function FrmGrab_Open accepts several different location options including local, network, or serial number (per Epiphan SDK notes).

The small attached patch makes this change, which is mostly names except for changing FrmGrab_GetSN -> FrmGrab_GetLocation.

 I have tested with this change using both VGA2USB-LR and VGA2Ethernet, and it works fine (example config files attached). Thanks.

#### 2013-01-02, 23:19:13 - Isaiah Norton
file:dsbLc2vtir4Q7VacwqEsg8
patch

#### 2013-01-02, 23:19:13 - Isaiah Norton
Attachment added: "generic-epiphan-device.patch"

#### 2013-01-02, 23:20:27 - Isaiah Norton
file:d-pMUGvtir4P2kacwqEsg8


#### 2013-01-02, 23:20:27 - Isaiah Norton
Attachment added: "PlusConfiguration_EpiphanLocal_FakeTracker.xml"

#### 2013-01-02, 23:20:27 - Isaiah Norton
file:d-syn4vtir4P2kacwqEsg8


#### 2013-01-02, 23:20:27 - Isaiah Norton
Attachment added: "PlusConfiguration_EpiphanNet_FakeTracker.xml"

#### 2013-01-02, 23:20:56 - Isaiah Norton
image:apqqNKvtmr4QkpacwqEsg8


#### 2013-01-02, 23:20:56 - Isaiah Norton
Attachment added: "sdk-note.png"

#### 2013-01-02, 23:55:50 - Andras Lasso
Thanks for the patch. Which Plus branch you would like this to be merged (1.6, 1.8, 2.0)?

If you need it in 1.6 or 1.8 then we'll have to change the patch slightly to keep supporting the SerialNumber attribute as well (for backward compatibility).

#### 2013-01-03, 15:36:59 - Isaiah Norton
I am using 2.0 so that will be fine for me. The existing SerialNumber field will work if anyone wants to use the Epiphan networked grabbers with older versions. I suggest this change just because it's non-obvious that the parameter can be used more generically without going through both sets of code.

I can add a small documentation note to the Hardware Setup page if that is the appropriate place (and maybe a link to this ticket)

#### 2013-01-04, 05:02:43 - Andras Lasso
The changes should be OK for 2.0. I've changed your membership status, so you can commit these changes yourself.

Hardware-specific config file options are described on the Hardware_setup page. It would be be useful to add a note there about how to specify serial number or network address for Epiphan framegrabbers (maybe just add some examples and refer to the SDK for details).

Thank you!

#### 2013-01-04, 05:02:43 - Andras Lasso
assigned_to_id: changed from null to "ihnorton"

#### 2013-01-07, 00:48:14 - Andras Lasso
(In r:2357|plus:2357) test #639: Epiphan device can now be specified with GrabberLocation attribute (SerialNumber attribute is now obsolete)

#### 2013-01-07, 00:48:14 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-01-07, 00:49:12 - Andras Lasso
@ihnorton: Committed a slightly modified patch to the trunk (to keep some backward compatibility). Please test. Thanks!

#### 2013-01-07, 00:49:12 - Andras Lasso
status: changed from "Test" to "New"

#### 2013-01-07, 02:24:37 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-07, 14:51:37 - Isaiah Norton
Tested with networked Epiphan VGA2Ethernet. Thank you.

#### 2013-01-07, 14:51:37 - Isaiah Norton
assigned_to_id: changed from "ihnorton" to null

#### 2013-01-07, 14:51:37 - Isaiah Norton
status: changed from "New" to "Fixed"

#### 2013-04-30, 18:50:29 - Andras Lasso
assigned_to_id: changed from null to "ihnorton"


## #640 PlusServer 2.x crash
Generated package today: PlusApp_2.0.0.2347.zip
I tried this command: PlusServer --config-file=RefRASCalibration_Plus2.xml --verbose=5
(See config file attached.)
After a few seconds the VisualStudio debug window popped up saying that there is problem with PlusServer. I clicked NO (I didn't want to debug.)
After this, I couldn't interact with the command line window, I couldn't kill PlusServer application or process using Task Manager. I couldn't log out or shut down the OS either. I had to unpower Sonix Touch.
I tried it three times, same behavior every time.

Contents of the log output:
time|level|timeoffset|message|location
010313_190753.703|INFO|000.001000| PlusLib version: 2.0.0
010313_190754.124|INFO|000.421000| Device local time offset: 0ms
010313_190754.126|INFO|000.423000| Selected US image orientation: UF
010313_190754.253|INFO|000.550000| Device local time offset: -50ms
010313_190818.401|WARNING|024.699000| Failed to get data buffer item: data item not available anymore|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusStreamBuffer.cxx(574)

Another trial (log level =trace):
010313_191339.440|INFO|000.560000| Device local time offset: 0ms
010313_191339.446|INFO|000.565000| Selected US image orientation: UF
010313_191339.575|INFO|000.694000| Device local time offset: -50ms
010313_191403.386|WARNING|024.505000| Failed to get data buffer item: data item not available anymore|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusStreamBuffer.cxx(574)


#### 2013-01-04, 00:24:29 - Tamas Ungi
file:aAQkkMvGur4RV2acwqjQYw
Config file

#### 2013-01-04, 00:24:29 - Tamas Ungi
Attachment added: "RefRASCalibration_Plus2.xml"

#### 2013-01-04, 00:39:45 - Andras Lasso
This is a well-known Windows bug. Microsoft fixed it about a year ago, but probably the patch is not available or not applied to the XP embedded OS of the SonixTouch.

Andras

From: Tamas Ungi (ungi)
Sent: ‎2013-‎01-‎03 19:24

#### 2013-01-04, 04:36:45 - Andras Lasso
Some background about the Zombie console window problem:
http://blogs.msdn.com/b/debugger/archive/2010/03/11/help-my-console-windows-won-t-go-away.aspx


#### 2013-01-04, 04:46:40 - Andras Lasso
The zombie console window is a Windows issue, but PlusServer crash (which brings up the debugging window) is a Plus problem and has to be fixed. Renamed the ticket to reflect the true problem.

#### 2013-01-04, 04:46:40 - Andras Lasso
summary: changed from "PlusServer hangs and the process cannot be killed" to "PlusServer 2.x crash"

#### 2013-01-04, 05:05:19 - Andras Lasso
@ungi: Is the problem reproducible (not the zombie window part but the PlusServer crash)?

#### 2013-01-04, 13:18:59 - Tamas Ungi
Yes, every time. I couldn't get it to work at all yesterday with the nightly build. The zombie window just made it more annoying that I had to unplug the power after every time I tried.

#### 2013-01-04, 23:56:38 - Andras Lasso
(In r:2350|plus:2350) test #640: I could reproduce and fix a crash in simulation mode (there was a copy-paste bug in the mixer device). Need to test if it solves the problem.

#### 2013-01-04, 23:56:38 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-04, 23:56:38 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-01-04, 23:57:16 - Andras Lasso
assigned_to_id: changed from "lassoan" to "ungi"

#### 2013-01-05, 00:57:28 - Tamas Ungi
I still cannot get it to work using saved data with the 'SavedVideoDataset' device either... Could you please point to the config file you are using to test PlusServer?

#### 2013-01-05, 03:04:14 - Tamas Ungi
(In r:2351|plus:2351) Re #640: I'm trying to use this config file with Slicer, but PlusServer (revision 2350) crashes for me with this log output:

e:\\PlusExperimental-32bit-Debug\\bin\\Debug>PlusServer --config-file=e:\\PlusExperimental-32bit-Debug\\PlusLib\\data\\ConfigFiles\\Queens\\PlusConfiguration_SavedDataset_LiveUltrasoundDemo.xml --verbose=5
|INFO|000.001000| PlusLib version: 2.0.0 (debug build)
|TRACE|000.004000| vtkDataCollector::ReadConfiguration()|in ..\\..\\..\\PlusLib\\src
\\DataCollection\\vtkDataCollector.cxx(65)
|DEBUG|000.009000| StartupDelaySec: 1.000000|in ..\\..\\..\\PlusLib\\src\\DataCollect
ion\\vtkDataCollector.cxx(86)
|TRACE|000.015000| vtkSavedDataVideoSource::ReadConfiguration|in ..\\..\\..\\PlusLi
b\\src\\DataCollection\\SavedDataVideoSource\\vtkSavedDataVideoSource.cxx(285)
|TRACE|000.021000| vtkPlusDevice::ReadConfiguration|in ..\\..\\..\\PlusLib\\src\\Data
Collection\\vtkPlusDevice.cxx(678)
|DEBUG|000.110000| Unable to find AveragedItemsForFiltering attribute in device
element. Using default value.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusStre
am.cxx(86)
|TRACE|000.118000| vtkPlusConfig::GetAbsoluteImagePath(e:\\PlusExperimental-32bit
-Debug\\PlusLib\\data\  estImages\\FacetInPlaneInsertion.mha)|in ..\\..\\..\\PlusLib\\sr
c\\PlusCommon\\vtkPlusConfig.cxx(865)
|TRACE|000.126000| vtkDataCollector::SetSelectedDevice(DeviceSavedDataset)|in ..
\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(423)
|TRACE|000.132000| vtkDataCollector::GetSelectedDevice()|in ..\\..\\..\\PlusLib\\src
\\DataCollection\\vtkDataCollector.cxx(462)
|TRACE|000.137000| vtkDataCollector::GetDevice( aDevice, DeviceSavedDataset)|in
..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(362)
|DEBUG|000.143000| Initializing data collector... |in ..\\..\\..\\..\\PlusLib\\src\\Da
taCollection\\Applications\\PlusServer.cxx(97)
|TRACE|000.148000| vtkDataCollector::Connect()|in ..\\..\\..\\PlusLib\\src\\DataColle
ction\\vtkDataCollector.cxx(257)
|TRACE|000.152000| vtkPlusDevice::Connect|in ..\\..\\..\\PlusLib\\src\\DataCollection
\\vtkPlusDevice.cxx(911)
|TRACE|000.156000| vtkSavedDataVideoSource::InternalConnect|in ..\\..\\..\\PlusLib\\
src\\DataCollection\\SavedDataVideoSource\\vtkSavedDataVideoSource.cxx(195)
|TRACE|000.754000| vtkPlusDataBuffer::DeepCopy|in ..\\..\\..\\PlusLib\\src\\DataColle
ction\\vtkPlusStreamBuffer.cxx(602)
|DEBUG|000.801000| CopyImagesFromTrackedFrameList will copy 74 frames|in ..\\..\\.
.\\PlusLib\\src\\DataCollection\\vtkPlusStreamBuffer.cxx(693)
|INFO|000.811000| Copy buffer to video buffer...|in ..\\..\\..\\PlusLib\\src\\DataCol
lection\\vtkPlusStreamBuffer.cxx(727)
|TRACE|000.854000| vtkDataCollector::SetLoopTimes|in ..\\..\\..\\PlusLib\\src\\DataCo
llection\\vtkDataCollector.cxx(865)
|TRACE|000.859000| vtkDataCollector::Start()|in ..\\..\\..\\PlusLib\\src\\DataCollect
ion\\vtkDataCollector.cxx(216)
|TRACE|000.864000| vtkPlusDevice::StartRecording|in ..\\..\\..\\PlusLib\\src\\DataCol
lection\\vtkPlusDevice.cxx(1477)
|DEBUG|000.869000| vtkDataCollector::Start -- wait 1.000000 sec for buffer init.
..|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(234)
|DEBUG|005.539000| Difference between unfiltered timestamp is larger

#### 2013-01-05, 04:07:52 - Andras Lasso
(In r:2352|plus:2352) re #640: Reproduced and fixed the reported crash with the provided config file (there was a hack of renaming xDevice elements to Device for testing, which was not necessary and it caused the crash)

#### 2013-01-05, 04:43:46 - Andras Lasso
(In r:2353|plus:2353) re #640: Cleaned up vtkXMLDataElement smart pointer usage.
1. FindNestedElementWithName result should not be put into a smart pointer, as the root element keeps the element ownership.
2. Pointers should not be stored in smart pointers with simply using an assignment operator, as they don't transfer the ownership of the pointer (ownership is transferred if vtkSmartPointer::Take() is called).

#### 2013-01-05, 12:23:11 - Tamas Ungi
There is an improvement, as I can now successfully start PlusServer with the demo saved data: \\PlusLib\\data\\ConfigFiles\\Queens\\PlusConfiguration_SavedDataset_LiveUltrasoundDemo.xml 
But PlusServer still crashes after a random time. I tried it about 6 times. The shortest period to crash was about 5 sec, the longest about 3 min. But it crashed every time I tried. (Release build, version 2353; Slicer was connected as client)

Here is the end of the trace level log output before the crash happens:
010513_071746.711|DEBUG|113.932000| Number of added frames: 1 out of 1|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(1281)
010513_071746.717|TRACE|113.937000| vtkDataCollector::GetTrackedFrameByTime|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(1456)
010513_071746.734|TRACE|113.955000| vtkDataCollector::GetTrackedFrameList(113.847, aTrackedFrameList, 1)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(332)
010513_071746.740|TRACE|113.961000| vtkPlusDevice::GetTrackedFrameList(113.847, 1)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(1114)


#### 2013-01-05, 14:35:41 - Andras Lasso
I couldn't reproduce the crash in debug mode, so I try to build in RelWithDebugInfo and see what happens

#### 2013-01-05, 16:54:47 - Andras Lasso
(In r:2355|plus:2355) re #640: Cleaned up vtkPlusDevice and vtkPlusStream smart pointer usage. Simple pointers are now used in containers anymore and when returning a pointer to an object, because using smart pointers caused extra copying and double deletes. It seems to solve the crashes.

#### 2013-01-05, 16:56:13 - Adam Rankin
Thanks so much for doing this!

#### 2013-01-05, 22:13:28 - Tamas Ungi
I have been running a PlusServer session for over an hour now without crash. I think it's safe to say the crash has been fixed. I will try it using real hardware later today. Thank you.

#### 2013-01-05, 22:13:28 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2013-01-05, 22:21:03 - Gabor Fichtinger
Wow – this bug was one cunning beast. 
 
 
From: Tamas Ungi (ungi) [mailto:plus@alerts.assembla.com] 
Sent: January-05-13 5:14 PM


## #641 Create tool to anonymize US data
A simple command line tool would be required that deletes the image from every frame inside a given rectangular region. With this tool, we could delete the patient name from recorded sequences. Recording in a given region is not a good solution because sometimes there is valuable image data in the same row and column as the patient name. So we need to delete a specific rectangle from the image (fill with black pixels) off-line.

Maybe just an additional command-line option could be added to the EditSeqMetaFile application, or a separate anonymizer application could be created in PlusApp.

#### 2013-01-04, 19:36:03 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-01-04, 19:36:07 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-04, 21:09:24 - Andras Lasso
(In r:2349|plus:2349) fixed #641: Added FILL_IMAGE_RECTANGLE operation to EditSeqMetaFile to allow erasing patient information from image sequences (see usage example here: https://www.assembla.com/spaces/plus/wiki/Diagnostic_and_test_tools)

#### 2013-01-04, 21:09:24 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2013-01-04, 21:09:47 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-07, 05:22:14 - Isaiah Norton
This works perfectly. Thank you.

#### 2013-02-05, 20:38:59 - Isaiah Norton
I need to add a way to scrub the year/month/day of the timestamps. Looks like most of it is there already in increment-timestamp option, just need to recalculate from given offset (rebase to something like 2000/01/01 but preserve hh:mm::ss..)

#### 2013-02-05, 20:38:59 - Isaiah Norton
assigned_to_id: changed from "lassoan" to "ihnorton"

#### 2013-02-05, 20:38:59 - Isaiah Norton
status: changed from "Fixed" to "New"

#### 2013-02-05, 21:09:55 - Andras Lasso
You can scrub any number of regions by repeated calls of EditSeqMetafile (no lossy compression is performed, so repeated call doesn't have any side effect).
Would this solution work for you?

#### 2013-02-05, 22:43:43 - Isaiah Norton
The timestamp in the actual image can be handled with just one cropping region. 

What I meant is the timestamps saved with the data. However, on looking deeper I see that this is not a full date, so not necessary to scrub (date of procedure is restricted under privacy rules). As far as I can tell, the only real date in the PLUS mha & xml files is in the filename.

#### 2013-02-05, 22:43:43 - Isaiah Norton
status: changed from "New" to "Fixed"

#### 2013-02-05, 22:48:35 - Andras Lasso
OK, good then.


## #642 PlusServer 2.x occasional crash with 3DConnexion tracker
I tested with the latest version, release build. I had three sessions. First, it crashed after about 10 seconds. Second, it crashed about 10 minutes. Third, I ran it with verbose=5 to provide trace level log, but it keeps running for about 30 minutes now, so I'm stopping it...
If somebody could review the code for a remaining illegal smart pointer, that may help... I will try to provide trace level log tomorrow.

#### 2013-01-06, 02:25:23 - Tamas Ungi
I used the config file in the PlusLib config dir without changing it.

#### 2013-01-06, 05:02:38 - Andras Lasso
(In r:2356|plus:2356) test #642: Fixed initialization sequence for tracker devices (for some tracker devices Connect was overridden instead of InternalConnect, which caused an extra connection attempt). Removed a few remaining smart pointer double delete problems. These might fix the 3DConnexion tracker issue (I couldn't test it without having the hardware).

#### 2013-01-06, 05:02:38 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-06, 05:02:38 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-01-06, 05:06:22 - Andras Lasso
assigned_to_id: changed from "lassoan" to "ungi"

#### 2013-01-06, 15:13:43 - Tamas Ungi
I was running it for over an hour without crash. So I set it to fixed. Thank you!

#### 2013-01-06, 15:13:43 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #643 Improve handling of tools not available when PLUS connects
If any tool data is not tracked at the initiation of PLUS/fCal connection, the tool will be unlisted for the duration of connection. I am using the OpenIGTLink TDATA tracker, not sure if this is an issue with other trackers.

This is a problem for BrainLab in particular because some tools may not be in field at all times - for various reasons, including: line of sight obstruction, and because the stylus may be intentionally hidden by the surgeon in order to drive reslice planes from another tool (stylus is default driver)

#### 2013-01-10, 00:36:31 - Andras Lasso
Do you know if this problem is reproducible without having access to a BrainLab tracker (maybe with one of the OpenIGTLink examples)?

#### 2013-01-10, 00:39:59 - Isaiah Norton
It should be but I have not tried yet (I will add more information as soon as possible).. I think it would be demonstrated by setting the OpenIGTLink TDATA example to delay sending one of the matrices for 5s at the beginning of the connection.

#### 2013-01-10, 15:25:55 - Andras Lasso
(In r:2360|plus:2360) test #643: Potential fix for the BrainLab tracker tool initialization problem. The vtkOpenIGTLinkTracker now assumes that all the tools that are missing from TDATA messages are out of view (previously there were no data recorded in the buffer for these missing tools, which may have led to unexpected behaviour). Also added a BrainLab tracker simulator (BrainLabTrackerSim) to allow doing simple tests without having access to real hardware.

#### 2013-01-10, 15:25:55 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-10, 15:25:55 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-01-10, 15:26:27 - Andras Lasso
assigned_to_id: changed from "lassoan" to "ihnorton"

#### 2013-01-16, 19:28:29 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-29, 19:36:16 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-02-02, 03:48:03 - Isaiah Norton
file:byPYjQBoSr4R5eacwqjQYw


#### 2013-02-02, 03:48:03 - Isaiah Norton
Attachment added: "log1_brainlabconnect.txt"

#### 2013-02-02, 04:13:42 - Isaiah Norton
Something else is wrong my configuration or with the OpenIGTLink TDATA interface right now, but I think this particular issue is mostly fixed. 

One minor thing though: there is apparently a small delay before the system starts to stream coordinates (after STT_TDATA message). This message shows up once in the attached fCal log:

 '|ERROR|036.216000| Couldn't receive data from OpenIGTLink tracker|in ..\\..\\..\\PlusLib\\src\\DataCollection\\OpenIGTLinkTracking\\vtkOpenIGTLinkTracker.cxx(274)'

I added Sleep at the end of vtkOpenIGTLinkTracker::InternalConnect: the delay is between 75-100 ms (error at 75, no error at 100).

So this is a simple way to make the error above go away... is that appropriate, or something else?

#### 2013-02-02, 04:13:42 - Isaiah Norton
assigned_to_id: changed from "ihnorton" to "lassoan"

#### 2013-02-02, 04:28:07 - Isaiah Norton
There is also an opposite issue that vtkPlusDevice is very unhappy when there is any tool sent by OpenIGTLink that is *not* in the config file:

|ERROR|320.400000| Unable to find tool 'InstrumentM' in the list, please check the configuration file first.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(300)

This is also a very typical situation (I don't want to change the config file during a case, but the surgeon might decide to use some extra tool). Not a problem to have that message, but perhaps worth considering.

#### 2013-02-04, 21:32:22 - Andras Lasso
Thanks for reporting the 'Couldn't receive data from OpenIGTLink tracker' error at startup. The delay in vtkOpenIGTLinkTracker::InternalConnect is just a specific solution. I've added a ticket to implement a long-term solution, see #666.

#### 2013-02-04, 21:35:38 - Andras Lasso
vtkPlusDevice is very unhappy when there is any tool sent by OpenIGTLink that is not in the config file => Probably the best solution is to report the the unexpected tool once (as an INFO or WARNING) when it first appears.

#### 2013-02-04, 21:35:38 - Andras Lasso
status: changed from "Test" to "New"

#### 2013-02-05, 15:46:14 - Isaiah Norton
For the original issue, if the stream for TrackerInternalCoordinateSystemName (='ReferenceStar' here) is not available when the connection is initialized then tracking will be disabled for the duration of connection (even if the ReferenceStar comes back into view)

#### 2013-11-26, 19:36:10 - Adam Rankin
(In r:2999|plus:2999) test #643 Changing the approach to logging unknown or missing tools.

Optional device tag configuration option 'ReportUnknownToolsOnce=TRUE/FALSE' enables a singular report of a missing unknown tool.

Also changed the handling of missing tools in the openIGT link tracker to be less severe.

These changes combined should enable more graceful handling of the B rainLab tracking system.

This combined with the resolved re #666 should give the user enough control to successfully connect and receive data.

#### 2013-11-26, 19:36:10 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-11-26, 19:41:43 - Adam Rankin
#666 will have no effect on the startup delay. The openIGTLink tracker is a threaded device and will ignore the StartupDelaySec.

I will implement a delay in the openigtlink tracker specifically

#### 2013-11-26, 19:41:43 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-11-26, 19:41:43 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-11-26, 19:59:16 - Adam Rankin
Ok, since the scope of this ticket has been addressed with plus:2999 I will mark this as fixed. Any further specific issues can be reported in a new ticket.

#### 2013-11-26, 19:59:16 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-11-26, 20:02:33 - Adam Rankin
@ihnorton Please feel free to open up a new ticket if your unavailable tools remain unavailable for the duration of the connection.

#### 2013-12-02, 23:40:04 - Andras Lasso
Most probably fixed by #830

#### 2013-12-03, 01:49:28 - Isaiah Norton
I agree, it works well now.  Thanks.

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #644 Use vtk chart instead of gnuplot
Use vtk chart instead of gnuplot. Gnuplot execution is somewhat error-prone. Also, we could get rid of one more dependency.


#### 2014-06-05, 02:01:43 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-26, 19:42:03 - Andras Lasso
re #644: Replaced gnuplot by vtk charts in spacing and center of rotation calibration
Commit: r:3732|plus:3732

#### 2014-09-26, 19:42:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-26, 19:56:29 - Andras Lasso
re #644: Replaced gnuplot by vtk charts in spacing and center of rotation calibration
Commit: r:3733|plus:3733

#### 2014-09-27, 18:42:52 - Andras Lasso
re #644: Removed gnuplot from PlusLib (replaced by VTK plotting)
Commit: r:3737|plus:3737

#### 2014-09-27, 18:43:34 - Andras Lasso
test #644: Removed gnuplot from PlusApp (replaced by VTK plotting)
Commit: r:3738|plus:3738

#### 2014-09-27, 18:43:34 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-09-27, 19:41:02 - Andras Lasso
All tests have passed.

#### 2014-09-27, 19:41:02 - Andras Lasso
status: changed from "Test" to "Fixed"


## #645 Some tests fail if PLUS_USE_BRACHY_TRACKER is disabled
see http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=13460


#### 2013-01-16, 19:28:15 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-16, 19:28:25 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to null

#### 2013-02-15, 19:00:08 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 02:02:02 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-27, 19:23:12 - Andras Lasso
This does not happen anymore.

#### 2014-09-27, 19:23:12 - Andras Lasso
status: changed from "New" to "Invalid"


## #646 PLUS Compilation issue on Mac OSX 10.8
I tried to compile PLUS on Mac OSX 10.8, but I found out 2 issues:

- in PLUS-build/PlusLib/src/PlusCommon/vtkMetaImageSequenceIO.h (line 156) off64_t doesn't exist. Instead off_t was suggested.
I replaced off64_t by off_t and it worked.

Here is the code:
#ifdef _WIN32
  typedef __int64 FilePositionOffsetType;
#else
  typedef off_t FilePositionOffsetType;
#endif  

Maybe it should be modified by

#ifdef _WIN32
  typedef __int64 FilePositionOffsetType;
#elif defined __APPLE__
  typedef off_t FilePositionOffsetType;
#else
  typedef off64_t FilePositionOffsetType;
#endif  

This worked for me.

- The second issue is when compiling PlusApp, I got this error (linking):

ndefined symbols for architecture x86_64:
  'QGridLayout::QGridLayout(QWidget*, int, int, int, int, char const*)', referenced from:
      fCalMainWindow::CreateToolboxes() in fCalMainWindow.cxx.o
      ConfigurationToolbox::ConfigurationToolbox(fCalMainWindow*, QFlags<Qt::WindowType>) in ConfigurationToolbox.cxx.o
      ConfigurationToolbox::PopOutToggled(bool) in ConfigurationToolbox.cxx.o
      TemporalCalibrationToolbox::ShowPlotsToggled(bool) in TemporalCalibrationToolbox.cxx.o
      ToolStateDisplayWidget::ToolStateDisplayWidget(QWidget*, QFlags<Qt::WindowType>) in libCommonWidgets.a(ToolStateDisplayWidget.cxx.o)
      ToolStateDisplayWidget::InitializeTools(vtkDataCollector*, bool) in libCommonWidgets.a(ToolStateDisplayWidget.cxx.o)
  'QString::ascii_helper() const', referenced from:
      QString::ascii() const in ConfigurationToolbox.cxx.o
      QString::ascii() const in CapturingToolbox.cxx.o
      QString::operator char const*() const in VolumeReconstructionToolbox.cxx.o
      QString::operator char const*() const in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
  'QTextEdit::text() const', referenced from:
      ConfigFileSaverDialog::SaveClicked() in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)

I'm not sure how to fix it yet.


#### 2013-01-10, 20:29:46 - Andras Lasso
(In r:2362|plus:2362) re #646: Thanks for fix suggestion. The Apple-specific FilePositionOffsetType definition has been added.

#### 2013-01-10, 20:29:46 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-10, 20:50:46 - Andras Lasso
(In r:2363|plus:2363) re #646: Use QString::toAscii instead of QString::ascii, as the former is not supported in more recent QT versions

#### 2013-01-10, 20:56:16 - Andras Lasso
For the QT linking problem: Plus uses the same QT version as Slicer (QT-4.7.4). It may work with other QT versions, but it's not tested. Have you tried to build Plus with QT-4.7.4?

If after the previous commit (2363) you don't get the following errors anymore, then it means that you use a non-supported QT version:
QString::ascii() const in ConfigurationToolbox.cxx.o
QString::ascii() const in CapturingToolbox.cxx.o

You can either use QT-4.7.4 or fix the QT API changes related code parts (probably minor differences in how to convert between Qstrings and plain char pointers)

#### 2013-01-10, 21:10:26 - Laurent Chauvin
I'm using Qt 4.7.4 from Slicer.

I think std::string filePath = aFilename.toAscii(); should be replace by std::string filePath = aFilename.toStdString(); otherwise I still got error about conversion from QByteArray to string.

But still I have this linking issue:


Undefined symbols for architecture x86_64:
'QGridLayout::QGridLayout(QWidget*, int, int, int, int, char const*)', referenced from:
fCalMainWindow::CreateToolboxes() in fCalMainWindow.cxx.o
ConfigurationToolbox::ConfigurationToolbox(fCalMainWindow*, QFlags<Qt::WindowType>) in ConfigurationToolbox.cxx.o
ConfigurationToolbox::PopOutToggled(bool) in ConfigurationToolbox.cxx.o
TemporalCalibrationToolbox::ShowPlotsToggled(bool) in TemporalCalibrationToolbox.cxx.o
ToolStateDisplayWidget::ToolStateDisplayWidget(QWidget*, QFlags<Qt::WindowType>) in libCommonWidgets.a(ToolStateDisplayWidget.cxx.o)
ToolStateDisplayWidget::InitializeTools(vtkDataCollector*, bool) in libCommonWidgets.a(ToolStateDisplayWidget.cxx.o)
'QString::ascii_helper() const', referenced from:
QString::operator char const*() const in VolumeReconstructionToolbox.cxx.o
QString::operator char const*() const in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
'QTextEdit::text() const', referenced from:
ConfigFileSaverDialog::SaveClicked() in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
ld: symbol(s) not found for architecture x86_64

#### 2013-01-10, 21:12:28 - Csaba Pinter
              toStdString() is not quite reliable. JC      suggested using toLatin1() instead. Could you try that?

#### 2013-01-10, 21:16:47 - Laurent Chauvin
I had to modifiy like this to use toLatin1:

std::string filePath(aFilename.toLatin1().data());

#### 2013-01-10, 21:26:58 - Laurent Chauvin
I'm actually surprised it compiles on other platform too because here is the code in fCalMainWindow.cxx in CreateToolboxes() function:
QGridLayout* grid = new QGridLayout(ui.toolbox_Configuration, 1, 1, 0, 0, '');

And the only constructor for QGridLayout I could find in Qt documentation is with this prototype:
QGridLayout ( QWidget * parent )

I think that's why it cannot link, because constructor prototype is different.

#### 2013-01-10, 21:32:19 - Adam Rankin
              #ifdef QT3_SUPPORT
        QT3_SUPPORT_CONSTRUCTOR QGridLayout(QWidget *parent, int nRows ,    int nCols = 1, int border = 0,
                                          int spacing = -1, const char    *name = 0);
        QT3_SUPPORT_CONSTRUCTOR QGridLayout(int nRows , int nCols = 1,    int spacing = -1, const char *name = 0);
        QT3_SUPPORT_CONSTRUCTOR QGridLayout(QLayout *parentLayout, int    nRows = 1, int nCols = 1, int spacing = -1,
                                          const char *name = 0);
    #endif

#### 2013-01-10, 21:36:46 - Laurent Chauvin
Does that mean I should disable QT3_SUPPORT ?

#### 2013-01-10, 21:39:04 - Csaba Pinter
              I think it means that Qt3 support is      needed for this constructor to work.
      Probably it would be a good idea to replace this constructor with      the Qt4 way.

#### 2013-01-10, 21:48:17 - Laurent Chauvin
It is possible to turn off QT3_SUPPORT ? I couldn't find it in the ccmake options.

#### 2013-01-10, 21:55:00 - Adam Rankin
(In r:2365|plus:2365) re #646: Updating toolbox creation to be QT4 compliant.

#### 2013-01-10, 21:57:29 - Adam Rankin
assigned_to_id: changed from "lassoan" to "lchauvin"

#### 2013-01-10, 21:57:29 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-01-10, 21:57:45 - Adam Rankin
Let me know if you hit any other QT3 issues. I will try and fix them.

#### 2013-01-10, 22:06:09 - Laurent Chauvin
I'm at revision 2365 but the fCalMainWindow.cxx is not modified (still like rev 2364). 

This is the output of svn diff

==================================================================
--- Toolboxes/ConfigurationToolbox.cxx  (revision 2365)
+++ Toolboxes/ConfigurationToolbox.cxx  (working copy)
@@ -334,7 +334,7 @@
 
   vtkPlusLogger::Instance()->SetLogLevel(aLevel+1);
 
-  LOG_INFO('Log level changed to: ' << ui.comboBox_LogLevel->currentText().ascii() << ' (' << aLevel+1 << ')' );
+  LOG_INFO('Log level changed to: ' << ui.comboBox_LogLevel->currentText().toAscii().data() << ' (' << aLevel+1 << ')' );

#### 2013-01-10, 22:06:09 - Laurent Chauvin
assigned_to_id: changed from "lchauvin" to "lassoan"

#### 2013-01-10, 22:06:09 - Laurent Chauvin
status: changed from "Test" to "New"

#### 2013-01-10, 22:14:39 - Adam Rankin
              You might need to verify your local copy.
    
    https://www.assembla.com/code/plus/subversion/changesets/2365
    
    shows an updated fCalMainWindow.cxx.
    
    Do you run the superbuild when you build?

#### 2013-01-10, 22:20:55 - Laurent Chauvin
I did superbuild and I did svn update in fCal directory. I got this:

svn update
At revision 2365.


#### 2013-01-10, 22:39:36 - Andras Lasso
@lchauvin: run 'svn status' to double-check that you don't have any local modifications

#### 2013-01-10, 22:45:07 - Laurent Chauvin
svn status return nothing. No local modifications.

#### 2013-01-11, 13:40:29 - Laurent Chauvin
After removing everything and rebuilding everything from scratch, it's still failed. Files are not modified.

My question is: in which branch did you made this modification ? I'm using Plus-1.8, the stable branch. Should I use the trunk version ?

#### 2013-01-11, 14:33:51 - Andras Lasso
The changes were committed to the trunk. Test the trunk an if it works then we can merge the changes to 1.8 as well.

Andras 

From: Laurent Chauvin (lchauvin)
Sent: ‎2013-‎01-‎11 08:40

#### 2013-01-11, 16:07:12 - Laurent Chauvin
I found 4 more GridLayout that would need to be changed in ConfigurationToolbox.cxx to avoid linking issues.

Line 55, 60, 284, 305.

#### 2013-01-11, 16:13:52 - Laurent Chauvin
I think it should also be changed in:

TemporalCalibrationToolbox.cxx
ToolStateDisplayWidget.cxx

#### 2013-01-11, 16:34:51 - Laurent Chauvin
QGridLayout issue seems fixed (thanks Adam) but I still have some linking issue:


Undefined symbols for architecture x86_64:
  'QString::ascii_helper() const', referenced from:
      QString::operator char const*() const in VolumeReconstructionToolbox.cxx.o
      QString::operator char const*() const in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
  'QTextEdit::text() const', referenced from:
      ConfigFileSaverDialog::SaveClicked() in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)

It seems ascii_helper is defined in QString if QT3_SUPPORT is ON. But I don't know where exactly this come from.

#### 2013-01-11, 17:10:41 - Laurent Chauvin
I removed the text() linking issue ( QT3_SUPPORT issue) by replacing in ConfigFileSaveDialog.cxx (line 150):

deviceSet->SetAttribute('Description', ui.textEdit_Description->text());

by

deviceSet->SetAttribute('Description', ui.textEdit_Description->toPlainText());

But I still have the ascii_helper issue I couldn't figure it out:

'QString::ascii_helper() const', referenced from:
QString::operator char const*() const in VolumeReconstructionToolbox.cxx.o
QString::operator char const*() const in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)


#### 2013-01-12, 17:54:18 - Andras Lasso
(In r:2376|plus:2376) re #646: Replaced ->text() by ->toPlainText() to fix some QT-related build errors

#### 2013-01-12, 18:18:23 - Andras Lasso
Could you please send the build log when trying to build the latest version?

To fix the remaining errors we need to find out which lines cause them. Normally these kind of errors should be captured by the compiler, and the compiler would provide exact line numbers. But something may be wrong with your QT config (headers don't match exactly the libraries), so we have to figure out the line numbers by removing the code in the method bodies one-by-one and recompile after each and see when the error disappears.

#### 2013-01-12, 18:18:23 - Andras Lasso
assigned_to_id: changed from "lassoan" to "lchauvin"

#### 2013-01-14, 15:47:00 - Laurent Chauvin
I'm gonna check error log.

However, I found this before compilation failed. It should be related:


[ 58%] Generating moc_ui_PhantomRegistrationToolbox.cxx
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_SpatialCalibrationToolbox.h:0: Warning: No relevant classes found. No output generated.
[ 59%] Generating moc_ui_VolumeReconstructionToolbox.cxx
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_CapturingToolbox.h:0: Warning: No relevant classes found. No output generated.
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_TemporalCalibrationToolbox.h:0: Warning: No relevant classes found. No output generated.
28 warnings generated.
Linking CXX executable /Users/SNR/PLUS-build/bin/ToolStateDisplayWidgetTest
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_StylusCalibrationToolbox.h:0: Warning: No relevant classes found. No output generated.
28 warnings generated.
Linking CXX executable /Users/SNR/PLUS-build/bin/SegmentationParameterDialogTest
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_PhantomRegistrationToolbox.h:0: Warning: No relevant classes found. No output generated.
/Users/SNR/PLUS-build/PlusApp-bin/fCal/ui_VolumeReconstructionToolbox.h:0: Warning: No relevant classes found. No output generated.
Undefined symbols for architecture x86_64:
  'QString::ascii_helper() const', referenced from:
      QString::operator char const*() const in libCommonWidgets.a(ConfigFileSaverDialog.cxx.o)
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)


I'm not sure why it says 'No relevant class found', but I checked generated files, and they're empty.

#### 2013-01-14, 16:21:54 - Andras Lasso
Don't worry,  'No relevant class found' is a very common, innocent Qt warning. That doesn't mean any problem.

Please remove/comment method bodies in ConfigFileSaverDialog.cxx to find out the offending line (that as an implicit conversion to const char*) or check why your Qt headers don't match the linked Qt libraries.

#### 2013-01-16, 19:27:22 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-29, 19:36:11 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-02-05, 19:43:05 - Laurent Chauvin
It seems in ConfigFileSaveDialog.cxx, this is this line that create an issue:

deviceSet->SetAttribute('Name', ui.lineEdit_DeviceSetName->text()); (in SaveClicked method).

I think it's because of the 'text' method. Can it be replaced by something else ?
text() seems to return a ascii_helper if QT3_SUPPORT is turned on.

#### 2013-02-05, 20:02:49 - Laurent Chauvin
And the other is coming from VolumeReconstructionToolbox.cxx:393 
  if (trackedFrameList->ReadFromSequenceMetafile( m_ImageFileNames.at( imageFileNameIndex ) ) != PLUS_SUCCESS)

It seems to come from the method 'ReadFromSequenceMetafile'.

#### 2013-02-05, 20:24:27 - Laurent Chauvin
in ConfigFileSaveDialog.cxx, changing these lines (149-150):

deviceSet->SetAttribute('Name', ui.lineEdit_DeviceSetName->text());
deviceSet->SetAttribute('Description', ui.textEdit_Description->toPlainText());

by 


deviceSet->SetAttribute('Name', ui.lineEdit_DeviceSetName->text().toLatin1());
deviceSet->SetAttribute('Description', ui.textEdit_Description->toPlainText().toLatin1());

seems to fix the ascii_helper issue in this file.

#### 2013-02-05, 20:27:11 - Laurent Chauvin
And replacing in VolumeReconstructionToolbox.cxx (393):

if (trackedFrameList->ReadFromSequenceMetafile( m_ImageFileNames.at( imageFileNameIndex ) ) != PLUS_SUCCESS)

by 

if (trackedFrameList->ReadFromSequenceMetafile( m_ImageFileNames.at( imageFileNameIndex ).toLatin1() ) != PLUS_SUCCESS)

Seems to work too.
Then PLUS successfully built !!!! 


#### 2013-02-05, 23:53:13 - Laurent Chauvin
status: changed from "New" to "Test"

#### 2013-02-07, 17:52:12 - Csaba Pinter
Sounds good, Thanks Laurent!
Can you commit those changes? Maybe to another branch if you want to play safe. Then we can build on all platforms and close this ticket.

#### 2013-02-12, 21:13:02 - Laurent Chauvin
(In r:2488|plus:2488) Fix #646 issue, compilation on MacOSX

#### 2013-02-12, 21:13:02 - Laurent Chauvin
status: changed from "Test" to "Fixed"


## #647 Compressed metafile IO is broken
Commit 2371 broke the compressed metafile reading/writing:
http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=13593
http://crunch.cs.queensu.ca/CDash/viewUpdate.php?buildid=13593


#### 2013-01-16, 17:47:13 - Adam Rankin
Repaired by only writing the amount read by the buffer. 

See https://www.assembla.com/code/plus/subversion/changesets/2384 for commit details.

#### 2013-01-16, 17:47:13 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-01-16, 17:47:22 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-01-16, 23:11:49 - Andras Lasso
Thanks, it works well now.

#### 2013-01-16, 23:11:49 - Andras Lasso
status: changed from "Test" to "Fixed"


## #648 Patch to support NDI usb<->serial top speed
Some newer NDI devices have a built-in usb<->serial converter, and the driver includes an aliased mode allowing transfer rate up to 1.2Mbps. See relevant portion of the API manual in attached image. 

The enclosed patch adds this support to vtkNDITracker and the relevant ndicapi files. It's a small patch but I want to address a few points before committing:

1) is there any upstream for ndicapi? 
2) I don't think there should be any effect for PLUS users with real serial devices who happen to use 19200, but I have no way to test this so would appreciate a once-over by someone with more NDI experience.

#### 2013-01-15, 00:47:55 - Isaiah Norton
file:aY-e1mxQ0r4PtXacwqEsg8


#### 2013-01-15, 00:47:55 - Isaiah Norton
Attachment added: "plus_patch2.diff"

#### 2013-01-15, 00:48:09 - Isaiah Norton
image:a7S8e8xQ0r4QVBacwqEsg8


#### 2013-01-15, 00:48:09 - Isaiah Norton
Attachment added: "ndi_manual_screenshot.png"

#### 2013-01-15, 00:48:40 - Isaiah Norton
description: changed from "Some newer NDI devices have..." to "Some newer NDI devices have..."

#### 2013-01-16, 23:32:22 - Andras Lasso
1) I'm not aware of any actively maintained version of ndicapi. In IGSTK they reworked it into a new class (igstkNDICommandInterpreter.cxx), in AIGS (https://raw.github.com/dgobbi/AIGS/master/Utilities/ndicapi/ndicapi.c) the file didn't change since 2005.

2) I agree. There should be no problem with this change. Feel free to commit.


#### 2013-01-16, 23:32:22 - Andras Lasso
assigned_to_id: changed from null to "ihnorton"

#### 2013-01-19, 20:34:25 - Isaiah Norton
(In r:2402|plus:2402) close #648: adds high-speed mode to NDI interface for use with USB devices

#### 2013-01-19, 20:34:25 - Isaiah Norton
status: changed from "New" to "Fixed"


## #649 NDI interface does not detect reset after INIT
NDI Polaris device was left in high-speed mode after exiting debugger. When PLUS sends INIT at 9600, the device resets back to default 9600 and returns status RESET. PLUS does not detect this as an error and proceeds to send further commands without re-issuing the INIT instruction which leads to the 'command not valid in current mode' error.

Serial log:

INIT:E3A5
RESETBE6F
COMM:70000C031
OKAYA896
VER:065EE
Polaris Vicra Control Firmware.NDI S/N: P6-00739.Characterization Date: 10/22/10.Freeze Tag: Polaris Vicra Rev 001.Freeze Date: 03/25/08.(C) Northern Digital Inc..45DC
PHRQ:*********1****A4C1
ERROR0C4E42



#### 2013-01-15, 00:53:29 - Isaiah Norton
assigned_to_id: changed from null to "ihnorton"

#### 2013-02-15, 18:59:48 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1"

#### 2013-06-27, 15:57:55 - Andras Lasso
The current workaround is to connect to the device using a terminal emulator (teraterm) and send some garbage at 9600 baud.

#### 2013-06-27, 16:25:56 - Andras Lasso
(In r:2875|plus:2875) test #649: Attempt to handle NDI tracker reset after INIT command

#### 2013-06-27, 16:25:56 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-07-03, 16:36:30 - mehrtash
The bug is fixed. Plus can detect the reset from NDI polaris.

#### 2013-07-03, 16:36:30 - mehrtash
status: changed from "Test" to "Fixed"


## #650 fCal crashes on save
Using the attached configuration file, if I disconnect and then try to save config, fCal crashes.
If I save before disconnecting then the save config is successful.

#### 2013-01-16, 02:29:03 - Isaiah Norton
file:b-HQBsx4qr4OFcacwqjQYw


#### 2013-01-16, 02:29:03 - Isaiah Norton
Attachment added: "PlusConf_Polaris_Recal_20130115_210246.xml"

#### 2013-01-16, 14:52:16 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-01-16, 14:52:24 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2013-01-16, 17:47:48 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-01-16, 18:46:43 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-16, 19:02:56 - Adam Rankin
(In r:2385|plus:2385) re #650 DataCollector is not destroyed on disconnect but on re-connect. This allows saving of the previous config even if the data collector is disconnected.

#### 2013-01-16, 19:03:22 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-01-24, 16:01:15 - Adam Rankin
status: changed from "Test" to "Fixed"


## #651 Use case: acquisition of images with different depth settings
See #462 for more information.

Not only will multiple streams need to be setup, the client will need to be passed the correct ImageToProbeTransform for the current depth setting.

The transform repository will contain 'Image_5cm_ToProbeTransform', 'Image_4.5cmToProbeTransform' (or similar, just an example) and the depth switching device will output the appropriate transform.

#### 2013-01-16, 19:27:12 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-18, 20:20:47 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-01-29, 19:36:24 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-12-10, 16:01:46 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:46 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-13, 05:25:40 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2014-12-10, 21:09:14 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-07-13, 16:45:19 - Adam Rankin
Closing as invalid. Progress can be tracked in #582 (see related)

#### 2016-07-13, 16:45:19 - Adam Rankin
status: changed from "New" to "Invalid"


## #652 Use case: stream capture
Currently implemented and functional.

Maximum file limit according to OS and file system.
Potential solution:
if max reached, 
  create new file? _seq_N?
  re-write new header, continue capture?

#### 2013-01-16, 21:22:32 - Adam Rankin
(In r:2388|plus:2388) re #652 Adding byte tracking for potential future feature.

#### 2013-01-16, 23:40:23 - Andras Lasso
What is currently the limit on Win7 x64, NTFS? Can we read/write files over 4GB?

Metafile supports multiple raw files for one mhd file, but I guess not all the software tools are compatible with that and it would more work for us to implement it. So, I would prefer to just keep one file (or one header and one raw file).

#### 2013-01-16, 23:53:40 - Adam Rankin
              For 64bit NTFS it's like 18 TB. This file limit will only be a    problem on embedded 32bit FAT32 XP machines.

#### 2013-01-18, 15:29:04 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-01-23, 21:50:43 - Adam Rankin
status: changed from "Test" to "New"

#### 2013-01-28, 17:09:59 - Adam Rankin
Closing this as #659 can track current status. The device has been created and seems to be working.

#### 2013-01-28, 17:09:59 - Adam Rankin
status: changed from "New" to "Fixed"


## #653 Saved data devices and DataCollector reconcilliation
Fix SetupLoops to determine loops based on common timestamp range

Saved data devices playback rate doesn't match the original acquisition rate

#### 2013-01-18, 20:42:08 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-01-20, 14:32:19 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-01-20, 14:32:19 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-01-21, 06:49:34 - Andras Lasso
(In r:2404|plus:2404) re #653: Deleted vtkSavedDataTracker, now all saved data replay is provided by vtkSavedDataVideoSource (will be renamed to reflect that it's not only a video source anymore). Fixed test errors.

#### 2013-01-21, 19:43:20 - Andras Lasso
(In r:2405|plus:2405) re #653: Renamed vtkSavedDataVideoSource to vtkSavedDataSource. Fixed some of the errors in saved data source, but it still doesn't work perfectly.

#### 2013-01-22, 06:11:01 - Andras Lasso
(In r:2407|plus:2407) re #653: Fixed timestamp computations in vtkSavedDataSource and vtkVirtualStreamMixer. Changed default selected device to the last device in the config file (usually that is the mixer device). Fixed vtkPlusDevice::GetVideoDataAvailable() logic to make it work for vtkVirtualStreamMixer devices (which do not own the buffers).

#### 2013-01-22, 06:13:43 - Andras Lasso
(In r:2408|plus:2408) re #653: Fixed temporal calibration to access raw tracker buffer and properly save the time offset. Fixed ToolStateDisplayWidget to update the tool labels whenever the number of available tools have changed.

#### 2013-01-22, 06:34:28 - Andras Lasso
(In r:2409|plus:2409) re #653: Fixed vtkDataCollectorFileTest (the time offset between the file time and system time was not computed correctly)

#### 2013-01-23, 22:58:47 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #654 TrackedFrame cannot support multi-image per frame (stereo cameras, etc...)
Discuss future steps (if any) to be taken to allow a tracked frame to support multiple images.

Consequences for MHA files as well.

#### 2013-01-22, 20:12:36 - Andras Lasso
I think we should just save each image sequence in separate mha/mhd file. Tracking data can be stored in all of them, the overhead should be negligible.

To replay: each file is read and replayed by a separate saved data source and their output streams are joined by a mixer device.


From: Adam Rankin (rankin)
Sent: ‎2013-‎01-‎21 12:03

#### 2013-01-29, 19:36:34 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2013-04-30, 18:50:41 - Andras Lasso
assigned_to_id: changed from null to "rankin"


## #655 fCal device selector does not work
The device selector in fCal does not work (the devices appear but clicking on devices doesn't have any effect). Probably these error messages are related:

Object::connect: No such slot fCalMainWindow::DeviceSelected(device) in ..\\..\\PlusApp\\fCal\\fCalMainWindow.cxx:786
Object::connect:  (receiver name: 'fCalMainWindow')
Object::connect: No such slot fCalMainWindow::DeviceSelected(device) in ..\\..\\PlusApp\\fCal\\fCalMainWindow.cxx:786
Object::connect:  (receiver name: 'fCalMainWindow')
Object::connect: No such slot fCalMainWindow::DeviceSelected(device) in ..\\..\\PlusApp\\fCal\\fCalMainWindow.cxx:786
Object::connect:  (receiver name: 'fCalMainWindow')

There are other limitations of the device selector:
* It should be much more visible (near the connect button)
* It should be possible to define the device that is selected by default
* Probably we should be able to select a specific output stream instead of a device (how do you select a specific stream if you have a device that provides two video streams?)


#### 2013-01-22, 22:25:39 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-23, 16:22:06 - Adam Rankin
(In r:2416|plus:2416) Re #655 Fixing device selector in fCal. Properly connected signals to slots via custom action class.

Properly reconnected video input when new device is selected.

#### 2013-01-23, 16:22:57 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-01-23, 16:22:58 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-01-23, 19:25:08 - Andras Lasso
(In r:2421|plus:2421) re #655: Made config files more uniform (device and stream names are based on the roles, not on device types). Added DefaultSelectedDeviceId attribute to DataCollection elements everywhere where multiple devices were specified.

#### 2013-01-23, 20:54:45 - Andras Lasso
Thanks, switching works well now. The only remaining task is to read the DefaultSelectedDeviceId attribute of the DataCollection element to choose the selected device in the data collector.

#### 2013-01-23, 20:54:45 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-01-23, 20:54:45 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-01-23, 21:48:12 - Adam Rankin
(In r:2422|plus:2422) re #655 Adding default selected device id to data collector element

#### 2013-01-23, 21:48:24 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #656 Order of devices in the XML should not impact connection results
Currently, if the mixer device is defined in the XML tree before the other devices (that provides input for the mixer device) then the input/output streams don't get connected.
It should not matter what is the order of devices in the config file.

#### 2013-01-22, 17:31:34 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-22, 17:31:54 - Adam Rankin
That's odd, I had implemented a two-pass system. I will investigate why it isn't working!

#### 2013-01-22, 17:48:06 - Adam Rankin
Do you have a reproduction case? It worked successfully when I defined it first with a faketracker + saved video source.

#### 2013-01-22, 18:03:43 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-01-22, 18:03:56 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-01-22, 18:04:49 - Andras Lasso
I've tested with the temporal calibration config file. If the mixer is the first device then there are problems.


From: Adam Rankin (rankin)
Sent: ‎2013-‎01-‎22 12:31

#### 2013-01-22, 19:07:37 - Andras Lasso
It works correctly now. Probably the issue was due to some problems that have been since fixed.

#### 2013-01-22, 19:07:37 - Andras Lasso
status: changed from "Test" to "Invalid"


## #657 Temporal calibration plots are not visible in fCal
How to reproduce:
* Start fCal with the PlusConfiguration_SavedDataset_TemporalCalibration.xml config, connect
* Perform temporal calibration => The calibration is completed successfully, time offset is correctly displayed
* Click on Show plots => a popup window appears, but it's all white, no plots are shown


#### 2013-01-22, 20:51:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-22, 22:25:32 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-01-29, 19:36:42 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-02-09, 15:23:29 - Andras Lasso
Plotting works elsewhere, see the examples below.

1. Plotting of the same curves to file

TemporalCalibrationAlgoTest.exe '--tracker-seq-file=F:/devel/PlusExperimental-bin/PlusLib/data/TestImages/WaterTankBottomTranslationTrackerBuffer.mha' '--video-seq-file=F:/devel/PlusExperimental-bin/PlusLib/data/TestImages/WaterTankBottomTranslationVideoBuffer.mha' '--sampling-resolution-sec=0.001' --plot-results

2. Interactive plot windows

TemporalCalibrationAlgoTest.exe '--tracker-seq-file=F:/devel/PlusExperimental-bin/PlusLib/data/TestImages/WaterTankBottomTranslationTrackerBuffer.mha' '--video-seq-file=F:/devel/PlusExperimental-bin/PlusLib/data/TestImages/WaterTankBottomTranslationVideoBuffer.mha' '--sampling-resolution-sec=0.001' '--verbose=5'

Csaba developed this feature, so he may be able to help.


#### 2013-02-09, 22:20:27 - Csaba Pinter
assigned_to_id: changed from "rankin" to "pinter"

#### 2013-02-12, 02:12:32 - Csaba Pinter
status: changed from "New" to "Accepted"

#### 2013-02-12, 02:30:34 - Csaba Pinter
The latest version doesn't perform the calibration well, so now the problem is not just with the display.
The problem is that TemporalCalibration::m_MovingSignal is empty. The reason for it is that vtkDataCollector::GetTrackingData doesn't call AddTrackedFrame for the tracker data tracked frame list.

#### 2013-02-12, 13:29:26 - Andras Lasso
Adam, could you check this? Note that temporal calibration needs the non-interpolated tracking data.

#### 2013-02-12, 13:29:26 - Andras Lasso
assigned_to_id: changed from "pinter" to "rankin"

#### 2013-02-12, 17:01:29 - Adam Rankin
Hmm, I was able to perform a calibration with the test data. The result was 0.404343s. My m_MovingSignal contained data, specifically m_MovingSignal.signalValues contained [249] items.

#### 2013-02-12, 17:04:43 - Csaba Pinter
Yes, I tried it on my desktop PC just now, and it works for me too. I don't know why the same thing didn't work on my laptop yesterday (same Plus revision too).
I'll go on with the plotting issue then.

#### 2013-02-12, 17:04:43 - Csaba Pinter
assigned_to_id: changed from "rankin" to "pinter"

#### 2013-02-12, 18:05:29 - Csaba Pinter
(In r:2485|plus:2485) Test #657: Temporal calibration plotting works. There was a problem with setting up the grid layout; Checked other grid layout instantiations too; There is a problem with the ToolState test, needs fixing

#### 2013-02-12, 18:05:29 - Csaba Pinter
status: changed from "Accepted" to "Test"

#### 2013-02-13, 21:35:06 - Andras Lasso
It works well now. Thanks!

#### 2013-02-13, 21:35:06 - Andras Lasso
status: changed from "Test" to "Fixed"


## #658 Virtual disk capture device should write to ImageDirectory directory by default


#### 2013-01-23, 20:52:07 - Andras Lasso
I'm not sure if it's a good idea. Temporary files shouldn't be created in revision controlled directories.

#### 2013-01-23, 20:54:09 - Csaba Pinter
There is an OutputDirectory and ImageDirectory parameter in the PlusConfig.xml file. These were intended to define the default path for these operations.

#### 2013-01-23, 21:36:23 - Adam Rankin
Right, that's what I meant. The ImageDirectory location.

#### 2013-01-23, 21:36:32 - Adam Rankin
summary: changed from "Virtual disk capture device should write to TestImages directory by default" to "Virtual disk capture device should write to ImageDirectory directory by default"

#### 2013-01-23, 21:42:39 - Andras Lasso
The default config:

<PlusConfig
  LogLevel='3'
  DeviceSetConfigurationDirectory='F:/devel/PlusExperimental-bin/PlusLib/data/ConfigFiles'
  ImageDirectory='F:/devel/PlusExperimental-bin/PlusLib/data/TestImages'
  ModelDirectory='F:/devel/PlusExperimental-bin/PlusLib/data/CADModels'
  GnuplotDirectory='F:/devel/PlusExperimental-bin/PlusLib/tools/Gnuplot/binary'
  ScriptsDirectory='F:/devel/PlusExperimental-bin/PlusLib/src/scripts'
  Date='2013.01.23 16:34:47'
  EditorApplicationExecutable='notepad.exe'
  OutputDirectory='./Output'/>


So, the images should be saved into the *OutputDirectory* by default (not Testimages, nor ImageDirectory).


#### 2013-01-23, 21:46:28 - Csaba Pinter
I agree. As far as I remember the ImageDirectory path is used for automatically finding input images (so that you don't have to enter the whole path when using a test image).

#### 2013-01-24, 16:00:09 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-01-24, 16:00:51 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-30, 18:50:58 - Andras Lasso
assigned_to_id: changed from null to "rankin"


## #659 Confirm working status of two disc capture devices in parallel


#### 2013-01-23, 21:24:23 - Andras Lasso
Confirmed, it works well.

Start PlusServer with the attached config then run the following commands:

PlusServerRemoteControl.exe --command=START --device=BModeCaptureDevice --output-file=bmodeframes.mha
PlusServerRemoteControl.exe --command=START --device=RfModeCaptureDevice --output-file=rfmodeframes.mha

Wait a couple of seconds then run the followings:

PlusServerRemoteControl.exe --command=STOP --device=BModeCaptureDevice
PlusServerRemoteControl.exe --command=STOP --device=RfModeCaptureDevice


#### 2013-01-23, 21:25:47 - Andras Lasso
file:bZV3mCzAmr4O4RacwqjQWU
Test config for multi-stream parallel saving to disk

#### 2013-01-23, 21:25:47 - Andras Lasso
Attachment added: "PlusConfiguration_OpenIGTLinkMultistreamSavingTest.xml"

#### 2013-02-10, 15:50:02 - Adam Rankin
Confirmed as working.

#### 2013-02-10, 15:50:02 - Adam Rankin
status: changed from "New" to "Fixed"


## #660 Select stream instead of devices for data collection input
Currently a device has to be selected as an input when collecting data (  <DataCollection StartupDelaySec='1.0' DefaultSelectedDeviceId='TrackedVideoDevice' > ). This doesn't allow selection of a specific stream, in case the device provides multiple streams. It seems to be more convenient to specify a stream as input and use a mixer device if data should be collected from multiple streams.

Change DataCollection's DefaultSelectedDeviceId attribute to DefaultSelectedStreamId. Move GetTrackedFrames implementation from PlusDevice to PlusStream.

#### 2013-01-23, 21:49:26 - Adam Rankin
What is the use case when the user selects a stream that is not active and calls get tracked frame? PLUS_FAIL or an empty tracked frame or both?

#### 2013-01-23, 21:52:37 - Andras Lasso
What does 'active' mean?

#### 2013-01-23, 22:03:14 - Adam Rankin
vtkPlusDevice.CurrentStream is set by the device to point to the stream currently outputting data.

Is there a use case where a device will be outputting to multiple streams in parallel?

#### 2013-01-23, 23:01:55 - Andras Lasso
vtkPlusDevice.CurrentStream can only be an internal implementation detail of a device, as the device may change the CurrentStream with any frequency. Other devices that use the device cannot rely on the knowledge of the CurrentStream, because it can change anytime, and it would be impossible to properly propagate the CurrentStream changes of all devices to all other devices (each running in a different thread...).

Also, nothing is prepared for handling multiple images per stream: a tracked frame can only store a single video frame, a trackedframelist cannot store multiple images per item either, metaimage file doesn't support it either.

Moreover, some basic functionalities cannot be extended to multiple images per stream, because temporal interpolation of video data is not possible (this is a difference compared to tools, where temporal interpolation is completely doable). E.g., GetTrackedFrame(timestamp, outputTrackedFrame) is not feasible if the timestamps of the image buffers are not synchronized.

So, unfortunately (but better sooner than later), I think we should go back to the one image buffer per stream model.

If you are not convinced, then just try to properly implement the following functions to work properly for a stream that contain multiple image buffers:
PlusStatus vtkPlusDevice::GetOldestTimestamp(double &ts)
PlusStatus vtkPlusDevice::GetMostRecentTimestamp(double &ts)
double vtkPlusDevice::GetClosestTrackedFrameTimestampByTime(double time)
int vtkPlusDevice::GetNumberOfFramesBetweenTimestamps(double aTimestampFrom, double aTimestampTo)
PlusStatus vtkPlusDevice::GetTrackedFrameList( double& aTimestampFrom, vtkTrackedFrameList* aTrackedFrameList, int aMaxNumberOfFramesToAdd )
PlusStatus vtkPlusDevice::WriteToMetafile( const char* outputFolder, const char* metaFileName, bool useCompression /*= false*/ )
PlusStatus vtkPlusDevice::GetTrackedFrame( double timestamp, TrackedFrame& aTrackedFrame, bool enableImageData/*=true*/ )

They are not even simple for a single stream and they don't work correctly now (e.g., try to run the PlusServer with the attached config file). I think we only have a chance for a correct implementation if we don't complicate things any further and just implement the above functions at the stream level.

#### 2013-01-23, 23:04:11 - Andras Lasso
file:aY-5CWzBer4QP8acwqjQWU
Multi-stream capturing with auto-start (EnableCapturing set to true)

#### 2013-01-23, 23:04:11 - Andras Lasso
Attachment added: "PlusConfiguration_OpenIGTLinkMultistreamSavingTest.xml"

#### 2013-01-28, 15:08:05 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-01-28, 16:03:56 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-01-29, 22:20:38 - Adam Rankin
Proposed configuration structure:



~~~~
<DeviceConfiguration StartupDelaySec='1.0'>
  <DeviceSet ... />
  <Device ... >
    <DataSources>
      <DataSource Type='Video' ... />
      <DataSource Type='Tool' ... />
    <DataSources>

    <InputChannels>
      <InputChannel Id='...' />
    </InputChannels>

    <OutputChannels>        
      <OutputChannel Id='...' VideoSourceId='...' >
        <DataSource Id='...' />
        <DataSource Id='...' />
      </OutputChannel>
    </OutputChannels>
  </Device>
</DeviceConfiguration>

~~~~



#### 2013-01-30, 13:49:58 - Andras Lasso
We can keep the current DataCollection element name, as it matches the class name better and there is no name conflict.

 VideoSourceId attribute should be renamed to VideoDataSourceId.

Unrelated, but once we are at changing the structure: having the DeviceSet as a DataCollection child element is not very good. The device set info attributes should be directly in the DataCollection element or the device set element should be at the same level as the DataCollection element.

#### 2013-01-30, 22:16:25 - Adam Rankin
Updated config:


~~~~
<DataCollection StartupDelaySec='1.0'>
  <DeviceSet ... />
  <Device ... >
    <DataSources>
      <DataSource Id='...' Type='Video' ... />
      <DataSource Id='...' Type='Tool' ... /> <!-- unique ids across ALL sources per device -->
    <DataSources>

    <InputChannels>
      <InputChannel Id='...' />
    </InputChannels>

    <OutputChannels>        
      <OutputChannel Id='...' VideoDataSourceId='...' >
        <DataSource Id='...' />
        <DataSource Id='...' />
      </OutputChannel>
    </OutputChannels>
  </Device>
</DataCollection>

~~~~



#### 2013-01-30, 23:21:24 - Andras Lasso
I assume that by 'unique ids across ALL sources' you mean 'unique ids across all sources in the same device'. Is that right?

#### 2013-01-31, 00:13:36 - Adam Rankin
Yes!

#### 2013-01-31, 22:37:04 - Adam Rankin
In relation to this ticket

fCal used as example application

https://www.assembla.com/code/plus/subversion/commit/2453

#### 2013-01-31, 22:37:04 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-02, 14:21:30 - Adam Rankin
(In r:2465|plus:2465) re #660 Merging sandbox into trunk. 

Major feature change is moving GetTrackedFrame into vtkPlusChannel.

#### 2013-02-04, 20:36:15 - Andras Lasso
(In r:2470|plus:2470) re #660: Refuse to start data collection if any of the devices fail to be instantiated or configured to make sure that important configuration errors are noticed.

#### 2013-02-04, 21:41:14 - Andras Lasso
(In r:2471|plus:2471) re #660: Fixed the returned timestamp in vtkPlusChannel::GetTrackedFrameListSampled. It did not correspond exactly to the timestamp of an existing frame.
 

#### 2013-02-04, 23:06:07 - Andras Lasso
(In r:2474|plus:2474) re #660: Fixed some more cases in the returned timestamp in vtkPlusChannel::GetTrackedFrameListSampled. Fixed CurrentChannel logic in vtkPlusDevice::GetTrackedFrame (it returned with failure when the channel was valid). Fixed vtkDataCollector::GetVideoData to return raw video data, not synchronized with tracking data.

#### 2013-02-10, 15:50:46 - Adam Rankin
Confirmed as working. PlusLib outputs channel data, as an example, fCal can select it.

#### 2013-02-10, 15:50:46 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-02-10, 19:16:12 - Andras Lasso
Great! One remaining thing: The DataCollection element's DefaultSelectedDeviceId is not relevant anymore. It should be removed or renamed to DefaultSelectedChannelId.

#### 2013-02-10, 19:16:12 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2013-02-10, 23:10:47 - Adam Rankin
(In r:2481|plus:2481) re #660 Removing default selected device id. Tag is present and used by fCal. Config files updated.

Fixing rf tests to look for new file format.

Fixing up BkPro device.

#### 2013-02-11, 03:24:43 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-15, 19:00:48 - Adam Rankin
status: changed from "Test" to "Fixed"


## #661 RfProcessing tag is not saved correctly


#### 2013-01-29, 19:36:48 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-03-08, 19:37:40 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-03-18, 19:30:06 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-18, 21:03:30 - Adam Rankin
(In r:2604|plus:2604) Test #661 RfProcessing tag is now correctly saved

#### 2013-03-18, 21:03:30 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:39:17 - Adam Rankin
Confirmed working.

#### 2013-03-27, 16:39:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #662 Allow defining a clipping rectangle for temporal calibration
Request from Hummel's team from Austria: 'I was trying to perform temporal calibration, but it did not work the way I wanted to. Do I have to define a region of interest from the Video For Windows Image? Bacause not the whole Image is contains US Image data. It is the whole screen the US Device has on it’s own monitor. I Think this is important for correct temporal calibration.'

Make it possible to define a clipping rectangle, similarly to the fiducial wire segmentation.

#### 2013-02-01, 18:07:11 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-02-01, 18:22:45 - Andras Lasso
(In r:2454|plus:2454) test #662: Temporal calibration algo in fCal reads the Segmentation element's RegionOfInterest attribute to limit the line search to a rectangular region within the image

#### 2013-02-01, 18:22:45 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-02-01, 21:52:38 - Andras Lasso
(In r:2459|plus:2459) re #662: Temporal calibration RegionOfInterest fixes. Need to be tested once temporal calib in simulation mode works.

#### 2013-02-04, 22:15:23 - Andras Lasso
(In r:2473|plus:2473) re #662: Removed unnecessary logging

#### 2013-04-19, 18:46:57 - Adam Rankin
(In r:2717|plus:2717) re #662 properly reading segmentation configuration in temporal calibration toolbox

#### 2013-04-19, 18:47:14 - Adam Rankin
status: changed from "Test" to "Fixed"


## #663 Allow defining a clipping rectangle for temporal calibration (backport)
backport of #662 to the latest stable

#### 2013-02-01, 18:07:05 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-02-01, 21:43:27 - Andras Lasso
(In r:2457|plus:2457) re #663: Temporal calibration algo in fCal reads the Segmentation element's RegionOfInterest attribute to limit the line search to a rectangular region within the image. Merged from trunk and made additional fixes.

#### 2013-02-01, 21:43:33 - Andras Lasso
(In r:2458|plus:2458) re #663: Temporal calibration algo in fCal reads the Segmentation element's RegionOfInterest attribute to limit the line search to a rectangular region within the image. Merged from trunk and made additional fixes.


#### 2013-02-01, 21:53:05 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-02-04, 22:15:02 - Andras Lasso
(In r:2472|plus:2472) re #663: Removed unnecessary logging

#### 2013-03-30, 13:38:35 - Andras Lasso
Very likely it works. If not, then Plus-2.x is stable enough now to switch to that. So, closing this ticket now.

#### 2013-03-30, 13:38:35 - Andras Lasso
status: changed from "Test" to "Fixed"


## #664 No tools available via OpenIGTLink TDATA.
I think this is separate from #643 because 1) the tools in config file match exactly the tools in the field 2) I confirmed with Slicer that the tracker data is being streamed from BL. plus at r2459.

#### 2013-02-02, 13:49:38 - Adam Rankin
              Is this with the latest in trunk?

#### 2013-02-02, 19:57:35 - Isaiah Norton
Yes

#### 2013-02-03, 20:34:46 - Isaiah Norton
file:aL-AEmBKer4PHMacwqjQWU


#### 2013-02-03, 20:34:46 - Isaiah Norton
Attachment added: "20130201.amigo.log1.txt"

#### 2013-02-03, 20:35:40 - Isaiah Norton
I think this is actually not specific to OpenIGTLink tracker. PlusConfiguration_Epiphan_FakeTracker.xml from the current trunk fails with the attached log file.

PlusConfiguration_VideoNone_FakeTracker_PivotCalibration_fCal.xml works fine

#### 2013-02-03, 20:35:40 - Isaiah Norton
assigned_to_id: changed from "ihnorton" to "rankin"

#### 2013-02-03, 20:54:57 - Isaiah Norton
Hmm. Working now after a separate rebuild so not sure what was up.

#### 2013-02-03, 20:54:57 - Isaiah Norton
assigned_to_id: changed from "rankin" to null

#### 2013-02-03, 20:54:57 - Isaiah Norton
status: changed from "New" to "Invalid"

#### 2013-02-03, 23:14:44 - Andras Lasso
Thanks for your patience. There were lot of changes (and associated regressions and fixes) in the trunk recently. We have completed all the major changes, so now we are working on stabilizing everything and fixing the remaining bugs.


## #665 Build each device in a separate dll and load only those DLLs that are needed
When including certain devices on certain builds, it can cause the clients to fail to launch.

Some examples:
BkPro - 64 bit OS, 32 bit Plus build
MicronTracker - embedded XP

If we could come up with a way to load them as DLLs and gracefully handle any fails, it would be a cleaner approach.

#### 2016-07-13, 16:45:56 - Adam Rankin
Closing as invalid. These incompatibilities can be identified in CMake before building.

#### 2016-07-13, 16:45:56 - Adam Rankin
status: changed from "New" to "Invalid"


## #666 Add a startup delay for devices that use other device output
For some devices it may take time to get ready for data collection. Previously, a single delay was implemented in the DataCollector (StartupDelaySec) and no data collection was attempted from the devices until this time period elapsed. However, the mixer device, the US simulator device, and all other devices that use inputs provided by other devices does not respect this waiting period, and therefore false warning or error messages may be displayed (see #643).

Proposed solution: during the startup delay period mixer (and similar) devices should not report errors or warnings if they don't receive anything from their input channels.


#### 2013-02-04, 21:32:19 - Andras Lasso
description: changed from "For some devices it may tak..." to "For some devices it may tak..."

#### 2013-11-25, 15:38:22 - Adam Rankin
Would not any threaded device ignore the delay? It only delays the main thread.

I can refactor so that the delay is passed to each device, threaded devices will manage their own delay, and non-threaded devices will be covered by the 'global' data collector delay.

#### 2013-11-25, 16:05:22 - Andras Lasso
You are right, each device should receive the delay value. It would be just used for deciding to log an WARNING or DEBUG message when no input is available (if data is not received then log debug in the initial grace period after connection start, log a warning if it happens anytime later).

I've recently changed the logging when no input data becomes available to avoid logging errors. The logging in these two classes could be refined as shown below (and it should b generalized to all devices that rely on input from other devices):

* vtkUsSimulatorVideoSource:

change to LOG_WARNING/LOG_DEBUG depending on time after connect():
LOG_DEBUG('Simulated US image is not generated, as no tracking data is available yet. Device ID: ' << this->GetDeviceId() ); 

change to LOG_DEBUG:
LOG_INFO('Simulated US image generation started. No tracking data was available between '<<this->LastProcessedTrackingDataTimestamp<<'-'<<oldestTrackingTimestamp<<'sec, therefore no simulated images were generated during this time period.');

* vtkPlusOpenIGTLinkServer:

change to LOG_WARNING/LOG_DEBUG depending on time after connect():
LOG_DEBUG('No data is broadcasted, as no data is available yet'); 

change to LOG_DEBUG:
LOG_INFO('OpenIGTLink broadcasting started. No data was available between '<<self->LastSentTrackedFrameTimestamp<<'-'<<oldestDataTimestamp<<'sec, therefore no data were broadcasted during this time period.');


#### 2013-11-25, 16:17:09 - Adam Rankin
Is there a commit number?

#### 2013-11-25, 16:17:35 - Adam Rankin
I have a local change that adds the global delay to threaded devices as well, shall I commit it?

#### 2013-11-25, 16:37:02 - Andras Lasso
Commit #2987. I think we need to set the logging level (warning/debug) for missing input data depending how long ago the connection was established. If you've implemented this then it should be integrated. Actually delaying the output generation in devices is probably not a good idea anymore, because there could be a chain of devices that depend on each other, so devices should begin producing output as soon as they have all the required inputs.

#### 2013-11-25, 18:54:31 - Adam Rankin
(In r:2995|plus:2995) test #666 devices with input now have an optional grace period to reduce severity of reported missing data. this gives input devices a chance to create output data

#### 2013-11-25, 18:54:31 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-11-25, 18:54:31 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-11-25, 18:55:03 - Adam Rankin
@lassoan now available for testing

#### 2013-11-25, 18:55:03 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-11-25, 18:55:27 - Adam Rankin
Oops, forgot plus server.

#### 2013-11-25, 18:55:27 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-11-25, 18:55:27 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-11-25, 19:06:42 - Adam Rankin
(In r:2996|plus:2996) test #666 apply similar idea to open igt link server to more gracefully report missing input

#### 2013-11-25, 19:06:42 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-11-25, 19:13:01 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-11-26, 19:36:10 - Adam Rankin
(In r:2999|plus:2999) test #643 Changing the approach to logging unknown or missing tools.

Optional device tag configuration option 'ReportUnknownToolsOnce=TRUE/FALSE' enables a singular report of a missing unknown tool.

Also changed the handling of missing tools in the openIGT link tracker to be less severe.

These changes combined should enable more graceful handling of the B rainLab tracking system.

This combined with the resolved re #666 should give the user enough control to successfully connect and receive data.

#### 2013-12-10, 16:01:46 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:46 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-11, 01:56:49 - Andras Lasso
(In r:3039|plus:3039) re #666: Fixed disc capture device (same frames were recorded multiple times)

#### 2013-12-19, 17:00:53 - Andras Lasso
No more false warning messages are logged

#### 2013-12-19, 17:00:53 - Andras Lasso
status: changed from "Test" to "Fixed"


## #667 EditSeqMetafile creates raw file in wrong directory
When running this command:

EditSeqMetaFile.exe --source-seq-file=f:\\MedicalImages\\amigo-data\\20130204-NeuroUsTesting\\calibration_tests\  rackedImageSequence_20130204_140213-original.mha --output-seq-file=f:\\MedicalImages\\amigo-data\\20130204-NeuroUsTesting\\calibration_tests\  rackedImageSequence_20130204_140213_UF.mhd

the .raw file is generated in a wrong directory:
f:\\devel\\PlusExperimental-x64bin\\bin\elease\  rackedImageSequence_20130204_140213_UF.raw 

Note that while the command is running, the temporary file is created in the correct directory:
f:\\MedicalImages\\amigo-data\\20130204-NeuroUsTesting\\calibration_tests\  rackedImageSequence_20130204_140213_UF.mhd_images 

So, only the final renaming of the ...mhd_images file to ...raw is wrong (moves the file to the current directory).

#### 2013-02-05, 15:49:02 - Adam Rankin
(In r:2475|plus:2475) re #667 Fixed meta image sequence IO to properly set the pixDataFilename if .mhd is specified

#### 2013-04-05, 22:59:57 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-07, 21:27:38 - Adam Rankin
Confirmed not fixed, working on it.

#### 2013-04-07, 21:27:38 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-07, 22:31:22 - Adam Rankin
(In r:2655|plus:2655) fixed #667 .mhd files now correctly located with their raw/zraw counterparts

fixed #718 No longer crash when Rf data with no rf processor is sent to be visualized.

#### 2013-04-07, 22:31:22 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #668 Discussion regarding defining device output
After starting the refactor to remove the SelectedDevice and SelectedChannel concepts, I've run across a piece of code that made me re-think devices.

Why do we define the device output? Isn't the output of the device defined by the device?

For example: In the EpiphanVideoDevice, the InternalConnect used the SelectedChannel concept. However, there should only ever be one output channel for the Epiphan containing video, and that should never change. The only thing that should be changed is perhaps the behaviour of the device (aka BufferSize, etc...).

Anyways, this ticket is just to instigate a discussion about how we define devices.

#### 2013-10-29, 19:18:20 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-12-22, 04:24:03 - Andras Lasso
A CreateDefaultOutputChannel method is now added to vtkPlusDevice. Currently it is only used for testing, but it could be a starting point for the simplification of how device output channel are specified.

#### 2014-12-10, 21:09:50 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #669 Tracked frames are not acquired if a tool is missing
From Isaiah Norton: 'I think I may have found the reason for the low fps recording: if any instrument is missing, then the fps drops down to around 4 fps. If all instruments are present then the framerate goes up to 30. This seems like a bug.'

The behavior should be changed so that a tracked frame is recorded regardless of tool state.

#### 2013-02-08, 19:04:21 - Isaiah Norton
sample data  (4 fps, 30 fps, 4-30 fps) here:

https://amigo-data.partners.org/midas/folder/122

if someone needs an access invitation then let me know.

#### 2013-02-28, 22:10:37 - Andras Lasso
@ihnorton: In which tab in fCal you experience this (Capturing/Temporal calibration/Spatial calibration)? I've made some changes that may fix issues in the Capturing tab. Could you please test?

#### 2013-02-28, 22:10:37 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-03-05, 19:35:33 - Andras Lasso
I could reproduce this with the 'TEST WebCam with Fake tracker' config.

#### 2013-03-05, 19:35:33 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-03-05, 19:38:18 - Andras Lasso
(In r:2557|plus:2557) re #669: Fixed tracker timestamp when interpolation was not possible due to missing tool. This caused missing recorded tracked frames.

#### 2013-03-05, 19:39:09 - Andras Lasso
@ihnorton: It should work correctly now, please test. Thanks!

#### 2013-03-05, 19:39:09 - Andras Lasso
assigned_to_id: changed from "lassoan" to "ihnorton"

#### 2013-03-05, 19:39:09 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-03-12, 15:28:43 - Isaiah Norton
Fixed. Running at 30 fps - this is great. Thank you!

#### 2013-03-12, 15:28:43 - Isaiah Norton
status: changed from "Test" to "Fixed"

#### 2013-03-12, 15:57:28 - Andras Lasso
Very good, thanks for the testing!


## #670 Refactor data collector, devices and channels to demand an identifier at each request
Smart clients, dumb server model.

Make the clients remember which channel they would like to request data from.

#### 2013-02-08, 13:59:17 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-08, 19:35:06 - Adam Rankin
(In r:2478|plus:2478) re #670 Refactoring vtkPlusDevice and vtkPlusChannel to not store default choices. Adopting a smart client/dumb server model so that clients must always request the device/channel to retrieve data.

#### 2013-02-10, 15:51:17 - Adam Rankin
Confirmed as working.

#### 2013-02-10, 15:51:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #671 Refactor the vtkRfProcessor to be channel based
Either make it a member of vtkPlusChannel with accompanying config changes

Or have a device wide rfProcessor that accepts parameters for each frame... this would go well with the 1 thread per device model.

#### 2013-02-10, 00:52:41 - Andras Lasso
The RF processor pre-computes conversion tables for the probe geometry, so changing parameters for each frame would not be feasible.

In the config file the RF processing parameters should be a child of the video DataSource or the OutputChannel element, so the RfProcessor could be a member of the DataSource or OutputChannel class.

#### 2013-02-10, 05:17:35 - Adam Rankin
              I've done it so that the rfprocessing is a member of the    outputchannel. Testing now.
    
    Adam

#### 2013-02-10, 15:04:10 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-10, 15:07:27 - Adam Rankin
(In r:2480|plus:2480) re #671 moved rfProcessor from vtkPlusDevice to vtkPlusChannel. Adjusted configuration format/reading/writing accordingly.

Cleaned up calls to channel data request.

#### 2013-02-10, 15:52:09 - Adam Rankin
Looking good! This change was very satisfying.


~~~~

this->SelectedChannel->GetOwnerDevice()->GetBrightnessOutput(*(this->SelectedChannel)

~~~~


just made me sad...

#### 2013-02-10, 15:52:09 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-02-10, 19:09:43 - Andras Lasso
Yes, it's so much nicer now. Thanks!


## #672 Stabilize PlusServer
Assure stability of PlusServer with new command operations (and in general).

#### 2013-02-11, 15:45:28 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-02-19, 21:57:27 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-02-19, 21:57:46 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-02-21, 13:46:27 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-02-25, 15:18:25 - Andras Lasso
(In r:2532|plus:2532) re #672: If error occurs in vtkVirtualStreamDiscCapture during getting frames then next time continue capturing frames from current time (without this: if the capture falls too much once, it never recovers)

#### 2013-04-03, 18:46:45 - Adam Rankin
Going to close this ticket and address individual issues with individual tickets.

#### 2013-04-03, 18:46:45 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-04-03, 18:48:40 - Csaba Pinter
If the commits under this ticket don't really fix the issue then it should be Invalid instead and the relevant tickets be referenced as related.


## #673 Confirm working calibration for multiple hardware configuration


#### 2013-02-11, 15:45:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-02-12, 18:03:04 - Adam Rankin
Using PlusConfiguration_SonixTouch_Ascension3DG_L14_fCal2.0.xml at revision 2484


~~~~
<Transform From='Image' To='Probe'
      Matrix='
        0.000109388  0.0723958  0.00110216  12.3302
        -0.0784235  0.0018623  -0.010626  47.6535
        -0.0111039  -0.000799414  0.0750585  5.99002
        0  0  0  1'
       Error='0.72397' Date='021213_125959'/>
<Transform From='Phantom' To='Reference'
      Matrix='
        -0.0161051  0.023162  -0.999602  14.3357
        -0.0249772  0.99941  0.02356  -40.4713
        0.999558  0.0253467  -0.0155171  24.526
        0  0  0  1'
       Error='0.936216' Date='021213_124433'/>
    <Transform From='StylusTip' To='Stylus'
      Matrix='
        0.998552  0.0191555  0.0502591  84.485
        -0.0191798  0.999816  0  -1.62275
        -0.0502499  -0.000963959  0.998736  -4.25151
        0  0  0  1'
       Error='0.529051' Date='021213_124232'/>

~~~~



#### 2013-02-12, 18:04:26 - Adam Rankin
(In r:2483|plus:2483) re #673 Fixed to obtain successful calibration for SonixTouch and Ascension3DG.

#### 2013-02-12, 18:04:39 - Adam Rankin
(In r:2484|plus:2484) re #673 Fixed to obtain successful calibration for SonixTouch and Ascension3DG.

#### 2013-02-14, 02:18:09 - Adam Rankin
(In r:2500|plus:2500) re #673 Changing parent of vtkPlusDevice to be vtkObject instead of vtkImageAlgorithm. No longer used by the VTK pipeline.

Segmentation parameter dialog fixed. Image visualizer is properly initialized with the channel to visualize. VTK pipeline errors fixed.

#### 2013-02-19, 21:35:21 - Adam Rankin
Phidget tracker working well.

#### 2013-02-19, 21:57:39 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-21, 17:53:26 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-02-22, 20:58:00 - Adam Rankin
NDI Polaris + Sonix working

#### 2013-02-22, 20:58:48 - Adam Rankin
(In r:2527|plus:2527) re #673 Small changes to get Polaris calibration working

Fixed a couple of bugs with fCal

#### 2013-02-26, 21:23:46 - Andras Lasso
(In r:2535|plus:2535) re #673: Fixed timestamping and threading in vtkWin32VideoSource2

#### 2013-02-27, 19:46:01 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-03-02, 22:12:32 - Andras Lasso
(In r:2547|plus:2547) re #673: Cleaned up data collection thread handling: Renamed flag to StartThreadForInternalUpdates to indicate that the flag is for running InternalUpdate automatically and make it a positive statement (even if the don't start a data collection thread the device may still contain multiple threads, so the old name of ForceSingleThreaded... was inaccurate). By default don't start a data collection thread. Explicitly write into each device constructor if a thread for internal update is needed or not.

#### 2013-03-05, 17:51:42 - Adam Rankin
Is the win32 video source stable?

#### 2013-03-05, 18:05:29 - Adam Rankin
Confirm working win32video as working.

#### 2013-03-18, 19:29:19 - Adam Rankin
Epiphan capture device working. Disc capture working.

#### 2013-03-27, 16:44:29 - Adam Rankin
Going to close this ticket and open any new tickets with specific device issues, overall things are running well.

#### 2013-03-27, 16:44:29 - Adam Rankin
status: changed from "New" to "Fixed"


## #674 Add quick plane switching capability to BK biplane probes
With the current vtkBkProFocusVideoSource switching between sagittal and axial transducer requires disconnect and connect. Now Plus supports multiple output channels (each with a different video stream) for devices. However, the BK video source should be update to take advantage of this. The BK video source should detect which scan plane is used for each acquired frame and emit the video on the appropriate corresponding output channel.

Implementation steps:
* mechanism to get the plane info from BK (Andriy)
* second output channel (Andras, Adam)
* test everything with the real hardware (Andriy)


#### 2013-02-15, 15:55:04 - Andrey Fedorov
Getting plane info from BK update:

BK supports a list of events attached at the bottom of the message. Subscription to events is done as follows (we have oemClient in bkProFocusVideoSource):

this->oemClient->RegisterCallbackFunc(AutoUpdate, this->buffer, sizeof(this->buffer),'EVENT:');

When event arrives, buffer looks like this: 'EVENT:<event_type>;'. I tested, and this does work for events like FREEZE/UNFREEZE and TRANSDUCER_CONNECT (by the way, I think it may make sense to handle FREEZE event, to notify the user at least).

According to the BK technical contact, there is also event SCAN_PLANE that should be sent when sagittal/transverse arrays are switched on 8848. However, experiments show that when this switch happens, the event received is DIAGNOSTIC_SETUP_SELECTED, not SCAN_PLANE.

I emailed our contact at BK about the inconsistent event message, will update when hear back.

--- List of supported events ---

7.11 Event Messages
External -> Scanner
Event messages are used by the scanner to send back event notifications to external. The 
event messages always start with the token EVENT or the abbreviated token EVEN and are 
followed by a program message subtype that defines the event type. See section 7.4
Configuration Messages for details on how to set up the scanner to send event messages.
EVENT:SHUT_DOWN; Sent when the scanner is shutting down.
EVENT:ACQUIRE_3D_START; Sent when a 3D acquisition starts.
EVENT:NEW_PATIENT; Sent when a new patient is activated on the 
scanner.
EVENT:FREEZE; Sent when the scanner is frozen.
EVENT:UNFREEZE; Sent when the scanner is unfrozen.
EVENT:TRANSDUCER_CONNECT; Sent when a transducer is connected to the 
scanner.
EVENT:TRANSDUCER_DISCONNECT; Sent when a transducer is disconnected from 
the scanner.
EVENT:TRANSDUCER_SELECTED; Sent when a new transducer is selected as 
active transducer.
EVENT:DIAGNOSTIC_SETUP_SELECTED; Sent when a new Diagnostic Setup is selected.
EVENT:NEW_MEASUREMENT_RESULT; Message sent when a new measurement result 
is available.
EVENT:CROSS_HAIR_OUTSIDE_IMAGE; Message sent when a cross hair or some of its 
parts is placed outside of the shown ultrasound 
image.
EVENT:OEM_SYNCHRONIZATION; Message sent when the user-programmable key 
<OEM Synchronization> is pressed on the 
scanner.

#### 2013-02-16, 01:07:38 - Andras Lasso
Great, the results seem promising.

#### 2013-02-16, 01:07:44 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-02-16, 16:32:57 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-02-16, 16:33:44 - Adam Rankin
Hey Andrey,

Once you've got the API under control, I can help explain to you which buffers should receive the data.
Skype me if you need help!

#### 2013-02-19, 20:55:14 - Adam Rankin
priority: changed from "Normal (3)" to "Highest (1)"

#### 2013-02-19, 20:55:25 - Adam Rankin
priority: changed from "Highest (1)" to "Normal (3)"

#### 2013-02-19, 21:08:51 - Andrey Fedorov
I received the response from BK. They suspect there may have been be a bug in the Grabbie library, so they sent an updated one. I will now test with the new library to make sure the issue is resolved, then the new library need to be update to work with Plus video source (I think Andras did some fixes), and hopefully nothing else breaks. I did not have time to work on this today, will do on Friday and will update the ticket when I have news.

@lassoan: if you can give me a high-level idea what you changed in Grabbie, this might help. BK people told me there was not much changes in Grabbie functionality other than bug fixes and addition  of Matlab interface.

#### 2013-02-19, 21:28:56 - Andras Lasso
Grabbie was a huge mess. I had to clean it up a lot.

In the short therm the best is to a diff for the old and new Grabbie and redo the relevant changes in GrabbieLib (the cleaned up version).

In the long term they should clean up their Grabbie SDK. We can send our GrabbieLib to give them an idea what was wrong with their implementation and if needed I can review new Grabbie versions.

#### 2013-02-21, 15:15:52 - Andras Lasso
You can find the source code of both Grabbie-1.1.0 (the original SDK that BK provided) and the corresponding cleaned up GrabbieLib-1.1.0 in PLTools/BK/ProFocus. The structure of the code and file names are the same, so with a compare tool you can see what changes were made.

#### 2013-02-22, 19:27:23 - Andrey Fedorov
Comparison of Grabbie 1.1.0 and 2.2.0 showed there are no relevant changes. After additional communication with BK team, it turned out the mechanism to subscribe to these events is a bit different:

 this->parSyncConnection->SendOemQuery('CONFIG:DATA:SUBSCRIBE \\'SCAN_PLANE\\';');

This appears to work as expected.

#### 2013-02-22, 19:31:12 - Andrey Fedorov
added subscription to this event in GrabbieLib

https://www.assembla.com/code/pltools/subversion/commit/45

#### 2013-02-22, 19:33:10 - Andrey Fedorov
(In r:2526|plus:2526) Re #674: enable subscription to scan plane change events; need to investigate how to assign handler for these events outside of CommandAndControl.


#### 2013-02-26, 15:15:51 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-05-24, 16:20:09 - Adam Rankin
Recommend:
Instead of a single vtkInternal, we have a list of them, each one corresponding to a certain ID (transducer? plane? aggregate ID?)

When a scan plane switch event is triggered, we record the current vtkInternal and when new data is acquired, we allocate data to the channel in the current vtkInternal

This would require that at least one output channel exists for each possible output type (as usual)

#### 2013-05-24, 20:14:46 - Adam Rankin
There's a lot we can do here. We can subscribe to the following events:
TRANSDUCER
SCAN_PLANE

We can also query TRANSDUCER_LIST to retrieve a full list of transducers attached.
We can also query some of the values of each transducer by providing the connector ID.

#### 2013-05-27, 20:52:56 - Andras Lasso
It should be enough to detect if the user switched between two predefined scan planes.

Instead of duplicating the vtkInternal we should just define a ScanPlaneInfo structure that contains SCAN_PLANE-specific information and put into the vtkInternal class:
* std::vector<ScanPlaneInfo> (or std::map<std::string, ScanPlaneInfo>)
* int ActiveScanPlaneIndex (or std::string ActiveScanPlaneId)


#### 2013-05-27, 21:08:36 - Andrey Fedorov
It might be a good start to first support multiple scan planes as defined in the config file, and when a different plane is selected by the user, re-query the parameters over OEM.

#### 2013-12-03, 17:30:39 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #675 Tune Phidget sensor fusion parameters
With rotation along a fixed axis the Phidget sensor 'OrientationSensor' tool appears to provide a more complex trajectory (not just a rotation along a single axis, but also some transient twisting).

Tune the parameters, so that the sensor fusion works correctly for a 180deg rotation around a horizontal axis at a 3-4deg/sec speed.

#### 2013-05-17, 14:54:35 - Andras Lasso
The issue that they have is that currently none of the sensor fusion algorithms in PLUS work well enough for this relatively simple task:
* the TiltSensor mode doesn't do any sensor fusion or filtering therefore it's very noisy
* the OrientationSensor mode with magnetometer (AHRS mode) is not reliable due to inhomogeneous magnetic field
* the OrientationSensor mode without magnetometer (IMU mode) has rotation drift (around the 'down' axis, as there is no compass and the measurement of the heading only relies on gyroscopes)

What should work: use the IMU algorithm but constrain the rotation around the 'initial down direction' to 0 (we would request that they move the transducer to horizontal position when they turn on the system, that would be the initial down direction). We may need to tune the sensor fusion parameters as well. Need to verify the results with optical tracker measurements.


#### 2013-05-17, 15:05:45 - Andras Lasso
@fedorov: Could you attach the header file of a few typical sequences? (so that we can determine the optimal parameters for that rotation speed)

#### 2013-05-17, 15:19:25 - Andras Lasso
assigned_to_id: changed from null to "Anderson_PERK"

#### 2013-05-17, 16:09:39 - Andras Lasso
Magnetometer may not be reliable and may require frequent re-calibration. How to prevent drift when no magnetometer is used?

In vtkPhidgetSpatialTracker::SpatialDataHandler':

Option A: change the gyroscope input (before calling tracker->AhrsAlgo->UpdateIMU(...)) of the sensor fusion algorithm (basically force the measured rotation speed to 0 along the down axis)

Option B: change the output of the sensor fusion algorithm (after calling tracker->AhrsAlgo->UpdateIMU(...)) to snap the rotation around the down axis to 0 (e.g., represent the orientation with Euler angles in the south-west-down coordinate system and set the rotation value around the down axis to 0).

Probably option B would be simpler and more robust (with option A, some rotations around the down axis could still accumulate as a result of numerical inaccuracies).

#### 2013-05-17, 19:52:50 - Andrey Fedorov
file:bBjGakVYSr4ORdacwqEsg8


#### 2013-05-17, 19:52:50 - Andrey Fedorov
Attachment added: "TrackedImageSequence_20121102_114233_scan-converted.mhd"

#### 2013-05-17, 19:52:58 - Andrey Fedorov
file:bF7jscVYSr4QxdacwqjQWU


#### 2013-05-17, 19:52:58 - Andrey Fedorov
Attachment added: "TrackedImageSequence_EpiphanCaptureDevice_20130412_084805_scan_converted_OutputChannel_BKVideoStream.mhd"

#### 2013-05-17, 19:55:13 - Andrey Fedorov
@lassoan: examples uploaded. Regarding optical tracker, today Isaiah and I calibrated Plus with NDI Polaris. We can use this setup to compare the two trackers as well (if I can get the stepper and motor from rad onc!)

#### 2013-05-17, 20:03:01 - Andras Lasso
@fedorov: Thanks for the sequences. It would be great if you could acquire sequences with simultaneous PhidgetSpatial and Polaris tracking data - see the example config file below.

  <DataCollection StartupDelaySec='1.0' >

    <DeviceSet Name='NDI Polaris + PhidgetSpatial' Description='NDI Polaris + PhidgetSpatial tracking'  />

    <Device Id='AllTrackerOutputDevice' Type='VirtualMixer'>
      <InputChannels>
        <InputChannel Id='MargTrackerStream' />
        <InputChannel Id='OpticalTrackerStream' />
      </InputChannels>    
      <OutputChannels>
        <OutputChannel Id='AllTrackerStream' />
      </OutputChannels>        
    </Device> 
    
    <Device
      Id='OpticalTrackerDevice'
      Type='PolarisTracker'
      SerialPort='8'
      BaudRate='115200'
      AcquisitionRate='50'
      LocalTimeOffsetSec='0.0' >
      <DataSources>
        <DataSource Type='Tool' Id='OpticalMarker' PortName='4' RomFile='..\
diToolDefinitions\\8700339.rom' AveragedItemsForFiltering='20' BufferSize='1500'/>
        <DataSource Type='Tool' Id='Reference' PortName='6' RomFile='..\
diToolDefinitions\\8700449.rom' AveragedItemsForFiltering='20' BufferSize='1500'/>
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='OpticalTrackerStream' >
          <DataSource Id='OpticalMarker'/>
          <DataSource Id='Reference'/>
        </OutputChannel>
      </OutputChannels>
    </Device>

    <Device
     Id='MargTrackerDevice'
     Type='PhidgetSpatial'
     AhrsAlgorithm='MADGWICK_IMU' 
     AhrsAlgorithmGain='0.05' 
     TiltSensorWestAxisIndex='1'   
     AcquisitionRate='125' 
     LocalTimeOffsetSec='0.0'>   
     <DataSources>
      <DataSource Type='Tool' Id='Accelerometer' PortName='Accelerometer' BufferSize='1500' AveragedItemsForFiltering='20'/>
      <DataSource Type='Tool' Id='Gyroscope' PortName='Gyroscope' BufferSize='1500' AveragedItemsForFiltering='20'/>
      <DataSource Type='Tool' Id='Magnetometer' PortName='Magnetometer' BufferSize='1500' AveragedItemsForFiltering='20'/>
      <DataSource Type='Tool' Id='TiltSensor' PortName='TiltSensor' BufferSize='1500' AveragedItemsForFiltering='20'/>
      <DataSource Type='Tool' Id='OrientationSensor' PortName='OrientationSensor' BufferSize='1500' AveragedItemsForFiltering='20'/>                           
     </DataSources>   
     <OutputChannels>
      <OutputChannel Id='MargTrackerStream' >
       <DataSource Id='Accelerometer'/>
       <DataSource Id='Gyroscope'/>
       <DataSource Id='Magnetometer'/>
       <DataSource Id='TiltSensor'/>
       <DataSource Id='OrientationSensor'/>                           
      </OutputChannel>
     </OutputChannels>
    </Device> 
        
  </DataCollection>


#### 2013-05-20, 14:34:15 - Andrey Fedorov
I will try to book the equipment and do this on Friday.

I did the reconstructions from the data collected last week, and it does not look good. It's very noisy. I will try to repeat this with the phantom fixed in place.

In your experience, is there a constraint how quickly the probe can move with NDI?

#### 2013-05-20, 14:42:36 - Andras Lasso
Which data is noisy: the Phidget or the NDI tracker? Or the image data? Which NDI tracker do you use? With active or passive markers? NDI Polaris is not particularly sensitive to speed.

#### 2013-05-20, 14:47:13 - Andrey Fedorov
> Which data is noisy: the Phidget or the NDI tracker? 

Both :) But in this case I was talking about reconstruction from NDI only, the setup we used last week with the phantom was NDI + Epiphan. The setup was somewhat suboptimal (I had to start recording while holding the phantom and the probe, and the phantom was not rigidly attached to the table), so I will try again on Friday.

> Or the image data? Which NDI tracker do you use? 

We used NDI Polaris tracker that came with a Hologic US/CT fusion system.

   <Device
      Id='TrackerDevice'
      Type='PolarisTracker'
      SerialPort='5'
      BaudRate='115200'
      AcquisitionRate='50'
      LocalTimeOffsetSec='0'>

> With active or passive markers?

I believe these are passive markers -- snap-on shiny balls.

#### 2013-05-20, 16:36:14 - Andras Lasso
The Polaris with passive markers should be quite accurate, the error should be a few tenth of a millimeters. I didn't experience noise pose measurements with free-hand motion. If you used the motorized rotator and the noise of the pose measurement was only high during motion then it might be related to some vibration.

#### 2013-05-23, 13:32:54 - Andrey Fedorov
@lassoan: is there a tool that would allow to explore different fusion parameters/algorithms for a stored dataset? 

You mentioned using fusion algorithm with/without magnetometer, but I have never tried without magnetometer -- AhrsAlgorithm='MADGWICK_MARG' in acquisition config file. I only tried TiltSensor and OrientationSensor from the saved sequence file captured with these settings.

It would be nice to have a standalone tool so I can specify algorithm in config file, and it would produce an extra transform based on algorithm/parameters in a saved sequence file. If there is no such tool, I can try to make one. Please let me know if you or @Anderson_PERK have it.

#### 2013-05-23, 14:19:45 - Andrey Fedorov
@lassoan: 

1) can you clarify what you mean by the following: 'The angularRate parameters should be updated before calling tracker->AhrsAlgo->UpdateIMU(...) in vtkPhidgetSpatialTracker::SpatialDataHandler' ?

2) Phidget manual describes a procedure to calibrate magnetometer for the specific environment, otherwise the measurements may not be useful: http://www.phidgets.com/docs/1056_User_Guide#Magnetic_Error_Correction_.28Calibration.29 Is there a reason you think this is not necessary?




#### 2013-05-23, 14:42:56 - Andras Lasso
> It would be nice to have a standalone tool so I can specify algorithm in config file, and it would produce an extra transform based on algorithm/parameters in a saved sequence file. If there is no such tool, I can try to make one.

We don't have a standalone tool for recomputing the sensor fusion results from raw data. It would be nice if you could create such a tool.

> The angularRate parameters should be updated before calling tracker->AhrsAlgo->UpdateIMU(...) in vtkPhidgetSpatialTracker::SpatialDataHandler

This is a note to Ryan about how to prevent drift when no magnetometer is used. Option A (that is described in the note): change the gyroscope input of the sensor fusion algorithm (basically force the measured rotation speed to 0 along the down axis). Option B: change the output of the sensor fusion algorithm to snap the rotation around the down axis to 0 (e.g., represent the orientation with Euler angles in the south-west-down coordinate system and set the rotation value around the down axis to 0). Probably option B would be simpler.

> Phidget manual describes a procedure to calibrate magnetometer for the specific environment... Is there a reason you think this is not necessary?

It could work, however you may need to perform the calibration before each procedure (which may be difficult, because it requires rotation along all axes, while the transducer motion is constrained by the stabilizer) and it's not guaranteed that the calibration can fully compensate the presence of all distortion. As we need rotation angle only along one axis (which is not the down axis), we should be able to get that angle without relying on a magnetometer - with one of the options described above.

#### 2013-05-23, 15:02:53 - Andrey Fedorov
Andras, another problem with magnetometer is that the sensor is located relatively close to the motor.

I looked at the measurements from the gyroscope alone, and the angular rate for the second axis seems quite stable, see plot attached (mean 3.5 deg/sec stdev 0.24 for the slow portion of the sweep). Do you think a simple solution that uses this single measurement with perhaps some averaging over consecutive frames could be sufficiently good?

#### 2013-05-23, 15:03:55 - Andrey Fedorov
image:d8SJukW7Kr4QPsacwqEsg8
example angular rate around second axis measured from Phidget 3/3/3 gyroscope sensor

The Y axis title is incorrect -- this is angular rate deg/sec ! sorry

#### 2013-05-23, 15:03:55 - Andrey Fedorov
Attachment added: "ScreenShot2013-05-23at10.57.16.png"

#### 2013-05-23, 15:42:04 - Andras Lasso
The drift of the angle value is probably negligible during a single acquisition, so you can integrate the angular velocity to get rotation angle value. Make sure you use all the 3 sensor directions, if the sensor axis is not aligned exactly with the transducer rotation axis.

#### 2013-05-23, 15:57:41 - Andrey Fedorov
re all 3 sensor directions, not sure, since the signal is very noisy for the other two. mean/std is 17 for the primary one, and ~1 for the other two. The sensor is roughly in good alignment with the rotation axis, since we have a fixed position attachment adapter.

#### 2013-05-23, 16:37:04 - Andras Lasso
I guess stdev is the same for all gyro axes. If the alignment is perfect then you have non-zero mean on one axis and zero mean on the two others.

#### 2013-05-24, 20:53:37 - Andrey Fedorov
You are right, I don't know what I was thinking ... 

Regarding optical tracking together with Phidget: I will first work to design an attachment to allow consistent placement of the star. Calibration procedure for the transrectal probe is very cumbersome, and currently has to be repeated every time. I think we can improve this. I was working on another sub-project with US today, and decided not to spend time on joint tracking until I have a robust system.

#### 2013-05-28, 19:47:02 - Andras Lasso
* Reproduce drfiting accelerometer measurements (move the accel while zeroing, if needed)
* Test if the updated algo stops the rotation around the down axis
* Option A: constrain by decomposing to rotation around SWD axes and setting D rotation component to 0 (assume that initial orientation of the tracked object is SWD). Option B: assume that one of the sensor's axes always points to W (similar to tilt sensor).
* Find a good name for the new coordinate system (RelativeTiltSensor for Option A, FilteredTiltSensor for Option B)

#### 2013-05-29, 20:43:45 - Andrey Fedorov
(In r:2819|plus:2819) re #675: adding a tool to recover transformation that corresponds to angular position based on Phidget gyroscope reading, with the possibility to filter frames based on angular rate threshold

#### 2013-05-30, 17:06:45 - Ryan Anderson
(In r:2822|plus:2822) re #675: Added constrain to the OrientationSensor tool (WIP)

#### 2013-05-30, 20:27:12 - Ryan Anderson
(In r:2824|plus:2824) re #675: Cleaned up code with constraint added to Orientation Sensor tool, new tool called Filtered Tilt Sensor.

#### 2013-05-30, 20:56:38 - Ryan Anderson
<PlusConfiguration version='2.1'>

<DataCollection StartupDelaySec='1.0'>
<DeviceSet
Name='Phidget Spatial test'
Description='Configuration file just PhidgetSpatial tracking. Keep the device stationary for 2 seconds after connect.'
/>
<Device
Id='TrackerDevice'
Type='PhidgetSpatial'
AhrsAlgorithm='MADGWICK_MARG'
AhrsAlgorithmGain='1.5'
FilteredTiltAhrsAlgorithm='MADGWICK_MARG'
FilteredTiltAhrsAlgorithmGain='1.5'
TiltSensorWestAxisIndex='1'
FilteredTiltSensorWestAxisIndex='1'
AcquisitionRate='125'
LocalTimeOffsetSec='0.0' >
<DataSources>
<DataSource Type='Tool' Id='OrientationSensor' PortName='OrientationSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
<DataSource Type='Tool' Id='TiltSensor' PortName='TiltSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
<DataSource Type='Tool' Id='FilteredTiltSensor' PortName='FilteredTiltSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
<DataSource Type='Tool' Id='Accelerometer' PortName='Accelerometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
<DataSource Type='Tool' Id='Gyroscope' PortName='Gyroscope' BufferSize='2500' AveragedItemsForFiltering='20'/>
<DataSource Type='Tool' Id='Magnetometer' PortName='Magnetometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
</DataSources>

<OutputChannels>
<OutputChannel Id='TrackerStream' >
<DataSource Id='OrientationSensor'/>
<DataSource Id='TiltSensor'/>
<DataSource Id='FilteredTiltSensor'/>
<DataSource Id='Accelerometer'/>
<DataSource Id='Gyroscope'/>
<DataSource Id='Magnetometer'/>
</OutputChannel>
</OutputChannels>
</Device>
</DataCollection>

<PlusOpenIGTLinkServer
MaxNumberOfIgtlMessagesToSend='1'
MaxTimeSpentWithProcessingMs='50'
ListeningPort='18944'
OutputChannelId='TrackerStream'
>
<DefaultClientInfo>
<MessageTypes>
<Message Type='TRANSFORM' />
</MessageTypes>
<TransformNames>
<Transform Name='OrientationSensorToTracker' />
<Transform Name='TiltSensorToTracker' />
<Transform Name='FilteredTiltSensorToTracker' />
<Transform Name='AccelerometerToTracker' />
<Transform Name='GyroscopeToTracker' />
<Transform Name='MagnetometerToTracker' />
</TransformNames>
</DefaultClientInfo>
</PlusOpenIGTLinkServer>

<VolumeReconstruction OutputSpacing='0.5 0.5 0.5'
ClipRectangleOrigin='0 0' ClipRectangleSize='820 616'
Interpolation='LINEAR' Optimization='FULL' Compounding='On' FillHoles='Off'
/>

</PlusConfiguration>

#### 2013-05-30, 21:15:33 - Ryan Anderson
The above config file works with the the updated filtered tilt sensor.
The AHRS algorithm and algorithm parameters can be changed independently for the tilt sensor and filtered tilt sensor.

#### 2013-05-31, 00:28:08 - Andras Lasso
@fedorov: We've completed the sensor fusion implementation for the tilt sensor.  Use the PortName='FilteredTiltSensor' to get a drift-free (no rotation drift around the down axis) and reduced-noise orientation matrix. Set these parameters:
* FilteredTiltAhrsAlgorithm='MADGWICK_IMU' => you can also try MAHONY_IMU
* FilteredTiltAhrsAlgorithmGain='1.5' => you can try to change this parameter (it balances between noise suppression and quick convergence to the accelerometer-measured orientation)
* FilteredTiltSensorWestAxisIndex='1' => specify here the axis number (0, 1, or 2) of the tilt sensor axis that is parallel to the rotation axis (points towards the tip of the transducer)

Ideally, this should be tested with the motorized stepper and with the optical tracker as ground truth, but if you don't have access to the motorized stepper then it's enough if you can just do some manual testing.

#### 2013-05-31, 00:28:08 - Andras Lasso
assigned_to_id: changed from "Anderson_PERK" to "fedorov"

#### 2013-05-31, 00:28:08 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-05-31, 02:21:28 - Andrey Fedorov
I will test. I don't know if I will be able to do this tomorrow. I have few critical deadlines, and may need to postpone.

Also, Andras - regarding my earlier question if the filter can be applied to previously recorded data. I just thought can't it be done by specifying the recorded sequence file as data source and replaying it?

#### 2013-05-31, 03:42:42 - Andras Lasso
Currently the sensor fusion algorithm files are only used privately by the PhidgetSpatial class, so we need to reorganize the code to make it available to Plus applications. Then the tool to re-computate sensor fusion results from recorded raw measurement data can be implemented. Probably it's better to create a new tool for that, very similar to the existing PhidgetVolumeReconstruction tool, we could call it SpatialSensorFusion.

I'll do this code reorganization tomorrow (Friday) => #770
@Anderson_PERK: after the code reorganization is ready, please implement this SpatialSensorFusion tool (you'll need this for your work anyway) => #771

#### 2013-06-28, 15:38:47 - Andrey Fedorov
(In r:2879|plus:2879) re #675: add missing quotes to fix compile error

#### 2013-06-28, 20:00:39 - Andrey Fedorov
(In r:2888|plus:2888) refs #675,766: adding BWH config file that has Epiphan and both Polaris and Epiphan trackers configured

#### 2013-06-28, 20:03:01 - Andrey Fedorov
I was not able to test this today, since the stepper is used by clinical staff, but the config file is ready, so I will try to test next week, maybe Tuesday - I have the config file with optical and phidget trackers ready

#### 2013-07-03, 00:04:54 - Andrey Fedorov
file:aWD6zC43qr4QBcacwqjQYw
Polaris + Phidget config file

#### 2013-07-03, 00:04:54 - Andrey Fedorov
Attachment added: "TrackedImageSequence_20130702_125545_config.xml"

#### 2013-07-03, 00:05:30 - Andrey Fedorov
file:bfx_f443qr4R3dacwqEsg8
Polaris + Phidget tracked image file header

#### 2013-07-03, 00:05:30 - Andrey Fedorov
Attachment added: "TrackedImageSequence_20130702_125545_header.mha"

#### 2013-07-03, 00:05:54 - Andrey Fedorov
I did the experiment today and attached the dataset to the ticket.

#### 2013-07-04, 13:51:45 - Andras Lasso
image:dDxYkq5lar4RFdacwqjQXA
Tilt sensor angle measurements vs. ground truth optical

#### 2013-07-04, 13:51:45 - Andras Lasso
Attachment added: "optical-tiltsensor.png"

#### 2013-07-04, 13:52:56 - Andras Lasso
image:ah7_Gy5ler4RWLacwqjQXA
Orientation sensor (sensor fusion, with compass) angle measurements vs. ground truth optical

#### 2013-07-04, 13:52:56 - Andras Lasso
Attachment added: "optical-orientationsensor.png"

#### 2013-07-04, 13:53:16 - Andras Lasso
image:atJa-K5ler4QhdacwqjQXA
Filtered tilt sensor (sensor fusion, without compass) angle measurements vs. ground truth optical

#### 2013-07-04, 13:53:16 - Andras Lasso
Attachment added: "optical-filteredtiltsensor.png"

#### 2013-07-04, 14:19:08 - Andras Lasso
@Andriy,

A SpatialSensorFusion tool (see Diagnostic_and_test_tools page) was created to allow post-processing of raw sensor data to get quite noise-free but still accurate orientation. The computed orientation is stored in the FilteredTiltSensorToPhidgetTracker transform.

Example for obtaining filtered tilt sensor data from raw accelerometer+gyroscope data:

set PLUS_BIN_DIR=c:/Users/lasso/devel/PlusExperimental-bin/bin/Release
set DATA_DIR=c:/Users/lasso/devel/PocketUsTracking/trunk/data/Phidget Data/20130702-BwhPhidgetOptical/

%PLUS_BIN_DIR%/SpatialSensorFusion.exe --ahrs-algo=MADGWICK_IMU --ahrs-algo-gain 0.01 --initial-gain 1 --initial-repeated-frame-number=1000 --input-seq-file='%DATA_DIR%/TransrectalProbeRotatedPhidgetPolaris.mha' --output-seq-file='%DATA_DIR%/TransrectalProbeRotatedPhidgetPolarisReprocessed.mha' --west-axis-index=1 --tracker-reference-frame=PhidgetTracker 

Based on the off-line reprocessing, the 0.01 gain value seemed to be the best (low noise, still accurate angles compared to the optical ground truth) for the filtered tilt sensor. See the results in attached charts above (comparing the orientation sensor, tilt sensor, and filtered tilt sensor tools to the ground truth optical tracker tool)

The FilteredTiltSensor tool is available also in real-time during acquisition. It would be great if you could double-check that the this tool gives optimal result during acquisition as well, with the same 0.01 gain value (during acquisition we have access to the full frame rate of the PhidgetSpatial sensor, so there may be slight differences).

See PlusConfiguration_NoVideo_Phidget.xml config file for an example for adding the FilteredTiltSensor tool to your config file (https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/2914).

#### 2013-07-12, 13:20:45 - Andrey Fedorov
@lassoan, where is the source code for SpatialSensorFusion tool? Do I need to enable Phidget to compile it?

I do not see either source code, or binary:

[fedorov@gridftp-spl PlusBuild2-bin]$ ls
bin               CMakeCache.txt       DartConfiguration.tcl  itk-prefix   OpenIGTLink-bin     PlusApp-bin           PlusBuildAndTest.sh  PlusLib-prefix  vtk-bin
BuildAndTest.bat  CMakeFiles           itk                    Makefile     OpenIGTLink-prefix  PlusApp-prefix        PlusLib              Testing         vtk-prefix
BuildAndTest.sh   cmake_install.cmake  itk-bin                OpenIGTLink  PlusApp             PlusBuildAndTest.bat  PlusLib-bin          vtk
[fedorov@gridftp-spl PlusBuild2-bin]$ find . |grep SpatialSensorFusion
./PlusLib/data/TestImages/SpatialSensorFusionTestInput.mha
./PlusLib/data/TestImages/SpatialSensorFusionTestBaseline.mha
./PlusLib/data/TestImages/.svn/text-base/SpatialSensorFusionTestInput.mha.svn-base
./PlusLib/data/TestImages/.svn/text-base/SpatialSensorFusionTestBaseline.mha.svn-base
[fedorov@gridftp-spl PlusBuild2-bin]$ 

Trying to enable Phidget on my Linux machine (this is where I keep all the data and do the processing) leads to this error:

CMake Error at src/DataCollection/CMakeLists.txt:688 (FILE):
  file COPY cannot find
  '/xnat/fedorov/local/PLUS/PlusBuild2-bin/PlusLib/tools/Phidget/PhidgetSpatial-2.1.8/x86/phidget21.so'.

Indeed, there is only .lib file for Phidget, no shared lib.

#### 2013-07-12, 13:53:44 - Andras Lasso
The sensor fusion tool is in PlusApp. No dependency on Phidget or vica versa. 

#### 2013-07-12, 13:58:28 - Andrey Fedorov
Thank you, resolved

#### 2013-07-16, 14:05:38 - Andrey Fedorov
(In r:2943|plus:2943) re #675, use absolute values of angular rate for filtering

#### 2013-07-16, 14:08:45 - Andrey Fedorov
file:a51L7u7Ier4RxcacwqjQYw
Comparison of FilteredSensorFusion and single axis Gyroscope angular rate based volume reconstruction

#### 2013-07-16, 14:08:45 - Andrey Fedorov
Attachment added: "Gyroscope_vs_FilteredSensorFusion_reconstruction.pptx"

#### 2013-07-16, 14:10:15 - Andrey Fedorov
@lassoan, I uploaded a document summarizing some observations comparing sensor fusion and gyroscope based reconstruction. I will continue using both for the remaining datasets, and will report if I have more updates.

#### 2013-07-16, 17:09:25 - Andras Lasso
Thanks Andriy, this is interesting. Could you attach the image header (no pixel data needed), the config file used for the acquisition and the volume reconstruction?

#### 2013-07-17, 18:53:18 - Andrey Fedorov
file:aK-ewO7Xir4OkMacwqjQXA
Header and config files used for acquisition/reconstruction

#### 2013-07-17, 18:53:18 - Andrey Fedorov
Attachment added: "Case23_recon_debug.tgz"

#### 2013-07-17, 18:54:40 - Andrey Fedorov
Done. 

Acquisition config: TrackedImageSequence_BKCaptureDevice_20130412_083827_config.xml
Gyroscope reconstruction config: TrackedImageSequence_BKCaptureDevice_20130412_083827_GyroFiltered_Recon_config.xml
Gyroscope filtered header: TrackedImageSequence_BKCaptureDevice_20130412_083827_ScanConverted_GyroFiltered.mhd
Sensor fusion recon header: TrackedImageSequence_BKCaptureDevice_20130412_083827_ScanConverted_SensorFusionFiltered.mhd
Sensor fusion recon config: TrackedImageSequence_BKCaptureDevice_20130412_083827_SensorFusionFiltered_Recon_config.xml

#### 2013-07-17, 23:01:35 - Andrey Fedorov
I processed 11 cases today, and in all cases gyroscope based reconstruction was visually superior to sensor fusion. There appears to be some drift remaining. I will next attach another example where it is quite prominent. Same settings were used for sensor fusion in all cases. 

There were some problems with gyroscope sensor measurements in some cases, but maybe I will report those separately. The good thing is I think I have 11 relatively good volumes for the US/MR study, and 2 more I need to look a bit more, because there were some issues with the config file structure (those were collected in the times of transitioning to multi-channel setup).

#### 2013-07-17, 23:02:25 - Andrey Fedorov
image:dYlYdo7Zqr4Oo9acwqEsg8
another example of drift with the sensor fusion based reconstruction

#### 2013-07-17, 23:02:25 - Andrey Fedorov
Attachment added: "ScreenShot2013-07-17at19.01.49.png"

#### 2013-12-05, 23:05:20 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #676 Wire labels in SegmentationParameterDialog are vertically flipped for the upper row
The text that shows the wire labels for the segmented points is vertically flipped, but only for the upper row.
This definitely is the case for SegmentationParameterDialog, but I think it should also be checked in fCal (Spatial calibration).

#### 2013-02-15, 18:59:39 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1"

#### 2013-04-05, 23:24:37 - Adam Rankin
I think this issue has been resolved. I'm not sure which particular issue addressed this but fCal is behaving correctly.

#### 2013-04-05, 23:25:22 - Adam Rankin
Should this be set to fixed or invalid?

#### 2013-04-05, 23:25:22 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-04-05, 23:25:29 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2013-04-05, 23:25:34 - Adam Rankin
Oops.

#### 2013-05-04, 15:20:31 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-07, 22:05:38 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-05-07, 22:05:46 - Andras Lasso
component_id: changed from "None" to "PlusApp-fCal"

#### 2013-05-08, 22:53:54 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-05-14, 17:22:06 - Adam Rankin
Fixed in a previous commit by restricting the orientation to MF in segmentation parameter dialog. Not an issue in fCal as the models for the wires are adjusted when the orientation is changed.

#### 2013-05-14, 17:22:06 - Adam Rankin
status: changed from "New" to "Fixed"


## #677 ToolStateDisplayWidgetTest fails due to error at connecting
There is a crash when connecting to it using fCal.
Need to check if the test passes and also that fCal connects to this device set successfully.

#### 2013-02-12, 18:39:37 - Adam Rankin
(In r:2486|plus:2486) Test #677 Setting the selected channel of the fCal window no matter what is read from the fCal configuration.

#### 2013-02-12, 18:39:37 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-12, 18:50:10 - Csaba Pinter
The PlusApp test ToolStateDisplayWidgetTest still fails.

#### 2013-02-12, 18:50:10 - Csaba Pinter
status: changed from "Test" to "Accepted"

#### 2013-02-12, 18:50:22 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-12, 18:56:21 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-02-12, 19:29:09 - Adam Rankin
(In r:2487|plus:2487) re #677 Repairing test by properly selecting a channel before requesting data

#### 2013-02-12, 19:29:28 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-12, 19:31:31 - Csaba Pinter
Works now. Thanks!

#### 2013-02-12, 19:31:31 - Csaba Pinter
status: changed from "Test" to "Fixed"


## #678 NDI Polaris fails to connect when on port > N
When attempting to connect from SonixTouch, the device was installed on COM10. The ndicapi failed to connect.

#### 2013-02-13, 03:25:40 - Andras Lasso
NDI's architect software can connect correctly even on this Windows XP embedded system.
However, even a standard terminal emulator (mttty) cannot connect to the serial line at COM10. Maybe on Windows XP embedded some different serial API has to be used?

#### 2014-05-22, 21:17:53 - Andras Lasso
The problem is most likely due to the different port naming convention for ports >10

http://support.microsoft.com/kb/115831

CreateFile() can be used to get a handle to a serial port. The 'Win32 Programmer's Reference' entry for 'CreateFile()' mentions that the share mode must be 0, the create parameter must be OPEN_EXISTING, and the template must be NULL. 

CreateFile() is successful when you use 'COM1' through 'COM9' for the name of the file; however, the message
INVALID_HANDLE_VALUE
is returned if you use 'COM10' or greater. 

If the name of the port is \\\\.\\COM10, the correct way to specify the serial port in a call to CreateFile() is as follows:
   CreateFile(
      '\\\\\\\\.\\\\COM10',     // address of name of the communications device
      fdwAccess,          // access (read-write) mode
      0,                  // share mode
      NULL,               // address of security descriptor
      OPEN_EXISTING,      // how to create
      0,                  // file attributes
      NULL                // handle of file with attributes to copy
   );
      
NOTES: This syntax also works for ports COM1 through COM9. Certain boards will let you choose the port names yourself. This syntax works for those names as well.



#### 2014-05-22, 21:24:29 - Andras Lasso
Proposed solution: allow the user to specify the full COM string in the config file and/or fix ndicapi_serial.h and other related files to generate COM port names dynamically, for any port number

Currently:

#define NDI_NUMBER_OF_DEVICES 7
#define NDI_DEVICE0    'COM1:'
...


/*---------------------------------------------------------------------*/
char *ndiDeviceName(int i)
{
#if defined(__APPLE__)
  static char devicenames[4][255+6];
  DIR *dirp;
  struct dirent *ep;
  int j = 0;
  
  dirp = opendir('/dev/');
  if (dirp == NULL) {
    return NULL;
  }

  while ((ep = readdir(dirp)) != NULL && j < 4) {
    if (ep->d_name[0] == 'c' && ep->d_name[1] == 'u' &&
        ep->d_name[2] == '.')
    {
      if (j == i) {
        strncpy(devicenames[j],'/dev/',5);
        strncpy(devicenames[j]+5,ep->d_name,255);
        devicenames[j][255+5] == '\\0';
        closedir(dirp);
        return devicenames[j];
      }
      j++;
    }
  }
  closedir(dirp);
  return NULL;  
#endif /* __APPLE__ */

#ifdef NDI_DEVICE0
  if (i == 0) { return NDI_DEVICE0; }
#endif
#ifdef NDI_DEVICE1
  if (i == 1) { return NDI_DEVICE1; }
#endif
...
#ifdef NDI_DEVICE6
  if (i == 6) { return NDI_DEVICE6; }
#endif
#ifdef NDI_DEVICE7
  if (i == 7) { return NDI_DEVICE7; }
#endif

  return NULL;
} 

#### 2014-05-26, 15:16:14 - Andras Lasso
fixed #678: Updated the COM port name format to be able to connect to ports COM10 and beyond
Commit: r:3327|plus:3327

#### 2014-05-26, 15:16:14 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-26, 15:16:14 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-05-26, 15:16:30 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #679 Migrate to VTK 5.10.1
Slicer uses VTK 5.10.1, it would be good if we matched that version.

#### 2013-02-27, 19:45:51 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-02-27, 19:45:56 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-02-27, 21:14:33 - Adam Rankin
This exact situation is happening when I increment the VTK version number.

http://markmail.org/thread/pbsymaks4teechii#query:+page:1+mid:jrrvghvd2korke27+state:results

However, I don't understand what he means by


~~~~
Then make sure you have specified vtkMath lib in your CMake file or project page (if you are not using CMake).

~~~~


First off, there is no vtkMath, it is part of vtkCommon.
Second, isn't this all internal to VTK? We've changed the library output path, but it's separated by Debug/Release folders... Do we need to tell vtkQtCharts where to look for the vtkCommon dll?
Third, which CMake file is he referring to?

#### 2013-02-27, 21:24:52 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-04-03, 17:49:24 - Adam Rankin
(In r:2641|plus:2641) fixed #679 upgrading to vtk 5.10.1

removing reference to vtkQtCharts as it is deprecated and not used by PLUS

#### 2013-04-03, 17:49:24 - Adam Rankin
status: changed from "New" to "Fixed"


## #680 Migrate to ITK 4.4.0
Slicer uses ITK 4.4.0, it would be good to match that version.

#### 2013-04-05, 23:28:14 - Adam Rankin
@pinter The latest tag on git is 4.3.1. Am I looking in the wrong spot?

#### 2013-04-05, 23:38:02 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-05, 23:38:05 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-05, 23:54:48 - Andras Lasso
Use the version slicer uses now

#### 2013-04-06, 12:45:02 - Csaba Pinter
@rankin: Slicer uses this one. This has version 4.4.0. Strange that you found an older 'latest'. Maybe it is worth taking a look why.

  set(ITKv4_REPOSITORY ${git_protocol}://itk.org/ITK.git)
  set(ITKv4_GIT_TAG 1866ef42887df677a6197ad11ed0ef6e9b239567) #2013-04-03 

#### 2013-04-07, 00:47:31 - Siavash Khallaghi
I was wondering when the great migration would start. :-) I am looking forward to see ITK 4.4.0 in Plus.

#### 2013-04-07, 01:09:46 - Andras Lasso
Scheduled for Plus-2.0, which should be ready within a week or so.

#### 2013-04-07, 18:57:01 - Adam Rankin
The commit d6d726157f87cb47af0db9a44180768024f2d804 is the change to 4.4.0

They have not made a tag for this release yet. Does this mean it is still considered unstable?

The latest git tag is indeed 4.3.1

#### 2013-04-07, 18:57:41 - Adam Rankin
1866ef42887df677a6197ad11ed0ef6e9b239567 is some commit after 4.4.0

Do we know why it is used in slicer and not the change to 4.4.0? If we are using a non-final release, why not go with something more recent?

#### 2013-04-07, 19:09:24 - Adam Rankin
Also, major issue.

itkThreadSupport.h does this:
#ifdef ITK_USE_WIN32_THREADS
#ifndef _WIN32_WINNT
#define _WIN32_WINNT 0x0400
#endif
#endif

#### 2013-04-07, 19:10:09 - Adam Rankin
3d connexion tracker requires this
typedef struct tagRAWINPUTDEVICE {
    USHORT usUsagePage; // Toplevel collection UsagePage
    USHORT usUsage;     // Toplevel collection Usage
    DWORD dwFlags;
    HWND hwndTarget;    // Target hwnd. NULL = follows keyboard focus
} RAWINPUTDEVICE, *PRAWINPUTDEVICE, *LPRAWINPUTDEVICE;

which is #if(_WIN32_WINNT >= 0x0501)

#### 2013-04-07, 19:17:07 - Adam Rankin
I have avoided this problem temporarily by surrounding 3dConnexion building with a CMake option and disabling it.

At the moment, I could enable ITK4.4.0 by disabling 3dConnexion support.

Edit: I will leave the CMake option for 3dConnexion tracker, but this is also the wrong approach

#### 2013-04-07, 19:25:50 - Adam Rankin
I am also able to make everything work by commenting out the #define in itkThreadSupport.h

Not sure if that #define is really necessary.

Edit: wrong approach, ignore this

#### 2013-04-07, 19:32:16 - Adam Rankin
Ah, I understand a bit more now.

@lasson Would it be acceptable for PLUS to define the necessary windows defines to mandate Windows XP or later?
@pinter same

Example:
#define NTDDI_VERSION 0x05010000
#define _WIN32_WINNT 0x0501
#define WINVER 0x0501

(Require XP with no service pack at minimum)

Edit: Or use CMake configuration to specify -D_WIN32_WINNT=0x0501 etc...

#### 2013-04-07, 19:49:57 - Adam Rankin
The MicronTracker API attempts to define _WIN32_WINNT to 0x0400 as well... Why is it not protected by an #ifndef!!!!

...\\pltools\\Claron\\MTC_3.6.5.4_x86_win\\MicronTracker\\Dist\\MTC.h

#### 2013-04-07, 20:14:46 - Adam Rankin
(In r:2652|plus:2652) test #680 Migrating to ITK 4.4.0 (change 1866ef42887df677a6197ad11ed0ef6e9b239567).

Mandating a minimum Windows version of Windows XP no service pack in order to enable ITK threading support and 3dConnexion support at the same time.

Correcting ITK build to properly export the built DLLs into the binary directory.

Adding a guard around 3dConnexion build support to allow enable/disable from CMake.

#### 2013-04-07, 20:14:46 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-07, 22:38:51 - Adam Rankin
@lassoan Andras, I'm assigning this to you so you can confirm that this is an acceptable solution. I don't think the restriction is too unreasonable and it allows us to move to ITK 4.4.0

#### 2013-04-07, 22:38:51 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-07, 23:39:34 - Andras Lasso
Minimum Windows XP? Windows XP SP2 reached end of support 2+ years ago, so we don't really care about that. We currently support Win7 32/64 and WinXPe (see https://www.assembla.com/spaces/plus/wiki/Developers_guide).

@rankin:
Does fCal and PlusServer work on SonixTouch (it's WinXPe)?
Can 3dConnexion be enabled when building on Win7 32/64?


#### 2013-04-07, 23:43:15 - Adam Rankin
Ok, sounds good.

Our support of Windows XP embedded means that we have to support 0x0501 at minimum. We could possibly enforce SP3 0x050103 but so far, our software does not require it (except for device drivers maybe).

I will go run a test this evening and report back re: SonixTouch (I think it will be fine though)

I will create a more advanced CMake script to dynamically populate the windows defines as accurately as possible.

#### 2013-04-07, 23:43:15 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-04-07, 23:43:15 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-04-08, 00:56:32 - Andras Lasso
A few things to consider/fix:
* If it's possible to define the _WIN32_WINNT=0x0501 in the common header file (PlusConfigure.h, which all Plus files include), then I would prefer that over adding ADDITIONAL_CXX_FLAGS. It's simpler to keep track of all defines if they are in a header files. Keeping ADDITIONAL_CXX_FLAGS consistent across all projects (especially when some projects are built outside Plus, e.g., when using Plus libraries in a Slicer module) can be quite complex.
* Remove the red message (-D _WIN32_WINNT=0x0501) when configuring PlusBuild
* Remove 'what what' message in PlusLib\\src\\DataCollection\\CMakeLists.txt 

#### 2013-04-08, 03:06:03 - Adam Rankin
(In r:2660|plus:2660) re #680 latest updates for ITK build

#### 2013-04-08, 04:16:03 - Adam Rankin
(In r:2662|plus:2662) re #680 cleaning up cmake messages

#### 2013-04-08, 04:33:47 - Adam Rankin
(In r:2663|plus:2663) re #680 cleaning up defining of windows version

#### 2013-04-08, 12:29:50 - Adam Rankin
(In r:2664|plus:2664) test #680 Removing unnecessary definitions flag. 

#### 2013-04-08, 12:29:50 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-08, 14:15:32 - Adam Rankin
@lassoan If you have no objections, I will mark this as fixed.

#### 2013-04-08, 14:17:39 - Adam Rankin
(In r:2665|plus:2665) re #680 last commit cleaning up error messages

#### 2013-04-08, 14:45:32 - Adam Rankin
Confirmed working on SonixTouch

#### 2013-04-08, 14:47:52 - Csaba Pinter
Great!

#### 2013-04-08, 14:50:09 - Andras Lasso
Thanks Adam, everything looks good! I just test the build on my PC on 32 and 64 bits and if there is no problem then we can close this ticket.

#### 2013-04-08, 18:39:00 - Adam Rankin
Confirm successful 64 bit build and run.

Edit: Nope! error with 2d visualization.

#### 2013-04-08, 18:40:49 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-04-08, 18:40:57 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-08, 21:41:46 - Andras Lasso
(In r:2667|plus:2667) re #680: Fixed build error when Plus is built with Slicer and BK support (GrabbieLib.lib was not found). This solution is not nice: ideally the GrabbieLib makefiles should be improved so that this manual library path adding can be avoided.

#### 2013-04-08, 21:47:00 - Andras Lasso
(In r:2668|plus:2668) re #680: Fixed DLL path for ITKv4. The solution is not very nice: ideally we should install the ITK targets to the Plus binary directory.

#### 2013-04-08, 21:48:01 - Andras Lasso
I've completed my testing, everything seems fine for me now.

#### 2013-04-09, 00:58:28 - Adam Rankin
Seems acceptable for now. If you want to clean it up in the future we could add a ticket.

#### 2013-04-09, 00:58:28 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-05-31, 16:25:22 - Andras Lasso
(In r:2826|plus:2826) re #680: Removed ITK configuration flags that are not used anymore in ITK4


## #681 Initial field of view is incorrect in fCal
> I was able to update my config file following examples in the trunk to 
> configure two mixers for tracked BK and Epiphan with the config file 
> attached. 

issue observed:

> for Epiphan image visualization in fCal, FOV is not correct first 
> (image shifted to the right). Once I start recording, it resets to the 
> correct FOV. Similar issue for BK video stream.


#### 2013-02-16, 00:55:22 - Andras Lasso
file:ckZQZED9mr4QCJacwqjQWU


#### 2013-02-16, 00:55:22 - Andras Lasso
Attachment added: "BKPhidget_EpiphanPhidget_config.xml"

#### 2013-03-13, 18:09:13 - Adam Rankin
(In r:2585|plus:2585) re #696 image orientation is now assigned per channel

re #681 field of view should be fixed, current toolbox is reset and allowed to redraw on channel switch

#### 2013-03-13, 18:24:12 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-27, 16:44:45 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2013-03-27, 16:45:01 - Adam Rankin
Andrey should be able to test this with his capture setup at Brigham.

#### 2013-03-29, 13:08:21 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2013-03-29, 13:08:21 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #682 Scan conversion is not performed in the 2D slice view in fCal
> I was able to update my config file following examples in the trunk to
> configure two mixers for tracked BK and Epiphan with the config file
> attached.

issue observed:

> when I use curvilinear array on transrectal probe, non-tracked 
> image is visualized scan-converted, but tracked shows up as a 
> rectangle (no conversion applied).

see config file at #681

#### 2013-02-16, 00:59:41 - Andras Lasso
description: changed from "> I was able to update my c..." to "> I was able to update my c..."

#### 2013-03-13, 18:24:21 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-27, 16:43:21 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2013-03-27, 16:43:54 - Adam Rankin
Andrey, the next time you're testing, could you Skype me so we could test this?

#### 2013-03-29, 13:05:36 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "rankin"

#### 2013-03-29, 13:05:36 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #683 NDI Polaris is unable to connect
|ERROR|531.505000| Command parameter out of range|in ..\\..\\..\\PlusLib\\src\\DataCo
llection\\PolarisTracking\\vtkNDITracker.cxx(845)
|ERROR|531.587000| Command parameter out of range|in ..\\..\\..\\PlusLib\\src\\DataCo
llection\\PolarisTracking\\vtkNDITracker.cxx(845)
|ERROR|531.621000| Command parameter out of range|in ..\\..\\..\\PlusLib\\src\\DataCo
llection\\PolarisTracking\\vtkNDITracker.cxx(845)

#### 2013-02-21, 13:46:26 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-02-21, 17:15:41 - Adam Rankin
(In r:2520|plus:2520) test #683 restoring functionality to NDI Polaris trackers. Error in config file reading.

#### 2013-02-21, 17:15:41 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-21, 17:16:06 - Adam Rankin
assigned_to_id: changed from "rankin" to "Huoling"

#### 2013-02-26, 15:16:58 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-30, 18:52:33 - Andras Lasso
assigned_to_id: changed from "Huoling" to "rankin"


## #684 fCal default selected channel should be configurable
Currently there is a DefaultSelectedDeviceId element in the fCal element, but it should be replaced by DefaultSelectedChannelId. The sample/test config files have to be updated accordingly.

#### 2013-02-26, 18:22:03 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-26, 21:37:22 - Adam Rankin
(In r:2536|plus:2536) test #686 Stream mixer determines answeres to queries based on input channels

test #685 tool status window updates after a channel change, so does reset tracker button

test #684 fCal now configures default selected channel id

fixed #629 hiding no-input image actor when segmentation parameter dialog is shown

Updated capture client with save button

#### 2013-02-26, 21:40:56 - Andras Lasso
Thanks! Could you please update the sample/test config files as well?

#### 2013-02-26, 21:40:56 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-02-26, 22:05:47 - Adam Rankin
(In r:2537|plus:2537) test #684 properly selecting a fallback channel when no default channel is identified

#### 2013-02-26, 22:05:47 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-02-27, 19:39:37 - Adam Rankin
(In r:2541|plus:2541) re #684 updating config files with parameter set

#### 2013-02-27, 19:42:17 - Adam Rankin
(In r:2542|plus:2542) re #684 updating config files with parameter set

#### 2013-02-27, 19:42:39 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-02-28, 04:00:39 - Andras Lasso
Thanks, only two config file contains still obsolete DeviceId references (search for DeviceId):
data\\ConfigFiles\\BWH\\Plus_Epiphan_Brainlab_fCal2.0_AmigoCalibration.xml
data\\ConfigFiles\  esting\\PlusConfiguration_OpenIGTLinkTest.xml 

#### 2013-02-28, 04:00:39 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-02-28, 04:00:39 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-03-05, 17:46:32 - Adam Rankin
Fixed. The OpenIGTLinkTest is a false positive.

#### 2013-03-05, 17:46:32 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-03-05, 17:46:32 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:40:34 - Adam Rankin
Setting it to fixed as no new issues have arisen.

#### 2013-03-27, 16:40:34 - Adam Rankin
status: changed from "Test" to "Fixed"


## #685 Tool status window is not updated if selected channel is changed
With the config file below the default selected channel is the video channel (no tracking data). After connection to tools are available, OK. Select the tracker stream => tool status is still not available => ERROR!

<PlusConfiguration version='2.1'>

  <DataCollection StartupDelaySec='1.0'>
    <DeviceSet 
      Name='Epiphan framegrabber + Phidget 2.1'
      Description='Epiphan image acquisition with Phidget tracking.' 
    />
    
      <Device
      Id='VideoDeviceSavedDataset' 
      Type='SavedDataSource'
      UseData='IMAGE'
      AcquisitionRate='30' 
      LocalTimeOffsetSec='0.0' 
      SequenceMetafile='WaterTankBottomTranslationVideoBuffer.mha'
      UsImageOrientation='MF'
      UseOriginalTimestamps='FALSE'
      RepeatEnabled='TRUE' >
      <DataSources>
        <DataSource Type='Video' Id='Video' BufferSize='500' AveragedItemsForFiltering='20' />
      </DataSources>
      
      <OutputChannels>
        <OutputChannel Id='VideoStream' VideoDataSourceId='Video' />
      </OutputChannels>
    </Device>

  
  <!-- PhidgetSpatial tracker -->
  <Device
   Type='PhidgetSpatial'
   Id='TrackerDevice'
   AhrsAlgorithm='MADGWICK_MARG' 
   AhrsAlgorithmGain='1.5' 
   TiltSensorWestAxisIndex='1'   
   AcquisitionRate='125' 
   LocalTimeOffsetSec='0.0'>
   
   <DataSources>
    <DataSource Type='Tool' Id='Accelerometer' PortName='Accelerometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Gyroscope' PortName='Gyroscope' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Magnetometer' PortName='Magnetometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='TiltSensor' PortName='TiltSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='OrientationSensor' PortName='OrientationSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>                           
   </DataSources>
   
   <OutputChannels>
    <OutputChannel Id='TrackerStream' >
     <DataSource Id='Accelerometer'/>
     <DataSource Id='Gyroscope'/>
     <DataSource Id='Magnetometer'/>
     <DataSource Id='TiltSensor'/>
     <DataSource Id='OrientationSensor'/>                           
    </OutputChannel>
   </OutputChannels>
  </Device>
  
  <Device Id='TrackedVideoDevice' Type='VirtualStreamMixer'>
    <InputChannels>
      <InputChannel Id='TrackerStream' />
      <InputChannel Id='VideoStream' />
    </InputChannels>
    
    <OutputChannels>
      <OutputChannel Id='TrackedVideoStream'/>
    </OutputChannels>    
  </Device>
  
  
</DataCollection>

  <fCal
    PhantomModelId='PhantomModel'
    ReconstructedVolumeId='Volume'
    TransducerModelId='ProbeModel'
    StylusModelId='StylusModel'
    ImageDisplayableObjectId='LiveImage'
    NumberOfCalibrationImagesToAcquire='140'
    NumberOfValidationImagesToAcquire='70'
    NumberOfStylusCalibrationPointsToAcquire='200'
    RecordingIntervalMs='100'
    MaxTimeSpentWithProcessingMs='70'
    ImageCoordinateFrame='Image'
    ProbeCoordinateFrame='Probe'
    ReferenceCoordinateFrame='Reference'
    TransducerOriginCoordinateFrame='TransducerOrigin'
    TransducerOriginPixelCoordinateFrame='TransducerOriginPixel'
    TemporalCalibrationDurationSec='10'
  />
<Rendering WorldCoordinateFrame='Reference' DisplayedImageOrientation='MARKED_RIGHT_FAR_DOWN'>
 <DisplayableObject Type='Axes' ObjectCoordinateFrame='OrientationSensor' Id='OrientationSensorAxes'/>
    <DisplayableObject Type='Model' ObjectCoordinateFrame='Reference' Id='Volume'/>

    <DisplayableObject Type='Image' ObjectCoordinateFrame='Image' Id='LiveImage'/>
  </Rendering>
</PlusConfiguration>


#### 2013-02-26, 18:21:58 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-26, 21:37:22 - Adam Rankin
(In r:2536|plus:2536) test #686 Stream mixer determines answeres to queries based on input channels

test #685 tool status window updates after a channel change, so does reset tracker button

test #684 fCal now configures default selected channel id

fixed #629 hiding no-input image actor when segmentation parameter dialog is shown

Updated capture client with save button

#### 2013-02-27, 19:38:06 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-05, 19:15:16 - Adam Rankin
@lassoan Can you confirm this as working?

#### 2013-04-19, 18:41:23 - Adam Rankin
Confirmed working.

#### 2013-04-19, 18:41:23 - Adam Rankin
status: changed from "Test" to "Fixed"


## #686 Reset tracker button is not available in fCal
Using the config file below the reset tracker button is not available. If I keep only the Phidget device then it appears correctly.

<PlusConfiguration version='2.1'>

  <DataCollection StartupDelaySec='1.0'>
    <DeviceSet 
      Name='Epiphan framegrabber + Phidget 2.1'
      Description='Epiphan image acquisition with Phidget tracking.' 
    />
    
      <Device
      Id='VideoDeviceSavedDataset' 
      Type='SavedDataSource'
      UseData='IMAGE'
      AcquisitionRate='30' 
      LocalTimeOffsetSec='0.0' 
      SequenceMetafile='WaterTankBottomTranslationVideoBuffer.mha'
      UsImageOrientation='MF'
      UseOriginalTimestamps='FALSE'
      RepeatEnabled='TRUE' >
      <DataSources>
        <DataSource Type='Video' Id='Video' BufferSize='500' AveragedItemsForFiltering='20' />
      </DataSources>
      
      <OutputChannels>
        <OutputChannel Id='VideoStream' VideoDataSourceId='Video' />
      </OutputChannels>
    </Device>

  
  <!-- PhidgetSpatial tracker -->
  <Device
   Type='PhidgetSpatial'
   Id='TrackerDevice'
   AhrsAlgorithm='MADGWICK_MARG' 
   AhrsAlgorithmGain='1.5' 
   TiltSensorWestAxisIndex='1'   
   AcquisitionRate='125' 
   LocalTimeOffsetSec='0.0'>
   
   <DataSources>
    <DataSource Type='Tool' Id='Accelerometer' PortName='Accelerometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Gyroscope' PortName='Gyroscope' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Magnetometer' PortName='Magnetometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='TiltSensor' PortName='TiltSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='OrientationSensor' PortName='OrientationSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>                           
   </DataSources>
   
   <OutputChannels>
    <OutputChannel Id='TrackerStream' >
     <DataSource Id='Accelerometer'/>
     <DataSource Id='Gyroscope'/>
     <DataSource Id='Magnetometer'/>
     <DataSource Id='TiltSensor'/>
     <DataSource Id='OrientationSensor'/>                           
    </OutputChannel>
   </OutputChannels>
  </Device>
  
  <Device Id='TrackedVideoDevice' Type='VirtualStreamMixer'>
    <InputChannels>
      <InputChannel Id='TrackerStream' />
      <InputChannel Id='VideoStream' />
    </InputChannels>
    
    <OutputChannels>
      <OutputChannel Id='TrackedVideoStream'/>
    </OutputChannels>    
  </Device>
  
  
</DataCollection>

  <fCal
    PhantomModelId='PhantomModel'
    ReconstructedVolumeId='Volume'
    TransducerModelId='ProbeModel'
    StylusModelId='StylusModel'
    ImageDisplayableObjectId='LiveImage'
    NumberOfCalibrationImagesToAcquire='140'
    NumberOfValidationImagesToAcquire='70'
    NumberOfStylusCalibrationPointsToAcquire='200'
    RecordingIntervalMs='100'
    MaxTimeSpentWithProcessingMs='70'
    ImageCoordinateFrame='Image'
    ProbeCoordinateFrame='Probe'
    ReferenceCoordinateFrame='Reference'
    TransducerOriginCoordinateFrame='TransducerOrigin'
    TransducerOriginPixelCoordinateFrame='TransducerOriginPixel'
    TemporalCalibrationDurationSec='10'
  />
<Rendering WorldCoordinateFrame='Reference' DisplayedImageOrientation='MARKED_RIGHT_FAR_DOWN'>
 <DisplayableObject Type='Axes' ObjectCoordinateFrame='OrientationSensor' Id='OrientationSensorAxes'/>
    <DisplayableObject Type='Model' ObjectCoordinateFrame='Reference' Id='Volume'/>

    <DisplayableObject Type='Image' ObjectCoordinateFrame='Image' Id='LiveImage'/>
  </Rendering>
</PlusConfiguration>


#### 2013-02-26, 16:56:16 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-02-26, 18:21:51 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-26, 21:37:22 - Adam Rankin
(In r:2536|plus:2536) test #686 Stream mixer determines answeres to queries based on input channels

test #685 tool status window updates after a channel change, so does reset tracker button

test #684 fCal now configures default selected channel id

fixed #629 hiding no-input image actor when segmentation parameter dialog is shown

Updated capture client with save button

#### 2013-02-27, 19:38:01 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-02-28, 21:36:35 - Andras Lasso
works well now

#### 2013-02-28, 21:36:35 - Andras Lasso
status: changed from "Test" to "Fixed"


## #687 Capturing fails in fCal if a tracking-only channel is selected
Connect using the config file below, select the TrackerStream channel. Go to capturing tab, click Record => all buttons become disabled, cannot switch tab or do anything else.

It shall be possible to record tracking-only channels, video-only channels, or video+tracking channels. 

<PlusConfiguration version='2.1'>

  <DataCollection StartupDelaySec='1.0'>
    <DeviceSet 
      Name='Epiphan framegrabber + Phidget 2.1'
      Description='Epiphan image acquisition with Phidget tracking.' 
    />
    
      <Device
      Id='VideoDeviceSavedDataset' 
      Type='SavedDataSource'
      UseData='IMAGE'
      AcquisitionRate='30' 
      LocalTimeOffsetSec='0.0' 
      SequenceMetafile='WaterTankBottomTranslationVideoBuffer.mha'
      UsImageOrientation='MF'
      UseOriginalTimestamps='FALSE'
      RepeatEnabled='TRUE' >
      <DataSources>
        <DataSource Type='Video' Id='Video' BufferSize='500' AveragedItemsForFiltering='20' />
      </DataSources>
      
      <OutputChannels>
        <OutputChannel Id='VideoStream' VideoDataSourceId='Video' />
      </OutputChannels>
    </Device>

  
  <!-- PhidgetSpatial tracker -->
  <Device
   Type='PhidgetSpatial'
   Id='TrackerDevice'
   AhrsAlgorithm='MADGWICK_MARG' 
   AhrsAlgorithmGain='1.5' 
   TiltSensorWestAxisIndex='1'   
   AcquisitionRate='125' 
   LocalTimeOffsetSec='0.0'>
   
   <DataSources>
    <DataSource Type='Tool' Id='Accelerometer' PortName='Accelerometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Gyroscope' PortName='Gyroscope' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='Magnetometer' PortName='Magnetometer' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='TiltSensor' PortName='TiltSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>
    <DataSource Type='Tool' Id='OrientationSensor' PortName='OrientationSensor' BufferSize='2500' AveragedItemsForFiltering='20'/>                           
   </DataSources>
   
   <OutputChannels>
    <OutputChannel Id='TrackerStream' >
     <DataSource Id='Accelerometer'/>
     <DataSource Id='Gyroscope'/>
     <DataSource Id='Magnetometer'/>
     <DataSource Id='TiltSensor'/>
     <DataSource Id='OrientationSensor'/>                           
    </OutputChannel>
   </OutputChannels>
  </Device>
  
  <Device Id='TrackedVideoDevice' Type='VirtualStreamMixer'>
    <InputChannels>
      <InputChannel Id='TrackerStream' />
      <InputChannel Id='VideoStream' />
    </InputChannels>
    
    <OutputChannels>
      <OutputChannel Id='TrackedVideoStream'/>
    </OutputChannels>    
  </Device>
  
  
</DataCollection>

  <fCal
    PhantomModelId='PhantomModel'
    ReconstructedVolumeId='Volume'
    TransducerModelId='ProbeModel'
    StylusModelId='StylusModel'
    ImageDisplayableObjectId='LiveImage'
    NumberOfCalibrationImagesToAcquire='140'
    NumberOfValidationImagesToAcquire='70'
    NumberOfStylusCalibrationPointsToAcquire='200'
    RecordingIntervalMs='100'
    MaxTimeSpentWithProcessingMs='70'
    ImageCoordinateFrame='Image'
    ProbeCoordinateFrame='Probe'
    ReferenceCoordinateFrame='Reference'
    TransducerOriginCoordinateFrame='TransducerOrigin'
    TransducerOriginPixelCoordinateFrame='TransducerOriginPixel'
    TemporalCalibrationDurationSec='10'
  />
<Rendering WorldCoordinateFrame='Reference' DisplayedImageOrientation='MARKED_RIGHT_FAR_DOWN'>
 <DisplayableObject Type='Axes' ObjectCoordinateFrame='OrientationSensor' Id='OrientationSensorAxes'/>
    <DisplayableObject Type='Model' ObjectCoordinateFrame='Reference' Id='Volume'/>

    <DisplayableObject Type='Image' ObjectCoordinateFrame='Image' Id='LiveImage'/>
  </Rendering>
</PlusConfiguration>


#### 2013-02-26, 16:56:22 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-02-26, 18:52:08 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-02-27, 19:37:50 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-02-28, 21:35:17 - Andras Lasso
Works well now.

#### 2013-02-28, 21:35:17 - Andras Lasso
status: changed from "Test" to "Fixed"


## #688 PlusServer does not send reply if XML parser fails.
PlusServer should always send a reply to the client, even if the command message cannot be parsed.
Otherwise the client cannot display an error message to the user, or can only use timeout to guess that there won't be a reply.

#### 2013-03-25, 17:34:03 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-03-25, 17:34:06 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-03-25, 18:56:05 - Adam Rankin
(In r:2617|plus:2617) test #688 Sending fail reply to client when command cannot be parsed

#### 2013-03-25, 18:56:05 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-25, 18:56:23 - Adam Rankin
Andras could you confirm this is a correct solution?

#### 2013-03-25, 18:56:32 - Adam Rankin
assigned_to_id: changed from "rankin" to "ungi"

#### 2013-03-25, 19:17:20 - Adam Rankin
(In r:2618|plus:2618) re #688 Fixing Linux build issues

#### 2013-03-30, 13:31:41 - Andras Lasso
(In r:2631|plus:2631) re #688: Fixed typo in reply device name

#### 2013-03-30, 13:35:03 - Andras Lasso
@rankin: it looks good
@ungi: please test

#### 2013-04-02, 15:27:01 - Tamas Ungi
I think the problem is still the same.
I ran PLUS superbuild this morning (svn rev 2637).
I started PlusServer with this config file: \  esting\\PlusConfiguration_OpenIGTLinkCommandsTest.xml 
Using OpenIGTLinkRemote module of the SlicerIGT extension, I've sent a string message 'asdf' to PlusServer. Slicer stayed in the 'Waiting for reply...' state, and PlusServer displayed this error message: 

|ERROR|126.375000| VTK log: ERROR: In ..\\..\\vtk\\IO\\vtkXMLParser.cxx, line 483|vt
kXMLDataParser (0737ABA8): Error parsing XML in stream at line 1, column 0, byte
 index 0: syntax error|||in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusLogger.cxx(65
)
|ERROR|126.383000| Last error: 0|in ..\\..\\..\\PlusLib\\src\\PlusCommon\\vtkPlusLogge
r.cxx(69)
|ERROR|126.387000| failed to parse XML command string (received: asdf)|in ..\\..\\
..\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(223)
|ERROR|126.391000| Failed to create command from string: asdf|in ..\\..\\..\\PlusLi
b\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(268)
|WARNING|474.208000| Buffer item is not in the buffer (Uid: 4279)!|in e:\\plusexp
erimental-32bit-release\\pluslib\\src\\pluscommon\\vtkTimestampedCircularBuffer.txx(
317)
|WARNING|474.213000| Failed to get oldest timestamp from video buffer!|in ..\\..\\
..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(915)
|ERROR|474.217000| Failed to get oldest timestamp from buffer!|in ..\\..\\..\\PlusL
ib\\src\\DataCollection\\vtkPlusChannel.cxx(591)
|ERROR|474.221000| Failed to get tracked frame list from data collector (last re
corded timestamp: 474.120016|in ..\\..\\..\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLi
nkServer.cxx(396)


#### 2013-04-02, 15:42:00 - Andras Lasso
I guess the problem is that if the command is invalid then the command processor does not even know the device name, so you get a response from the 'CommandProcessor' device. As the device names don't match, the Slicer module doesn't detect this as a response. Tamas, could you please check if this is what's happening? If yes, then maybe a solution could be to check CommandProcessor events and if you receive a 'Failed to create command from string: ' error then display the error. Maybe there could be a timeout in the for the waiting for the response. Maybe also the returned invalid command string could be compared to the commands that are waiting for a reply and if there is an exact match then that command can be set completed as failed.

#### 2013-04-02, 15:56:05 - Tamas Ungi
Yes, you are right. A message arrives to Slicer. Device name is Command Processor and the message as you said. It would be somewhat easier to catch this reply if there was a reference to the device name (e.g. RC1). Would that be possible?

#### 2013-04-02, 16:01:44 - Adam Rankin
Technically it's trivial, I don't know if it's the correct solution because it's not the device that's reporting an error, but the system.

Andras?

#### 2013-04-02, 16:37:36 - Tamas Ungi
Right now, the command-reply pair is identified by the device name in Slicer. Note that I refer to the device name parameter of the OpenIGTLink string message (not what we call 'device' in PLUS). The OpenIGTLinkRemote module creates a new, unique OpenIGTLink device name for every command (e.g. RC1) it sends to PLUS, and pairs the response to it by expecting a message with matching device name (e.g. RC1Reply).

So, it would be good to refer to RC1 (or whatever the OpenIGTLink device name is in the string message) so Slicer knows which command had this XML parsing error. Easiest would be to set RC1Reply as device name on the response.

#### 2013-04-02, 16:52:14 - Adam Rankin
(In r:2638|plus:2638) test #688 reply device name now used when replying with an error

#### 2013-04-02, 16:54:32 - Andras Lasso
I thought that if we cannot parse the command then we don't know the device name, but fortunately the device name comes in the message header, so it's all good. Tamas, let us know how it works now.

#### 2013-04-02, 16:54:32 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-04-03, 01:12:47 - Tamas Ungi
Excellent. Now invalid commands get a meaningful error message in response.

#### 2013-04-03, 01:12:47 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #689 Recording frame rate with Phidget+Epiphan is slow
On Fri, Feb 22, 2013 at 2:44 PM, Andriy Fedorov <fedorov@bwh.harvard.edu> wrote:
> On Fri, Feb 22, 2013 at 2:41 PM, Andras Lasso <lasso@cs.queensu.ca> wrote:
>>> very slow when Phidget is used,
>>
>> Slow GUI response or low recording frame rate?
>>
>
> It seems they come together, unresponsive gui and low fps.
>
>> Is the response time and frame rare are better if you don't use tracking?
>>
>
> Yes.
>
>> We haven't noticed slowdowns with Phidget, but maybe we just haven't 
>> tested it enough. We'll test and optimize the performance of the 
>> Epiphan&Phidget configuration.
>>
>
> Yes, would be great if you could check out this configuration and let 
> me know what you observe. I am afraid it may not be consistent. On one 
> occasion I was getting responsive gui and good fps with two streams 
> and Phidget, but could not reproduce.
>

Andras, just to make sure this does not miss your attention.

Some of the Phidget tools are dropping signal (you told me it's a known issue). From Isaiah's experience, if the tracker drops the signal, this leads to degraded performance for the video stream. He is telling me that is also a known bug, in Plus. I cc Isaiah in case I am missing something.

> Also, I was using Plus compiled in Release mode.
>
>> Andras
>> ________________________________
>> From: Andriy Fedorov
>> Sent: ‎2013-‎02-‎22 14:24
>>
>> To: Andras Lasso
>> Cc: Adam Rankin
>> Subject: Re: PLUS development priorities
>>
>> Looks like none of the 12 cpus is 100% busy (see screenshot).
>>
>> Tried two fCals -- still very slow for the source that is using phidget.
>>
>> Tried one fCal -- very slow when Phidget is used, both with Epiphan 
>> and BK. You should be able to test this configuration, did you see 
>> anything similar?
>>
>> Also, Phidet status tool is no longer in the GUI panel -- is this 
>> intentional?
>>
>> On Fri, Feb 22, 2013 at 1:59 PM, Andras Lasso <lasso@cs.queensu.ca> wrote:
>>> Just start two fCal processes. You won't be able to connect to the 
>>> tracker from both, but we can have an idea if the update rate can be 
>>> improved by moving some processing from the GUI thread to other processing threads.
>>>
>>> Andras



#### 2013-02-28, 21:47:26 - Andras Lasso
(In r:2544|plus:2544) re #689: Cleaned up GetTrackedFrameListSampled (it didn't compute the actual frame rate correctly and acquisition was not stable at low frame rates)

#### 2013-02-28, 21:47:42 - Andras Lasso
(In r:2545|plus:2545) re #689: Cleaned up GetTrackedFrameListSampled (it didn't compute the actual frame rate correctly and acquisition was not stable at low frame rates)

#### 2013-02-28, 21:53:29 - Andras Lasso
file:bjJW4iGFer4P51acwqjQYw
Epiphan+Phidget test config

#### 2013-02-28, 21:53:29 - Andras Lasso
Attachment added: "Plus_Epiphan_Phidget.xml"

#### 2013-02-28, 22:02:52 - Andras Lasso
It should work now (tested with the attached config file).

#### 2013-02-28, 22:02:52 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2013-02-28, 22:02:52 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-03-29, 13:07:52 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "lassoan"

#### 2013-03-29, 13:07:52 - Andrey Fedorov
status: changed from "Test" to "Fixed"


## #690 RfProcessing is not working


#### 2013-03-08, 19:38:19 - Adam Rankin
Nevermind, it does work.

#### 2013-03-08, 19:38:19 - Adam Rankin
status: changed from "New" to "Invalid"


## #691 Optimize RF to brightness conversion when the input is brightness
In vtkRfToBrightnessConvert when the input is brightness (so only scan conversion is performed) the pixels are copied line-by-line. Optimize the converter to not copy the pixels (see the TODO: text in vtkRfToBrightnessConvert.cxx)


## #692 BKPro device updates rf processor of BK device, but not other devices which use BK as input
Possible solution is to have mixer device grab the RfProcessor of the BK device for its rf processing...

#### 2013-03-11, 16:04:51 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-12, 17:15:16 - Adam Rankin
(In r:2581|plus:2581) Test #692 The virtual mixer now inherits its RfProcessor from input streams, instead of defining its own.

#### 2013-03-12, 17:15:16 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 19:39:58 - Adam Rankin
If possible, this could be confirmed with a test at Brigham.

#### 2013-03-27, 19:39:58 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2013-03-29, 13:09:41 - Andrey Fedorov
Adam, I am a bit confused what this issue is about and how to test it. Could you clarify?

#### 2013-03-29, 13:09:41 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "rankin"

#### 2013-04-02, 14:35:00 - Adam Rankin
This would be confirmed by a correctly rendered 2d image when using the mixer stream. Your successful experiment confirms this as fixed.

#### 2013-04-02, 14:35:00 - Adam Rankin
status: changed from "Test" to "Fixed"


## #693 Mouse Y axis behaviour is inverted when dragging spacing endpoints in SegParamDialog
You pull the mouse up, the (green or blue) point goes down and vice versa

#### 2013-03-12, 12:11:03 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-03-12, 12:11:08 - Adam Rankin
component_id: changed from "None" to "PlusApp"

#### 2013-03-12, 12:11:10 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-03-18, 21:04:04 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-25, 20:32:26 - Adam Rankin
I'm unable to reproduce this. Do you remember your config/setup when this happened?

#### 2013-03-27, 16:45:40 - Adam Rankin
assigned_to_id: changed from "rankin" to "pinter"

#### 2013-03-27, 16:45:43 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:45:50 - Adam Rankin
status: changed from "Test" to "New"

#### 2013-03-27, 16:51:31 - Csaba Pinter
The mouse interaction seems fine with the saved dataset device. The fix in ticket #696 fixed it most probably as flipping the image flips the coordinates as well, but now the image is in MF orientation internally in every case.

#### 2013-03-27, 16:51:31 - Csaba Pinter
status: changed from "New" to "Fixed"

#### 2013-04-04, 17:24:07 - Adam Rankin
Not fixed, issue is present when orientation is changed prior to segmentation parameter dialog.

#### 2013-04-04, 17:24:07 - Adam Rankin
assigned_to_id: changed from "pinter" to "rankin"

#### 2013-04-04, 17:24:07 - Adam Rankin
status: changed from "Fixed" to "New"

#### 2013-04-04, 20:03:35 - Adam Rankin
(In r:2646|plus:2646) re #693 Limiting display format of segmentation parameter dialog to MF format until inverted camera handling can be put in place

#### 2013-04-04, 20:21:59 - Adam Rankin
@lassoan Can you confirm this is a reasonable solution to our current problem and view-switching during segmentation parameter changes can be a future enhancement ticket?
@pinter Same?

#### 2013-04-05, 03:53:03 - Andras Lasso
Yes, I think you can close this ticket with this short-term solution and enter a new ticket for implementing the final solution (to use the same orientation in the segmentation dialog as in the main viewer).

#### 2013-04-05, 12:52:18 - Csaba Pinter
Sorry I didn't hit submit yesterday.
So I think as the internal image orientation is always MF, and the pattern recognition algorithm also works on MF orientation, it is not important to see the image as it is seen in the main viewer, especially that the segmentation parameters have to be set once for each device set and depth.
I would consider applying the user orientation to the Segmentation Parameter Dialog a convenience feature with low priority.

#### 2013-04-05, 17:34:53 - Adam Rankin
Sounds good.

#### 2013-04-05, 17:34:53 - Adam Rankin
status: changed from "New" to "Fixed"


## #694 If there are too many messages in the StatusIcon window, fCal needs a lot of time to recover
It looks as if would hang for even a minute when there are too many messages in the window that we can open from StatusIcon. I'm pretty sure it's the rendering of the messages that causes this.
It could be useful to set a maximum number of messages to prevent this.

#### 2013-03-13, 10:25:13 - Csaba Pinter
Issue Type: changed from "Enhancement" to "Bug"

#### 2013-03-27, 19:39:15 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1"

#### 2013-11-27, 17:21:50 - Adam Rankin
(In r:3002|plus:3002) re #694 WIP adding functionality to control the max number of messages

#### 2013-11-27, 17:21:50 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-11-27, 19:25:03 - Adam Rankin
Removing the first message displaces all the colours of the messages :(

Looking into more advanced solutions

#### 2013-11-27, 22:00:01 - Adam Rankin
(In r:3004|plus:3004) test #694 adding ability to limit the maximum  number of log messages shown in the log window

full log still written to file no matter what

#### 2013-11-27, 22:00:01 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-11-27, 22:00:51 - Adam Rankin
fCal tag can now contain an attribute 'MaxLogMessageCount' which will do as it suggests

@pinter do you want to test this?

#### 2013-11-27, 22:15:55 - Csaba Pinter
Honestly I haven't touched Plus for over a year, so testing it (building, figuring out how to use saved data, generating lots of log lines etc.) would take me half a day :) So if you don't mind I just believe that it works.

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 20:08:28 - Andras Lasso
(In r:3080|plus:3080) fixed #694: StatusIcon message log window can now be scrolled manually and selection is preserved, even when the maximum allowed line numbers are limited

#### 2013-12-19, 20:08:28 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-01-02, 20:34:32 - Andras Lasso
(In r:3108|plus:3108) re #694: Made faster deleting of old messages from StatusIcon message log (in debug mode: before the change it took about 15 sec, now it takes less than 1 sec)


## #695 Saving temporal calibration result does not work
After doing temporal calibration (plots and result number are fine), I saved the configuration file, and the temporal calibration result was nowhere in the saved xml.
Used PCI framegrabber card with NDI Aurora, config file attached (I don't attach screenshot as that machine is not connected to the internet and it's tedious to always copy using usb stick).

#### 2013-03-13, 10:33:06 - Csaba Pinter
file:bKDFNkI8Kr4OvHacwqEsg8


#### 2013-03-13, 10:33:06 - Csaba Pinter
Attachment added: "031313_104104_PlusLog.zip"

#### 2013-03-14, 18:43:09 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-03-14, 18:43:17 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-03-14, 18:43:21 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-14, 19:31:17 - Adam Rankin
(In r:2587|plus:2587) test #695 temporal calibration writing to configuration re-added to device

half step to capturing device changeover to continue work on another machine

#### 2013-03-14, 19:31:17 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:25:17 - Adam Rankin
Failed, not saving properly, investigating.

#### 2013-03-27, 16:25:17 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-03-27, 16:28:44 - Adam Rankin
(In r:2625|plus:2625) iCal support commit

test #695 now writing time offset to correct xml tag

#### 2013-03-27, 16:28:44 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:34:37 - Adam Rankin
Written to incorrect tag, now working.

#### 2013-03-27, 16:34:37 - Adam Rankin
status: changed from "Test" to "Fixed"


## #696 US image orientation setting seems not to work
I realized the default orientation they set was not right, so I set the proper orientation (UF) in the config file.
I froze an image for the segmentation parameter dialog while holding the probe to see all the wires, from the direction of the top of the phantom (row 1), and taking care that the marked side of the probe matches the M letter on the fCal 2.0 phantom.
The attached image shows what I got. It can be seen that the 5th row is identified as the top one, while obviously it should one. Same for the left-right direction. Also the orientation arrows show MN.
I may miss something here, but this is what I tried and couldn't do.

In the image you can see the used config file. I can't prove that I loaded that one without closing the seg. param. dialog, but you can take my word for that.

In the meantime I try to play with the orientation setting options in fCal, maybe I can hack my way through.

#### 2013-03-13, 10:43:22 - Csaba Pinter
image:dtvP2EI8Or4Q0TacwqjQYw


#### 2013-03-13, 10:43:22 - Csaba Pinter
Attachment added: "US_Orientation_Bug.PNG"

#### 2013-03-13, 12:25:36 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-03-13, 12:25:40 - Adam Rankin
component_id: changed from "None" to "PlusApp-fCal"

#### 2013-03-13, 12:25:43 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-03-13, 12:25:51 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-13, 12:41:16 - Andras Lasso
@pinter: Please also attach (or save somewhere) a short recorded sequence along with the config file.

#### 2013-03-13, 14:00:39 - Csaba Pinter
Do you want me to use the latest version in the trunk?

I can't seem to find built versions for 2.0 early releases.

#### 2013-03-13, 14:11:31 - Andras Lasso
No official 2.0 releases yet, need to build from source.

From: Csaba Pinter (pinter)
Sent: ‎2013-‎03-‎13 10:00

#### 2013-03-13, 14:46:18 - Csaba Pinter
I built a new version (from 2583), connected to the devices with the same config file, and saved a really short and a longer sequence:
https://dl.dropbox.com/u/3143581/ViennaSequences_Bug696.zip

I also made pictures of the setup, maybe they also help:
https://dl.dropbox.com/u/3143581/2013-03-13%2015.07.58.jpg
https://dl.dropbox.com/u/3143581/2013-03-13%2015.08.12.jpg
https://dl.dropbox.com/u/3143581/2013-03-13%2015.08.19.jpg
https://dl.dropbox.com/u/3143581/2013-03-13%2015.08.58.jpg

I know dropbox is not the best for this, but it's good for now, and I'll keep these files around for a couple of months for sure.

#### 2013-03-13, 18:09:13 - Adam Rankin
(In r:2585|plus:2585) re #696 image orientation is now assigned per channel

re #681 field of view should be fixed, current toolbox is reset and allowed to redraw on channel switch

#### 2013-03-14, 16:32:12 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-04, 17:03:53 - Adam Rankin
Confirmed working with ultrasonix and ascension 3dg.

#### 2013-04-04, 17:20:34 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-04-04, 17:21:12 - Adam Rankin
When entering segmentation parameter dialog after switching the view orientation, the camera inversion adversely affects the ROI and spacing controls

#### 2013-04-04, 19:53:03 - Adam Rankin
During one run, switching the view orientation resulted in the U/M label getting 'stuck'. The view would update but not the labelling. I was able to update the display by switching to 3d mode and back to 2d mode...

#### 2013-04-04, 20:19:07 - Adam Rankin
Ok, everything seems to be in order. The other ticket will address the inverted X and Y issue in the segmentation dialog. Image orientation is working as desired.

#### 2013-04-04, 20:19:07 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2014-04-15, 13:21:23 - Andras Lasso
@rankin: I've tried the Epiphan imaging source (with the PlusServer: Epiphan... config file) and tried to change the orientation. The image was correctly flipped, the vertical label (N/F) was updated correctly, but the horizontal label (M/U) was stuck (as reported by Csaba above, too). Could please check if you can reproduce/fix this? Thanks.

#### 2014-04-15, 13:21:23 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2014-04-15, 13:46:58 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Plus-2.2.0"

#### 2014-04-15, 13:47:53 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-04-15, 22:40:58 - Andras Lasso
Today I've tries to change the PortUsImageOrientation attribute in the config file for ImagingControls device and it had no effect. Could you have a look at that, too? Probably it's not specific to ImagingControls.

#### 2014-04-16, 14:28:38 - Adam Rankin
Investigating now

#### 2014-04-16, 14:45:43 - Adam Rankin
this->GetHorizontalOrientationTextActor()->SetInput('U');
this->GetVerticalOrientationTextActor()->SetInput('F');

Vertical works, horizontal doesn't....... lolwut!?

#### 2014-04-16, 16:41:24 - Adam Rankin
re #696 correctly re-drawing orientation even if <Rendering> tag is absent (they're not connected so behaviour shouldn't be linked)
Commit: r:3279|plus:3279

#### 2014-04-16, 16:47:01 - Adam Rankin
Quickly testing with the MMF capture, PortUsImageOrientation successfully altered the visible orientation of the image.

Is ImagingControls the ICCapturingSource?

I will check around here if we have the hardware so I can test.

#### 2014-04-16, 17:06:39 - Csaba Pinter
Is ImagingControls the ICCapturingSource?
Yes.

#### 2014-04-16, 17:52:30 - Adam Rankin
Apparently we don't have an ICC device, I will try to reproduce with an Epiphan.

#### 2014-04-16, 18:20:44 - Adam Rankin
By exposing the vtkTextActor3D's internal image data and calling Modified() on it, I was able to fix the non-updating issue.

I have no idea why this works for one entity and not the other...

#### 2014-04-16, 18:31:43 - Adam Rankin
The fix should ideally be in vtkFreeTypeUtilities.cxx

Have we ever submitted a change to vtk?

@lassoan @pinter thoughts?

#### 2014-04-16, 18:42:57 - Adam Rankin
re #696 restoring order of update
Commit: r:3280|plus:3280

#### 2014-04-16, 18:43:47 - Andras Lasso
The contribution process is described at http://www.vtk.org/VTK/project/getinvolved.html (and linked pages). Are you sure that we use the actor properly? Is there a fix for this in the latest VTK?

#### 2014-04-16, 18:43:59 - Csaba Pinter
I haven't contributed to VTK yet, only ITK once. The initial effort was quite big, but once you know how it works it should be easy enough. They have Mantis, mailing lists, dashboard... http://www.vtk.org/VTK/project/getinvolved.html

Have you checked if this has been fixed in the latest VTK version?

#### 2014-04-16, 18:49:10 - Adam Rankin
Well, I admit I don't understand why one works and the other doesn't. I looked into the underlying code and it seems to get the correct glyph and generate the correct image data.

By adding data->Modified() to url:https://github.com/Kitware/VTK/blob/master/Rendering/FreeType/vtkFreeTypeUtilities.cxx|vtkFreeTypeUtilities.cxx:1319 the issue is fixed.

This seems like the same problem I was having when updating the acquired image from MMF, I was updating scalar pointer pixels manually, and not calling modified afterwards.


#### 2014-04-16, 18:55:25 - Adam Rankin
I will send an email to vtk-developers first, to see what the response is.

#### 2014-04-16, 19:37:02 - Andras Lasso
In the meantime, I've found the ICCapturingSource issue: it's a singleton and therefore the settings are only read the first time after application start. When we disconnect/connect the old channels are still there, so if something changed in the config file it has no effect. I'll commit a fix soon.

#### 2014-04-16, 19:39:17 - Andras Lasso
re #696: Fixed issue with ICCapturing device not taking into account PortUsImageOrientation.

vtkICCapturingSource is a singleton and therefore the settings are only read the first time after application start. When we disconnect/connect the old channels are still there, so if something changed in the config file it has no effect. The fix was to clear the existing channels and tools at the beginning of configuration reading.
Commit: r:3281|plus:3281

#### 2014-04-16, 19:40:37 - Andras Lasso
@rankin: Can you force an update without needing to patch VTK?

#### 2014-04-16, 21:30:49 - Adam Rankin
I will look into it. I don't think so though as the vtkImageData is calculated internally to the vtkTextActor3D.

I haven't investigated how the vertical actor* is working while the horizontal one isn't. I will throw a breakpoint in vtkImageData::Modified and see what happens.

Edits: *

#### 2014-04-17, 12:31:10 - Andras Lasso
test #696: Fixed image orientation label update by making some extra changes to the vtkTextActor3D actors

It's quite probable that there is a bug in VTK that makes this necessary. The problem might have been fixed in VTK6.
Commit: r:3282|plus:3282

#### 2014-04-17, 12:31:10 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2014-04-17, 13:04:10 - Adam Rankin
Ah clever, getBounds forces the update. Nice.

#### 2014-04-17, 13:05:35 - Adam Rankin
re #696 Merged revision(s) 3273-3282, 2439-3272 from trunk/PlusLib:

Merged revision(s)  from trunk/PlusApp:
Commit: r:3283|plus:3283

#### 2014-04-23, 18:00:59 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #697 When an unsuitable device is selected and I select a good one, the UI should refresh
Scenario:
- Tracking only device is selected, I'm in Spatial Calibration toolbox. The Start button is disabled because there is no video, OK
- Change to tracked video device, I have to switch toolbox and then back to get the active button

#### 2013-03-13, 18:23:18 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-03-13, 18:23:21 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-13, 18:23:25 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-03-13, 18:23:54 - Adam Rankin
See

https://www.assembla.com/code/plus/subversion/commit/2585

for related fix

#### 2013-03-27, 16:41:38 - Adam Rankin
component_id: changed from "None" to "PlusApp-fCal"

#### 2013-03-27, 16:41:48 - Adam Rankin
Confirmed working with fCal. This will be a client specific issue.

#### 2013-03-27, 16:41:48 - Adam Rankin
status: changed from "Test" to "Fixed"


## #698 Recorded Epiphan data from disc capture is not correct
'The Epiphan data has half (?) of the first frame initialized, the rest is zero.'

#### 2013-03-18, 01:17:49 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-03-18, 12:29:19 - Adam Rankin
Epiphan output is fine, disc capture device is the problem.

Suspect: clearing of frames each update is the significant difference from the capture toolbox (which works).

Investigating...

#### 2013-03-18, 19:29:41 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-03-27, 16:42:17 - Adam Rankin
Confirmed working with Epiphan VGA2USB.

#### 2013-03-27, 16:42:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #699 Saving file twice with capture control widget doesn't work
Investigate

#### 2013-03-18, 19:29:48 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-27, 16:41:10 - Adam Rankin
Confirmed working, many files saved in the same run. Both snapshots and capture intermixed.

#### 2013-03-27, 16:41:10 - Adam Rankin
status: changed from "Test" to "Fixed"


## #700 Confirm disc capture can capture Rf data
Confirm

#### 2013-03-18, 19:29:55 - Adam Rankin
status: changed from "New" to "Fixed"


## #701 Potential RF line buffer size mismatch in BK ProFocus image source
The following warning in  PlusBkProFocusReceiver.cxx is displayed in certain cases:

LOG_WARNING('Not enough space allocated to store all the RF samples. Input: '<<numberOfSamplePairsInInput<<', output: '<<numberOfSamplePairsInOutput);

Currently the warning has been disabled to reduce clogging of the error log, but we should investigate why this happens and fix it. If the warning is displayed then scanlines are cropped and axial spacing after scan conversion may be incorrect.

Even if we don't understand why the scanline length is inconsistent between Prepare and DataAvailable, we could dynamically allocate a larger buffer if we find that the already allocated buffer is too small.


#### 2013-03-15, 21:59:57 - Andras Lasso
@fedorov:
Do you have an idea why we see this warning now and why it wasn't displayed before?
Maybe because we switch probes and Prepare is called only once?
What are the logged numberOfSamplePairsInInput and numberOfSamplePairsInOutput values?


#### 2013-03-29, 13:13:25 - Andrey Fedorov
Andras, I think this warning has always been there. I think I looked into this before, but don't remember what I found. I will look again.

#### 2013-03-29, 13:13:25 - Andrey Fedorov
status: changed from "New" to "Accepted"

#### 2013-03-29, 13:49:36 - Andras Lasso
It would be great if you could investigate, as when the warning case happens then the end of scanlines are discarded. 

#### 2013-03-29, 13:54:29 - Andrey Fedorov
(In r:2629|plus:2629) re #701: adding 6 to numberOfRfSamplesPerLine eliminates the buffer size mismatch. Perhaps there is a fixed size header that is prepended. Tested both with curved and linear arrays on BK 8848. 


#### 2013-03-29, 13:58:46 - Andrey Fedorov
(In r:2630|plus:2630) re #701: added comment for the previous commit change


#### 2013-03-29, 13:59:06 - Andrey Fedorov
See commit 2629: this fixes the mismatch. Do you think this is a reasonable solution, or we really need to understand where this is coming from?

#### 2013-03-29, 14:58:59 - Andras Lasso
It's a reasonable temporary solution, but the best would be to do some more debugging or ask BK developers to find out what causes it exactly.

We already know that there is a header (ResearchInterfaceLineHeader) of HEADER_SIZE_BYTES long, but maybe 
* the header is actually longer, or
* there is a footer as well (there is a ResearchInterfaceLineFooter type in Grabbie's ResearchInterface.h, so it seems quite possible), or 
* we have to use header->LineLength to determine the actual number of samples (and then there is a footer and the rest is just padding)


#### 2013-04-19, 18:42:59 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-05-04, 15:20:43 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-07-02, 20:35:00 - Adam Rankin
milestone_id: changed from "Release Plus-2.0.1" to "Release Plus-2.1.0"

#### 2013-12-03, 17:30:14 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #702 Investigate display orientation in fCal
Ensure that it is done correctly relative to the orientation of the selected channel

#### 2013-03-25, 20:23:12 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2013-03-25, 21:45:43 - Csaba Pinter
Can you provide some details why it is invalid?

#### 2013-03-26, 02:31:19 - Adam Rankin
In the end I realized that it was correct all along and the only mistake was the improper setting of image orientation of the virtual mixer.

I found the code that automatically converted everything to MF format, so having MF as the default format for the 2d visualization was correct.

vtkPlusBuffer constructor sets it to MF, when an item is added, it is converted to the buffer orientation.

#### 2013-03-26, 13:40:39 - Csaba Pinter
Thanks!
So if I understand correctly there was a bug with converting the orientation to MF internally, and it was fixed in a different ticket. If so, can you set it to related?


## #703 Add pre-commit hook for commit comment check
New feature is introduced in assembla that enables this:
https://www.assembla.com/code/plus/subversion/vcs_hooks/all


#### 2013-03-21, 19:03:39 - Andras Lasso
(In r:2610|plus:2610) re #703: Test commit to check the pre-commit hook for commit comment check

#### 2013-03-21, 19:39:49 - Andras Lasso
(In r:2613|plus:2613) re #703: Test commit to check the pre-commit hook for commit comment check 4

#### 2013-03-21, 19:42:16 - Andras Lasso
Installed valid_ticket_status.rb hook and it seems to work fine.

#### 2013-03-21, 19:42:16 - Andras Lasso
status: changed from "New" to "Fixed"


## #704 Clean up QString to C string conversion in PlusApp
QString to C string conversion should be always performed by someString.toLatin1.constData()

toAscii => toLatin1 because toAscii is deprecated on QT 5.0.
toLatin1() => toLatin1().constData() because without the constData() there are build errors on some linux boxes.
data() => constData() because constData() return const char*, which reflects better that the returned string is not meant to copied


#### 2013-03-22, 14:00:20 - Andras Lasso
(In r:2614|plus:2614) Fixed #704: Cleaned up QString to C string conversion to always use toLatin1.constData()

#### 2013-03-22, 14:00:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #705 Improvements to capture system


#### 2013-03-25, 17:36:12 - Adam Rankin
(In r:2616|plus:2616) re #705 Capture device now has the ability to buffer frames in memory before writing to disc.

For clarity to the user, the new functionality is presented as a new device type, even though internally it is the same class.

#### 2013-03-27, 16:45:23 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-02, 14:34:16 - Adam Rankin
Successful experiment from Brigham. Going to close this and address individual tickets as they arrive.

#### 2013-04-02, 14:34:16 - Adam Rankin
status: changed from "Test" to "Fixed"


## #706 Warnings are logged when acquiring data from multiple trackers at the same time
When Phidget and Polaris trackers are used at the same time to acquire data then PlusServer complains several times per second that tracking data is not yet available.

#### 2013-03-27, 14:02:24 - Andras Lasso
(In r:2619|plus:2619) fixed #706: GetMostRecentTimestamp fixed to return the timestamp that is already available for all tools (not just the first). Note that still the first tool determines the sampling times (and if other tools have different timestamps then those transforms are interpolated).

#### 2013-03-27, 14:02:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #707 Move experimental code to the sandbox
There are some experimental code in PlusLib that would be better moved to a separate 'sandbox' directory

#### 2013-03-27, 14:32:54 - Andras Lasso
(In r:2620|plus:2620) re #707: Added sandbox folder

#### 2013-03-27, 14:33:59 - Andras Lasso
(In r:2621|plus:2621) re #707: Moved beamwidth extraction code to the sandbox

#### 2013-03-27, 14:34:34 - Andras Lasso
(In r:2622|plus:2622) re #707: Moved matlab utilities to the sandbox

#### 2013-03-27, 15:09:54 - Andras Lasso
(In r:2623|plus:2623) re #707: Renamed directories in the sandbox

#### 2013-03-27, 15:21:24 - Andras Lasso
(In r:2624|plus:2624) re #707: Added matlab reader for getting transformation matrices and timestamps from sequence metafiles

#### 2013-05-15, 19:59:27 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2013-07-16, 13:15:04 - Andras Lasso
(In r:2942|plus:2942) re #707: Moved sample data collector script to sandbox

#### 2013-07-16, 13:15:04 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-07-26, 21:15:39 - Andras Lasso
(In r:2950|plus:2950) re #707: Fixed the matlab mha file reader to not print a number on the console when a file is read

#### 2013-08-02, 16:00:52 - Andras Lasso
(In r:2955|plus:2955) re #707: Optimized the matlab mha file reader to decrease file loading time by about 50%

#### 2014-06-04, 21:06:04 - Andras Lasso
There seems to be no more experimental code to move to the sandbox.

#### 2014-06-04, 21:06:04 - Andras Lasso
status: changed from "New" to "Invalid"


## #708 Temporary file generation sometimes fails
How to reproduce:
* Use a PlusConfig.xml file like this:
<PlusConfig
  LogLevel='3'
  DeviceSetConfigurationDirectory='F:\\devel\\PlusExperimental-bin\\PlusLib\\data\\ConfigFiles\  esting'
  ImageDirectory='F:/devel/PlusExperimental-bin/PlusLib/data/TestImages'
  ModelDirectory='F:/devel/PlusExperimental-bin/PlusLib/data/CADModels'
  GnuplotDirectory='F:/devel/PlusExperimental-bin/PlusLib/tools/Gnuplot/binary'
  ScriptsDirectory='F:/devel/PlusExperimental-bin/PlusLib/src/scripts'
  Date='2013.03.27 17:30:56'
  EditorApplicationExecutable='notepad.exe'
  OutputDirectory='./Output'
  LastDeviceSetConfigurationFileName='F:/devel/PlusExperimental-bin/PlusLib/data/ConfigFiles/Testing/PlusConfiguration_NDIPolaris_Phidget.xml'/>

* Start fCal.
* Record something, use save as... to save it => saving is successful.
* Record something, use save as... to save it => saving fails.

Problem analysis:
* For the first recording relative path is resolved as: path = 'f:/devel/PlusExperimental-bin/PlusApp-bin/fCal/Output'
* For the second rec: path = 'F:/devel/PlusExperimental-bin/PlusLib/data/TestImages/Output' => this is not an existing directory, therefore temporary file name generation fails.
* Probably something has changed the current directory.

Corrective actions required:
* Paths in the PlusConfig.xml must be always relative to the location of the PlusConfig.xml file itself. Change vtkPlusConfig::GetInstance()->GetOutputDirectory() to always returns an absolute path because otherwise somebody might just mistakenly interpret it relative to the current working directory (as it happened this case).
* Make sure nothing ever changes the current directory in fCal, just in case there were other relative path references.

#### 2013-03-27, 21:45:56 - Andras Lasso
description: changed from "How to reproduce:
* Use a P..." to "How to reproduce:
* Use a P..."

#### 2013-03-27, 21:48:32 - Andras Lasso
(In r:2626|plus:2626) re #708: Added initialization to candidateFilename to avoid random string contents after a failed temporary file name generation. Added check for GetTempFileName result.

#### 2013-03-28, 16:20:13 - Adam Rankin
(In r:2627|plus:2627) test #708 Using system temporary path to prevent write permission issues

#### 2013-03-28, 16:20:13 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-03-28, 18:11:07 - Andras Lasso
Do you know what caused the change in the current working directory of the application?

Also, need to fix the GetOutputDirectory() to return an absolute path (relative to the location of the PlusConfig.xml file), because at many other places the GetOutputDirectory() results is used as is (meaning relative to the current working directory instead of the PlusConfig.xml location).

#### 2013-03-28, 18:11:07 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-03-28, 18:32:13 - Adam Rankin
Sure, let's throw that in a different ticket.

#### 2013-03-28, 18:33:20 - Adam Rankin
(In r:2628|plus:2628) re #708 initializing variable before use

#### 2013-03-28, 18:51:03 - Andras Lasso
Thanks. Having a separate ticket for the GetOutputDirectory() problem is a good idea: added #709.

#### 2013-03-28, 18:51:03 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-03-28, 18:52:18 - Andras Lasso
Do you know what could have changed the current working directory of the application?

#### 2013-04-02, 17:37:47 - Adam Rankin
Problem no longer occurs after fixes.

#### 2013-04-02, 17:37:47 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-02, 18:06:35 - Andras Lasso
I've found that vtkPlusConfig::GetOutputDirectory() changes the current working directory!!!
I add a note to #709 to fix this.

#### 2014-09-18, 13:23:38 - Andras Lasso
re #708: Added logging of output directory when 'Path too long to generate temporary filename' error occurs
Commit: r:3694|plus:3694


## #709 GetOutputDirectory shall return a path relative to the PlusConfig.xml file location
Fix the GetOutputDirectory() to return an absolute path (relative to the location of the PlusConfig.xml file), because at many other places the GetOutputDirectory() results is used as is (meaning relative to the current working directory instead of the PlusConfig.xml location).

Using a relative path is quite error-prone, as the current working directory may change during the execution of programs.

Also, currently vtkPlusConfig::GetOutputDirectory() changes the current working directory. The current working directory must not be changed. Instead, every time a file is accessed then the appropriate path should be retrieved from vtkPlusConfig.

#### 2013-04-02, 14:36:42 - Adam Rankin
(In r:2635|plus:2635) re #709 Saving the current working directory when requesting the output path

#### 2013-04-02, 14:36:42 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-02, 15:17:03 - Adam Rankin
(In r:2637|plus:2637) test #709 std::string instead of const char* fixes incorrect string appending errors

#### 2013-04-02, 15:17:03 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-02, 18:09:49 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-02, 18:09:49 - Andras Lasso
description: changed from "Fix the GetOutputDirectory(..." to "Fix the GetOutputDirectory(..."

#### 2013-04-09, 14:44:26 - Andras Lasso
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-09, 14:44:26 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-04-09, 15:17:44 - Adam Rankin
At present it is always returned to the initial current working directory

#### 2013-04-09, 15:20:41 - Andras Lasso
Temporarily changing the cwd is not nice. Also, nightly tests are failing.
So, the cleanup cannot be postponed any longer. I'm working on it.

#### 2013-04-09, 15:37:35 - Adam Rankin
Sure, just record the original output directory in the constructor and return that!

#### 2013-04-10, 15:32:05 - Andras Lasso
(In r:2671|plus:2671) re #709: Changed vtkPlusConfig::Get...Directory and Changed vtkPlusConfig::Get...Path functions to return absolute paths to avoid inconsistencies due to potential changes in the working directory

#### 2013-04-10, 15:32:11 - Andras Lasso
(In r:2672|plus:2672) re #709: Changed vtkPlusConfig::Get...Directory and Changed vtkPlusConfig::Get...Path functions to return absolute paths to avoid inconsistencies due to potential changes in the working directory

#### 2013-04-10, 15:33:12 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2013-04-10, 17:15:07 - Andras Lasso
TODO: Update tests to load outputs from the output directory

#### 2013-04-10, 17:15:07 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2013-04-10, 19:16:33 - Andras Lasso
(In r:2678|plus:2678) re #709: Updated tests to read output files from the designated output directory, because they are written there by default if the output filename is a relative path

#### 2013-04-10, 20:15:23 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #710 fCal crash when switching from BK to Epiphan device during acquisition
-----Original Message-----
From: Andriy Fedorov [mailto:fedorov@bwh.harvard.edu] 
Sent: March 29, 2013 9:01 AM

When fCal starts, it shows B-mode from BK device. If I try to switch to Epiphan stream - crash. It happens only in Release mode. Setting output level to Trace didn't show any helpful messages before the crash. For me this issue is not critical, I can proceed without it being fixed. But let me know if you would like to debug this.


#### 2013-04-02, 14:38:06 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-02, 14:38:51 - Adam Rankin
Hi Andriy,

We do not have a BK device here in the lab, I will experiment with a few hardware configuration to see if I can reproduce it.

Cheers,
Adam

#### 2013-04-02, 16:33:31 - Adam Rankin
This is symptomatic of a larger threading issue. Able to reproduce with saved RF data with rf processing and a b-mode saved data set. Switching between channels will eventually cause a crash.

#### 2013-04-02, 16:33:36 - Adam Rankin
priority: changed from "Normal (3)" to "Highest (1)"

#### 2013-04-02, 17:03:25 - Andras Lasso
Yes, we have to be careful, as device methods can be called anytime from the main thread while data is being acquired by the data acquisition thread.
We should clearly define and document what member variables the data collector thread may modify (probably only the buffer contents).
Then all public methods of all devices (and the methods that these public methods call) should be prepared for these modifications happening at any time. It is doable if we very strictly limit the scope of modifications that the data collector thread may do.

#### 2013-04-03, 19:24:58 - Andrey Fedorov
Not sure if it's the same or different issue. Observed during the case last week. Since currently we need to reconnect each time the scan plane is changed, fCal crashed after one of the reconnections when trying to go to capture panel. I was able to reproduce this issue with Debug build today:

>  fCal.exe!CapturingToolbox::RefreshContent()  Line 138 + 0xd bytes  C++
   fCal.exe!fCalMainWindow::UpdateGUI()  Line 430  C++
   fCal.exe!fCalMainWindow::qt_metacall(QMetaObject::Call _c=InvokeMetaMethod, int _id=2, void * * _a=0x0000000000afb100)  Line 100 + 0xa bytes  C++
   QtCored4.dll!QMetaObject::metacall(QObject * object=0x0000000000aff660, QMetaObject::Call cl=InvokeMetaMethod, int idx=33, void * * argv=0x0000000000afb100)  Line 238  C++
   QtCored4.dll!QMetaObject::activate(QObject * sender=0x0000000004c6c450, const QMetaObject * m=0x000000006740d9a8, int local_signal_index=0, void * * argv=0x0000000000000000)  Line 3278 + 0x49 bytes  C++
   QtCored4.dll!QTimer::timeout()  Line 135  C++
   QtCored4.dll!QTimer::timerEvent(QTimerEvent * e=0x0000000000afbd98)  Line 273  C++
   QtCored4.dll!QObject::event(QEvent * e=0x0000000000afbd98)  Line 1182  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x0000000004c6c450, QEvent * e=0x0000000000afbd98)  Line 4462 + 0x15 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x0000000004c6c450, QEvent * e=0x0000000000afbd98)  Line 3862 + 0x1d bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x0000000004c6c450, QEvent * event=0x0000000000afbd98)  Line 731 + 0x26 bytes  C++
   QtCored4.dll!QCoreApplication::sendEvent(QObject * receiver=0x0000000004c6c450, QEvent * event=0x0000000000afbd98)  Line 215 + 0x50 bytes  C++
   QtCored4.dll!QEventDispatcherWin32Private::sendTimerEvent(int timerId=134217733)  Line 648  C++
   QtCored4.dll!qt_internal_proc(HWND__ * hwnd=0x000000000002094c, unsigned int message=275, unsigned __int64 wp=134217733, __int64 lp=0)  Line 503  C++
   user32.dll!0000000076b69bd1()   
   [Frames below may be incorrect and/or missing, no symbols loaded for user32.dll]  
   user32.dll!0000000076b698da()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000aff460)  Line 813  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000aff4ac)  Line 1170 + 0x27 bytes  C++
   QtCored4.dll!QEventLoop::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000aff518)  Line 150  C++
   QtCored4.dll!QEventLoop::exec(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000aff5a0)  Line 201 + 0x53 bytes  C++
   QtCored4.dll!QCoreApplication::exec()  Line 1008 + 0x23 bytes  C++
   QtGuid4.dll!QApplication::exec()  Line 3737  C++
   fCal.exe!main(int argc=1, char * * argv=0x0000000004384840)  Line 20 + 0x6 bytes  C++
   fCal.exe!__tmainCRTStartup()  Line 586 + 0x19 bytes  C
   fCal.exe!mainCRTStartup()  Line 403  C
   kernel32.dll!0000000076c6652d()   
   ntdll.dll!0000000076d9c521()   

once the issue was identified, the workaround is to restart fCal each time scan plane is switched.

#### 2013-04-05, 18:34:18 - Adam Rankin
The crash occurs within the Qt callstack. Investigating.

   ntdll.dll!775b15de()   
   [Frames below may be incorrect and/or missing, no symbols loaded for ntdll.dll]  
   ntdll.dll!775b15de()   
   ntdll.dll!775a014e()   
   user32.dll!76f52a72()   
   user32.dll!76f46a8c()   
   msvcr90d.dll!_unlock(int locknum=4)  Line 376  C
   msvcr90d.dll!_heap_alloc_dbg_impl(unsigned int nSize=16, int nBlockUse=1, const char * szFileName=0x00000000, int nLine=0, int * errno_tmp=0x01599994)  Line 500 + 0x7 bytes  C++
   msvcr90d.dll!_heap_alloc_dbg_impl(unsigned int nSize=16, int nBlockUse=1, const char * szFileName=0x00000000, int nLine=0, int * errno_tmp=0x01599994)  Line 497 + 0xc bytes  C++
>  msvcr90d.dll!_nh_malloc_dbg_impl(unsigned int nSize=16, int nhFlag=0, int nBlockUse=1, const char * szFileName=0x00000000, int nLine=0, int * errno_tmp=0x01599994)  Line 239 + 0x19 bytes  C++
   msvcr90d.dll!_nh_malloc_dbg(unsigned int nSize=16, int nhFlag=0, int nBlockUse=1, const char * szFileName=0x00000000, int nLine=0)  Line 296 + 0x1d bytes  C++
   msvcr90d.dll!malloc(unsigned int nSize=16)  Line 56 + 0x15 bytes  C++
   QtCored4.dll!qMalloc(unsigned int size=0)  Line 55 + 0xa bytes  C++
   QtCored4.dll!QScopedPointer<QObjectData,QScopedPointerDeleter<QObjectData> >::operator->()  Line 112 + 0x2a bytes  C++
   QtGuid4.dll!qGetPtrHelper<QScopedPointer<QObjectData,QScopedPointerDeleter<QObjectData> > >(const QScopedPointer<QObjectData,QScopedPointerDeleter<QObjectData> > & p={...})  Line 2341 + 0xb bytes  C++
   015999e8()  
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x2ba1f190, QEvent * e=0x0159a17c)  Line 4481 + 0x11 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x2ba1f190, QEvent * e=0x0159a17c)  Line 4042 + 0x2f bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x2ba1f190, QEvent * event=0x0159a17c)  Line 787 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::sendSpontaneousEvent(QObject * receiver=0x2ba1f190, QEvent * event=0x0159a17c)  Line 218 + 0x38 bytes  C++
   QtGuid4.dll!QApplicationPrivate::sendMouseEvent(QWidget * receiver=0x2ba1f190, QMouseEvent * event=0x0159a17c, QWidget * alienWidget=0x00000000, QWidget * nativeWidget=0x2ba1f190, QWidget * * buttonDown=0x65d2024c, QPointer<QWidget> & lastMouseReceiver={...}, bool spontaneous=true)  Line 3139 + 0xe bytes  C++
   QtGuid4.dll!QETWidget::translateMouseEvent(const tagMSG & msg={...})  Line 3234 + 0x2a bytes  C++
   QtGuid4.dll!QtWndProc(HWND__ * hwnd=0x0108028a, unsigned int message=514, unsigned int wParam=0, long lParam=4915223)  Line 1659 + 0xc bytes  C++
   user32.dll!76f462fa()   
   user32.dll!76f46d3a()   
   user32.dll!76f46ce9()   
   user32.dll!76f477c4()   
   user32.dll!76f4788a()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 810  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 1170 + 0x15 bytes  C++
   QtCored4.dll!QEventLoop::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 150  C++
   QtCored4.dll!QEventLoop::exec(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 201 + 0x2d bytes  C++
   QtGuid4.dll!QMenu::exec(const QPoint & p={...}, QAction * action=0x00000000)  Line 2050  C++
   QtGuid4.dll!QMenu::exec()  Line 2002  C++
   fCal.exe!fCalMainWindow::eventFilter(QObject * obj=0x09530e78, QEvent * ev=0x0159d078)  Line 540 + 0xb bytes  C++
   QtCored4.dll!QCoreApplicationPrivate::sendThroughObjectEventFilters(QObject * receiver=0x09530e78, QEvent * event=0x0159d078)  Line 902 + 0x15 bytes  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x09530e78, QEvent * e=0x0159d078)  Line 4477 + 0x11 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x09530e78, QEvent * e=0x0159d078)  Line 4042 + 0x2f bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x09530e78, QEvent * event=0x0159d078)  Line 787 + 0x15 bytes  C++
   QtCored4.dll!QCoreApplication::sendSpontaneousEvent(QObject * receiver=0x09530e78, QEvent * event=0x0159d078)  Line 218 + 0x38 bytes  C++
   QtGuid4.dll!QApplicationPrivate::sendMouseEvent(QWidget * receiver=0x09530e78, QMouseEvent * event=0x0159d078, QWidget * alienWidget=0x09530e78, QWidget * nativeWidget=0x0952ddf8, QWidget * * buttonDown=0x65d2024c, QPointer<QWidget> & lastMouseReceiver={...}, bool spontaneous=true)  Line 3139 + 0xe bytes  C++
   QtGuid4.dll!QETWidget::translateMouseEvent(const tagMSG & msg={...})  Line 3321 + 0x2a bytes  C++
   QtGuid4.dll!QtWndProc(HWND__ * hwnd=0x007a0366, unsigned int message=514, unsigned int wParam=0, long lParam=1179861)  Line 1659 + 0xc bytes  C++
   user32.dll!76f462fa()   
   user32.dll!76f46d3a()   
   user32.dll!76f46ce9()   
   user32.dll!76f477c4()   
   user32.dll!76f4788a()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 810  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 1170 + 0x15 bytes  C++
   QtCored4.dll!QEventLoop::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 150  C++
   QtCored4.dll!QEventLoop::exec(QFlags<enum QEventLoop::ProcessEventsFlag> flags={...})  Line 201 + 0x2d bytes  C++
   QtCored4.dll!QCoreApplication::exec()  Line 1064 + 0x15 bytes  C++
   QtGuid4.dll!QApplication::exec()  Line 3756  C++
   fCal.exe!main(int argc=1, char * * argv=0x09443058)  Line 20 + 0x8 bytes  C++
   fCal.exe!__tmainCRTStartup()  Line 582 + 0x19 bytes  C
   fCal.exe!mainCRTStartup()  Line 399  C
   kernel32.dll!76a133aa()   
   ntdll.dll!775c9ef2()   
   ntdll.dll!775c9ec5()   
   fCal.exe!gdcm::SQItem::Print(std::basic_ostream<char,std::char_traits<char> > & os={...}, const std::basic_string<char,std::char_traits<char>,std::allocator<char> > & __formal=<Bad Ptr>)  Line 330  C++
   fCal.exe!std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,gdcm::Dict *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,gdcm::Dict *> >,0> >::const_iterator::operator*()  Line 265 + 0xb bytes  C++
   fCal.exe!std::imag<long double>()  + 0x158151 bytes  C++
   fCal.exe!std::_Tree<std::_Tmap_traits<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,gdcm::Dict *,std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const ,gdcm::Dict *> >,0> >::const_iterator::operator*()  Line 265 + 0xb bytes  C++
   fCal.exe!itk::StimulateImageIO::CanWriteFile(const char * name=0x00320032)  Line 526 + 0x7a bytes  C++

#### 2013-04-05, 19:01:33 - Adam Rankin
(In r:2650|plus:2650) test #710 don't emit two signals from the same function... especially if you didn't need one of the signals

#### 2013-04-05, 19:01:33 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-05, 19:02:34 - Adam Rankin
Confirm fixed on my local machine, Andriy would you mind re-trying what you were doing before to see if it's fixed?

#### 2013-04-05, 19:02:34 - Adam Rankin
assigned_to_id: changed from "rankin" to "fedorov"

#### 2013-04-11, 16:12:32 - Andrey Fedorov
(In r:2682|plus:2682) re #710: adding null check trying to avoid crash


#### 2013-04-11, 16:21:10 - Andrey Fedorov
Connect to BK with linear array -> record all -> save all -> disconnect -> switch to curvilinear array -> connect -> crash:

Also, fCal element in the cofig file appears to be mandatory now, it was not in the past (BWH config file in PlusLib/data/ConfigFiles).

>  QtCored4.dll!QObject::disconnect(const QObject * sender=0x000000002799a880, const char * signal=0x0000000026bef119, const QObject * receiver=0x00000000045da7a0, const char * method=0x0000000026beec99)  Line 2728 + 0x13 bytes  C++
   fCal.exe!CapturingToolbox::OnActivated()  Line 82  C++
   fCal.exe!fCalMainWindow::CurrentToolboxChanged(int aToolboxIndex=1)  Line 350  C++
   fCal.exe!fCalMainWindow::qt_metacall(QMetaObject::Call _c=InvokeMetaMethod, int _id=0, void * * _a=0x0000000000ab9eb0)  Line 97 + 0x15 bytes  C++
   QtCored4.dll!QMetaObject::metacall(QObject * object=0x0000000000abf680, QMetaObject::Call cl=InvokeMetaMethod, int idx=31, void * * argv=0x0000000000ab9eb0)  Line 238  C++
   QtCored4.dll!QMetaObject::activate(QObject * sender=0x00000000043765d0, const QMetaObject * m=0x0000000065d9b2d8, int local_signal_index=0, void * * argv=0x0000000000ab9eb0)  Line 3278 + 0x49 bytes  C++
   QtGuid4.dll!QToolBox::currentChanged(int _t1=1)  Line 135  C++
   QtGuid4.dll!QToolBox::setCurrentIndex(int index=1)  Line 453  C++
   QtGuid4.dll!QToolBoxPrivate::_q_buttonClicked()  Line 422  C++
   QtGuid4.dll!QToolBox::qt_metacall(QMetaObject::Call _c=InvokeMetaMethod, int _id=3, void * * _a=0x0000000000aba160)  Line 93 + 0x12 bytes  C++
   QtCored4.dll!QMetaObject::metacall(QObject * object=0x00000000043765d0, QMetaObject::Call cl=InvokeMetaMethod, int idx=30, void * * argv=0x0000000000aba160)  Line 238  C++
   QtCored4.dll!QMetaObject::activate(QObject * sender=0x000000000438d510, const QMetaObject * m=0x0000000065e0ae28, int local_signal_index=2, void * * argv=0x0000000000aba160)  Line 3278 + 0x49 bytes  C++
   QtGuid4.dll!QAbstractButton::clicked(bool _t1=false)  Line 207  C++
   QtGuid4.dll!QAbstractButtonPrivate::emitClicked()  Line 548  C++
   QtGuid4.dll!QAbstractButtonPrivate::click()  Line 539 + 0xa bytes  C++
   QtGuid4.dll!QAbstractButton::mouseReleaseEvent(QMouseEvent * e=0x0000000000abb1d8)  Line 1122  C++
   QtGuid4.dll!QWidget::event(QEvent * event=0x0000000000abb1d8)  Line 8260  C++
   QtGuid4.dll!QAbstractButton::event(QEvent * e=0x0000000000abb1d8)  Line 1081  C++
   QtGuid4.dll!QApplicationPrivate::notify_helper(QObject * receiver=0x000000000438d510, QEvent * e=0x0000000000abb1d8)  Line 4462 + 0x15 bytes  C++
   QtGuid4.dll!QApplication::notify(QObject * receiver=0x000000000438d510, QEvent * e=0x0000000000abb1d8)  Line 4023 + 0x51 bytes  C++
   QtCored4.dll!QCoreApplication::notifyInternal(QObject * receiver=0x000000000438d510, QEvent * event=0x0000000000abb1d8)  Line 731 + 0x26 bytes  C++
   QtCored4.dll!QCoreApplication::sendSpontaneousEvent(QObject * receiver=0x000000000438d510, QEvent * event=0x0000000000abb1d8)  Line 218 + 0x4c bytes  C++
   QtGuid4.dll!QApplicationPrivate::sendMouseEvent(QWidget * receiver=0x000000000438d510, QMouseEvent * event=0x0000000000abb1d8, QWidget * alienWidget=0x0000000000000000, QWidget * nativeWidget=0x000000000438d510, QWidget * * buttonDown=0x000000006612b630, QPointer<QWidget> & lastMouseReceiver={...}, bool spontaneous=true)  Line 3120 + 0x16 bytes  C++
   QtGuid4.dll!QETWidget::translateMouseEvent(const tagMSG & msg={...})  Line 3321 + 0x3f bytes  C++
   QtGuid4.dll!QtWndProc(HWND__ * hwnd=0x0000000000110634, unsigned int message=514, unsigned __int64 wParam=0, __int64 lParam=393393)  Line 1659 + 0x15 bytes  C++
   user32.dll!0000000077ba9bd1()   
   [Frames below may be incorrect and/or missing, no symbols loaded for user32.dll]  
   user32.dll!0000000077ba98da()   
   QtCored4.dll!QEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000abf480)  Line 813  C++
   QtGuid4.dll!QGuiEventDispatcherWin32::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000abf4cc)  Line 1170 + 0x27 bytes  C++
   QtCored4.dll!QEventLoop::processEvents(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000abf538)  Line 150  C++
   QtCored4.dll!QEventLoop::exec(QFlags<enum QEventLoop::ProcessEventsFlag> * flags=0x0000000000abf5c0)  Line 201 + 0x53 bytes  C++
   QtCored4.dll!QCoreApplication::exec()  Line 1008 + 0x23 bytes  C++
   QtGuid4.dll!QApplication::exec()  Line 3737  C++
   fCal.exe!main(int argc=1, char * * argv=0x0000000003b3aae0)  Line 20 + 0x6 bytes  C++
   fCal.exe!__tmainCRTStartup()  Line 586 + 0x19 bytes  C
   fCal.exe!mainCRTStartup()  Line 403  C
   kernel32.dll!0000000077a8652d()   
   ntdll.dll!0000000077cbc521()   


#### 2013-04-11, 16:26:55 - Andrey Fedorov
correction: crash is not on second connect, but on switch to capture toolbox

#### 2013-04-11, 16:34:42 - Andrey Fedorov
Most importantly -- the streams are not saved anymore! The files saved are empty! Unfortunately, I cannot use it at all now!

#### 2013-04-11, 16:34:49 - Andrey Fedorov
assigned_to_id: changed from "fedorov" to "rankin"

#### 2013-04-11, 16:34:49 - Andrey Fedorov
status: changed from "Test" to "Accepted"

#### 2013-04-11, 17:31:52 - Adam Rankin
The crash when switching to capture toolbox is fixed.

#### 2013-04-11, 17:39:59 - Adam Rankin
(In r:2684|plus:2684) test #710 With buffered disc writing, write outstanding frames when closing

#### 2013-04-11, 17:39:59 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-11, 22:09:40 - Andrey Fedorov
(In r:2685|plus:2685) re #710: disable recording by default, enable mandatory fCal element


#### 2013-04-11, 22:11:06 - Andrey Fedorov
Tested, all seems to work now. Tried reconnecting several times, switching between shown streams, saving data, in Release. No crashes. Thank you very much. We have a patient tomorrow 8am, and I was worried I need to cancel. Appreciate your help.

#### 2013-04-11, 22:11:06 - Andrey Fedorov
status: changed from "Test" to "Fixed"

#### 2013-04-11, 22:20:47 - Andras Lasso
Great news, thanks for the testing and fixes!

#### 2013-04-11, 22:22:41 - Adam Rankin
Ah yes, that fCal check needs to be after the select channel. That function must select a channel no matter what.

#### 2013-04-11, 22:33:32 - Andrey Fedorov
@rankin: I am not quite sure what you mean by the last comment -- just letting you know so that there's no misunderstanding. If I move that check after select channel, it will crash when the element is not present.

#### 2013-04-12, 00:44:38 - Adam Rankin
(In r:2690|plus:2690) re #710 selecting channel before returning from function


## #711 Keep list of references up-to-date
Maintain the list of Plus-related papers in doc\eferences.

#### 2013-03-31, 17:03:45 - Andras Lasso
(In r:2632|plus:2632) re #711: Added Najafi2012 to spatial calibration references

#### 2013-03-31, 17:03:45 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-04-01, 03:41:43 - Andras Lasso
(In r:2633|plus:2633) re #711: Added Hsu2006a and Hsu2008 to spatial calibration references

#### 2013-04-15, 15:36:26 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Continuous activities"

#### 2013-06-12, 15:46:17 - Andras Lasso
(In r:2855|plus:2855) re #711: Added Miglioretti2013 paper about harms of using CT in pediatrics (good motivation for using ultrasound)

#### 2013-08-01, 06:38:31 - Andras Lasso
(In r:2954|plus:2954) re #711: Added a reference about single-wall calibration variant (Kim2013)

#### 2013-09-06, 14:49:25 - Andras Lasso
(In r:2963|plus:2963) re #711: Added Yaniv2011 paper about US calibration in IGSTK

#### 2013-09-06, 17:04:17 - Andras Lasso
(In r:2964|plus:2964) re #711: Added Miller2012 paper about volume reconstruction for neuro US images

#### 2013-11-07, 21:13:35 - Andras Lasso
(In r:2977|plus:2977) re #711: Added paper about US simulation from meshes

#### 2013-12-10, 05:36:00 - Andras Lasso
(In r:3038|plus:3038) re #711: Added new temporal calibration algorithm reference

#### 2013-12-15, 21:30:01 - Andras Lasso
(In r:3059|plus:3059) re #711: Added Guillermo's IJCARS paper

#### 2013-12-21, 21:59:59 - Andras Lasso
(In r:3089|plus:3089) re #711: Added paper about MITK-US

#### 2013-12-26, 14:22:32 - Andras Lasso
(In r:3090|plus:3090) re #711: Added paper about MITK-IGSTK

#### 2013-12-30, 23:09:25 - Andras Lasso
(In r:3105|plus:3105) re #711: Added ultrasound simulation IJCARS paper

#### 2013-12-31, 00:57:22 - Andras Lasso
(In r:3106|plus:3106) re #711: Added Jansen2013 reference (Plus is used for calibration, volume reconstruction, and streaming)

#### 2014-02-11, 17:55:17 - Andras Lasso
re #711: Added Abeysekera2014.pdf to references (about US spatial calibration)
Commit: r:3154|plus:3154

#### 2014-02-25, 21:30:48 - Andras Lasso
re #711: Added some references to Plus alternatives
Commit: r:3194|plus:3194

#### 2014-05-20, 19:30:41 - Andras Lasso
re #711: Added reference to Plus paper in TBME
Commit: r:3317|plus:3317

#### 2014-05-20, 20:42:51 - Andras Lasso
re #711: Added some references to papers using Plus
Commit: r:3318|plus:3318

#### 2014-06-18, 03:29:58 - Andras Lasso
re #711: Added calibration and volume reconstruction references
Commit: r:3439|plus:3439

#### 2014-08-20, 00:43:59 - Andras Lasso
re #711: Added pointer-based calibration paper reference
Commit: r:3617|plus:3617

#### 2014-12-17, 21:05:26 - Andras Lasso
re #711: Added some recent references to Plus
Commit: r:3899|plus:3899

#### 2014-12-19, 17:03:20 - Andras Lasso
re #711: Added some recent references to Plus
Commit: r:3900|plus:3900

#### 2015-02-03, 21:08:17 - Andras Lasso
re #711: Minor paper references update
Commit: r:3946|plus:3946

#### 2015-05-02, 13:44:34 - Andras Lasso
re #711: Added  few recent references to Plus
Commit: r:4124|plus:4124

#### 2015-06-11, 16:44:14 - Andras Lasso
re #711: Added references to Plus
Commit: r:4186|plus:4186


## #712 Improve documentation
This is a ticket to collect all commits related to documentation improvements

#### 2013-04-02, 00:36:37 - Andras Lasso
(In r:2634|plus:2634) re #712: Improved calibration phantom descriptions (added images of phantoms, updated tutorial)

#### 2013-04-02, 00:36:37 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-04-15, 15:35:41 - Andras Lasso
(In r:2691|plus:2691) re #712: Added Plus and SlicerIGT slides presented at NCIGT2013 workshop

#### 2013-04-15, 15:36:20 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Continuous activities"

#### 2013-05-02, 14:26:33 - Adam Rankin
(In r:2732|plus:2732) re #712 adding glossary to architecture overview

#### 2013-05-02, 15:55:51 - Adam Rankin
(In r:2733|plus:2733) re #712 modifying overview to include key architecture slides

#### 2013-05-02, 21:07:49 - Andras Lasso
(In r:2736|plus:2736) re #712: Added picture for mounting the NDI Polaris marker on fCal phantom

#### 2013-05-02, 23:47:27 - Adam Rankin
(In r:2737|plus:2737) re #712 adding example slides to architecture overview courtesy of Andras

#### 2013-05-03, 00:16:38 - Adam Rankin
(In r:2738|plus:2738) re #712 refinements to architecture overview

#### 2013-05-03, 00:17:12 - Adam Rankin
(In r:2739|plus:2739) re #712 refinements to general overview

#### 2013-05-03, 00:31:51 - Adam Rankin
(In r:2740|plus:2740) re #712 added details to plusserver slide

#### 2013-05-03, 13:35:46 - Adam Rankin
(In r:2741|plus:2741) re #712 Re-ordering slides

#### 2013-05-03, 13:58:50 - Adam Rankin
(In r:2742|plus:2742) re #712 changes to arch doc

#### 2013-05-03, 14:25:06 - Adam Rankin
(In r:2743|plus:2743) re #712 adjusting plus overview slide

#### 2013-05-03, 17:17:46 - Adam Rankin
(In r:2744|plus:2744) re #712 spacing of text

#### 2013-05-03, 17:23:30 - Adam Rankin
(In r:2745|plus:2745) re #712 Cleaning up architecture diagram, removing example single device slide

#### 2013-05-14, 22:29:41 - Andras Lasso
(In r:2778|plus:2778) re #712: Added youtube video link of temporal calibration to the calibration tutorial

#### 2013-05-16, 20:01:59 - Andras Lasso
(In r:2783|plus:2783) re #712: Updated fCal phantom building tutorial (new links, move obsolete fCal 1.x info to the appendix)

#### 2013-06-19, 15:12:37 - Andras Lasso
(In r:2866|plus:2866) re #712: Copied Matlab sequence metafile parser from SlicerRT rev 854

#### 2013-12-12, 19:45:44 - Andras Lasso
(In r:3046|plus:3046) re #712: Added more authors to SlicerIGT intro presentation's spine interventions slide on Purang's request

#### 2014-01-16, 14:25:18 - Andras Lasso
(In r:3131|plus:3131) re #712: Added more recommendations to fCal phantom printing

#### 2014-01-16, 16:54:08 - Andras Lasso
(In r:3132|plus:3132) re #712: Clarified EditSeqMetaFile MERGE function input specification

#### 2014-02-12, 22:23:52 - Adam Rankin
re #712 reducing severity of missing doxygen output in configuration step
Commit: r:3158|plus:3158

#### 2014-04-15, 00:25:31 - Andras Lasso
re #712: Updated Plus overview slides
Commit: r:3277|plus:3277

#### 2014-04-29, 16:33:02 - Andras Lasso
re #712: Added sample config file for simultaneous optical-electromagnetic tracking
Commit: r:3304|plus:3304

#### 2014-06-06, 19:09:56 - Andras Lasso
re #712: Added some more information on CLIENTINFO OpenIGTLink messages
Commit: r:3387|plus:3387

#### 2014-06-11, 00:55:46 - Andras Lasso
re #712: Made TransducerToProbe transformation computation more clear

Also made it more generic (less BrainLab-specific)
Commit: r:3400|plus:3400

#### 2014-06-11, 01:39:06 - Andras Lasso
re #712: Made TransducerToProbe transformation computation more clear (committed missed changes)
Commit: r:3401|plus:3401

#### 2015-02-12, 19:56:21 - Andras Lasso
re #712: Added note about default 127.0.0.1 IP address to Ultrasonix devices user documentation
Commit: r:3980|plus:3980

#### 2015-03-17, 19:02:02 - Andras Lasso
re #712: Fixed documentation typo
Commit: r:4060|plus:4060

#### 2015-03-30, 04:13:42 - Andras Lasso
re #712: Added notes that Plus can acquire data from Zeiss Pentero surgical microscopes
Commit: r:4076|plus:4076

#### 2015-04-12, 22:50:33 - Andras Lasso
re #712: Cropped image of fCal-1 phantom to only show the rubber band

The visible old wire pattern confused some users.
Commit: r:4098|plus:4098

#### 2015-04-17, 04:07:58 - Andras Lasso
re #712: Updated Plus overview presentations (surgical microscope, spectrometer, 4D US support)
Commit: r:4106|plus:4106

#### 2015-06-12, 13:53:50 - Andras Lasso
re #712: Improved data collection documentation
Commit: r:4187|plus:4187

#### 2015-06-12, 14:34:50 - Andras Lasso
re #712: Improved data collection documentation
Commit: r:4188|plus:4188

#### 2015-06-12, 14:39:30 - Andras Lasso
re #712: Improved data collection documentation
Commit: r:4189|plus:4189

#### 2015-06-17, 00:30:11 - Andras Lasso
re #712: Improved Ultrasonix documentation (how to change sound velocity limit, how to use pre-calibrated configuration files)
Commit: r:4195|plus:4195

#### 2015-07-31, 20:59:57 - Andras Lasso
re #712: Improve vtkOpenIGTLinkTracker documentation
Commit: r:4234|plus:4234

#### 2015-08-10, 12:06:26 - Andras Lasso
re #712: Added to the calibration faq that 6-dof sensors are needed
Commit: r:4243|plus:4243

#### 2015-08-10, 12:40:34 - Andras Lasso
re #712: Tuned calibration faq doc page
Commit: r:4244|plus:4244

#### 2015-08-19, 16:32:41 - Andras Lasso
re #712: Added documentation of motorized probe parameters
Commit: r:4262|plus:4262

#### 2015-08-19, 16:40:25 - Andras Lasso
re #712: changed vtkImageProcessorVideoSource to provide processed images are produced at its AcquisitionRate

If processing takes more time then the actual output frame rate will be lower.
Commit: r:4263|plus:4263

#### 2015-11-12, 04:07:20 - Andras Lasso
re #712: Added notes about changing default Polaris tracker parameters for optimal tracking performance (BaudRate and MeasurementVolumeNumber attributes in the config file)
Commit: r:4398|plus:4398

#### 2015-11-12, 15:44:38 - Andras Lasso
re #712: Updated recommended Epiphan framegrabber (VG2USB-LR is not available anymore)
Commit: r:4399|plus:4399

#### 2016-08-18, 22:06:24 - Andras Lasso
re #712: Improved documentation: clarified role UseData attribute of saved data source device
Commit: r:4815|plus:4815

#### 2017-03-11, 04:23:20 - Andras Lasso
re #712: Updated SVN links

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/c696b1ee60a94a069e5af590f2d5e515da19972d|plus.2:c696b1ee60

#### 2017-03-11, 04:23:53 - Andras Lasso
re #712: Updated SVN links

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4e2c5178704a32d7f54158c1c5b586d5e42b01e1|plus:4e2c517870

#### 2017-03-11, 14:53:22 - Andras Lasso
re #712: Updated SVN links

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f9642840862999c5ab2bbbf79d6d2db568329f70|plus:f964284086

#### 2017-05-10, 17:33:51 - Andras Lasso
re #712: Added more details about how to set up communication with a BK ultrasound scanner

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/9adef604f73f6d31ffc10720dd2a5f80eb3d1509|plus:9adef604f7

#### 2017-05-28, 04:22:33 - Andras Lasso
re #712: Added not to fCal about need to lower gain if the application appears to hang during probe (spatial) calibration

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/18b2ebdf9a15e9cb697287142d9890c78fca990c|plus.2:18b2ebdf9a

#### 2017-06-20, 13:59:02 - Andras Lasso
re #712: Moved package hardware compatibility matrix to Plus wiki

Moved package hardware compatibility matrix to Plus wiki.
In user manual only supported platforms information is kept.

It was too difficult to keep package contents (build machine configuration) in sync with documentation stored in source code.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/74854d64eab991637cb69262c961bec91129b6c5|plus:74854d64ea

#### 2017-08-17, 21:03:36 - Andras Lasso
re #712: Fixed link to utlrasound simulation paper pdf

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/bfcd19f4b821e72725afeddb9d93dda87b32f858|plus.2:bfcd19f4b8

#### 2017-08-22, 21:11:11 - Andras Lasso
re #712: Refactored documentation to show device list more prominently (in main configuration page) and fixed broken links

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/656db72b26066fc46ae5efee4662b0bd1f01265c|plus:656db72b26

#### 2017-08-22, 21:13:35 - Andras Lasso
re #712: Refactored documentation to show device list more prominently (in main configuration page) and fixed broken links

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/5cdd3ae9b76abbd407be55a198e5912c40062f25|plus.2:5cdd3ae9b7

#### 2017-08-23, 21:59:24 - Andras Lasso
re #712: Added example config file for OpenCVVideo

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/088d75167e8a8d8d355f3710c12685fd53388c53|plus:088d75167e


## #713 fCal crashes when DefaultSelectedChannelId points to a non-valid channel Id
See title.

#### 2013-04-02, 14:37:41 - Adam Rankin
(In r:2636|plus:2636) test #713 Fallback channel selection if invalid channel ID is specified

#### 2013-04-02, 14:37:41 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-02, 14:37:55 - Adam Rankin
Local test confirmed as working.

#### 2013-04-02, 14:37:55 - Adam Rankin
status: changed from "Test" to "Fixed"


## #714 Stylus (pivot) calibration test is not convenient to use
Reported by @ungi:

I think the problem is not with the PivotCalibrationAlgo. But how to read a file without video data. I cannot start vtkStylusCalibrationTest with this device config:

<Device
Id='TrackerDevice'
Type='SavedDataSource'
SequenceMetafile='c:\\Users\\ungi\\Dropbox\\Projects\\CPR\\2013-03-28_Experiment\\Calibration1.mha'
AcquisitionRate='50'
LocalTimeOffsetSec='0.0'
Mode='PivotCalibration' >
<DataSources>
<DataSource Type='Tool' Id='Reference' BufferSize='1000' AveragedItemsForFiltering='20' PortName='0' />
<DataSource Type='Tool' Id='Stylus' BufferSize='1000' AveragedItemsForFiltering='20' PortName='1' Model='Example' />
</DataSources>
<OutputChannels>
<OutputChannel Id='TrackerStream'>
<DataSource Id='Reference' />
<DataSource Id='Stylus' />
</OutputChannel>
</OutputChannels>
</Device>

The error message is:
|ERROR|000.190000| Unable to retrieve the video source in the SavedDataSource de
vice.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\SavedDataSource\\vtkSavedDataSource.
cxx(900)
|ERROR|000.194000| Buffer not created for vtkSavedDataSource but it is required.
Check configuration.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\SavedDataSource\\vtk
SavedDataSource.cxx(747)
|WARNING|000.223000| Cannot determine image orientation automatically, unknown i
mage type 0, use the same orientation in memory as in the file|in ..\\..\\..\\PlusL
ib\\src\\PlusCommon\\vtkMetaImageSequenceIO.cxx(345)

...and later:
|WARNING|002.548000| There are no valid images in the tracked frame list.|in ..\\
..\\..\\PlusLib\\src\\PlusCommon\\vtkTrackedFrameList.cxx(503)
|ERROR|002.553000| Unable to retrieve the video source in the SavedDataSource de
vice.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\SavedDataSource\\vtkSavedDataSource.
cxx(900)

Not even if I add UseData='IMAGE_AND_TRANSFORM' to the config.
According to the wiki, there is no UseData='TRANSFORM' possibility. I tried to set it, but it didn't work.

#### 2013-04-03, 05:14:11 - Andras Lasso
(In r:2639|plus:2639) re #714: Make stylus calibration baseline comparison optional. Don't show a warning when loading a transform-only metafile.

#### 2013-04-03, 05:19:29 - Andras Lasso
Tested successfully with url:https://www.assembla.com/spaces/plus/documents/acwzsONaOr4OxdacwqjQXA/download/acwzsONaOr4OxdacwqjQXA|this metafile and the configuration below.



~~~~
<PlusConfiguration version='2.1'>
  <DataCollection StartupDelaySec='1'>
    <DeviceSet Name='CPRValidate' Description='NDI Polaris for tracking'/>    
    <Device
      Id='TrackerDevice'
      Type='SavedDataSource'
      SequenceMetafile='Calibration1.mha'
      AcquisitionRate='50'
      LocalTimeOffsetSec='0.0'
      UseData='TRANSFORM' >
      <DataSources>
        <DataSource Type='Tool' Id='Reference' BufferSize='1000' AveragedItemsForFiltering='20' PortName='0' />
        <DataSource Type='Tool' Id='Stylus' BufferSize='1000' AveragedItemsForFiltering='20' PortName='1' Model='Example' />
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='TrackerStream'>
          <DataSource Id='Reference'/>
          <DataSource Id='Stylus'/>
        </OutputChannel>
      </OutputChannels>
    </Device>
  </DataCollection>
  <vtkPivotCalibrationAlgo ObjectMarkerCoordinateFrame='Stylus' ReferenceCoordinateFrame='Reference' ObjectPivotPointCoordinateFrame='StylusTip'/>
</PlusConfiguration>

~~~~



#### 2013-04-03, 05:19:29 - Andras Lasso
status: changed from "New" to "Fixed"


## #715 mha_read_transforms matlab example code not working
When you try to follow the instructions in the header comment, there is an error executing the plot function, because the matrix doesn't have plottable dimensions.

#### 2013-04-04, 16:10:01 - Tamas Ungi
(In r:2645|plus:2645) Fixed #715 Squeeze function reshapes the matrix to be compatible with plot.

#### 2013-04-04, 16:10:01 - Tamas Ungi
status: changed from "New" to "Fixed"


## #716 Add segmentation parameter dialog user selectable view orientation
See subject.


## #717 Excessive warnings in Linux build
Attempt to reduce the warnings produced by the Linux build

#### 2013-04-07, 20:40:08 - Adam Rankin
(In r:2653|plus:2653) re #717 Removing unnecessary token from endif

#### 2013-04-07, 21:22:51 - Adam Rankin
(In r:2654|plus:2654) re #717 Adjusting function declaration to be exported in the dll. Should suppress last warnings

test #621 adding functionality for RF image orientation to image visualizer

#### 2013-04-07, 21:23:17 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-07, 22:35:40 - Adam Rankin
(In r:2656|plus:2656) re #717 More linux warning removals

#### 2013-04-07, 22:55:36 - Adam Rankin
(In r:2657|plus:2657) fixed #717 Last round of linux build warning reductions

#### 2013-04-07, 22:55:36 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-07, 23:33:43 - Adam Rankin
(In r:2658|plus:2658) re #717 another minor tweak

#### 2013-05-02, 18:04:51 - Adam Rankin
(In r:2735|plus:2735) re #717 attempting to reduce linux warnings

#### 2013-05-31, 17:54:49 - Andras Lasso
(In r:2829|plus:2829) re #717: Fixed some linux build warnings


## #718 fCal crash when connecting to RF only saved data
   ntdll.dll!779915de()   
   [Frames below may be incorrect and/or missing, no symbols loaded for ntdll.dll]  
   ntdll.dll!779915de()   
   ntdll.dll!7798014e()   
   vtkFiltering.dll!vtkImageData::IsTypeOf(const char * type=0x00d2bb30)  Line 40 + 0x11 bytes  C++
   vtkFiltering.dll!vtkImageData::IsA(const char * type=0x61746144)  Line 40 + 0x24 bytes  C++
>  QtGuid4.dll!QTabWidget::count()  + 0x2d bytes  C++

PlusConfiguration_File_fCal_2.0.xml

Replace device TrackedVideoDevice with

    <Device
      Id='TrackedVideoDevice'
      Type='SavedDataSource'      
      SequenceMetafile='UltrasonixCurvilinearRfData.mha'
      UseData='IMAGE'
      UseOriginalTimestamps='TRUE'
      RepeatEnabled='TRUE'>
      <DataSources>
        <DataSource Type='Video' Id='Video' BufferSize='5' />
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='TrackedVideoStream' VideoDataSourceId='Video' />
      </OutputChannels>
    </Device>

#### 2013-04-07, 22:31:22 - Adam Rankin
(In r:2655|plus:2655) fixed #667 .mhd files now correctly located with their raw/zraw counterparts

fixed #718 No longer crash when Rf data with no rf processor is sent to be visualized.

#### 2013-04-07, 22:31:22 - Adam Rankin
status: changed from "New" to "Fixed"


## #719 Errors when saving with VirtualBufferedDiscCapture in fCal
Used the 'Simulation mode for freehand spatial calibration with phantom 2.0 containing 3 NWires' config file.

Issues:
* Crash: open the config file and switch between the config and capture tabs repeatedly. When you switch to capture tab the second time fCal crashes in CapturingToolbox::RefreshContent due to 'widget' variable pointing to a deleted object.
* Save and snapshot buttons should be disabled during recording
* Snapshot should be added to the same file, see how the recording control works at the top
* If recording is too short then an error is logged that file moving failed (click record, wait 2 sec, stop, save, click record, wait to sec, stop, save)


#### 2013-04-10, 16:00:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-10, 17:16:42 - Adam Rankin
(In r:2673|plus:2673) re #719 performing a more robust clearing of widgets to prevent incorrect access to deleted widgets


#### 2013-04-10, 17:28:03 - Adam Rankin
(In r:2674|plus:2674) re #719 cleaner way to address the same problem

#### 2013-04-10, 17:31:31 - Adam Rankin
Why do we want to disable the save/snapshot buttons during capturing?

#### 2013-04-10, 17:44:27 - Adam Rankin
(In r:2675|plus:2675) re #719 properly clearing temp file names so that subsequent records will properly re-create the temporary files

#### 2013-04-10, 18:29:50 - Adam Rankin
(In r:2677|plus:2677) re #719 change snapshot behaviour to match capture toolbox, changed save availability to match capture toolbox

#### 2013-04-10, 18:30:08 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-10, 18:30:08 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-11, 17:23:49 - Adam Rankin
(In r:2683|plus:2683) re #719 fix crash when switching back to capture tab after disconnecting

#### 2013-04-19, 18:41:51 - Adam Rankin
status: changed from "Test" to "Fixed"


## #720 Add CROP operation to EditSeqMetafile
from @lassoan:

'If you want to remove parts of the image after acquisition for anonymization purposes then you can use the FILL_IMAGE_RECTANGLE operation of EditSeqMetafile. A clipping function may be useful to be added to EditSeqMetafile (note that image clipping changes the ImageToProbe transformation so an additional ImageToClippedImage transform would need to be added to the transform repository to handle this).'

#### 2013-04-10, 21:13:02 - Andrey Fedorov
(In r:2679|plus:2679) re #720: adding CROP operation, test and baseline image. ImageToCroppedImage
transform is created and added to the frame.


#### 2013-04-10, 23:27:04 - Andrey Fedorov
(In r:2680|plus:2680) re #720: set status OK for the ImageToCroppedImage transform


#### 2013-04-11, 18:22:03 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1"

#### 2013-04-11, 21:43:17 - Andras Lasso
@rankin: I think Andriy has implemented this, so it'll be in 2.0

#### 2013-04-11, 23:13:08 - Andras Lasso
(In r:2689|plus:2689) re #720: Updated file locations for CROP tests (as since a recent modification by default output files are generated relative to the ${TEST_OUTPUT_PATH} directory instead of the current working directory). Fixed baseline file (added OK status, use compression)

#### 2013-04-11, 23:13:57 - Andras Lasso
Looks all good.
@fedorov: thanks for implementing this.

#### 2013-04-11, 23:13:57 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-04-11, 23:14:06 - Andras Lasso
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-11, 23:21:04 - Andrey Fedorov
@lassoan: I knew I would miss something! :) Thanks Andras!


## #721 Include SVN release version into saved config file
This would be extremely helpful to keeping track of the code version used for capturing the saved data. Currently, the code appears to be not stable, and I am not able to do what I was able to do 2 weeks ago. But I am not sure which version I used!

Lesson for the future for me -- keep two separate versions of Plus -- one that is tested and works, and one for testing new features and improvements ...

#### 2013-04-11, 16:41:36 - Andrey Fedorov
or print SVN version in the log file

#### 2013-04-11, 16:49:43 - Tamas Ungi
Very good idea! I suggest implementing both.

#### 2013-04-11, 16:57:02 - Andrey Fedorov
I did it in the past here: https://github.com/fedorov/Reporting/blob/master/CMakeLists.txt#L37-L39 and related macros in CMake dir (based on how it's done somewhere in Slicer), it is for git, but may be the same for svn. 

#### 2013-04-11, 18:21:55 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2013-04-11, 22:15:24 - Andras Lasso
We already retrieve the SVN version, I just add to the log and the config file.

#### 2013-04-11, 22:15:24 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-04-11, 22:15:24 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-04-11, 22:49:52 - Andras Lasso
(In r:2687|plus:2687) re #721: Print the Plus software version (including SVN revision) in the log and in all saved configuration file

#### 2013-04-11, 22:52:40 - Andras Lasso
(In r:2688|plus:2688) re #721: No need to add Plus revision to the device set at configuration saving, as it's already added when the device set configuration is set into vtkPlusConfig (and this way saving is guaranteed, even if it's not done using the ConfigFileSaverDialog)

#### 2013-04-11, 22:53:03 - Andras Lasso
component_id: changed from "None" to "PlusLib"

#### 2013-04-11, 22:53:03 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.0"

#### 2013-04-11, 22:53:03 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #722 BK GrabbieLib improvements
BK's GrabbieLib needs some fixes and improvements:
* The TcpClient::Write(buffer, size) method in BK returns (size+2) if the operation is successful. It should return (size) instead. See usage in vtkBkProFocusOemVideoSource::InternalUpdate().
* Improve CMake files: it should properly export all library targets


#### 2013-04-11, 22:32:55 - Andras Lasso
(In r:2686|plus:2686) re #722: Added comment explaining why we add +2 to the expected return value of OemClient->Write

#### 2013-04-11, 22:32:55 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:59:31 - Adam Rankin
assigned_to_id: changed from "lassoan" to null


## #723 Increase default value of MorphologicalOpeningBarSizeMm segmentation parameter
The default MorphologicalOpeningBarSizeMm='1.0' leads to splitting of fiducial points if they are somewhat large. A value of about 3mm seems to work fine. Investigate if the effect of this morphological opening with bars and if it is needed at all and change the default value (or remove this processing completely) based on the results of this investigation.

#### 2013-12-23, 21:09:30 - Andras Lasso
duplicate

#### 2013-12-23, 21:09:30 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2013-12-23, 21:09:36 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"


## #724 Change RegionOfInterest segmentation parameter definition in the config files
In Plus users can specify rectangular region of interests by origin and size of the region (e.g., ClipRectangleOrigin='253 108' ClipRectangleSize='720 667').

The only exception seems to be the RegionOfInterest attribute of the Segmentation element in the device set configuration file: RegionOfInterest='27 27 793 589' (xmin, ymin, xmax, ymax).

Change it to two parameters with the following names:
ClipRectangleOrigin (old parameters: xmin ymin)
ClipRectangleSize (old parameters: xmax-xmin+1 ymax-ymin+1; its maximum value is the size of the image)


#### 2013-04-16, 17:55:52 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-16, 17:56:04 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-16, 17:56:10 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-16, 19:26:33 - Adam Rankin
(In r:2702|plus:2702) test #724 roi parameter changed to cliprectangleorigin and cliprectanglesize. remian backwards compatible to not break current configuraiton files

test #730 moved attribute to data source, renamed to be more clear, updated devices to use new port image orientation

#### 2013-04-16, 19:26:33 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-16, 20:13:38 - Andras Lasso
Backward compatibility is good, but the old attributes should be deprecated to avoid confusion. So, please:
* update all current config files and
* log a warning (that the used attributes are obsolete and what attributes to use instead) if somebody uses the old attributes


#### 2013-04-16, 20:58:07 - Adam Rankin
(In r:2706|plus:2706) re #724 adding warning when reading RegionOfInterest attribute

#### 2013-04-16, 22:47:20 - Adam Rankin
(In r:2707|plus:2707) re #724 newlines to enable script

#### 2013-04-17, 00:15:45 - Adam Rankin
(In r:2708|plus:2708) test #724 removed deprecated attribute, update all config files to use new attribute

#### 2013-04-17, 00:41:45 - Adam Rankin
status: changed from "Test" to "Fixed"


## #725 Add descriptive name to vtkPlusBuffer for logging
Warning/error messages logged by vtkPlusBuffer are not very helpful, because the device&source IDs are not printed. Currently, the vtkPlusBuffer does not need to know these IDs (and it's very good like this), but just for logging purposes it would be useful to add a DescriptiveName member that would be added to log messages to identify which device:source has a problem.

I set the milestone to 2.0 because this feature would be useful for testing and optimization of Plus-2.0.

#### 2013-04-15, 17:41:35 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-15, 17:41:38 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-15, 18:15:09 - Adam Rankin
(In r:2693|plus:2693) test #725 optional descriptive name added to buffer

#### 2013-04-15, 18:15:09 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-15, 18:15:49 - Adam Rankin
@lasson Do you like the format? Feel free to tweak it

#### 2013-04-15, 18:15:49 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-19, 18:41:38 - Adam Rankin
status: changed from "Test" to "Fixed"


## #726 Add code for checking for duplicate device and channel IDs
With copy-pasting devices it's easy to have duplicate device and channel IDs. These are not checked now and devices/channels with duplicate IDs don't appear. In case of duplicate ID detected an error should be logged and the connection should fail (to make sure that the user notices the problem).

#### 2013-05-15, 18:52:01 - Adam Rankin
(In r:2780|plus:2780) re #726 added protection against devices with duplicate IDs

#### 2013-05-15, 18:52:01 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-05-15, 19:31:40 - Adam Rankin
(In r:2781|plus:2781) fixed #726 duplicate output channel configuration verified on ReadConfiguration

#### 2013-05-15, 19:31:40 - Adam Rankin
status: changed from "New" to "Fixed"


## #727 PlusServer channel ID selection should be done with one parameter
The channel broadcasted by PlusServer is currently selected by two attributes: OutputDeviceId and OutputChannelId.
These two attributes should be replaced by one attribute DefaultSelectedChannelId (which should work the same way as in fCal).


#### 2013-04-16, 17:55:56 - Adam Rankin
milestone_id: changed from "Release Plus-2.1" to "Release Plus-2.0"

#### 2013-04-16, 19:26:45 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-16, 19:48:49 - Adam Rankin
(In r:2704|plus:2704) test #727 plus server now only uses channel ID as identifier

#### 2013-04-16, 19:48:49 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-17, 00:36:44 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-19, 04:15:59 - Andras Lasso
(In r:2715|plus:2715) re #727: Added OutputChannelId attribute to PlusOpenIGTLinkServer element in the sample config files to indicate that this attribute is expected


## #728 Review vtkEpiphanVideoSource::InternalStartRecording
The implementation of PlusStatus vtkEpiphanVideoSource::InternalStartRecording() is probably incorrect, it should be if (this->Recording) instead of the current if (!this->Recording).

FrmGrab_Start should be called if the recording is not yet in progress (http://www.argocorp.com/grabber/eizou/Epiphan/pdf/Epiphan_SDK_ReleaseNotes.pdf, especially important for network grabbers), but it seems that the if (!this->Recording) check has wrong logic (when InternalStartRecording is called then I think the Recording is still false).

Check this with a real Epiphan hardware and fix the logic if needed.

#### 2013-04-15, 17:02:43 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-15, 17:15:21 - Adam Rankin
As suspected, the code is borked.

Currently there is no issue for local grabbers as the grab/release execution model on a local grabber is sufficiently fast.
However, for network grabbers (from the SDK):

~~~~
FrmGrab_Start function signals the frame grabber to prepare for capturing frames with maximum frame rate. Currently, it doesn't matter for local grabbers, however it's really important for network grabbers. For network grabbers, this function turns streaming on, otherwise FrmGrab_Frame will have to work on request/response basis, which is much slower

~~~~



#### 2013-04-15, 17:20:29 - Adam Rankin
Unfortunately SDK documentation is slightly outdated, FrmGrab_Start returns an int. I can't tell if 1 is good and 0 is bad or vice versa (I think 1 is good).

#### 2013-04-15, 17:27:27 - Adam Rankin
(In r:2692|plus:2692) test #728 Epiphan network grabber fix and local performance enhancement. Epiphan is now properly initialized when connecting and properly cleaned up when disconnecting.

#### 2013-04-15, 17:27:27 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-15, 17:41:26 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-04-19, 18:42:05 - Adam Rankin
status: changed from "Test" to "Fixed"


## #729 Remove/refactor attribute Filename from VirtualDiscCapture device
Use a base filename attribute to generate a filename if one is not provided

#### 2013-04-15, 23:32:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-16, 01:19:11 - Andras Lasso
It would simplify clients (command-line applications, PlusServer remote clients, fCal's Save all, etc.) if it was possible to specify a base filename in the config file that the device would use to generate unique filenames when no specific filename is provided.

#### 2013-04-16, 15:22:14 - Adam Rankin
description: changed from "Enforce the passing of the ..." to "Use a base filename attribu..."

#### 2013-04-16, 16:01:46 - Adam Rankin
(In r:2697|plus:2697) test #729 Filename attribute now optional BaseFilename in VirtualDiscCapture/VirtualBufferedDiscCapture

saving now accepts optional filename parameter which will override timestamped generated filename based on base filename

#### 2013-04-16, 16:01:46 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-16, 16:04:03 - Adam Rankin
(In r:2698|plus:2698) test #729 matching config files for new change

#### 2013-04-16, 16:55:30 - Adam Rankin
(In r:2699|plus:2699) test #729 build fix, missed reference

#### 2013-04-16, 17:20:19 - Adam Rankin
(In r:2700|plus:2700) test #729 memory going out of scope causing invalid file copy

#### 2013-04-16, 17:47:17 - Adam Rankin
Consistently working.

#### 2013-04-16, 17:47:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #730 Move UsImageOrientation attribute from OutputChannel to DataSource


#### 2013-04-16, 17:22:31 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-16, 17:29:44 - Adam Rankin
status: changed from "Accepted" to "Invalid"

#### 2013-04-16, 18:08:09 - Adam Rankin
status: changed from "Invalid" to "Accepted"

#### 2013-04-16, 18:12:38 - Adam Rankin
New format

<DataSource Type='Video' Id='Video' BufferSize='100' PortName='B' PortUsImageOrientation='MF' />

#### 2013-04-16, 19:26:33 - Adam Rankin
(In r:2702|plus:2702) test #724 roi parameter changed to cliprectangleorigin and cliprectanglesize. remian backwards compatible to not break current configuraiton files

test #730 moved attribute to data source, renamed to be more clear, updated devices to use new port image orientation

#### 2013-04-16, 19:26:33 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-16, 19:31:37 - Adam Rankin
(In r:2703|plus:2703) TEST #730 missing files from commit

#### 2013-04-16, 20:12:18 - Adam Rankin
(In r:2705|plus:2705) test #730 fixing bk device and tests

#### 2013-04-17, 00:41:41 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-04-18, 02:32:21 - Adam Rankin
(In r:2711|plus:2711) re #730 missing config file changes

#### 2013-04-18, 23:27:07 - Adam Rankin
(In r:2712|plus:2712) test #737 build machine updated, rebuild in progress, bk camera link enabled for build, bk camera link code updated

re #730 fixing bk camera link

#### 2013-04-18, 23:27:41 - Adam Rankin
(In r:2713|plus:2713) test #737 missing file

re #730 missing file

#### 2013-04-18, 23:28:12 - Adam Rankin
(In r:2714|plus:2714) test #737 missing file

re #730 missing file


## #731 Frame numbers wrong in saved metaIO file
I used fCal to record several tracked ultrasound sequences. The third mha file starts like quoted below. It starts from Frame3989. Volume reconstructor (and probably other applications too) doesn't find the transforms. Probably because they are looking for Frame0 at the beginning. So I cannot reconstruct my volumes.

ObjectType = Image
NDims = 3
AnatomicalOrientation = RAI
BinaryData = True
BinaryDataByteOrderMSB = False
CenterOfRotation = 0 0 0
CompressedData = False
DimSize = 820 616 526                            
ElementSpacing = 1 1 1
ElementType = MET_UCHAR
Offset = 0 0 0
TransformMatrix = 1 0 0 0 1 0 0 0 1
UltrasoundImageOrientation = MF
UltrasoundImageType = BRIGHTNESS
Seq_Frame3989_ProbeToTrackerTransform = 0.299923 0.909672 0.287303 152.809 0.837679 -0.107036 -0.535572 18.5291 -0.456443 0.401298 -0.794116 174.464 0 0 0 1 
Seq_Frame3989_ProbeToTrackerTransformStatus = OK
Seq_Frame3989_ReferenceToTrackerTransform = -0.867211 -0.45286 0.207032 316.071 -0.00962488 0.430944 0.902327 -22.7309 -0.497847 0.780516 -0.378079 -92.3504 0 0 0 1 
Seq_Frame3989_ReferenceToTrackerTransformStatus = OK
Seq_Frame3989_StylusToTrackerTransform = 0.498179 0.374142 -0.782199 154.635 0.0894472 -0.919476 -0.382836 487.154 -0.862448 0.120756 -0.49153 210.996 0 0 0 1 
Seq_Frame3989_StylusToTrackerTransformStatus = OK
Seq_Frame3989_Timestamp = 1430.975943
Seq_Frame3989_ImageStatus = OK

#### 2013-04-16, 16:07:28 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-16, 16:55:13 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-04-16, 17:11:44 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-16, 17:22:06 - Adam Rankin
(In r:2701|plus:2701) test #731 properly resetting the image sequence io after writing to file

#### 2013-04-16, 17:22:06 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-04-17, 00:41:57 - Adam Rankin
assigned_to_id: changed from "rankin" to "ungi"

#### 2013-04-18, 17:42:35 - Adam Rankin
Sequential records in the same fCal instance  are currently framestamped.

#### 2013-04-18, 17:42:35 - Adam Rankin
status: changed from "Test" to "Fixed"


## #732 Question on using SonixTablet with Ascension 3D sensors
Hi,

I am new to the Plus library and have some basic configuration questions:

I am using a SonixTablet with Ascension 3D sensors.
I have downloaded Plus 1.8 on the SonixTablet and tried to run fCal.exe but none of the sonix configuration files work (connection failed error).
Could you help me get past my connection issues?
I noticed that the Sonix configuration files all have SonixVideo as the ImageAcquisition Type set to 'SonixVideo' but the PlusVersion.exe does not list SonixVideo as a supported video capturing device.

Thank you very much
nick

#### 2013-04-17, 15:26:59 - nic.heron
file:a_hUnGP3mr4OktacwqjQWU


#### 2013-04-17, 15:26:59 - nic.heron
Attachment added: "PlusConfiguration_SonixTablet_Ascension3DG_L14_fCal2.0.xml"

#### 2013-04-17, 15:28:32 - nic.heron
I have added the sonixtablet  configuration file I'm trying to use.

Thanks
nick

#### 2013-04-17, 15:30:16 - Adam Rankin
Hi Nic,

Welcome!

May I ask from where you downloaded from? I will download the same build so I can test this out for you.

Also, I will move this to the messages area of Assembla and provide a link!
Let's continue at url:https://www.assembla.com/spaces/plus/messages/2883513|https://www.assembla.com/spaces/plus/messages/2883513

Cheers,
Adam

#### 2013-04-17, 15:30:16 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2013-04-17, 15:32:34 - Andras Lasso
summary: changed from "@rankin" to "Question on using SonixTablet with Ascension 3D sensors"

#### 2013-04-17, 15:37:39 - nic.heron
Thanks for getting back to me so quickly. I downloaded the Plus 1.8 from:
https://www.assembla.com/spaces/milestones/completed/plus?milestone_sort_id=DESC

Yes, let's continue at https://www.assembla.com/spaces/plus/messages/2883513
Cheers,
Nick


## #733 Set localhost as default Ultrasonix scanner default IP address
By default (if the user doesn't specify an IP address) then Ultrasonix scanners should use 127.0.0.1 address.

There is also a bug in vtkSonixVideoSource now that causes a small leak on each Reset(): this->SonixIP shall be initialized to NULL in the constructor, then with the set macro it should be set to the default value, in the destructor it should be set to NULL with the set macro, in Rest it should be changed with the set macro.


#### 2013-04-17, 15:46:56 - Andras Lasso
Actually, I'm not sure why this Reset() method needed at all - maybe due to the singleton stuff.
@heffter: Do you remember why we need to have the vtkSonixVideoSource as a singleton?

#### 2013-04-17, 16:00:11 - Adam Rankin
The reset is needed due to Sonix being a singleton. When a disconnect/reconnect cycle is done, there were channels leftover since the destructor wasn't called.

Another alternative is to do a class cleanup in InternalDisconnect, but that doesn't seem like the right place.

#### 2013-04-17, 16:03:15 - Andras Lasso
This whole singleton thing is quite ugly. We should get rid of it, if it's not absolutely needed.

#### 2013-04-17, 19:40:34 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-04-17, 19:40:36 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-17, 19:40:40 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-04-17, 20:20:17 - Adam Rankin
(In r:2710|plus:2710) fixed #733 sonix default ip now set to 127.0.0.1

#### 2013-04-17, 20:20:17 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-04-20, 02:29:06 - Andras Lasso
(In r:2720|plus:2720) re #733: Fixed crash in SonixVideo constructor (SonixIP was not initialized to NULL in constructor) and leak on exit

#### 2013-05-22, 20:53:52 - Tamas Heffter
@lassoan Sorry, I've just seen your question. I think we used singleton because the Ulterius SDK cannot handle multiple connections, therefore we could use SonixVideo instance from more than one objects if needed. I don't think it's necessary, we just need to be cautious when we access it from different objects. 

#### 2013-05-22, 21:10:11 - Andras Lasso
Thanks for the info, entered #764 to track the conversion from singleton to simple object.


## #734 Milestone build for 1.8 does not have the Sonix enabled
Enable it and re-upload a build.

#### 2013-04-17, 17:54:07 - Adam Rankin
Build re-uploaded.

#### 2013-04-17, 17:54:07 - Adam Rankin
status: changed from "New" to "Fixed"


## #735 BK RfProcessing/ScanConversion parameters are not saved in config file
i discovered this while processing the data captured last week. Imaging depth is not stored correctly. It used to work in the past.

#### 2013-04-17, 16:43:33 - Andrey Fedorov
Issue Type: changed from "Enhancement" to "Bug"

#### 2013-04-17, 20:30:16 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-17, 20:30:21 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0"

#### 2013-04-17, 22:10:38 - Adam Rankin
Would this be 
ImagingDepthMm='56.0'
from <ScanConversion> ?

#### 2013-04-17, 22:12:06 - Andrey Fedorov
This is the value that comes from the init config file.

And to be absolutely positive, it doesn't match the depth displayed on the screen, as captured by the Epiphan stream...

#### 2013-04-17, 22:14:26 - Andras Lasso
There can be some default depth in the input config file, but then the BK video source queries the scanner for the actual depth and saves it in the config files that are created along with the mha files.


From: Adam Rankin (rankin)
Sent: ‎2013-‎04-‎17 18:10

#### 2013-04-17, 22:18:05 - Adam Rankin
@lassoan will sonix in rf mode with rfprocessing tag behave the same as bk? (for reproducing/testing)

#### 2013-04-17, 22:29:57 - Andras Lasso
Such mechanism hasn't been implemented for Ultrasonix. The final design will be somewhat different from what we can have now, as a switcher device will route the video stream to specific channels, so RF processing parameters won't be changed on the fly. However, until them I don't think we have any other solution than fixing the current mechanism for the BK.


From: Adam Rankin (rankin)
Sent: ‎2013-‎04-‎17 18:18

#### 2013-04-18, 00:11:06 - Adam Rankin
More importantly, which attribute is not written? I don't know what you guys are referring to.

#### 2013-04-18, 00:46:41 - Andras Lasso
It's the attribute that you found: ImagingDepthMm in <ScanConversion>.

#### 2013-04-18, 01:03:00 - Andrey Fedorov
I think the whole RfProcessing element is not written out. I will try to confirm tomorrow.

#### 2013-04-18, 01:25:13 - Adam Rankin
Ok! That I can test with the Sonix.

#### 2013-04-18, 17:32:45 - Adam Rankin
I'm unable to reproduce. When I add a RfProcessing element, it's write configuration is successfully called.

@lassoan If this only happens with the BK I'm not quite sure how to reproduce this here.

#### 2013-04-18, 22:14:32 - Andrey Fedorov
And I was unable to compile Plus today in time, so my testing attempt failed. Will test/debug this at the next opportunity and will update the issue.

#### 2013-04-19, 18:07:02 - Adam Rankin
I think I've got everything working for the x64 build with BK and BK Camera Link enabled. Are there any other device options enabled?

#### 2013-04-23, 12:36:20 - Adam Rankin
milestone_id: changed from "Release Plus-2.0" to "Release Plus-2.1"

#### 2013-05-01, 13:58:56 - Andrey Fedorov
vtkBkProFocusCameraLinkVideoSource::vtkInternal::InitializeParametersFromOEM() is not called when connecting to BK device

#### 2013-05-04, 15:08:33 - Andras Lasso
@fedorov: Do you see 'Could not load BK parameter settings from file' or 'Failed to load acquisition settings from file' error message? If not, then the InitializeParametersFromOEM should be called. You can put a breakpoint in vtkBkProFocusCameraLinkVideoSource::InternalConnect() and see what happens.

#### 2013-05-04, 15:10:53 - Andrey Fedorov
I will debug this, I didn't have time this week.

#### 2013-05-04, 15:20:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-09, 14:19:14 - Andrey Fedorov
Andras, Adam: I was incorrect saying Initialize is not called, it is. I don't know how I got confused last time.

So now it appears that vtkBkProFocusCameraLinkVideoSource::WriteConfiguration() is not called. Can you point me to a place in the code where I should look to fix this?

#### 2013-05-09, 14:21:54 - Adam Rankin
              Skype session? I can help debug?

#### 2013-05-09, 14:41:06 - Andrey Fedorov
Adam, I sent you  a link to join google hangout

#### 2013-05-09, 15:37:08 - Adam Rankin
(In r:2758|plus:2758) test #735 write the device configuration before saving config file associated with capture

allow access to data collectors from anywhere

#### 2013-05-09, 15:37:08 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-05-10, 14:33:13 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-05-10, 14:33:41 - Adam Rankin
Cleaning up implementation. Currently in development. Existing fix will work for the time being. plus:2758 works

#### 2013-05-10, 14:47:17 - Andras Lasso
@rankin: This ticket is for 2.0.1, so make sure you merge it to the 2.0 branch (it's better to do all fixes directly in the 2.0 branch if we know that it'll be needed there and then merge to the trunk)

#### 2013-05-10, 17:19:37 - Andrey Fedorov
It seems to work now (saves updated parameters). Thanks.

#### 2013-05-11, 02:06:01 - Adam Rankin
@lassoan yes I have it merged to the 2.0 branch and have started to do development in the 2.0 branch directly. I figured out a few new things with tortoiseSVN

#### 2013-05-14, 03:42:58 - Adam Rankin
(In r:2773|plus:2773) test #735 cleaner solution to updating configuration before saving capture params

also removing the defunct capture client

#### 2013-05-14, 03:42:58 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-05-14, 04:07:25 - Adam Rankin
(In r:2774|plus:2774) re #735 integrating changes in to 2.0 branch

#### 2013-05-15, 17:51:49 - Adam Rankin
Andrey, could you confirm that my proper fix still correctly saves the configuration?

#### 2013-05-15, 17:53:59 - Andrey Fedorov
Adam, I will as soon as I can.

Please understand I do not have the machine in my office, I don't work on the US project every day, and the equipment is shared with the clinical users .... thus the delay. I am planning to test this tomorrow.

#### 2013-05-15, 18:10:36 - Adam Rankin
Yup, no problem! I just wanted to make the request official. No rush.

#### 2013-05-17, 19:43:53 - Andrey Fedorov
Seems to save the modified parameters. Thank you Adam!

#### 2013-05-17, 21:07:21 - Adam Rankin
status: changed from "Test" to "Fixed"


## #736 Update Wiki with latest details


#### 2013-11-26, 20:16:53 - Adam Rankin
Wiki has undergone quite a few recent changes. Closing this ticket so that we address only specific shortages.

#### 2013-11-26, 20:16:53 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #737 BK Camera Link build broken
Enable build machine option

#### 2013-04-18, 23:27:07 - Adam Rankin
(In r:2712|plus:2712) test #737 build machine updated, rebuild in progress, bk camera link enabled for build, bk camera link code updated

re #730 fixing bk camera link

#### 2013-04-18, 23:27:07 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-18, 23:27:41 - Adam Rankin
(In r:2713|plus:2713) test #737 missing file

re #730 missing file

#### 2013-04-18, 23:28:12 - Adam Rankin
(In r:2714|plus:2714) test #737 missing file

re #730 missing file

#### 2013-04-19, 13:00:52 - Adam Rankin
status: changed from "Test" to "Fixed"


## #738 BK camera link write configuration is out of date


#### 2013-04-19, 17:23:02 - Adam Rankin
(In r:2716|plus:2716) fixed #738 bk camera link config now written 

#### 2013-04-19, 17:23:02 - Adam Rankin
status: changed from "New" to "Fixed"


## #739 Create volume reconstructor device
Remote control of PlusServer can be simpler and more consistent if all commands that do background processing are routed to devices (rather then keeping some commands permanently in the command queue, as it is done now).
Create a volume reconstructor device that can reconstruct a volume from tracked frames coming in through an input channel.

#### 2013-09-25, 22:55:31 - Andras Lasso
(In r:2968|plus:2968) re #739: Log warning if volume reconstruction cannot keep up with the acquisition of frames (warning is logged when lag>0.5 sec)

#### 2013-09-26, 03:24:12 - Andras Lasso
(In r:2969|plus:2969) re #739: Improved warning logging during volume reconstruction command (it now displays the length of the time period when frames were skipped)

#### 2013-12-03, 16:48:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-12-11, 17:35:30 - Andras Lasso
I'll fix this for 2.1.1 to along with the PlusServer command handling cleanup, as it's better to do all the API changes in one step.

#### 2013-12-11, 17:35:30 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-11, 17:35:30 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-12-11, 20:33:06 - Andras Lasso
(In r:3043|plus:3043) test #739: A new virtual device (VirtualVolumeReconstructor) is added for volume reconstruction. It works very similarly to capture devices. Each reconstructor device can be controlled remotely using PlusServer commands.

#### 2013-12-11, 20:33:06 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-12-12, 16:20:11 - Andras Lasso
(In r:3045|plus:3045) re #739: Simplified vtkPlusCommand, as there is no more need for keeping incomplete commands in the queue, but each command Execute() provides exactly one response. All lengthy operations are performed in the devices.

#### 2013-12-19, 17:04:44 - Andras Lasso
It works well, see PlusConfiguration_OpenIGTLinkCommandsTest.xml config file as an example

#### 2013-12-19, 17:04:44 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-12-30, 16:59:01 - Andras Lasso
(In r:3093|plus:3093) re #739: Add OutputVolDeviceName and OutputVolFilename attributes to VirtualVolumeReconstructor device configuration to allow specification of default outputs


## #740 Crash when using Sonix when video PortName attribute is missing.


#### 2013-04-22, 21:42:05 - Adam Rankin
(In r:2722|plus:2722) test #740 Check for null portname attribute before accessing it.

#### 2013-04-22, 21:42:05 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-04-22, 21:42:36 - Adam Rankin
assigned_to_id: changed from "rankin" to "samiras"

#### 2013-04-22, 21:55:13 - Andras Lasso
(In r:2723|plus:2723) re #740: Log more error when PortName attribute is not specified in SonixVideo device

#### 2013-04-22, 22:52:30 - Samira Sojoudi
status: changed from "Test" to "Fixed"

#### 2013-04-30, 18:51:27 - Andras Lasso
assigned_to_id: changed from "samiras" to "rankin"

#### 2013-08-25, 19:44:20 - Andras Lasso
(In r:2960|plus:2960) re #740: Fixed crash that occurred when a video source lookup by name failed in vtkSonixVideoSource


## #741 Correct dependencies for vtkCalibrationAlgo
vtkCalibrationAlgo does not have all dependencies when using vtkLineSegmentationAlgo

#### 2013-04-25, 18:32:16 - Adam Rankin
(In r:2724|plus:2724) fixed #741 dependencies properly set, necessary includes added

#### 2013-04-25, 18:32:16 - Adam Rankin
status: changed from "New" to "Fixed"


## #742 Create logo for the Plus project
Square shape, with optional PLUS label

#### 2013-04-25, 20:39:39 - Andras Lasso
(In r:2725|plus:2725) re #742: Added draft version of Plus logo

#### 2013-04-25, 20:51:30 - Adam Rankin
Makes me think of these!

http://www.newgrounds.com/movies/browse/tag/madness#page:1

#### 2013-04-26, 16:57:56 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2013-05-15, 19:59:44 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-30, 21:41:06 - Andras Lasso
(In r:3100|plus:3100) re #742: Added new Plus logo draft

#### 2013-12-30, 21:44:11 - Andras Lasso
(In r:3101|plus:3101) re #742: Added new Plus logo draft

#### 2013-12-30, 22:53:23 - Andras Lasso
(In r:3103|plus:3103) re #742: Added new Plus logo draft

#### 2013-12-30, 22:58:33 - Andras Lasso
assigned_to_id: changed from "ungi" to "lassoan"

#### 2013-12-30, 22:58:33 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-01-02, 22:53:18 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2014-08-23, 18:51:12 - Tamas Ungi
Re #742: Some more ideas.
Commit: r:3637|plus:3637

#### 2014-08-25, 22:44:39 - Csaba Pinter
I like the one that Tamas made based on Andras' idea. The message is there, but in a more polished way. The text is not necessary I think. A logo doesn't have to explain things, just identify.
I wanted to create some too, but haven't found the time yet.

#### 2015-01-12, 22:59:44 - Andras Lasso
re #742: Added final Plus logo
Commit: r:3914|plus:3914

#### 2016-07-13, 16:47:11 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #743 Enable single wall calibration
Prepare PlusLib and PlusApp in order to integrate the single wall calibration code.

#### 2013-04-25, 20:58:45 - Adam Rankin
(In r:2726|plus:2726) re #743 Adding read configuration structure to line segmentation algo to be in line with other plus mechanisms

#### 2013-04-25, 20:58:45 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-04-26, 02:18:17 - Adam Rankin
(In r:2727|plus:2727) re #743 add line parameter export in line segmentation algorithm

#### 2013-04-29, 16:24:59 - Adam Rankin
(In r:2728|plus:2728) re #743 rename variable to better describe contents

#### 2013-05-02, 17:21:47 - Adam Rankin
(In r:2734|plus:2734) re #743 Adding configuration file for single wall calibration

#### 2013-05-07, 15:44:25 - Adam Rankin
(In r:2748|plus:2748) re #743 storing direction as x and y component as well as convenience calculation of slope

#### 2013-05-07, 16:46:59 - Adam Rankin
(In r:2750|plus:2750) re #743 code comment fixes

#### 2013-05-07, 17:16:57 - Andras Lasso
(In r:2751|plus:2751) re #743: Added more details to comment describing line segmentation results

#### 2013-05-08, 18:38:29 - Adam Rankin
(In r:2753|plus:2753) re #743 Adding single wall calibration code and sample data

#### 2013-05-08, 18:52:48 - Adam Rankin
(In r:2754|plus:2754) re #743 incorrect linkage in cmake file


#### 2013-05-08, 19:16:14 - Adam Rankin
(In r:2755|plus:2755) re #743 Proper link to .raw file

#### 2013-05-09, 00:51:47 - Adam Rankin
(In r:2756|plus:2756) re #743 Warning's are expected in single wall test

#### 2013-05-09, 13:05:32 - Adam Rankin
(In r:2757|plus:2757) re #743 Adding single wall calibration toolbox to fCal, currently disabled.

Adding single wall calibration algo to PLUS from the sandbox. Adding test data and a simple test.

#### 2013-05-09, 13:28:29 - Andras Lasso
This is great. How do you plan to choose between the different calibration methods in fCal? Using an attribute in the fCal element in the config file? Or have a new 'fCal' exe with different set of toolboxes?

#### 2013-05-14, 19:03:30 - Adam Rankin
(In r:2775|plus:2775) re #743 script to modify timestamps of saved series for playback

#### 2013-05-14, 20:15:16 - Adam Rankin
(In r:2776|plus:2776) re #743 completed first pass single wall calibration algo in fCal. now able to grab images, use them for processing. minimal validation done.

Compressed the single wall test data and converted to .mha

Added single wall calibration config file that uses said saved data

#### 2013-05-14, 21:29:47 - Adam Rankin
(In r:2777|plus:2777) re #743 implementing IsTracker code for each device

updating config files to configure ToolReferenceFrame when required

#### 2013-05-15, 17:38:57 - Adam Rankin
(In r:2779|plus:2779) re #743 adding cmake option and include file to enable configure time options

used new option to enable/disable experimental UI in fCal
single wall UI now hidden by default, able to turn it on with an option

#### 2013-05-16, 17:17:39 - Adam Rankin
(In r:2782|plus:2782) re #743 minor changes to Toolboxes/SingleWallCalibrationToolbox.cxx

#### 2013-05-17, 12:23:20 - Adam Rankin
(In r:2784|plus:2784) re #743 adding test data to identify what is going wrong in the single wall calibration

#### 2013-05-17, 12:53:47 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2013-05-17, 12:53:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-05-17, 13:02:24 - Adam Rankin
(In r:2785|plus:2785) re #743 removing reference to non-existing function

#### 2013-05-17, 13:04:12 - Adam Rankin
(In r:2786|plus:2786) re #743 moving config file for test data to a better location

#### 2013-05-17, 13:13:18 - Adam Rankin
(In r:2787|plus:2787) re #743 adding print option to test to verify accuracy of rotation matrix of original 100 image test data

#### 2013-05-17, 15:40:08 - Adam Rankin
(In r:2788|plus:2788) re #743 removing of hardcoded coordinate frames in single wall algo

updating config files, algo to properly match reality. mmperpixel instead of pixelpermm

renaming config file to match naming convention

#### 2013-05-17, 16:41:26 - Adam Rankin
(In r:2789|plus:2789) re #743 Added image spacing to optional output of single wall test

#### 2013-05-17, 17:26:14 - Adam Rankin
(In r:2790|plus:2790) re #743 correctly counting acquired frames, require unique timestamps

#### 2013-05-17, 17:44:57 - Adam Rankin
(In r:2791|plus:2791) re #743 minor changes, description change

#### 2013-05-17, 20:25:50 - Adam Rankin
(In r:2792|plus:2792) re #743 perform live segmentation on the single wall capture so I can later add visualization of the segmentation

#### 2013-05-22, 16:23:02 - Adam Rankin
(In r:2798|plus:2798) re #743 enabling merging of tracked frame list without reporting error

#### 2013-05-23, 13:55:33 - Adam Rankin
(In r:2802|plus:2802) re #743 adding single frame capture to single wall calibration toolbox

#### 2013-05-23, 20:26:58 - Adam Rankin
(In r:2806|plus:2806) re #743 correcting order of destruction when disconnecting from a device set

#### 2013-05-27, 12:29:04 - Adam Rankin
(In r:2808|plus:2808) re #743 resolving build warning in RANSAC algorithm

#### 2013-05-27, 16:07:10 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-05-27, 16:29:10 - Adam Rankin
(In r:2809|plus:2809) re #743 further upgrades to single wall toolbox

#### 2013-05-28, 20:39:46 - Adam Rankin
(In r:2817|plus:2817) re #743 adding configuration to test fcal 3.0

#### 2013-05-29, 17:24:20 - Adam Rankin
(In r:2818|plus:2818) test #743 minor cleanup of memory in single wall algo

#### 2013-05-29, 17:24:20 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-05-29, 17:41:26 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-06-03, 20:34:27 - Adam Rankin
(In r:2837|plus:2837) re #743 using transform repository to retrieve transform value to enable coordinate system concatenation (aka probe->tracker ---> reference->tracker(inv) )

#### 2013-06-03, 20:34:27 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-06-03, 20:36:50 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-06-03, 20:37:32 - Adam Rankin
priority: changed from "High (2)" to "Normal (3)"

#### 2013-07-02, 14:41:30 - Adam Rankin
assigned_to_id: changed from null to "amirkhojaste"

#### 2013-07-02, 14:41:46 - Adam Rankin
status: changed from "Test" to "New"

#### 2013-07-03, 15:37:56 - Adam Rankin
(In r:2898|plus:2898) re #743 setting correct name for single wall configuration file

#### 2013-11-26, 17:05:07 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-11-26, 17:17:03 - Andras Lasso
@rankin: If the project failed (need to confirm with Amir) then move all the SingleWall algorithms and GUI elements to a branch and remove it from the trunk.

#### 2013-11-27, 14:35:46 - Adam Rankin
(In r:3000|plus:3000) re #743 removing single wall calibration from trunk

it will remain in the history, so we can recover it at any point

#### 2013-11-27, 14:36:07 - Adam Rankin
Closing as invalid as the project is considered closed and incomplete.

#### 2013-11-27, 14:36:07 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2013-11-27, 17:14:39 - Adam Rankin
(In r:3001|plus:3001) re #743

missing code fix to prevent fcal crash


## #744 Fix Ultrasonix RF data interpretation
We receive udtRF data from Ultrasonix scanners (Exam software 5.7) with a dimension 2080x256 when using an L14-5 transducer with default imaging parameters. There is a slight shift in every second line.

In Plus the assumption was that the shift is due to IQ encoding, and therefore two lines were combined into one during brightness conversion step. However, this seems not to be the case, but each line should contain a simple real-value signal (http://research.ultrasonix.com/viewtopic.php?f=6&t=967&p=3665#p3665).

Once this information is confirmed, change the SonixVideo data source to interpret the data as US_IMG_RF_REAL instead of US_IMG_RF_I_LINE_Q_LINE (it should be just a matter of changing this enum).

#### 2013-04-26, 20:02:21 - Andras Lasso
image:a0Hr1yRQWr4Oo4acwqjQYw
Ultrasonix RF data with 256 rows: every second line is shifted in 

#### 2013-04-26, 20:02:21 - Andras Lasso
Attachment added: "Rf256wide.png"

#### 2013-04-26, 20:04:08 - Andras Lasso
image:b0m6cwRQWr4OkdacwqjQYw
Average signal of 3 odd and 3 even neighbour rows (there is a visible shift)

#### 2013-04-26, 20:04:08 - Andras Lasso
Attachment added: "Rf256-odd-even-rows-original.png"

#### 2013-04-26, 20:05:39 - Andras Lasso
image:cQ4d3ORQWr4OoEacwqjQWU
Average signal of 3 odd and 3 even neighbour rows, the even rows are shifted by two samples (no misalignment anymore, so the original data had a shift of 2 samples)

#### 2013-04-26, 20:05:39 - Andras Lasso
Attachment added: "Rf256-odd-even-rows-shifted-by-2.png"

#### 2013-05-01, 19:50:22 - Andras Lasso
Further comment from an Ultrasonix research scientist seem to confirm that this is a software bug in the 5.7 Exam software and it is fixed in 6.x:
'Since you have a SonixTouch, why don't you use 6.x instead of 5.x? This shouldn't be an issue in 6.x.
I think the effect has something to do with the time delay calculations that has been modified and improved greatly in the 6.x.'


#### 2013-05-01, 19:57:29 - Adam Rankin
Have they sorted out the ITK/VTK/etc... dependencies?

#### 2013-05-01, 20:20:04 - Andras Lasso
They plan to improve the situation, we can expect something later this year.

#### 2013-05-01, 21:31:15 - Thomas Kuiran Chen
The root cause of the VTK compatibility is that in 6.x software, we use a third party library (BCAD) which depends on a set of old VTK dlls (version 4) and is not compatible with the current VTK dlls.

This dependency however is only in Porta, not in Ulterius.  So if the part of Plus relying on Porta can be disabled (not sure if it is doable), then Plus can be built with the latest 6.0.4 software.  

But then, there is still the issue of QT dependency (the current 6.0.4 depends on QT 4.8.0), so if Plus uses any new features in QT 4.8.1 or later, it will not be compatible with the 6.0.4 software.

In the next 6.0.5 software (scheduled to be release some time this year), both issues should be resolved: we will remove BCAD dependency and rename QT dll to a different name so as not to conflict with user's own choice of QT version.



#### 2013-05-02, 13:02:47 - Adam Rankin
Currently we work with 4.7.4. I'd be interested in upgrading to a more modern release though.

#### 2013-05-02, 13:17:19 - Andras Lasso
We use Slicer's official QT version. Even if that matched the Ultrasonix SDK QT version, there could be still unresolvable conflict due to compiler version or build options mismatch.

#### 2013-05-02, 16:25:58 - Thomas Kuiran Chen
Perhaps it's better to wait for the 6.0.5 release where both VTK and QT issues will be addressed.  For compiler, is it feasible for Plus to upgrade to Visual Studio 2010?  We are using CMake in all development.

#### 2013-05-02, 16:35:30 - Adam Rankin
Yes, PLUS supports a 2010 build.

#### 2013-05-02, 16:37:29 - Andras Lasso
It's enough if standard QT, VTK, ITK DLLs are removed from the Ultrasonix SDK.
Ultrasonix SDK only uses simple C-style functions and POD structures on its interface (at least in 5.7 it does), so the SDK DLLs can be used from programs built with any compiler version.

#### 2013-05-02, 17:02:23 - Thomas Kuiran Chen
Yes, 6.0.5 will have a even cleaner interface.  There are only a few exceptions (some Porta interface and vector support) but they will be cleaned out eventually.  After 6.0.5, we will be removing MFC dependency and migrating to the new C++11 standard and Boost libraries (e.g., signal/slots, threads, i/o, etc.). Many more new features in Boost will become part of the next C++ standard and only be supported in Visual Studio 2010 (partially) and 2012 (fully).  So perhaps it is a good idea to build Plus with VS 2010 (as a standard) or newer.


#### 2013-05-04, 15:37:15 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-04, 15:37:30 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2013-12-09, 18:40:09 - Andras Lasso
The RF data encoding may change in the new Ulterius interface, so don't change anything until it's clear how that will work.

#### 2013-12-09, 18:40:09 - Andras Lasso
milestone_id: changed from "Release Plus-2.0.1" to "Release Plus-Future"

#### 2014-06-05, 01:40:21 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-03, 20:56:40 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"


## #745 Create milestone


#### 2013-04-29, 19:48:21 - Adam Rankin
(In r:2729|plus:2729) fixed #745 Created new release (https://subversion.assembla.com/svn/plus/branches/Plus-2.0)

#### 2013-04-29, 19:48:21 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-04-30, 03:19:28 - Andras Lasso
@rankin: It would be great if you could also update the Plus overview presentation with the new features (trunk/doc/overview/PlusOverview.pptx)

#### 2013-04-30, 15:17:56 - Adam Rankin
(In r:2730|plus:2730) re #745 Minor updates to presentation to represent new architecture

#### 2013-04-30, 15:18:17 - Adam Rankin
Not much changed in the presentation really... I made some minor changes to the architecture diagram.

#### 2013-04-30, 15:36:53 - Andras Lasso
Could you add 1-2 slides explaining the multi-channel architecture? What is a channel, stream, etc. and example for a moderately complex multi-channel setup (rf/b mode simultaneous acq with recorders; or multiple depth switching, ...)

#### 2013-05-09, 18:08:42 - Adam Rankin
(In r:2759|plus:2759) re #745 Fixing external dependency versions for 2.0 branch

#### 2013-05-09, 18:19:27 - Adam Rankin
(In r:2760|plus:2760) re #745 merging trunk:2752 into 2.0 branch to start work on 2.0.1

#### 2013-05-09, 18:34:17 - Adam Rankin
(In r:2761|plus:2761) re #745 build fix, incorrect reference to line parameter struct

#### 2013-05-09, 18:53:54 - Adam Rankin
(In r:2762|plus:2762) re #745 learned how to properly do a merge using tortoiseSVN... oops


## #746 Provide an example for computing  TransducerReferenceToProbe transform
We could provide a Matlab (and FreeMat-compatible) code snippet to:
* compute TransducerReferencePoint_Image point coordinates (a fixed point in the _Probe_ coordinate system that has the same coordinate values in the _Image_ coordinate system, regardless of the image depth) from two ImageToProbe calibration matrices obtained at different imaging depths. And a sample  
* compute TransducerReferenceToProbe transformation matrix from a ImageToProbe transformation matrix and TransducerReferencePoint_Image point coordinates (ImageToTransducerReference coordinate system: origin is TransducerReferencePoint, axis directions are the same as of the _Image_ coordinate system, unit is the same as the _Image_ coordinate system)
* compute rotation, scaling, and translation from TransducerReferenceToProbe transformation matrix

See the motivation/ full discussion here:
https://www.assembla.com/spaces/plus/messages/2917713


#### 2013-04-30, 18:33:51 - Andras Lasso
description: changed from "If there is a point in the ..." to "We could provide a Matlab (..."

#### 2013-04-30, 18:36:25 - Andras Lasso
description: changed from "We could provide a Matlab (..." to "We could provide a Matlab (..."

#### 2013-04-30, 19:13:44 - Thomas Kuiran Chen
From the feedback we gathered in OEM customers, they simply want a breakdown of the 'Transform Image to Probe' into rotation, scaling and translation (in addition to the original Image to Probe matrix), in the XML file.  Something like:

Transform From='Image' To='Probe' - Rotation
Transform From='Image' To='Probe' - Scaling
Transform From='Image' To='Probe' - Translation

Thanks,

Thomas

#### 2013-07-29, 13:32:50 - Andras Lasso
(In r:2953|plus:2953) re #746: Added description about how to compute Ultrasound to Image transform (Ultrasound coordinate system is almost the same as the Image transform, but the origin is in the middle of the transducer and may have different axes order and directions)

#### 2013-07-29, 13:32:50 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-07-29, 13:34:20 - Andras Lasso
ImageToProbeTransform can be decomposed to rotation, scaling, and translation as

ImageToProbeTransform = ImageToProbeRotation * ImageToProbeScaling * ImageToProbeTranslation

where the components can be computed as follows:

ImageToProbeTranslation = [ eye(3), ImageToProbeTransform(1:3,4); 0 0 0 1];
ImageToProbeWithoutTranslation=ImageToProbeTranslation\\ImageToProbeTransform;
ImageToProbeScaling = diag([norm(ImageToProbeWithoutTranslation(:,1)), norm(ImageToProbeWithoutTranslation(:,2)), norm(ImageToProbeWithoutTranslation(:,3)), 1]);
ImageToProbeRotation = ImageToProbeWithoutTranslation*inv(ImageToProbeScaling)

It's probably not really useful to decompose the ImageToProbe transformation like this, but it could be more useful to do this for the UltrasoundToProbe transformation. See https://subversion.assembla.com/svn/plus/trunk/doc/tutorials/UltrasoundToProbeTransformComputation.pptx for computing the UltrasoundToProbe transformation.

#### 2013-07-29, 13:34:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #747 Make the installed Plus package easier to use
1. Plus installed with NSIS installer does not have write permissions to its own directory
Windows 7 64 bit user in Administrators group

2. Add a shortcut for starting PlusServer from the Start menu

#### 2013-05-04, 12:27:35 - Andras Lasso
Where do you install it? In ProgramFiles? It's normal that you cannot modify files there, but I agree that it should be at least clearly documented.

You can change the PlusConfig.xml to point to a writeable output directory. Or, the PlusConfig.xml file could be overridden from the current working directory (and that could point to a user-specific output directory). Maybe the best would be to simply set the default install location to somewhere in the user's personal folder.

I don't think it's a high-priority issue (compared to other high-priority tasks).

#### 2013-05-04, 13:22:44 - Adam Rankin
priority: changed from "Highest (1)" to "Normal (3)"

#### 2013-11-25, 14:54:29 - Adam Rankin
Upon reflecting of the issue, it is abnormal that the default installation does not work out of the box. Most people that I have supported have all come up with their own workarounds to avoid this issue. It is not a very big deal, but it affects a large portion of users.

Perhaps the default install directory should be relative to the users home directory?

#### 2013-11-25, 16:43:22 - Andras Lasso
I agree, the package should be installed in somewhere in the user home. In the long term (if we don't expect any significant config file changes anymore) then we may consider installing Plus executables under program files and config files in the user home.

#### 2013-12-03, 19:28:19 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-12, 19:32:22 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-12, 21:49:22 - Andras Lasso
(In r:3047|plus:3047) re #747: Changed default PlusApp install path to user directory (e.g., C:\\Users\\lasso)

#### 2013-12-13, 01:29:13 - Andras Lasso
(In r:3048|plus:3048) re #747: Added skeleton for a small GUI app to select a config file and start PlusServer. This app will appear in the start menu after PlusApp is installed.

#### 2013-12-13, 04:21:26 - Adam Rankin
Nice!

#### 2013-12-13, 04:39:50 - Andras Lasso
(In r:3049|plus:3049) re #747: Added some more logging to device connection. Changed logging to always record line number and filename into log files.

#### 2013-12-13, 04:41:13 - Andras Lasso
(In r:3050|plus:3050) re #747: Moved all OpenIGTLink server setup steps (creating and setting up data collector and transform repository) into OpenIGTLinkServer class

#### 2013-12-13, 05:22:21 - Andras Lasso
(In r:3051|plus:3051) re #747: Made device set config file descriptions more consistent

#### 2013-12-13, 05:23:04 - Andras Lasso
(In r:3052|plus:3052) re #747: Cleaned up PlusServerLauncher and added shortcut to start menu

#### 2013-12-13, 05:24:11 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-13, 13:53:04 - Andras Lasso
(In r:3053|plus:3053) re #747: Added missing config file for PlusServer testing

#### 2013-12-13, 14:25:16 - Andras Lasso
(In r:3054|plus:3054) re #747: Updated config file name for PlusServer testing

#### 2013-12-13, 18:22:34 - Andras Lasso
(In r:3056|plus:3056) re #747: Improved logging of PlusServer startup

#### 2013-12-13, 18:22:55 - Andras Lasso
(In r:3057|plus:3057) re #747: Added logging of Plus version and list of supported devices

#### 2013-12-13, 18:24:21 - Andras Lasso
summary: changed from "Plus installed with NSIS installer does not have write permissions to its own directory" to "Make the installed Plus package easier to use"

#### 2013-12-13, 18:24:21 - Andras Lasso
description: changed from "Windows 7 64 bit user in Ad..." to "1. Plus installed with NSIS..."

#### 2013-12-13, 21:28:23 - Andras Lasso
(In r:3058|plus:3058) re #747: PlusServerLauncher: added command-line launching options, simplified code, added icon

#### 2013-12-17, 17:31:09 - Adam Rankin
(In r:3065|plus:3065) re #747 removing qt3 dependency

#### 2013-12-17, 22:49:12 - Andras Lasso
(In r:3068|plus:3068) re #747: Added application icons to fCal and PlusServerLauncher

#### 2013-12-17, 22:54:22 - Andras Lasso
(In r:3069|plus:3069) re #747: Updated Plus website link in License.txt

#### 2013-12-19, 15:53:17 - Andras Lasso
(In r:3078|plus:3078) re #747: Added a simple config for NDI Polaris tracking data collection and broadcasting using PlusServer

#### 2013-12-19, 16:57:25 - Andras Lasso
(In r:3079|plus:3079) re #747: Moved PlusServer to be the first app in the start menu. Removed SegmentationParameterDialogTest shortcut, as the functionality is available in fCal anyway.

#### 2013-12-21, 00:14:55 - Andras Lasso
(In r:3087|plus:3087) re #747: Renamed device set config files and udated their descriptions

#### 2013-12-21, 00:15:06 - Andras Lasso
(In r:3088|plus:3088) re #747: Updated PlusApp tests according to change device set config files

#### 2013-12-26, 23:07:53 - Andras Lasso
(In r:3092|plus:3092) re #747: Added a virtual volume reconstructor device in the PlusDeviceSet_Server_Sim_NwirePhantom.xml config file (to allow demonstration of volume reconstruction using PlusServer)

#### 2013-12-30, 16:59:54 - Andras Lasso
(In r:3094|plus:3094) re #747: Create a new PlusServer instance at each connect (to make sure nothing is carried over from previous connections)

#### 2013-12-30, 17:38:21 - Andras Lasso
(In r:3095|plus:3095) re #747: Renamed STL model files to have more consistent names

#### 2013-12-30, 17:43:40 - Andras Lasso
(In r:3096|plus:3096) re #747: Renamed STL model files to have more consistent names

#### 2013-12-30, 17:46:13 - Andras Lasso
(In r:3097|plus:3097) re #747: Renamed STL model files to have more consistent names

#### 2013-12-30, 20:28:09 - Andras Lasso
(In r:3098|plus:3098) re #747: Added more sample configuration files

#### 2013-12-30, 20:28:16 - Andras Lasso
(In r:3099|plus:3099) re #747: Added more sample configuration files

#### 2013-12-30, 22:50:04 - Andras Lasso
(In r:3102|plus:3102) re #747: Skip the UAC dialog to allow PlusApp package installation with a standard user account

#### 2013-12-30, 22:58:02 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-01-02, 20:32:47 - Andras Lasso
(In r:3107|plus:3107) re #747: Made sample configuration files more consistent (in formatting and commonly used parameters). Also updated XML formatting code to conform with the current formatting.

#### 2014-01-02, 20:35:52 - Andras Lasso
(In r:3109|plus:3109) re #747: Removed false alarm warning of missing STL file for the Volume model in fCal. The Volume model is meant to be generated run-time by volume reconstruction.

#### 2014-01-02, 20:37:01 - Andras Lasso
(In r:3110|plus:3110) re #747: Removed false alarm warning of missing a valid ROI definition. Now ROI parameters are required only if the ROI is shown.

#### 2014-01-02, 22:08:20 - Andras Lasso
(In r:3114|plus:3114) re #747: Change start menu group name to 'Plus Applications X.Y.Z.NNNN'

#### 2014-01-02, 22:22:41 - Andras Lasso
(In r:3115|plus:3115) re #747: Restore console after exiting PlusServerLauncher

#### 2014-01-10, 16:44:46 - Andras Lasso
(In r:3124|plus:3124) re #747: Added Plus download URL to the Slicer scene file and uploaded to the Slicer data store as well (http://slicer.kitware.com/midas3/slicerdatastore/view?itemId=126440)

#### 2014-01-11, 00:03:02 - Andras Lasso
(In r:3125|plus:3125) re #747: Added more detailed error logging when computation of image extent from frames fails

#### 2014-02-11, 21:35:58 - Andras Lasso
re #747: Prevent adding config files to the package that use devices that are not supported in the current configuration
Commit: r:3155|plus:3155

#### 2014-02-11, 21:36:18 - Andras Lasso
re #747: Prevent adding config files to the package that use devices that are not supported in the current configuration
Commit: r:3156|plus:3156

#### 2014-02-18, 20:16:59 - Andras Lasso
re #747: Added capture device to PlusServer sample config files to allow easy recording of data using PlusRemote in Slicer
Commit: r:3163|plus:3163


## #748 documentation


#### 2013-05-01, 20:23:42 - Adam Rankin
(In r:2731|plus:2731) re #748 overview of plus 2.0 architecture

#### 2013-05-01, 20:23:42 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-05-01, 20:25:51 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-05-01, 20:26:47 - Andras Lasso
Continuous documentation improvement ticke exists already, see #712. Probably it's enough to keep only one.


## #749 Fix volume reconstruction remote command
PlusServerRemoteControl application does not pass correctly the input/output file name to the PlusServer.

Another problem is that if vtkMetaImageSequenceIO is used without calling SetFileName, the ElementDataFile attribute in the created mha/mhd file is not filled correctly.


#### 2013-05-03, 20:23:34 - Andras Lasso
(In r:2746|plus:2746) fixed #749: Fixed the passing of input and output file names and the setting of the ElementDataFile

#### 2013-05-03, 20:23:34 - Andras Lasso
status: changed from "New" to "Fixed"


## #750 PlusServer unpredictable behaviour
I'm using the attached config file with SonixTouch + Ascension. I have the same workflow, but PlusServer works only a few times out of lots of trials. There are two kinds of errors I experience:
(All cases are run with the same command, same config file, attached Scoliosis_L14_v2746.xml)

1.
PlusServer starts, but hangs after 4 lines of output. PlusServer stays in this state (does not accept connections yet) for over 5 minutes, and can be stopped by lots of Ctrl+C keystrokes. The client (Slicer) is always in WAIT state. The SONIX application signals Connections.
See log file: PlusLog1.txt.

2.
PlusServer starts and runs till the 'Press Q or Ctrl-C to quit' message. But the connection with the client doesn't work. I tried connecting multiple times from Slicer. Slicer's IGTLConnection status also goes 'ON', but no data is transferred from PlusServer to Slicer. When trying to reconnect from Slicer, the status stays WAIT.
In these cases it takes a long time for Slicer to close,
Attached log file: PlusLog2.txt

3.
Correct behavior. Slicer can connect to PlusServer, and data is transferred continuously. Unfortunately this only happens once out of about 10 trials.
I attache a log file for this case too (PlusLog3.txt) just as an evidence that there is this kind of case too.

I couldn't detect any change on any computer (ultrasound or Slicer PC) between the different behaviors. After enough trials under the same circumstances all cases can be reproduced. In the dominant majority of the cases the first behavior happens, so PlusServer doesn't even start properly.



#### 2013-05-04, 03:19:48 - Tamas Ungi
file:b6aQZETgKr4O3dacwqjQYw


#### 2013-05-04, 03:19:48 - Tamas Ungi
Attachment added: "Scoliosis_L14_v2746.xml"

#### 2013-05-04, 03:20:27 - Tamas Ungi
file:crucW2TgKr4R5facwqjQWU


#### 2013-05-04, 03:20:27 - Tamas Ungi
Attachment added: "PlusLog1.txt"

#### 2013-05-04, 03:20:34 - Tamas Ungi
file:cvvbrATgKr4PBcacwqjQWU


#### 2013-05-04, 03:20:34 - Tamas Ungi
Attachment added: "PlusLog2.txt"

#### 2013-05-04, 03:20:38 - Tamas Ungi
file:cx5hR8TgKr4P7dacwqjQXA


#### 2013-05-04, 03:20:38 - Tamas Ungi
Attachment added: "PlusLog3.txt"

#### 2013-05-04, 03:21:41 - Tamas Ungi
All log files were taken with verbose=5, despite the shortness of the first two.

#### 2013-05-04, 11:57:02 - Andras Lasso
It seems there is a problem with setting the log level. In case of the short logs the messages were not logged at trace level. Of course this doesn't explain the reported errors, but still has to be investigated.

#### 2013-05-04, 11:58:37 - Andras Lasso
@ungi, please test with setting the acquisition rates to lower values. Can you reproduce the problem with simulated sources?

#### 2013-05-04, 12:18:37 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2013-05-04, 12:18:37 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-05-04, 12:18:37 - Andras Lasso
component_id: changed from "None" to "PlusLib"

#### 2013-05-04, 12:18:37 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.1"

#### 2013-05-04, 12:18:37 - Andras Lasso
priority: changed from "Normal (3)" to "Highest (1)"

#### 2013-05-04, 15:20:55 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.0.1"

#### 2013-05-06, 20:20:47 - Tamas Ungi
I couldn't reproduce the problem in simulation mode (using the PlusConfiguration_OpenIGTLinkTest.xml config available in PlusLib).
I'm not sure when will I get to the lab to try it with the Sonix Touch, and the Sonix Touch will be taken for a few days from Thursday. It would be good if somebody could debug it before Thursday.

#### 2013-05-06, 20:28:05 - Andras Lasso
@ungi: Could you try if you can reproduce the problem with a simulated video and tracker device and mixer?
@rankin: Could you test this on the SonixTouch?

#### 2013-05-06, 21:52:52 - Tamas Ungi
I was unable to reproduce the problem in simulation mode with the following device set:


    <Device
      Id='TrackerDevice'
      Type='SavedDataSource'
      SequenceMetafile='fCal_Test_Calibration_3NWires.mha'
      UseData='TRANSFORM'
      UseOriginalTimestamps='TRUE'
      RepeatEnabled='TRUE' >
      <DataSources>
        <DataSource Type='Tool' Id='Probe' BufferSize='500' PortName='0' AveragedItemsForFiltering='20' />
        <DataSource Type='Tool' Id='Reference' BufferSize='500' PortName='1' AveragedItemsForFiltering='20' />
      </DataSources>

      <OutputChannels>
        <OutputChannel Id='TrackerStream' >
          <DataSource Id='Probe'/>
          <DataSource Id='Reference'/>
        </OutputChannel>
      </OutputChannels>
    </Device>
    
    <Device
      Id='VideoDevice'
      Type='SavedDataSource'
      SequenceMetafile='fCal_Test_Calibration_3NWires.mha'
      UseData='IMAGE'
      UseOriginalTimestamps='TRUE'
      RepeatEnabled='TRUE' >
      <DataSources>
        <DataSource Type='Video' Id='Video' BufferSize='100' />
      </DataSources>

      <OutputChannels>
        <OutputChannel Id='VideoStream' VideoDataSourceId='Video' />
      </OutputChannels>
    </Device>
    
    <Device 
      Id='TrackedVideoDevice' 
      Type='VirtualMixer' >
      <InputChannels>
        <InputChannel Id='TrackerStream' />
        <InputChannel Id='VideoStream' />
      </InputChannels>
      
      <OutputChannels>
        <OutputChannel Id='TrackedVideoStream'/>
      </OutputChannels>
    </Device>
 

#### 2013-05-10, 18:53:54 - Adam Rankin
(In r:2764|plus:2764) test #750 when querying the sonix device for available data types, assumed the response was based on the selected mode sent to the device. the device did not respond as predicted.

solution is to only configure the user requested data types (bmode, rfmode, or both)

#### 2013-05-10, 18:53:54 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-05-10, 18:56:07 - Adam Rankin
(In r:2765|plus:2765) re #750 merging bug fix into 2.0 branch

#### 2013-05-10, 18:57:34 - Adam Rankin
assigned_to_id: changed from "rankin" to "ungi"

#### 2013-05-10, 18:57:50 - Adam Rankin
Hi Tamas, could you report back after a few runs to see if it's behaving correctly?

#### 2013-05-13, 03:00:42 - Tamas Ungi
I've tested a few times and it worked as expected every time. Thank you.

#### 2013-05-13, 03:00:42 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #751 Image acquisition with Porta SDK fails
By nic.heron on 2013-04-18 20:47
now that I have PlusServer working with the Exam software, I would like to run it with the Porta SDK: I have a custom ultrasound application that uses the Porta SDK to produce ultrasound images and would like to know if I can use fCal with those images.
When I run fCal with a config file that has SonixPortaVideo it crashes...
I have attached the config file. The only difference between that file and the file that works with Exam is the ImageAcquisition type.
Thank you
n

url:https://www.assembla.com/spaces/plus/documents/cUsUsMQiOr4OoXacwqEsg8/download/cUsUsMQiOr4OoXacwqEsg8|PlusConfiguration_SonixTablet-3_Ascension3DG_L14_fCal2.0.xml2.52 KB


#### 2013-12-03, 16:49:04 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-05-23, 01:11:08 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-05-23, 01:11:14 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-05-23, 01:11:23 - Andras Lasso
assigned_to_id: changed from "lassoan" to "mbrudfors"

#### 2014-05-23, 15:24:27 - Mikael Brudfors
fixed #751: Added a config file for connecting through Ultrasonix Porta.
Commit: r:3321|plus:3321

#### 2014-05-23, 15:24:27 - Mikael Brudfors
status: changed from "New" to "Fixed"

#### 2014-05-23, 15:26:34 - Mikael Brudfors
fixed #751: Fixed Porta image acquisition failure.
Commit: r:3322|plus:3322

#### 2014-05-23, 15:35:56 - Andras Lasso
re #751: Removed unused attributes from the Porta configuration file. Updated description.
Commit: r:3323|plus:3323

#### 2014-05-23, 15:38:08 - Andras Lasso
@mbrudfors: Thanks for the commit. I've made some minor adjustments in the sample config file (see plus:3323).

Wasn't it necessary to change the hardcoded preset path?
(std::string preset = 'D:/t/devel/PLTools/Ultrasonix/sdk-5.6.4/Porta/dat/presets/imaging/GEN-General (4DC7-3 40mm).xml';)

#### 2014-05-23, 18:43:50 - Mikael Brudfors
No, that line of code was not used.

 if ( !this->Porta.findMasterPreset( name, MAX_NAME_LENGTH, code ) ) 

find the name when the paths are set correctly in the config file.

#### 2014-05-23, 18:58:26 - Andras Lasso
OK, thanks, then I remove it.

#### 2014-05-23, 18:58:31 - Andras Lasso
re #751: Removed unused code
Commit: r:3325|plus:3325

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #752 Volume reconstructor provides rounded output in weighted average compounding mode
If volume reconstruction is performed with floating-point input, then the output is floating-point as well. The current code provides floating-point type, but the values are rounded to integer if the compounding mode is weighted average. See https://www.assembla.com/spaces/plus/messages/2930353.

#### 2013-05-06, 01:36:29 - Andras Lasso
(In r:2747|plus:2747) fixed #752: Volume reconstruction output values are not rounded if working with floating-point values

#### 2013-05-06, 01:36:29 - Andras Lasso
status: changed from "New" to "Fixed"


## #753 vtkBkProFocusOemVideoSource crashes on disconnect
When acquiring images using vtkBkProFocusOemVideoSource video source the acquisition works fine, but fCal crashes when clicking on Disconnect.

#### 2013-12-03, 16:49:12 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #754 Image acquisition through the BK Ultrasound OEM interface is slow
Currently the vtkBkProFocusOemVideoSource uses the capture_image query to retrieve images from BK ultrasound scanners one-by-one. This method is slow (about 3.5fps is the achievable frame rate), makes the BK scanner slow to respond, and the retrieved image contains all annotations burnt into the pixels, which may not always be desirable.

Also, it seems to impact the responsiveness (robustness?) of the BK scanner. Setting the acquisition frame rate in Plus to 1-2fps (or just acquire images on request) may help to avoid issues.

The solution to these is to use the grab on/off query instead.

#### 2013-05-07, 15:53:50 - Andras Lasso
description: changed from "Currently the vtkBkProFocus..." to "Currently the vtkBkProFocus..."

#### 2013-05-07, 15:59:46 - Andras Lasso
(In r:2749|plus:2749) re #754: Decreased the AcquisitionRate value in the sample BK OEM video source config file

#### 2013-05-07, 15:59:46 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-05-15, 19:59:49 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-12-03, 16:49:19 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2014-06-04, 22:00:00 - Andras Lasso
We cannot do much without having access to a BK system that has license to use the GRAB ON/OFF API.

#### 2014-06-04, 22:00:04 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2016-06-24, 21:07:15 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2016-06-24, 21:08:49 - Andras Lasso
test #754: Added GRAB_FRAME command support to vtkPlusBkProFocusOemVideoSource for faster image transfer
Commit: r:4678|plus:4678

#### 2016-06-24, 21:08:49 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-06-30, 14:51:03 - Adam Rankin
Any report on this ticket? A number of people will be buying BK machines in the future so this is a great fix!

#### 2016-06-30, 14:53:22 - Adam Rankin
priority: changed from "Low (4)" to "Normal (3)"

#### 2016-07-05, 17:40:40 - Adam Rankin
status: changed from "Test" to "Fixed"


## #755 Memory leak disconnect/connect cycle fCal
See subject

#### 2013-05-07, 15:56:07 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-05-08, 16:17:06 - Adam Rankin
(In r:2752|plus:2752) fixed #755 resolving memory leak when a device is destroyed, removing reference counting when passing in local references

adjusting virtual devices to clear their settings before being destroyed to prevent double destruction (as they don't own their innards).

#### 2013-05-08, 16:17:06 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #756 Refactor access rights in vtkPlusDevice
Disable access to data sources, force all devices to request data from previous device in the pipeline, extract/copy any necessary data and place in new output channel.

This will increase memory requirements but provide a safer, cleaner, less bug-prone implementation.

#### 2013-05-07, 22:03:44 - Andras Lasso
Is it going to have a performance impact as well (extra copying)? Would be useful to do some performance testing to make sure the overhead of any extra copying and synchronization is negligible. With duplication of data it may be even possible that the performance will increase (as there may be less overhead in synchronization), but it's difficult to predict without actually trying it. 

#### 2013-06-04, 02:04:27 - Adam Rankin
priority: changed from "Highest (1)" to "High (2)"

#### 2013-10-21, 18:50:26 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-10-21, 18:50:31 - Adam Rankin
priority: changed from "High (2)" to "Normal (3)"


## #757 Reconsider architecture of data collector, visualizer and responsibility for writing config files
As it stands, visualizationcontroller is the entry point for writing configuration files, this doesn't make sense as the visualizationcontroller is a client of the pluslib. If a different client is used, then such an action wouldn't produce the same results.

#### 2013-12-03, 16:49:28 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #758 Enable branch selection in CMakeLists for PLUS


#### 2013-05-09, 17:55:06 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-05-09, 18:07:25 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Release Plus-Future"

#### 2013-05-09, 18:07:27 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-05-09, 18:07:31 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2013-05-09, 18:08:05 - Adam Rankin
Generate External_PlusApp.cmake and External_PlusLib.cmake SVN entries based on PlusBuild SVN root. Possible?

#### 2013-05-09, 18:09:06 - Andras Lasso
The steps currently have to performed manually as described in the _Creating a new stable branch_ section of Creating_a_new_release page. Some of the steps could be automated.

#### 2016-07-13, 16:47:43 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.4.0"

#### 2016-08-15, 19:18:45 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-23, 17:16:48 - Adam Rankin
test #758 Automatically parsing SVN branch from PlusBuild URL, then passing that branch to all related PLUS projects during external project configuration
Commit: r:4825|plus:4825

#### 2016-08-23, 17:16:48 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-23, 17:16:48 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-08-23, 17:19:40 - Adam Rankin
re #758 creating test branch
Commit: r:4826|plus:4826

#### 2016-08-23, 17:58:17 - Adam Rankin
Confirmed working with branch.

#### 2016-08-23, 17:58:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #759 US simulator crashes if ImagingDepthMm value is too low
US simulator crashes if ImagingDepthMm value is too low, while it works correctly for larger depths.

#### 2013-05-11, 18:45:02 - Andras Lasso
(In r:2766|plus:2766) fixed #759: Fixed US simulator crash (if the first model/image plane intersection was outside the image then memory was overwritten over the allocated scanline length)

#### 2013-05-11, 18:45:02 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-05-11, 18:50:23 - Andras Lasso
(In r:2767|plus:2767) re #759: Merged fix from Plus-2.0 to the trunk

#### 2013-05-11, 19:01:02 - Andras Lasso
(In r:2768|plus:2768) re #759: Reverted the change in the simulator: keep reading the model file from the image directory

#### 2013-05-11, 19:01:29 - Andras Lasso
(In r:2769|plus:2769) re #759: Reverted the change in the simulator: keep reading the model file from the image directory

#### 2013-05-13, 01:24:27 - Andras Lasso
(In r:2770|plus:2770) re #759: Fixed compilation errors in simulator when CONSTANT_INTENSITY is disabled and ADD_NOISE is enabled. Updated the Perlin noise parameters to make the generated image more grainy.


## #760 Plus build fails on linux due to libitkdouble-conversion lib missing
Scanning dependencies of target vtkPlusCommon
[  1%] Building CXX object src/PlusCommon/CMakeFiles/vtkPlusCommon.dir/PlusCommon.cxx.o
 make[2]: *** No rule to make target `/.../itk-bin/lib/libitkdouble-conversion-4.4.so.1', needed by `/.../bin/libvtkPlusCommon.so'.  Stop.
 [ 12%] Built target vtkPlusCommon

See http://crunch.cs.queensu.ca/CDash/viewBuildError.php?buildid=17177

Maybe the same issue as this http://www.na-mic.org/Bug/view.php?id=3041 and just needs an ITK update.

Fix it in the Plus-2.0 branch as well, if the issue is there, too.

#### 2013-05-13, 20:11:13 - Adam Rankin
(In r:2771|plus:2771) re #760 enabling linux build, commit 1/2



#### 2013-05-13, 20:11:35 - Adam Rankin
(In r:2772|plus:2772) fixed #760 enabling linux build, commit 2/2



#### 2013-05-13, 20:11:35 - Adam Rankin
status: changed from "New" to "Fixed"


## #761 TemporalCalibrationToolbox - Array out of bound
In file TemporalCalibrationToolbox.cxx, line 212:
      m_LineSegmentationClipRectangleOrigin[1] = clipOrigin[2];
there should be clipOrigin[1], as this is two-elements array. This causes temporal calibration error, if custom clip rectangle is provided.

#### 2013-05-20, 20:55:45 - Andras Lasso
Good catch. Thanks for reporting this.

#### 2013-05-20, 20:55:45 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2013-05-21, 02:46:52 - Adam Rankin
(In r:2794|plus:2794) test #761 proper indexing

#### 2013-05-21, 02:46:52 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-05-21, 02:47:10 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0.1"

#### 2013-05-21, 02:47:16 - Adam Rankin
assigned_to_id: changed from "rankin" to "bpycinski"

#### 2013-05-21, 02:49:06 - Adam Rankin
(In r:2795|plus:2795) re #761 integrating into 2.0 branch

#### 2013-05-21, 07:31:06 - Bart??omiej Pyci??ski
status: changed from "Test" to "Fixed"


## #762 Race condition when initializing windows accurate timer, data collector and plusconfig.


#### 2013-05-22, 18:39:28 - Andras Lasso
What change caused this issue?

#### 2013-05-22, 18:40:30 - Adam Rankin
(In r:2799|plus:2799) re #762 added guard to multiple creation of plusconfig

not actual problem, problem comes from accurate timer thread locking while trying to log a message

#### 2013-05-22, 18:51:07 - Adam Rankin
(In r:2800|plus:2800) test #762 avoiding race condition by forcing instantiation of plus logger earlier in startup sequence

#### 2013-05-22, 18:51:07 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-05-22, 18:52:07 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-05-22, 18:52:23 - Adam Rankin
This is a workaround. I will investigate a proper fix.

#### 2013-05-22, 18:54:11 - Adam Rankin
Always existed I think, except that the condition was never hit to    start it (unable to elevate process to real-time)

#### 2013-05-23, 19:28:01 - Adam Rankin
(In r:2804|plus:2804) re #762 cleaning up implementation of critical section

#### 2013-05-23, 20:15:26 - Adam Rankin
(In r:2805|plus:2805) re #762 adding creation guard to plus logger

#### 2013-05-27, 15:16:07 - Adam Rankin
This is another workaround, I think it just offsets the timing some. I'll investigate the true cause.

#### 2013-05-27, 16:06:51 - Adam Rankin
Currently it's working, shelving it to work on more pressing issues.

#### 2013-05-27, 16:06:51 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-05-27, 17:02:53 - Andras Lasso
OK. It may be better to close this ticket and create a new one to track the long-term solution.

#### 2013-05-29, 17:41:06 - Adam Rankin
milestone_id: changed from "Release Plus-2.0.1" to "Release Plus-Future"

#### 2013-05-29, 17:41:09 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2014-06-05, 01:39:51 - Andras Lasso
It seems to work well. We'll get back to it if we experience issues with this.

#### 2014-06-05, 01:39:51 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-09-01, 20:58:10 - Andras Lasso
re #762: Fixed race condition at logger initialization

Problem was that AccurateTimer accessed the logger first, but while performing initialization, the application's main thread accessed the logger. The logger creation mutex was different from the logger access mutex and therefore the logger was used before fully initialized. The only side effect that was observed is that setting verbose level on the command line was ignored (because it was set from the main thread but later it was overwritten by the logger initialization process).

Solution: lock the logger access mutex as well until logger initialization is fully completed. The access mutex is locked even before setting the logger instance variable, so there is no time window at all for any thread to get access to the logger before it is initialized.
Commit: r:4327|plus:4327

#### 2015-09-01, 20:58:10 - Andras Lasso
assigned_to_id: changed from null to "lassoan"


## #763 Migrate to CreateTimerQueueTimer instead of timeSetEvent
WindowsAccurateTimer constructor

#### 2013-05-22, 21:57:06 - Andras Lasso
timeSetEvent is a high-precision timer, while CreateTimerQueueTimer is not. We can reliably get 1ms resolution from the currently used timeSetEvent. The resolution of CreateTimerQueueTimer is typically about 15ms. 

For example, see some information here:
http://omeg.pl/blog/2011/11/on-winapi-timers-and-their-resolution/
http://stackoverflow.com/questions/14438798/windows-precise-timing-error-in-createtimerqueuetimer-or-system-clocknow


#### 2013-05-22, 21:57:06 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2013-05-22, 22:04:25 - Andras Lasso
(In r:2801|plus:2801) re #763: Described in the WindowsAccurateTimer class documentation why the timeSetEvent API is used

#### 2013-05-22, 22:04:25 - Andras Lasso
assigned_to_id: changed from null to "lassoan"


## #764 Make the SonixVideo source to a simple class instead of a singleton
Initialization and deletion of singletons are difficult to control. Convert the SonixVideo source to a simple class instead of a singleton.

The original reason for making it a singleton was to allow the Ulterius object to be used from multiple objects (as the Ulterius SDK cannot handle multiple connections). Just describe in the class documentation that only one of these objects can be instantiated in a process.

#### 2013-06-18, 14:29:53 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-06-18, 14:29:57 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-07-15, 14:59:08 - Adam Rankin
Partially complete. Once the SDK accepts a user data parameter to the callback function we can complete this. Moving it to Plus-Future to await SDK changes.

#### 2013-07-15, 14:59:11 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-07-15, 15:08:58 - Andras Lasso
OK! Please add a warning log in the constructor if vtkSonixVideoSource::ActiveSonixDevice was not NULL before setting it to this.

#### 2013-07-15, 15:10:44 - Andras Lasso
Actually, this ticket is fixed, as the goal was to make the videosource to a simple class (to clean up destruction) - and this has been completed.

I don't think we need to enter a ticket to implement multiple ulterius connection at the same time. If somebody requests this feature then we add a ticket.

#### 2013-07-15, 15:16:23 - Adam Rankin
(In r:2937|plus:2937) fixed #764 added warning if overwriting active sonix device

#### 2013-07-15, 15:16:23 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-07-15, 16:14:31 - Andras Lasso
(In r:2939|plus:2939) re #764: Tuned the warning message text in the vtkSonixVideoSource that is printed when a second instance is created


## #765 Update transform repository through PlusServer
For e.g.
when ReferenceToRAS transform needs to be recomputed (reference object moves) I need to update ReferenceToRAS transform to be identity. Then I need to collect fiducial points and recompute the registration. Then update ReferenceToRAS with the registration result.

It would be nice if I could do all this from Slicer. And many other small applications could be implemented with this in Slicer. E.g. stylus calibration.

To make the updates permanent, we also need a way to save the new configuration into the config file by PlusServer.

#### 2013-05-23, 05:49:33 - Tamas Heffter
I'll need this feature as well, because I'd like to avoid the need of storing the same repository on the client and on the server as well. In my case the server will run on the US system and the connected client wants to display the calibrated, tracked US. Right now, it's really painful to select, store and maintain the same configuration chunks all the time on two different computer, so I was planning to make TransformRepository IGTLink message type to transfer the repository if needed. With this approach I could only store connection related settings on the client and maybe just send a request to change the depth on the server with of course changing the calibration result as well (maybe stored in the config file for different depths). 

#### 2013-05-23, 15:24:37 - Andras Lasso
The long-term solution for the depth change is to use a switcher virtual device, but as a short-term solution manual update of transform in the repository could work as well.

#### 2013-05-23, 17:38:03 - Gabor Fichtinger
Assign to Adam perhaps? 
 
 
From: Tamas Heffter (heffter) [mailto:plus@alerts.assembla.com] 
Sent: May-23-13 1:50 AM

#### 2013-05-27, 12:29:24 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2013-05-27, 13:05:06 - Andras Lasso
For me it seems that the priority of this ticket is comparable others in the 2.1.0 milestone.

@ungi, @heffter: By when would you like this feature to be ready?

#### 2013-05-27, 13:57:57 - Tamas Ungi
If it was ready, it would make IGT applications easier to use. At the moment I don't have any higher priority requests in Plus.

#### 2013-05-27, 14:27:00 - Tamas Heffter
I would really appreciate it by the end of June if it's feasible. 

#### 2013-05-27, 15:48:19 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.0"

#### 2013-05-27, 16:07:19 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-05-27, 16:09:01 - Adam Rankin
Is remote depth changing required? Or do you have physical access to the machine?

#### 2013-05-27, 17:06:59 - Tamas Ungi
The issue of remotely changing depth hasn't come up yet. I think the direction is the other way. When we know the user has changed the depth on the ultrasound machine, we just need to use another ImageToProbe transform. Ultrasonix has this special possibility that we can request the depth setting from PLUS, so we could switch ImageToProbe transforms automatically. But in case of other ultrasound machines somebody will have to manually press a button on the client application (Slicer) too, to request another ImageToProbe transform from PlusServer. And manually make sure the depth setting is the same on both machines.

#### 2013-05-27, 17:59:35 - Adam Rankin
(In r:2810|plus:2810) re #765 adding update transform command to PlusServer command handling

next/last step is to add a flush/save config remote command

#### 2013-05-27, 17:59:35 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-05-27, 18:48:51 - Tamas Heffter
I would trigger a transform repository message send on depth change, and on the client side we can develop the response as we wish, either notify the user before we apply transform or whatever. This was pretty common issue when we were in the OR and the clinician just wanted to change the depth. So we always had to stop the server, select the right config file, restart and reconnect clients. 

#### 2013-05-27, 20:31:13 - Andras Lasso
Thanks Adam, you were very quick!
Just two additional things:
* please make the public interface of the vtkTransformRepository class thread-safe (with a recursive critical section), to make sure we don't have simultaneous transform updates from multiple threads
* add description and example of the new command to PlusServer_commands

#### 2013-05-28, 19:35:21 - Adam Rankin
(In r:2815|plus:2815) test #765 adding save config command to plus server list of commands

storing loaded config file in plusserver to be used by the save config command if a config filename is not specified

#### 2013-05-28, 19:35:21 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-05-28, 19:47:07 - Adam Rankin
(In r:2816|plus:2816) test #765 incorrect commit, search and replace fail!

#### 2013-05-31, 21:49:20 - Adam Rankin
(In r:2831|plus:2831) re #765 protecting transform repository public interface from concurrency issues

#### 2013-07-09, 18:57:19 - Adam Rankin
@ungi Could you test to see if this works? Auto-switching of transform based on depth setting of machine is still in development.

#### 2013-07-09, 18:57:19 - Adam Rankin
assigned_to_id: changed from "rankin" to "ungi"

#### 2013-07-09, 20:02:55 - Tamas Ungi
Thanks for working on this. Franklin is implementing a Slicer module that pairs with this function. He will test PLUS along with the Slicer module.

#### 2013-07-09, 20:02:55 - Tamas Ungi
assigned_to_id: changed from "ungi" to "FranklinK"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-20, 03:30:55 - Andras Lasso
confirmed working with current Plus and Slicer nightly

#### 2013-12-20, 03:30:55 - Andras Lasso
status: changed from "Test" to "Fixed"


## #766 Add configuration files used at BWH
Ticket to reference when adding/updating BWH config files.

#### 2013-05-24, 13:16:10 - Andrey Fedorov
(In r:2807|plus:2807) re #766: config file for Epiphan and NDI Polaris used at BWH


#### 2013-05-27, 12:29:17 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.0.1"

#### 2013-06-21, 22:33:31 - Andrey Fedorov
(In r:2867|plus:2867) re #766: adding configuration file for BK8848 + Hologic star + fixed position attachment, with ImageToProbe transform derived by means of Tamas' fiducials-based calibration method

#### 2013-07-02, 20:34:55 - Adam Rankin
milestone_id: changed from "Release Plus-2.0.1" to "Release Plus-Future"

#### 2014-06-05, 01:36:29 - Andras Lasso
There are BWH config files already under revision control, these are enough for now.

#### 2014-06-05, 01:36:29 - Andras Lasso
status: changed from "New" to "Fixed"


## #767 Allow stylus calibration for already-calibrated stylus
Currently during stylus calibration in fCal, points are only collected if there is sufficient variation in the translation component of the StylusToReference transform. However, this means that if the stylus is already calibrated, users just see that data collection doesn't work.

We require users to do the followings (https://www.assembla.com/spaces/plus/wiki/System_calibration):
'No points can be collected during stylus calibration
If the stylus has been calibrated already (e.g., with the NDI toolviewer) then the stylus position remains the same when the stylus is pivoted around its tip. The stylus calibration method requires unique positions, therefore the algorithm will not work if it is attempted to apply on an already calibrated stylus.
If the stylus has been already calibrated outside PLUS then just add the following calibration matrix to the CoordinateDefinitions element in the device set configuration file:
<Transform From='StylusTip' To='Stylus' Matrix='1 0 0 0   0 1 0 0   0 0 1 0   0 0 0 1' Date='2010.01.01 10:00:00' /> '

Actually, we could just check if there is variation in orientation, and if there is enough variation then still collect points. If we find that all the collected point positions are very similar then we don't do a stylus calibration (to avoid numerical problems), just use identity transform as StylusTipToStylus.

#### 2013-11-26, 17:13:09 - Adam Rankin
Should I add a button to the GUI to let them override the algorithm with an identity matrix? I could also add a bit of logic in the algorithm to flag a suspected pre-calibrated stylus and present a message to the user telling them to override.

Thoughts?

#### 2013-11-26, 17:21:55 - Andras Lasso
The user may not know if the stylus is calibrated already or not, so we have to allow running  a calibration to confirm that it is indeed calibrated.

The only problem is that point collection currently fails for calibrated styluses as the algorithm expects changes and the criteria is a change in translation. The correct solution would be to check for changing in orientation (that means that we are pivoting).

#### 2013-11-26, 19:19:32 - Adam Rankin
Ok, I will do some modification to detect change in orientation without change in translation (with threshold) and present the user with the option to set the stylus calibration matrix to the identity.

#### 2013-11-27, 16:41:28 - Adam Rankin
The code indicates that it is considering change in orientation as well as change in translation. Has this already been fixed but simply wasn't reported?

StylusCalibrationToolbox.cxx lines 495ish-530ish

https://www.assembla.com/code/plus/subversion/nodes/3000/trunk/PlusApp/fCal/Toolboxes/StylusCalibrationToolbox.cxx#ln495

See plus:url:https://www.assembla.com/code/plus/subversion/commit/1595|1595

#### 2013-11-27, 17:24:12 - Andras Lasso
Yes, this ticket seems to be a duplicate of $431

#### 2013-11-27, 17:26:08 - Adam Rankin
Duplicate of #431

#### 2013-11-27, 17:26:08 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #768 Make Ultrasonix hardware dependent test configurable
Sometimes an Ultrasonix scanner is not available on the network => add the PLUS_TEST_ULTRASONIX option to control if hardware dependent Ultrasonix tests should be executed or not.
Sometimes the Ultrasonix test scanner's IP address has to be changed => add the PLUS_TEST_ULTRASONIX_IP_ADDRESS

#### 2013-05-28, 02:56:29 - Andras Lasso
(In r:2811|plus:2811) re #768: Added PLUS_TEST_ULTRASONIX and PLUS_TEST_ULTRASONIX_IP_ADDRESS build options to control hardware-dependent testing of the Ultrasonix interface (PlusBuild changes)

#### 2013-05-28, 02:58:24 - Andras Lasso
(In r:2812|plus:2812) re #768: Added PLUS_TEST_ULTRASONIX and PLUS_TEST_ULTRASONIX_IP_ADDRESS build options to control hardware-dependent testing of the Ultrasonix interface (PlusLib changes)

#### 2013-05-28, 03:03:30 - Andras Lasso
@rankin, @pinter: please update your nightly PlusBuild and enable the PLUS_TEST_ULTRASONIX CMake build option (you can leave the default 130.15.7.24 IP address)

#### 2013-05-28, 03:12:15 - Andras Lasso
Test it by checking the nightly dashboard: http://crunch.cs.queensu.ca/CDash/index.php?project=PLUS

#### 2013-05-28, 03:12:15 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-05-28, 03:35:26 - Andras Lasso
(In r:2813|plus:2813) re #768: Fixed build error on configurations where PLUS_USE_ULTRASONIX option is disabled

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 17:36:18 - Andras Lasso
the option works well

#### 2013-12-19, 17:36:18 - Andras Lasso
status: changed from "Test" to "Fixed"


## #769 Create Lego Phantom
Design and build a phantom from Lego that is easy to build and repeatable.

#### 2013-05-28, 18:08:42 - Ryan Walsh
(In r:2814|plus:2814) Re #769 Enabling decimal values for spacing measurements.

#### 2013-06-11, 15:56:03 - Adam Rankin
(In r:2848|plus:2848) re #769 adding lego phantom to CADModels/LegoPhantom folder

#### 2013-06-11, 15:57:50 - Adam Rankin
(In r:2849|plus:2849) re #769 adding lego phantom config file

#### 2013-06-11, 16:06:52 - Adam Rankin
(In r:2850|plus:2850) Re #769 Updating landmarks for latest lego phantom

#### 2013-06-11, 19:00:14 - Adam Rankin
(In r:2851|plus:2851) re #769 correctly setting tool reference frame before using it for data source configuration

#### 2013-07-17, 21:25:08 - Ryan Walsh
status: changed from "New" to "Accepted"

#### 2013-12-05, 23:04:56 - Andras Lasso
Make sure that the procedure for building and using the phantom is nicely documented on the wiki and at least one sample config file is in the application package.

#### 2013-12-05, 23:04:56 - Andras Lasso
assigned_to_id: changed from "RyanWalsh" to "rankin"

#### 2013-12-05, 23:04:56 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-13, 05:25:20 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2013-12-16, 02:06:26 - Ryan Walsh
(In r:3060|plus:3060) Re #769: Added the LEGO phantom assembly instructions to the tutorials directory

#### 2014-06-03, 13:21:47 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-03, 13:21:52 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2014-06-03, 13:24:40 - Andras Lasso
re #769: Made fCal phantom made of Lego naming more consistent with other fCal phantom names (Lego phantom => fCal-L phantom)
Commit: r:3359|plus:3359

#### 2014-06-03, 13:30:55 - Andras Lasso
Added link from the wiki to the Lego phantom making tutorial.

Double-check if a Lego config file is properly included in the installation package. If that's correct then this ticket can be closed.

#### 2014-06-03, 13:30:55 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-06-04, 13:23:47 - Andras Lasso
image:b1E4_-6-Sr447cacwqjQYw


#### 2014-06-04, 13:23:47 - Andras Lasso
Attachment added: "LegoLandmarksInaccurate.jpg"

#### 2014-06-04, 13:37:22 - Andras Lasso
There are a couple of issues with the current fCal-L1.4 phantom:
* The landmark positions and the STL model are not aligned accurately (see the yellow dots in the attached Attachment LegoLandmarksInaccurate.jpg). Either the landmark positions are not computed but manually marked (impacts calibration accuracy) or the displayable STL model is manually registered to the phantom coordinate system (only a display issue).
* There seems to be unnecessary parts, unnecessarily different colors (it would be enough to have a different color for each layer), unnecessary variations (the wall is 1x thick at some places and 2x thick at other places). Note: it may be difficult for people to get parts with specific colors (unless they custom order it), so we should not rely much on colors.
* The IGTSK Lego phantom (http://yanivresearch.info/igiTutorial/igiTutorial.html) uses the 'Deluxe Brick Box Building Set (6167)' (see http://brickset.com/inventories/6167-1 for complete inventory). It would be nice if our phantom could be constructed from that kit, too.

#### 2014-06-04, 14:16:30 - Andras Lasso
re #769: Fixed file names of fCal lego phantom in the sample config files
Commit: r:3361|plus:3361

#### 2014-10-07, 19:04:59 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2014-10-07, 19:04:59 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2015-11-25, 15:40:29 - Andras Lasso
Will fix the remaining issues if somebody requests it.

#### 2015-11-25, 15:40:29 - Andras Lasso
Component: changed from "PlusApp-CommonWidgets" to "PlusLib"

#### 2015-11-25, 15:40:29 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2015-11-25, 15:40:29 - Andras Lasso
assigned_to_id: changed from "lassoan" to null

#### 2016-07-13, 16:49:34 - Adam Rankin
See #883 for progress.

#### 2016-07-13, 16:49:34 - Adam Rankin
status: changed from "New" to "Invalid"


## #770 Move third-party utilities into separate directory
Move the third-party Ascension, Epiphan, MicronTrackerInterface, ndicapi, Phidget, Ransac, UsDigital, xio modules to a separate directory (src/Utilities) to better separate them from the Plus code and to allow it to be used in multiple places within Plus.

#### 2013-05-31, 16:24:45 - Andras Lasso
(In r:2825|plus:2825) fixed #770: Xio, Ransac, MicronTrackerInterface, ndicapi libraries are moved to the Utilities directory. Other SDKs (that don't require building) are left in the tools directory but their paths are now set in PlusLib/CMakeLists.txt.

#### 2013-05-31, 16:24:45 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-05-31, 16:53:47 - Andras Lasso
(In r:2828|plus:2828) re #770: Disable testing of utilities (third-party tools). Build hardware-dependent third-party tools only if the support of that hardware is enabled.


## #771 Create SpatialSensorFusion tool to re-compute spatial sensor fusion algorithm results
Raw spatial sensor measurements are recorded during data collection, but currently there is no way to recompute the sensor fusion results with different parameters from recorded data.
Implement a tool to provide this.

Requires #770 to be completed first.

#### 2013-06-11, 18:48:33 - Andras Lasso
* Solve the initialization problem (the filtering should start from the current orientation, preferably not by updating hundreds of times with the same value but instead either 1. setting the frame rate to very low for the first update, 2. set the converged orientation directly using SetOrientation)
* Add test, for example:
    ADD_TEST(vtkTRUSCalibrationTest
      ${EXECUTABLE_OUTPUT_PATH}/vtkTRUSCalibrationTest
      --calibration-seq-file=${TestDataDir}/USTC_Ulterius_RandomStepperMotionData1.mha 
      --validation-seq-file=${TestDataDir}/USTC_Ulterius_RandomStepperMotionData2.mha 
      --probe-rotation-seq-file=${TestDataDir}/USTC_Ulterius_ProbeRotationData.mha 
      --config-file=${ConfigFilesDir}/Testing/PlusConfiguration_CalibrationOnly_iCal.xml
      --baseline-file=${TestDataDir}/UsTemplateCalibration.results.xml 
      )
    SET_TESTS_PROPERTIES( vtkTRUSCalibrationTest PROPERTIES FAIL_REGULAR_EXPRESSION 'ERROR;WARNING' ) 

#### 2013-06-25, 18:54:10 - Andras Lasso
Solve the initial value problem by iterations (two gains,...), not with initial freq change

#### 2013-06-25, 18:54:10 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-07-02, 22:55:39 - Andras Lasso
(In r:2892|plus:2892) re #771: Changed timestamp to double to allow accurate frequency computation from timestamps (with float type there was a difference up to 20Hz on a 125Hz frame rate).

#### 2013-07-02, 23:14:38 - Andras Lasso
(In r:2893|plus:2893) re #771: Make vtkPhidgetSpatialTracker::ConstrainWestAxis method publicly available (used by the offline sensor fusion application)

#### 2013-07-02, 23:16:20 - Andras Lasso
(In r:2894|plus:2894) re #771: Changed the INFO level logging of frame indices in PlusStatus vtkMetaImageSequenceIO::AppendImagesToHeader() to debug level (as this information is not relevant for the users)


#### 2013-07-02, 23:19:56 - Andras Lasso
(In r:2895|plus:2895) re #771: Simplified SpatialSensorFusion app implementation. Root cause of the additional noise after the filtering is still not found yet.


#### 2013-07-03, 15:07:50 - Andras Lasso
(In r:2896|plus:2896) re #771: Fixed vtkMetaImageSequenceIO to work correctly with filename that starts/ends ' or whitespaces


#### 2013-07-03, 15:13:40 - Ryan Anderson
(In r:2897|plus:2897) re: #771: Updated test command to match modified SpatialSensorFusion 

#### 2013-07-03, 16:02:41 - Andras Lasso
(In r:2901|plus:2901) re #771: Fixed warning messages when writing metafile that contains tracking data only



#### 2013-07-03, 17:31:10 - Ryan Anderson
(In r:2902|plus:2902) re: #771: Updated baseline file to match output from modified SpatialSensorFusion

#### 2013-07-03, 20:57:08 - Ryan Anderson
(In r:2906|plus:2906) re: #771: Increased recording precision of sensor data to the tracked frame

#### 2013-07-03, 20:57:46 - Ryan Anderson
(In r:2907|plus:2907) re: #771: Fixed error causing SpatialSensorFusion test to fail

#### 2013-07-03, 21:12:26 - Andras Lasso
(In r:2908|plus:2908) re #771: Added option to specify the tracker reference from for SpatialSensorFusion (--tracker-reference-frame parameter, by default the value is 'Tracker')

#### 2013-07-03, 21:13:06 - Andras Lasso
(In r:2909|plus:2909) re #771: Removed unnecessary '-s from the test SpatialSensorFusion parameters

#### 2013-07-03, 21:57:07 - Ryan Anderson
(In r:2910|plus:2910) re: #771: Updated input tracked image file to be longer and have movement across all sensors.  Updated baseline to match.  

#### 2013-07-03, 22:00:37 - Ryan Anderson
(In r:2911|plus:2911) re: #771: Updated baseline to match input

#### 2013-07-03, 22:16:18 - Ryan Anderson
(In r:2912|plus:2912) re: #771: Made a mistake with previous version.  This is the correct baseline.

#### 2013-07-04, 12:41:27 - Andras Lasso
(In r:2913|plus:2913) re #771: Use default (non-fixed) precision with 16 digits for writing transforms and timestamps to metafiles. Also added tests to verify the accuracy when values are written to files and read back.

#### 2013-07-04, 14:17:08 - Andras Lasso
(In r:2914|plus:2914) re #771: Added FilteredTiltSensor tool example to config file

#### 2013-07-04, 14:20:19 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2013-07-05, 03:06:11 - Andras Lasso
(In r:2919|plus:2919) re #771: Updated SpatialSensorFusionTestBaseline to match the increased precision of the metafile writer

#### 2013-07-05, 03:06:40 - Andras Lasso
(In r:2920|plus:2920) re #771: Added more verbose error logging to SpatialSensorFusion

#### 2013-07-06, 00:16:51 - Andras Lasso
(In r:2929|plus:2929) re #771: Added relaxed error tolerance for SpatialSensorFusion test on linux

#### 2014-06-01, 18:15:36 - Andras Lasso
re #771: Relaxed error tolerance for SpatialSensorFusion test on Windows, as results differed by more than the threshold when a different compiler was used (VS2010 instead of VS2008)
Commit: r:3351|plus:3351

#### 2014-06-01, 18:21:37 - Andras Lasso
re #771: Relaxed error tolerance for SpatialSensorFusion test on Windows even more, as results differed by more than the previous threshold when a different compiler was used (VS2010 instead of VS2008)
Commit: r:3352|plus:3352

#### 2017-05-31, 15:07:43 - Andras Lasso
re #771: Fixed SpatialSensorFusion test (there was a typo in the application path)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/502544421ca5eaa8859a25198dafa6236dda2fd0|plus.2:502544421c


## #772 vtkLineSegmentationAlgo only returns LineParameters for frames that were successfully segmented
vtkLineSegmentationAlgo only returns LineParameters for frames that were successfully segmented. It's a problem, because in case of segmentation failures the correspondence between the original frame indices and the returned line parameters are lost.

This feature has been only used in the single-wall calibration, which is a work-in-progress feature.

#### 2013-06-01, 23:59:42 - Andras Lasso
(In r:2832|plus:2832) fixed #772: vtkLineSegmentationAlgo::GetDetectedLineParameters now returns a result for each input frame (line detection success/fail status is returned in the lineDetected attribute of LineParameters). Fixed the clipping rectangle region in the line segmentation (slightly different x size was used than it was requested). Also, added an automatic test for the line segmentation.

#### 2013-06-01, 23:59:42 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-06-03, 13:34:21 - Andras Lasso
(In r:2834|plus:2834) re #772: Cleaned up vtkLineSegmentationAlgoTest (separated results reading, writing, and comparison)


## #773 Verify temporal calibration results in the automatic test using a baseline
TemporalCalibrationAlgoTest1 tests only if there is no error during the calibration, but the results are not checked against a baseline.

#### 2013-06-03, 20:05:00 - Andras Lasso
(In r:2835|plus:2835) fixed #773: Added baseline data for TemporalCalibrationAlgoTest1. Replaced the test video and tracking data with sequences acquired during free-hand probe motion (s:\\data\  rackedUltrasound\  emporalTrackedUSCalibration\\USMB_Data\\USMB-Paper\awData\\BaselineStudy\\Baseline\  rial12, frame 100-300)

#### 2013-06-03, 20:05:00 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-06-03, 20:18:40 - Andras Lasso
(In r:2836|plus:2836) re #773: Allow logging of INFO level messages in tests (TemporalCalibrationAlgoTest1 and SingleWallCalibrationAlgoTest1)


## #774 Determine optimal sensor fusion parameters using an optical tracker as ground truth
Determine optimal sensor fusion parameters for motorized transrectal probe rotator, using an optical tracker as ground truth

#### 2013-12-05, 23:03:18 - Andras Lasso
assigned_to_id: changed from "AndersonR" to "lassoan"

#### 2013-12-05, 23:03:18 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #775 Tracker reference frames must be unique across all devices
currently devices default to 'Tracker', verify uniqueness if defined and generate unique if not

#### 2013-06-13, 19:18:43 - Andras Lasso
Uniqueness is theoretically not necessary (it may be possible that two devices have exactly the same 'To' coordinate system), but in practice all these 'To' coordinate systems are different.

Probably the best would be to use the device name by default (that is also guaranteed to be unique), but it's not backward compatible. To maintain reasonable compatibility I would recommend the following:
* For now: just keep the current behavior and clarify in the warning message that current behavior (default 'Tracker' name) is deprecated
* In 6 months: don't generate any default name; or replace default 'Tracker' name with the device name (but probably still display a warning)


#### 2013-06-13, 20:24:46 - Gabor Fichtinger
Sounds very reasonable.
 
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com] 
Sent: June-13-13 3:20 PM

#### 2013-06-15, 16:38:54 - Andras Lasso
(In r:2858|plus:2858) re #775: Added ToolReferenceFrame='Tracker' attribute to all tracker devices

#### 2013-10-22, 20:27:33 - Adam Rankin
Fixed in plus:2974

#### 2013-10-22, 20:27:33 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:10 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:10 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #776 Configfilesaver dialog test fails
Due to warning for missing clipping rectangle info

#### 2013-06-15, 18:46:50 - Andras Lasso
(In r:2860|plus:2860) re #776: Updated config file saver dialog config file with missing attributes

#### 2013-06-15, 18:48:04 - Andras Lasso
(In r:2861|plus:2861) re #776: Updated vtkImageVisualizer to use the ClipRectangle* attributes instead of the obsolete RegionOfInterest attribute

#### 2013-06-15, 18:49:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #777 Externalize data in PlusLib and/or enable an option in CMake for downloading
Currently when doing the superbuild all data in pluslib is checked out. This can lead to unnecessary delays if the internet connection is slow. Enable downloading of data to be optional

#### 2013-12-22, 04:39:12 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2013-12-22, 04:48:36 - Adam Rankin
Why is this invalid? It would be a nice enhancement

#### 2013-12-22, 05:07:56 - Andras Lasso
Duplicate. See related tickets.


## #778 When sending a command over OpenIGTLink to Plus server, it is handled multiple times
I send a start volume reconstruction command to plus server with the config: PlusConfiguration_OpenIGTLinkCommandsTest.xml and when the start command is sent, it is started multiple times.

@lassoan @ungi Do you know who implemented this part?

#### 2013-06-21, 01:44:17 - Andras Lasso
This is not a bug, but a feature. It is implemented so to allow running multiple commands in parallel in one single thread: active commands are stored in a queue and executed with a round-robin scheduling. Short commands (e.g., start/stop acquisition) are completed immediately and they are removed from the queue. Commands that take long time to complete (e.g., volume reconstruction, that runs in the background) is kept in the queue for an extended period of time and its execute method is called many times (until it reports that there is nothing else to do).

Now that we have devices that can do continuous processing in the background, I think this scheduler design is not necessary anymore (we can expect that all commands are completed in a very short time, so there would be only one active command at a time). All the commands already control devices only, except the volume reconstruction, so before retiring the command scheduler we would need to implement a volume reconstructor device. See details in #739.

Probably we can consider this ticket to be a duplicate of #739.

#### 2013-06-21, 02:04:49 - Adam Rankin
image:dZ97AW2Hyr4OoTacwqjQYw


#### 2013-06-21, 02:04:49 - Adam Rankin
Attachment added: "screenshot.png"

#### 2013-06-21, 02:06:22 - Adam Rankin
The Plus server is processing a command twice when it is sent once. See attached screenshot.

#### 2013-11-26, 17:09:00 - Adam Rankin
Confirmed corrected. The issue was the slicer remote module sending commands twice.

#### 2013-11-26, 17:09:00 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #779 After sending the stop reconstruction command, the start command continues executing
Volume sent successfully, viewable/renderable in Slicer.

PlusServer still showing start reconstruct volume being executed.

#### 2013-11-25, 19:15:48 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-11-25, 20:55:08 - Adam Rankin
Crash in slicer when sending commands. Investigating.

#### 2013-11-25, 21:52:50 - Adam Rankin
vtkSlicerOpenIGTLinkRemoteLogic::DiscardCommand crashing slicer by assuming control of node removal. investigating proper way of discarding completed nodes

#### 2013-11-25, 22:15:19 - Adam Rankin
Issue no longer occurs. Possibly fixed with correction of double sending of commands from slicer remote.

#### 2013-11-25, 22:15:19 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-11-25, 22:39:43 - Andras Lasso
Does the vtkSlicerOpenIGTLinkRemoteLogic::DiscardCommand still crash? There should be no ownership issue: we can remove a node from the scene and if something still holds a reference to it then it won't be deleted from memory.

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #780 Add visualization of line segmentation results to fCal
Live update of segmentation results to see if the line can be segmented. Perhaps similar to segmentation parameter dialog? Or maybe make seg dialog do both jobs?

#### 2013-06-25, 12:53:58 - Andras Lasso
If we can save development and maintenance time then it's a good idea to add it to the existing dialog. For the line detection we only need the clip rectangle setting. If we use it in the future for single wall calibration as well then there might be additional few parameters to set.

#### 2013-12-03, 16:53:16 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"


## #781 Clip rectangle is not taken into account in fully optimized volume reconstruction mode
Vertical clipping rectangle is not applied.
Clipping rectangle not used for automatic computing of volume extent, therefore resulting in unnecessarily large volume.

#### 2013-06-26, 12:21:06 - Andras Lasso
(In r:2872|plus:2872) test #781: Fixed volume reconstructor clipping rectangle. Improved reconstructed volume extent computation to take into account the clipping rectangle (to save memory).

#### 2013-06-26, 12:21:06 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 20:09:10 - Andras Lasso
this should work correctly now

#### 2013-12-19, 20:09:10 - Andras Lasso
status: changed from "Test" to "Fixed"


## #782 Clip rectangle is not taken into account in fully optimized volume reconstruction mode (backport)
backport of the fix in #781

#### 2013-06-26, 13:33:22 - Andras Lasso
(In r:2873|plus:2873) fixed #782: Fixed clipping rectangle (backport of 781)

#### 2013-06-26, 13:33:22 - Andras Lasso
status: changed from "New" to "Fixed"


## #783 Add GUI and ConfigFile support for temporal calibration between any two signals
Enable easy and convenient tracker to tracker and tracker to image temporal calibration from temporal calibraiton toolbox.

#### 2013-07-03, 19:18:09 - Adam Rankin
(In r:2903|plus:2903) re #786 #783 adding GUI features to support temporal calibration between any two sources

unifying local time offset to be a single value that belongs to the device

#### 2013-07-03, 19:18:31 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-07-05, 18:38:25 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2013-07-05, 19:37:13 - Adam Rankin
(In r:2925|plus:2925) re #783 cleaner approach to temporal calibration GUI

#### 2013-07-05, 19:37:48 - Adam Rankin
(In r:2927|plus:2927) re #783 missing file

#### 2013-07-05, 21:01:14 - Adam Rankin
(In r:2928|plus:2928) re #783 changing vocabulary of temporal calibration algo to use fixed and moving instead of video and tracker

updated temporal calib toolbox to use available transforms

todo: enable validation of compound transforms
todo: load defaults from config file

#### 2013-07-09, 18:53:49 - Adam Rankin
(In r:2930|plus:2930) fixed #783

Refactoring temporal calibration algo into plus algo format

adding readconfiguration to temporal calibration algo

adding more output when data get fails in pluschannel

using transform repository to check validity of transform in tracked frame list



#### 2013-07-09, 18:53:49 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #784 Make the 'no default channel selected' warning more verbose in fCal
Give a clue to the user what attribute has to be set to avoid the error

#### 2013-06-27, 14:09:24 - Andras Lasso
(In r:2874|plus:2874) fixed #784: Added more details to the 'no default channel selected' warning message in fCal


#### 2013-06-27, 14:09:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #785 Add outlier rejection to stylus calibration
Brainlab stylus with two reflective balls sometimes gives incorrect positions (due to stray reflections from other objects and the heuristics in determining the tip orientation). In the current pivot calibration algorithm even one outlier can significantly deteriorate the calibration result. Implement an outlier rejection mechanism in the stylus calibration to avoid this.

The outlier rejection can work similarly to the spatial calibration algo: compute the stdev of error, remove points where the error larger than stdev*f (where f=2.0 or so), repeat until no more points to remove.

#### 2013-12-05, 23:02:06 - Andras Lasso
(In r:3015|plus:3015) fixed #785: Added outlier rejection to stylus calibration. Stylus calibration is now performed using the robust LSQR minimizer. Had to switch to LSQR optimization instead of Amoeba optimizer, because outliers competely threw off the Amoeba optimizer (it was not possible to detect outliers, because the solution was far from optimum and therefore all samples generated large error).

#### 2013-12-05, 23:02:06 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-06, 01:36:56 - Andras Lasso
(In r:3016|plus:3016) re #785: Simplified pivot calibration error computation

#### 2013-12-06, 18:37:13 - Andras Lasso
(In r:3022|plus:3022) re #785: Updated fCal to changed vtkPivotCalibrationAlgo API (RemoveAllCalibrationPoints() has to be called instead of Initialize())

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2016-10-30, 00:02:27 - Amir Abdi
What is the current pivoting/calibration algorithm used in Plus?


## #786 Review ownership of LocalTimeOffsetSec, refactor code if necessary
As it stands the notion of time offset in a device is very chaotic.

Review the ownership (currently the buffers hold the variable, but the device reads/writes it at the device level tag) to clarify the notion of time offsets

#### 2013-07-02, 15:39:15 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-07-03, 19:18:09 - Adam Rankin
(In r:2903|plus:2903) re #786 #783 adding GUI features to support temporal calibration between any two sources

unifying local time offset to be a single value that belongs to the device

#### 2013-07-03, 19:18:37 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-07-05, 18:38:30 - Adam Rankin
status: changed from "Test" to "Fixed"


## #787 Port linear object registration from Slicer to PLUS
Implement GUI and linear object algorithm in PLUS

#### 2013-07-02, 20:51:30 - Adam Rankin
(In r:2891|plus:2891) re #787 adding linear object registration to fCal phantom registration toolbox

adding skeleton for linear object registration algorithm

renaming landmark registration method to prevent name collision

#### 2013-07-03, 20:52:33 - Adam Rankin
(In r:2905|plus:2905) re #787 fixing linux build



#### 2013-07-04, 15:18:32 - Ryan Walsh
(In r:2915|plus:2915) Re #787: Fixed crash when copying this->DefinedPlanes to fixedPlanes.

Added operator= to Planes class.

#### 2013-07-17, 21:25:03 - Ryan Walsh
status: changed from "New" to "Accepted"

#### 2013-07-17, 21:34:26 - Ryan Walsh
(In r:2946|plus:2946) re #787: added concept of reference points to vtkLinearObjectRegistrationAlgo and the fCal 2.0 config files to port Matthew's current algorithm

future plans are to eliminate reference points from the algorithm entirely

#### 2013-11-25, 14:52:55 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-11-27, 02:51:32 - Andras Lasso
@rankin, @mholden8: This method has to be made practically usable or be moved from the trunk to a private branch.

#### 2013-11-27, 02:51:32 - Andras Lasso
assigned_to_id: changed from "RyanWalsh" to "rankin"

#### 2013-11-27, 02:51:32 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2014-12-10, 21:09:34 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #788 PlusMathTest fails due to stack overflow
Increasing stack size to 8,000,000 works, need to find CMake variable to enable this change permanently

#### 2013-07-02, 23:30:19 - Andras Lasso
Alternatively, the large arrays could be created on the heap (instead of the stack). A std::deque would do.

#### 2013-07-29, 11:53:43 - Andras Lasso
(In r:2952|plus:2952) fixed #788: Allocate memory on heap instead of stack to avoid stack overflow

#### 2013-07-29, 11:53:43 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-07-29, 11:53:43 - Andras Lasso
status: changed from "New" to "Fixed"


## #789 Sensor Fusion code breaks build if phidget is not enabled
Either CMake option or #ifdef solution would probably work

#### 2013-07-03, 15:35:20 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-07-03, 15:35:20 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-07-03, 15:39:56 - Andras Lasso
(In r:2899|plus:2899) re #789: Moved ConstrainRotationToTwoAxes (formerly ConstrainWestAxis) to PlusCommon

#### 2013-07-03, 15:41:52 - Andras Lasso
(In r:2900|plus:2900) test #789: Removed SpatialSensorFusion dependency from vtkDataCollection

#### 2013-07-03, 15:41:52 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-07-03, 16:35:31 - Adam Rankin
Confirmed working. Thanks!

#### 2013-07-03, 16:35:31 - Adam Rankin
status: changed from "Test" to "Fixed"


## #790 Merge trunk in to 2.0.1


#### 2013-07-03, 19:39:45 - Adam Rankin
(In r:2904|plus:2904) fixed #790 merging trunk into 2.0.1 branch

#### 2013-07-03, 19:39:45 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-07-05, 01:36:38 - Andras Lasso
(In r:2917|plus:2917) re #790: Updated PlusLib version in the trunk

#### 2013-07-05, 15:02:57 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2013-07-05, 15:04:22 - Adam Rankin
(In r:2921|plus:2921) re #790 merging whole repository, for some reason some files don't get identified as not fully merged

#### 2013-07-05, 15:08:08 - Adam Rankin
(In r:2922|plus:2922) re #790 no idea why these files are being so difficult

#### 2013-07-05, 16:11:42 - Adam Rankin
(In r:2923|plus:2923) re #790 testing continuous 2.0 build

#### 2013-07-05, 16:27:57 - Adam Rankin
(In r:2924|plus:2924) re #790 testing new build name

#### 2013-07-05, 17:06:08 - Adam Rankin
Continuous build configured, looking good.

#### 2013-07-05, 17:06:08 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #791 Make the initialization of PhidgetSpatial tracker faster
Currently, the OrientationSensor and FilteredTiltSensor tools in the PhidgetSpatial tracker require a couple of seconds (or more, depending on the gain value) to converge from the initial orientation to the current orientation. To avoid this artifact, when the first measurement is obtained from the sensor, that measurement data should be used to update the sensor fusion algorithm many times, making that converging to the orientation that corresponds to the current position. This initialization technique is implemented in the SpatialSensorFusion application, so it could be taken from there.


## #792 Model path is hardcoded in Lego phantom config file 
There is a hardcoded path in the PlusLib\\data\\ConfigFiles\\PlusConfiguration_Sonix_Ascension_LegoPhantom.xml config file:

<!-- TODO: make sure the File attribute of the following DisplayableObject has the correct path -->
    <DisplayableObject Id='PhantomModel' Type='Model' ObjectCoordinateFrame='Phantom'
      Opacity='0.6'
      File='c:\\devel\\PlusBuild-bin\\PlusLib\\data\\CADModels\\LegoPhantom\\LegoPhantom.stl'
...
    />

If a model file is stored in the ModelDirectory (specified in the PlusConfig.xml file) then it's enough to include the model's filename in the config file.

#### 2013-07-05, 19:37:35 - Ryan Walsh
(In r:2926|plus:2926) Re #792: Fixed

#### 2013-07-17, 21:24:55 - Ryan Walsh
status: changed from "New" to "Fixed"


## #793 Replace ITK image in PlusVideoFrame with a VtkImage
Reduce overhead in PlusVideoFrame so that a frame with no data is almost empty.
Also, it's a good preparation for color image support.

Minimize ITK dependencies in Plus in general. Keep ITK only when algorithms are used that are not available in VTK.

#### 2013-08-03, 19:33:16 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-08-28, 15:24:31 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2013-12-03, 16:51:53 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-12-22, 04:15:00 - Andras Lasso
description: changed from "Reduce overhead in PlusVide..." to "Reduce overhead in PlusVide..."

#### 2014-01-14, 18:43:39 - Adam Rankin
(In r:3128|plus:3128) re #502 #793 renaming branch to support a broader scope

#### 2014-01-14, 18:44:55 - Adam Rankin
(In r:3129|plus:3129) re #502 #793 updating cmake to point to renamed branch

#### 2014-01-20, 18:59:49 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-01-20, 18:59:59 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-01-20, 19:01:57 - Adam Rankin
(In r:3136|plus:3136) re #793 merging trunk into branch

#### 2014-01-20, 19:26:24 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2014-01-24, 16:31:52 - Adam Rankin
(In r:3137|plus:3137) re #793 WIP transitioning from itk image to vtk image

build broken, in progress

#### 2014-01-28, 14:36:36 - Adam Rankin
(In r:3138|plus:3138) re #793 PlusLib successful build

#### 2014-01-28, 14:42:57 - Adam Rankin
(In r:3139|plus:3139) re #793 PlusApp successful build

#### 2014-01-28, 18:26:49 - Adam Rankin
(In r:3140|plus:3140) re #793 WIP fixing run-time crashes due to uninitialized variables in copy constructor

standardizing pixel type across entire project to VTK pixel types

current issues: playback is frozen in frame, have to change access to image data

#### 2014-01-28, 18:29:31 - Adam Rankin
(In r:3141|plus:3141) re #793 references to ITK pixel type in PlusLib corrected

#### 2014-02-04, 18:34:25 - Adam Rankin
re #793 visualization restored... call to Modified()
Commit: r:3142|plus:3142

#### 2014-02-04, 18:55:26 - Adam Rankin
All seems to be working except that I have image alignment issues. My image is horizontally wrapped by some number of pixels. Investigating.

#### 2014-02-04, 19:19:00 - Adam Rankin
re #793 SegmentationParameterDialog now visualizing correctly.
Commit: r:3143|plus:3143

#### 2014-02-04, 20:14:35 - Adam Rankin
re #793 reducing unnecessary reallocation of memory if all values match requested values
Commit: r:3145|plus:3145

#### 2014-02-05, 21:08:58 - Adam Rankin
re #793 WIP fixed to codebase correcting failing tests

restoring pixel type in oriented image to support non-8 bit image types

extracting image allocation to a static function to provide a clean implementation of image allocation
Commit: r:3146|plus:3146

#### 2014-02-05, 22:00:57 - Adam Rankin
re #793 WIP re-implementing ReadImageFromFile to support file types that have existing reader classes
Commit: r:3147|plus:3147

#### 2014-02-05, 23:14:07 - Adam Rankin
re #793 WIP implementing some code comment changs
Commit: r:3148|plus:3148

#### 2014-02-05, 23:58:31 - Adam Rankin
re #793 WIP implementing some more code comment changs
Commit: r:3149|plus:3149

#### 2014-02-12, 22:15:25 - Adam Rankin
re #793 100% automated tests pass with vtk image, continuing to manual testing
Commit: r:3157|plus:3157

#### 2014-02-13, 16:12:13 - Adam Rankin
re #793 Merged revision(s) 3135-3158, 3126-3134 from trunk/PlusLib:
Merged revision(s) 3136-3158 from trunk/PlusApp:
Commit: r:3159|plus:3159

#### 2014-02-19, 15:48:09 - Adam Rankin
re #793 Merged revision(s) 3157-3163, 3126-3157 from trunk/PlusLib and trunk/PlusApp
Commit: r:3164|plus:3164

#### 2014-02-19, 18:16:18 - Adam Rankin
re #793 fixing display update bug
adding better error message reporting
Commit: r:3165|plus:3165

#### 2014-02-19, 18:55:48 - Adam Rankin
test #793 commiting branch to trunk

underlying data structure for a PlusVideoFrame changed from an Itk image to a Vtk image. Itk image can be generated on demand.
Commit: r:3166|plus:3166

#### 2014-02-19, 18:55:48 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-02-20, 14:38:37 - Andras Lasso
re #793: Minor fixes and error checks added
Commit: r:3167|plus:3167

#### 2014-02-20, 15:13:46 - Adam Rankin
re #793 code comment fixes
Commit: r:3168|plus:3168

#### 2014-02-20, 15:31:41 - Adam Rankin
re #793 repairing 64 bit build
Commit: r:3169|plus:3169

#### 2014-02-20, 15:39:52 - Adam Rankin
re #793 hardcoding type checking
Commit: r:3170|plus:3170

#### 2014-02-20, 15:41:07 - Adam Rankin
re #793 improving error output
Commit: r:3171|plus:3171

#### 2014-02-20, 16:13:29 - Adam Rankin
re #793 missed camera link video source
Commit: r:3172|plus:3172

#### 2014-02-20, 17:49:00 - Adam Rankin
re #793 fixing linux build 


Commit: r:3173|plus:3173

#### 2014-02-21, 00:53:01 - Andras Lasso
You've done a great job, Adam. There are just a few remaining issues:
* 2D image in fCal is not updating (in the segmentation parameter dialog it works)
* in PlusVideoFrame saving is implemented with VTK, while ReadImageFromFile uses ITK. As 2D image IO classes in ITK and VTK use different image orientations, we cannot mix these. As we mostly use VTK now, I think it would be better to always use VTK image IO classes.
* in PlusVideoFrame the get oriented image method always creates a new vtkImageData object, then pixels are copied, and the object is deleted (causing memory fragmentation and performance degradation) - I'll commit a fix for this soon

#### 2014-02-21, 01:14:02 - Andras Lasso
re #793: Fixed memory reallocation issue (memory was reallocated and copied for each acquired frame). Cleaned up iamge extent to image size conversion. Added Modified() calls where pixel data was updated with direct buffer address (e.g., memcpy) to fix image update issue in fCal application GUI.
Commit: r:3177|plus:3177

#### 2014-02-21, 01:14:39 - Andras Lasso
I've committed fixes for the frame reallocation and fCal update issues (the update problem were due to that only the pixel data changed in the vtkImageData object but the modified time didn't, so the renderer thought that nothing changed, so did not update the screen).
So, the only remaining issue is the image IO classes inconsistency. It would be great if you could replace the ITK IO classes by VTK IO classes in PlusVideoFrame.

#### 2014-02-21, 01:14:39 - Andras Lasso
status: changed from "Test" to "New"

#### 2014-02-21, 14:37:10 - Adam Rankin
'Added Modified() calls where pixel data'..

That's what it was! Thanks!

I'll work on the IO classes.

#### 2014-02-25, 18:18:07 - Adam Rankin
@lassoan The only remaining ITK IO usage I see is in TrackedFrame. Is that what you were referring to?

#### 2014-02-25, 19:02:10 - Andras Lasso
yes

#### 2014-03-05, 20:24:12 - Adam Rankin
status: changed from "New" to "Test"

#### 2014-04-25, 00:02:44 - Adam Rankin
re #793 Merged revision(s) 3283-3286 from trunk/PlusLib:

Merged revision(s) 3283-3286 from trunk/PlusApp:

Merged revision(s) 3201-3286 from trunk/PlusBuild:
Commit: r:3287|plus:3287

#### 2014-06-05, 01:03:11 - Andras Lasso
re #793: Removed some unnecessary ITK dependencies
Commit: r:3367|plus:3367

#### 2014-06-05, 01:12:22 - Andras Lasso
Plus works well after the ITK->VTK image refactoring

#### 2014-06-05, 01:12:22 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-06-05, 01:12:30 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #794 Plus server does not use output file name when recording
When we send an example command, like <Command Name='StartRecording' OutputFileName='Hello.mha' />
Hello.mha file doesn't get created. PlusServer always uses the default generated file names.
Default names should only be used when 'OutputFileName' is not specified.


#### 2013-07-11, 16:16:17 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-07-11, 16:16:18 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2013-07-11, 16:16:24 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1.0"

#### 2013-07-15, 12:47:59 - Adam Rankin
<Command Name='StopRecording' OutputFileName='Hello.mha' />

The save file call is made in the stop recording command. I will see if I can also set the filename during start.

#### 2013-07-15, 12:53:21 - Adam Rankin
Yes, I can, testing now.

#### 2013-07-15, 12:53:21 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-07-15, 13:04:37 - Adam Rankin
*sigh* The attribute is case sensitive as well...

<Command Name='StartRecording' CaptureDeviceId='CaptureDevice' OutputFilename='Hello.mha' />

#### 2013-07-15, 14:57:36 - Adam Rankin
(In r:2935|plus:2935) fixed #794 output filename for recording can be sent with either start command or stop command, stop command overwrites start command if present

#### 2013-07-15, 14:57:36 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-07-15, 15:00:07 - Andras Lasso
@rankin: Please also check if the documentation at PlusServer_commands is still up-to-date


## #795 Add subdirectories within CalibrationAlgo
Create subdirectories (see a suggestion below). Files can still all be placed into the same .lib file.

h1. LinearObjectRegistrationAlgo

Line.h 
LinearObject.h 
LinearObjectBuffer.h 
Plane.h 
Planes.h 
Point.h 
PointObservation.h 
PointObservationBuffer.h 
Reference.h 
vtkPhantomLinearObjectRegistrationAlgo.h

h1. PointRegistrationAlgo

itkFiducialTransformComputation.h  => can be removed? nothing seems to use it
vtkPhantomLandmarkRegistrationAlgo.h
vtkBrachyStepperPhantomRegistrationAlgo.h 

h1. PivotCalibrationAlgo

vtkPivotCalibrationAlgo.h

h1. TemporalCalibrationAlgo

vtkTemporalCalibrationAlgo.h 
vtkPrincipalMotionDetectionAlgo.h
vtkLineSegmentationAlgo.h
vtkMeanShiftClustering.h

h1. SingleWallCalibrationAlgo

vtkSingleWallCalibrationAlgo.h

h1. MultiNWireCalibrationAlgo

vtkSpacingCalibAlgo.h
vtkCenterOfRotationCalibAlgo.h
vtkProbeCalibrationAlgo.h
vtkProbeCalibrationOptimizerAlgo.h



#### 2013-07-09, 19:37:34 - Andras Lasso
description: changed from "Something like this:

h1. L..." to "Create subdirectories (see ..."

#### 2013-07-09, 19:46:39 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-07-15, 15:15:10 - Adam Rankin
(In r:2936|plus:2936) fixed #795 cleaning up calibration algo folder with subfolders

#### 2013-07-15, 15:15:10 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-07-16, 11:06:46 - Bart??omiej Pyci??ski
Hello, coud you check again the CMakeLists.txt files? I couldn't compile PlusLib today, had the same errors as  Samira Sojoudi  (see message www.assembla.com/spaces/plus/messages/3122943). I manually changed CMakeLists in CalibrationAlgo dir, but then there are errors (Cannot open include file: 'vtkProbeCalibrationAlgo.h': No such file or directory) in PatternLocAlgo.

#### 2013-07-16, 12:39:14 - Andras Lasso
(In r:2940|plus:2940) re #795: Fixed build errors

#### 2013-07-16, 12:46:21 - Adam Rankin
Ah, I had it wrong and couldn't get it to work. Thanks Andras.

#### 2013-07-16, 12:59:30 - Andras Lasso
(In r:2941|plus:2941) re #795: Removed itkFiducialTransformComputation (vtkPhantomLandmarkRegistrationAlgo is used instead). Removed vtkMeanShiftClustering (moved to iCalBrachy project, it's only used there)


## #796 What's the unit of the values in the translation part of Probe to Reference using Ascension3DG tracker? 
Are the translation part of transformation given in the meta file in 'mm'? 


#### 2013-07-11, 16:14:35 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2013-07-11, 16:14:45 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Release Plus-Future"

#### 2013-07-11, 16:14:51 - Adam Rankin
Issue Type: changed from "Enhancement" to "Administrative"

#### 2013-07-11, 16:16:21 - Andras Lasso
According to Coordinate_system_definitions the unit of both _Probe_ and _Reference_ coordinate systems are in mm.
According to Transformation_matrix_definition the unit of the translation component is the unit of the _To_ coordinate system (here: _Reference_ coordinate system).
Therefore, the unit of the translation values in the ProbeToReferenceTransform is mm.

#### 2013-07-11, 16:16:21 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-07-11, 16:17:05 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-07-12, 13:41:37 - Amir Khojaste
Hi Andras,

I had already seen that and I assume that these values are in mm as well, yesterday I acquired a sequence of tracked US, the probe to reference translation (p_t*inv(r_t)) does not make sense if the values are in mm. I’ve acquired this sequence while making the probe far from the reference by the step of 2 cm approximately. Look at the p_r translations I've calculated, besides I've done the temporal calibration beforehand as well. 

p_r1 = [-0.2130   -0.9769    0.0196  775.4472   -0.8595    0.1968    0.4718  489.6373  -0.4647    0.0836   -0.8815  485.0092    0         0         0    1.0000 ]
p_r2 =[ -0.1903   -0.9803    0.0532  751.3468  -0.8551    0.1922    0.4815  489.8749  -0.4822    0.0462   -0.8748  520.2255 0         0         0    1.0000]
p_r3 = [ -0.2612   -0.9595    0.1056  767.6409  -0.8098    0.2773    0.5171  437.4804 -0.5254    0.0496   -0.8494  555.6748  0         0         0    1.0000]


#### 2013-07-12, 13:54:38 - Tamas Ungi
Maybe you mixed up the wires and another sensor was plugged in that port. It's hard to notice if you have another reference accidentally, because spare sensors lie around statically, so the system basically works with any reference that doesn't move. They are just far.

#### 2013-07-12, 15:04:13 - Andras Lasso
Amir, please read again the pages that I referenced above. Points should be multiplied from the right.

#### 2013-07-12, 15:54:27 - Amir Khojaste
Hi Andras, 

What do you mean? I meant the translation part of ProbeToReference does not make sense. The points should be multiplied from right definitely, if we multiply them from left we’ll get a 4x4 matrix not a point. Thanks


#### 2013-07-12, 16:52:36 - Tamas Ungi
I think it should be ( inv(r_t) * p_t ) in matlab style. Because that will result Probe->Tracker => Tracker->Reference; that gives Probe->Reference.

#### 2013-07-12, 17:49:12 - Amir Khojaste
Alright. I see. Thanks Tamas

#### 2013-07-12, 18:04:38 - Andras Lasso
Please use the naming convention specified in http://perk.cs.queensu.ca/sites/perk.cs.queensu.ca/files/WritingCorrectAndUnderstandableCode.pptx. Then it's almost impossible to make errors with combining transforms. Naming variables p_t and r_t are unnacceptable. I've mistaken your p_t*inv(r_t) expression by multiplying a point by a matrix from the right.

#### 2013-07-12, 18:13:55 - Amir Khojaste
Actually I just used them as a sign to clarify what I did and they are not the names I used for transformation, but thanks for the information nonetheless. 

#### 2013-07-12, 18:42:32 - Andras Lasso
OK. Use the same naming convention in the source code, documentation, and all communication to avoid misunderstandings and save everybody's time.

#### 2013-07-16, 13:42:03 - Andras Lasso
No need for code or documentation change.

#### 2013-07-16, 13:42:03 - Andras Lasso
status: changed from "Test" to "Invalid"


## #797 Update Plus server/Plus commands to use new OpenIGTLink command syntax


#### 2013-07-11, 18:47:15 - Adam Rankin
(In r:2931|plus:2931) fixed #797 Command syntax updated

Server parses incoming command to see if command ID is set, uses that in the reply when replying

#### 2013-07-11, 18:47:15 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-07-11, 20:56:39 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2013-07-11, 21:21:35 - Adam Rankin
(In r:2932|plus:2932) re #797 cleaning up details regarding command id

changing command id to be a string

changing ACQ to ACK

#### 2013-07-11, 21:21:51 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-07-15, 02:28:29 - Adam Rankin
(In r:2934|plus:2934) fixed #797 added client side verification of duplicate commands, issue still remains in OpenIGTLinkRemote sending double messages

keeping client side implementation anyways

#### 2013-07-15, 02:28:29 - Adam Rankin
status: changed from "Test" to "Fixed"


## #798 Commit change in the repository to trigger automatic build
This ticket is only used for committing changes to trigger automatic builds.

#### 2013-07-15, 15:34:26 - Adam Rankin
(In r:2938|plus:2938) re #798 forcing continuous build

#### 2013-07-15, 15:34:26 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-07-16, 15:27:08 - Adam Rankin
(In r:2944|plus:2944) re #798 forcing continuous build

#### 2013-07-16, 16:45:13 - Andras Lasso
summary: changed from "Generic build ticket" to "Commit change in the repository to trigger automatic build"

#### 2013-07-16, 16:45:13 - Andras Lasso
description: changed from "" to "This ticket is only used fo..."

#### 2013-07-16, 17:49:28 - Adam Rankin
(In r:2945|plus:2945) re #798 forcing continuous build

#### 2014-12-10, 21:10:02 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-06-30, 22:33:44 - Adam Rankin
re #798 testing continuous build
Commit: r:4698|plus:4698

#### 2016-06-30, 22:33:44 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-07-05, 19:15:54 - Adam Rankin
re #798 testing continuous
Commit: r:4718|plus:4718


## #799 When mixing two trackers with same tool names, recorded data is missing


#### 2013-07-23, 19:53:44 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-07-24, 18:54:29 - Adam Rankin
Internal storage of tools was 'From' reference frame only. Need to refactor to internally reference a tool by its complete transform.

#### 2013-07-25, 20:33:45 - Adam Rankin
(In r:2947|plus:2947) test #799 Build will break due to Sonix mismatch, unclean working copy when fix started

tools ids are now the transform produced by the tool

corrected references and lookups to tools in various parts of the code to reflect the new ID structure

#### 2013-07-25, 20:33:45 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-07-25, 21:00:03 - Adam Rankin
(In r:2948|plus:2948) test #799 missing body to empty constructor

#### 2013-07-25, 21:23:55 - Adam Rankin
(In r:2949|plus:2949) re #799 fixing build

#### 2013-07-25, 22:56:06 - Andras Lasso
By the way, in practice you shouldn't have the same tool name ('from' coordinate system) for two different trackers. If you track the same object using two different trackers, then you'll track two different coordinate systems (as they are defined by the tracker-specific marker or sensor mounted on the object).

Anyway, it's nice if using the same tool names for different trackers is allowed, because there is a theoretical possibility that someone will need it in the future (e.g., if the same marker is tracked by two optical trackers).

#### 2013-07-29, 17:06:25 - Adam Rankin
Common use cases are working. Marking as fixed.

#### 2013-07-29, 17:06:25 - Adam Rankin
status: changed from "Test" to "Fixed"


## #800 Use the same command-line arguments for both CreateSliceModels and VolumeReconstructor
transform => image-to-reference-transform
img-seq-file => source-seq-file


#### 2013-07-29, 11:53:04 - Andras Lasso
(In r:2951|plus:2951) fixed #800: Now CreateSliceModels and VolumeReconstructor uses the same command-line arguments to make troubleshooting easier (if volume reconstruction results are not good then CreateSliceModels can be run using exactly the same arguments)

#### 2013-07-29, 11:53:04 - Andras Lasso
status: changed from "New" to "Fixed"


## #801 Update fCal 2.x phantom with triangle profile holes
Replace the current circular hole profile for the wires in fCal 2.x with triangle profile, as it keeps the wires in a more definite position (similarly to fCal 3.x phantom). Also, triangular profile can be described more accurately, with less triangles in the STL surface mesh.

#### 2014-06-05, 02:02:17 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-01, 03:14:39 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"

#### 2015-02-25, 22:32:53 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-02-25, 22:32:53 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2015-02-25, 22:34:09 - Andras Lasso
re #801: First version of the new fCal-2 phantom with triangle holes

The landmark positions (and sensor holder positions) are different, so new config files are needed.
Commit: r:4015|plus:4015

#### 2015-02-25, 22:36:13 - Andras Lasso
re #801: Renamed fCal_2.1 phantom files for consistency
Commit: r:4016|plus:4016

#### 2015-03-06, 04:41:40 - Andras Lasso
re #801: Added second sensor fix hole and some additional labels to fCal_2.1 phantom. Added geometry description file.
Commit: r:4032|plus:4032

#### 2015-03-06, 04:51:13 - Andras Lasso
re #801: Added fCal config file for fCal-2.1 phantom (not tested yet)
Commit: r:4033|plus:4033

#### 2015-03-06, 17:01:05 - Andras Lasso
Ready for testing.
* Printable fCal-2.1 phantom model is available in the model catalog: http://perk-software.cs.queensu.ca/plus/doc/nightly/modelcatalog/
* Sample configuration file is available here: https://www.assembla.com/code/plus/subversion/nodes/4033/trunk/PlusLib/data/ConfigFiles/PlusDeviceSet_fCal_SonixTouch_L14-5_Ascension3DG_2.1.xml


#### 2015-03-06, 17:01:05 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-19, 16:13:22 - Adam Rankin
The Robarts group has had a nice success with using hemispherical divots for landmark points and a hemispherical pointer. Something to consider.

#### 2015-03-19, 16:24:07 - Andras Lasso
Yes, sphere/sharp tip has different advantages. Sphere tip requires accurate machining but it is more accurate.
Do you use a machined or 3D printed stylus?

#### 2015-04-14, 19:25:53 - Adam Rankin
I just talked with John Moore and he says they have both. The current iteration is just a nylon sphere cut in half and glued onto a shaft.

#### 2015-04-23, 20:52:04 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2016-06-30, 14:35:27 - Adam Rankin
Closing this ticket as the proposed design exists.

#### 2016-06-30, 14:35:27 - Adam Rankin
status: changed from "Test" to "Fixed"


## #802 Move PhidgetSpatial per-tool parameter settings to the tool elements
Move attributes such as TiltSensorWestAxisIndex, AhrsAlgorithm, AhrsAlgorithmGain, etc. in the tool elements.

To manage deprecation: PLUS_ENABLE_DEPRECATED_API controls supporting of deprecated config file or algo interface. Remove in next major version (or after 6 months). Add date of deprecation. Log warning when deprecated API is used and explain how to migrate to the supported version.

<Device
Type=”PhidgetSpatial”
Id=”TrackerDevice”
AcquisitionRate=”125”
LocalTimeOffsetSec=”0.0”>

<DataSources>
<DataSource Type=”Tool” Id=”Accelerometer” PortName=”Accelerometer” BufferSize=”2500” AveragedItemsForFiltering=”20”/>
<DataSource Type=”Tool” Id=”Gyroscope” PortName=”Gyroscope” BufferSize=”2500” AveragedItemsForFiltering=”20”/>
<DataSource Type=”Tool” Id=”Magnetometer” PortName=”Magnetometer” BufferSize=”2500” AveragedItemsForFiltering=”20”/>
<DataSource Type=”Tool” Id=”TiltSensor” PortName=”TiltSensor” BufferSize=”2500” AveragedItemsForFiltering=”20” TiltSensorWestAxisIndex=”1” AhrsAlgorithm=”NONE/MADGWICK_IMU/MAHONY_IMU”  AhrsAlgorithmGain=”1.5”  />
<DataSource Type=”Tool” Id=”OrientationSensor” PortName=”OrientationSensor” BufferSize=”2500” AveragedItemsForFiltering=”20” AhrsAlgorithm=”MADGWICK_MARG”  AhrsAlgorithmGain=”1.5” />
</DataSources>
<OutputChannels>
<OutputChannel Id=”TrackerStream” >
<DataSource Id=”Accelerometer”/>
<DataSource Id=”Gyroscope”/>
<DataSource Id=”Magnetometer”/>
<DataSource Id=”TiltSensor”/>
<DataSource Id=”OrientationSensor”/>
</OutputChannel>
</OutputChannels>
</Device>


#### 2014-06-05, 02:02:21 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-01, 17:39:08 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"


## #803 Add a file-based tracked US sending example configuration file in the PlusApp installer package 
The current PlusApp installer package does not contain an example configuration file for sending tracked ultrasound data through OpenIGTLink.
The example should not require any special hardware (tracker or ultrasound), but it should just replay a pre-recorded sequence.

#### 2013-08-03, 17:54:19 - Andras Lasso
(In r:2956|plus:2956) re #803: Added PlusServer sample config file to the Plus installation

#### 2013-08-03, 17:55:06 - Andras Lasso
(In r:2957|plus:2957) re #803: Added PlusServer example config file and image sequence to the PlusApp installation package

#### 2013-08-03, 17:55:23 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 17:17:23 - Andras Lasso
status: changed from "Test" to "Fixed"


## #804 Create CMake build option to enable/disable downloading of PlusLib test data.
Separate code checkout and data checkout.

#### 2013-08-05, 15:08:15 - Adam Rankin
Attempting to find a solution that doesnt' change the repo structure, only the download command.

May replace SVN_REPOSITORY in External_PlusLib command with a custom DOWNLOAD_CMD that does/does not download the TestImages directory.

#### 2013-08-06, 13:45:15 - Adam Rankin
@lassoan an alternative I see is to place the data in another root directory called PlusData (or something) and have that as an external project that downloads to the pluslib/data/testimages directory...

thoughts?

#### 2013-08-06, 13:49:06 - Adam Rankin
The downside to the PlusData approach is that the location of the folder would be another cmake variable who's path would have to match the repo structure.

With the first approach, the path could be embedded in the CMake file as part of the command.

I can't visualize a way around manually entering the path in a variable or file...

#### 2013-08-06, 15:06:21 - Andras Lasso
It's important that src and data directories are kept consistent (for a specific version of the source code there is matching version of the test data).
At some point, there was no common root directory of the src and data directories, but it was very difficult to keep the data and source consistent.

I see two options:
* Option A: Keep the directory structure as is, just review the files and move the non-essential ones elsewhere and reduce the size of the rest.
* Option B: Use the CMake ExternalData method (http://www.kitware.com/source/home/post/107), preferably with an SVN repository.

#### 2013-08-06, 15:20:20 - Andras Lasso
For me, this is a low priority item (I'm not fully convinced that we really need this), as it makes Plus build somewhat more convenient for users who don't want to run tests (do we want to help this practice??), but makes the build system more complex for everybody.

#### 2013-08-06, 17:37:08 - Tamas Ungi
Right now, when PLUS users (who build their own PLUS) ask me about how to set up IGT systems, it's so good that I can send them simple instructions using a config file and a saved example data from the PLUS repo (already on their computer). They can effortlessly start a tracked ultrasound simulator. I'm sorry to hear that the example data will not be part of PLUS, as it will be a lot more complicated to show them how PLUS works on their computer.


#### 2013-08-06, 20:46:18 - Adam Rankin
@ungi If we end up doing this change, nothing will change for users. The option would be enabled by default and advanced users could elect not to download the test data.

Essentially nothing would change to the user except if you didn't want to download 430MB of test/example data, you don't have to.

#### 2013-08-06, 20:46:54 - Adam Rankin
@lassoan yes I agree, not high priority. I was just wondering if there was a clean way of making the data download optional, enabled by default.

#### 2013-08-28, 15:24:58 - Adam Rankin
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-Future"

#### 2013-08-28, 15:25:04 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-03-24, 15:14:56 - Andras Lasso
re #804: Fixed documentation file references to files in PlusLibData directory
Commit: r:4572|plus:4572

#### 2016-03-24, 15:14:56 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-03-24, 15:16:24 - Andras Lasso
re #804: Fixed documentation file references to files in PlusLibData directory
Commit: r:4573|plus:4573


## #805 Set vtkPhantomLandmarkRegistrationAlgo explicite as RigidBody, not Similarity transform
In file vtkPhantomLandmarkRegistrationAlgo.cxx, line 85 looks like follow:
 

~~~~
itk::Similarity3DTransform<double>::Pointer transform = itk::Similarity3DTransform<double>::New();

~~~~


This is an object for landmark based transform of the fCal phantom. But in the class itk::LandmarkBasedTransformInitializer, there is information, that 'Currently, the  following transforms are supported by the class: VersorRigid3DTransform,  Rigid2DTransform'. As Similarity3DTransform inherits VersorRigid3DTransform, there is no compilation or runtime error, but the transformation is not a Similarity transform (there is no scaling). There is the same issue in the class vtkPhantomLinearObjectRegistrationAlgo, maybe also in other classes?



#### 2013-08-06, 15:55:38 - Andras Lasso
Thank you, it's a good catch. There is no need for scaling for the phantom registration and the according to the documentation we may use a sub-optimal transform, so VersorRigid3DTransform would be more appropriate, indeed.

#### 2013-08-06, 15:56:34 - Andras Lasso
@mholden8: Could you please fix this for both vtkPhantomLandmarkRegistrationAlgo.cxx and vtkPhantomLinearObjectRegistrationAlgo?

#### 2013-08-06, 15:56:34 - Andras Lasso
assigned_to_id: changed from null to "mholden8"

#### 2013-08-09, 16:44:46 - Matthew Holden
status: changed from "New" to "Accepted"

#### 2013-08-14, 13:53:15 - Matthew Holden
@lassoan: Can you please grant me the appropriate permissions to make this commit? Thanks.

#### 2013-08-14, 21:46:22 - Andras Lasso
You can now commit changes. Please also test that there are no regressions due to the changes. Thanks!

#### 2013-08-15, 15:50:57 - Matthew Holden
status: changed from "Accepted" to "Test"

#### 2013-08-15, 16:43:19 - Matthew Holden
(In r:2958|plus:2958) Fixed #805: Use VersorRigid3DTransform in Landmark and LinearObject registrations. 

#### 2013-08-15, 16:43:19 - Matthew Holden
status: changed from "Test" to "Fixed"


## #806 PlusServerRemoteControl tool doesn't receive reply from the server
Following the example on the PlusServer_commands page, started the server
PlusServer.exe --config-file=..\\..\\PlusLib\\data\\ConfigFiles\  esting\\PlusConfiguration_OpenIGTLinkCommandsTest.xml

and run a start acquisition command
PlusServerRemoteControl.exe --command=START_ACQUISITION

The server receives the command (Received command from device PlusCmd: <Command Name='StartRecording'></Command> is logged), but the client doesn't receive a reply (|ERROR|010.135000| Failed to receive reply to the command|in ..\\..\\..\\..\\PlusLib\\src\\PlusServer\  esting\\PlusServerRemoteControl.cxx(257) is logged).

#### 2013-08-25, 19:22:36 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-08-25, 19:27:54 - Andras Lasso
(In r:2959|plus:2959) test #806: Fixed vtkPlusOpenIGTLinkClient to comply with the OpenIGTLink command execution pattern (send CMD_<uid> and expect ACK_<uid> reply)

#### 2013-08-25, 19:27:54 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-08-26, 19:23:02 - Andras Lasso
(In r:2961|plus:2961) test #806: Fixed volume reconstructor OpenIGTLink command (RECONSTRUCT): it now expects channel id as an input argument (and not device id). Command UID is auto-generated only if a UID is not specified.

#### 2013-08-27, 07:37:22 - Andras Lasso
(In r:2962|plus:2962) test #806: Added check for existence of ReferencedCommandId to avoid crash if it is undefined

#### 2013-08-27, 07:43:42 - Andras Lasso
PlusServerRemoteControl seems to work fine, but from Slicer the OpenIGTLinkRemote doesn't receive any reply:



~~~~
<Command Name='StartRecording' CaptureDeviceId='CaptureDevice' OutputFilename='RecordedSequence.mha'/>

<Command Name='StopRecording' CaptureDeviceId='CaptureDevice'/>

<Command Name='ReconstructVolume' InputSeqFilename='RecordedSequence.mha' OutputVolFilename='volumeReconstructionOutput.mha' OutputVolDeviceName='recvol_Reference'/>


~~~~


It works fine but the reply is: Waiting for reply...


#### 2013-08-27, 07:43:42 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-08-27, 07:43:42 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-08-28, 15:23:02 - Adam Rankin
Client side issue.

Fixed in OpenIGTLinkRemoteCommandWidget

url:https://github.com/SlicerIGT/OpenIGTLinkRemote/commits/master|https://github.com/SlicerIGT/OpenIGTLinkRemote/commits/master

#### 2013-08-28, 15:23:02 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-08-28, 15:23:02 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 16:53:49 - Andras Lasso
This works well now with the current Plus and Slicer nightly build

#### 2013-12-19, 16:53:49 - Andras Lasso
status: changed from "Test" to "Fixed"


## #807 Whitespace at the end of file name causes error
This is an example part of a config file. If I delete the space at the end of the file name, it works. It doesn't find the file like this:

<Device
      Id='TrackedVideoDevice'
      Type='SavedDataSource'
      SequenceMetafile='s:\\images\\Spine\\phantom\\Scoliosis\\2013-07-18_AdultScoliosisVolume\\AdultScoliosis-T3.mha '
      UseData='IMAGE_AND_TRANSFORM'

#### 2013-09-17, 05:30:38 - Andras Lasso
Yes, if you enter any extra character anywhere in a filename then the file will not be found. We could add an exception for whitespaces at the and end of filenames, because most (not all) Windows program and APIs truncate the  space at the end of the filenames, but it's not the case for Linux/Mac.

I would rather not introduce OS-specific heuristics to fix an issue due to such a trivial user error. However, if you think that the error/warning messages were not helpful enough to detect the user error then let me know and we should be able to improve the messages.

#### 2013-09-17, 05:30:38 - Andras Lasso
assigned_to_id: changed from null to "ungi"

#### 2013-09-17, 05:30:38 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-10-22, 19:57:21 - Adam Rankin
(In r:2973|plus:2973) fixed #807 corrected feedback on error when a file is not loadable. added fallback trim of filename and additional error output.

#### 2013-10-22, 19:57:21 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2013-10-22, 21:41:12 - Andras Lasso
Adding an extra space anywhere in the filename is an error (see my comments above), so the user should be aware that the config file has to be fixed.
@rankin: Could you please log a verbose warning message if you can only load the trimmed filename? Thanks!

#### 2013-10-22, 21:41:12 - Andras Lasso
assigned_to_id: changed from "ungi" to "rankin"

#### 2013-10-22, 21:41:12 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2013-10-23, 16:20:05 - Adam Rankin
(In r:2975|plus:2975) fixed #807 adding warning message when filename had to be trimmed

#### 2013-10-23, 16:20:05 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #808 Allow finding image and model files in the current working directory
Currently if relative path is specific in a device set config file for an input image or model then the image, model, and the device set configuration directories are searched (these directories are set in the PlusConfig.xml file).

It would be convenient if the image and model files could be fetched from the current working directory as well.

#### 2013-09-18, 22:17:29 - Andras Lasso
(In r:2965|plus:2965) re #808: Image and model files are now can be placed in the current working directory

#### 2013-09-18, 22:18:03 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2016-11-25, 18:40:58 - Andras Lasso
re #808: Allow finding model and image files relative to the current device set configuration file directory in PlusServer
Commit: r:4948|plus:4948


## #809 Wiki page not up to date
Under the tab 'Configuration File Documentation/Version 2' at wiki page there is still 'vtkPhantomRegistrationAlgo' tag, instead of 'vtkPhantomLandmarkRegistrationAlgo'. This tag appears two times, while there is no tag 'vtkProbeCalibrationAlgo'.

#### 2013-09-20, 13:29:08 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-09-20, 13:29:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-09-20, 13:29:14 - Adam Rankin
milestone_id: changed from null to "Release Plus-2.1.0"

#### 2013-09-20, 13:34:51 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-09-20, 13:34:53 - Adam Rankin
assigned_to_id: changed from "rankin" to "bpycinski"

#### 2013-09-20, 13:35:30 - Adam Rankin
@bpycinski I brought the wiki up to date. Let me know if you find any other items.

#### 2013-09-21, 17:51:23 - Bart??omiej Pyci??ski
OK, thank you.

#### 2013-09-21, 17:51:23 - Bart??omiej Pyci??ski
status: changed from "Test" to "Fixed"


## #810 Sonix video device does not correctly detect mode
Detects b and rf when only B is requested.

#### 2013-09-23, 17:27:46 - Adam Rankin
(In r:2966|plus:2966) fixed #810 correctly determining requested modes

#### 2013-09-23, 17:27:46 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-09-23, 18:20:49 - Adam Rankin
(In r:2967|plus:2967) re #810 made the calibration more robust by continuing on error that does not break calibration procedure


## #811 Update Sikuli to 1.0.1
http://www.sikuli.org/download.html

#### 2013-10-22, 19:56:14 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2016-07-13, 16:48:32 - Adam Rankin
Closing as invalid as QtTesting provides a viable alternative.

#### 2016-07-13, 16:48:32 - Adam Rankin
status: changed from "New" to "Invalid"


## #812 EM tracker quality signal (Ascension trakSTAR )
Is it possible to also read and pass the Q (quality signal) along with the transformation matrix?

#### 2013-10-10, 20:10:57 - Andras Lasso
This would be a new feature. We can create a new 'virtual tool' for this and store the Q in the translation component of the transformation matrix.

I guess it's the (USHORT quality) value that is returned along with the pose data (s:\\data\\lab.hardware\\Ascension\\3DGuidance_trakSTAR_Installation_and_Operation_Guide.pdf).

When would you need this by?

#### 2013-10-10, 21:24:49 - Hossein Sadjadi
Thanks Andras, 
I always used the Ascension software to save the data and their standard output format is: [status x, y, z, azimuth, elevation, roll, button, quality, time]
The quality Q (AKA, signal quality, quality number, or metal number), is an integer (I think 4 bytes) that somehow represent measurement uncertainty which I need to store it's value. 

I plan to perform my experiments in around a week from now. If this can be incorporated into Plus by then, it would be great, otherwise I still would need this for my other set of experiments that I'll be running later on this term (not sure about its time yet).

#### 2013-10-17, 14:58:55 - Adam Rankin
milestone_id: changed from "Release Plus-2.0.1" to "Release Plus-2.1.0"

#### 2013-10-22, 20:06:18 - Adam Rankin
(In r:2974|plus:2974) fixed #812 tracker frame of reference no longer defaults to tracker, but the device id

#### 2013-10-22, 20:06:18 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-10-22, 20:27:18 - Adam Rankin
wrong ticket #

#### 2013-10-22, 20:27:18 - Adam Rankin
status: changed from "Fixed" to "New"

#### 2013-12-06, 19:34:52 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-06, 19:38:24 - Andras Lasso
(In r:3023|plus:3023) re #812: Added recording of quality signal for Ascension trackers (WIP)

#### 2013-12-06, 20:24:18 - Andras Lasso
(In r:3024|plus:3024) re #812: Quality values are now saved for the sensors. To complete the work, need to add possibility to change sensor parameters.

#### 2013-12-07, 02:43:01 - Andras Lasso
(In r:3025|plus:3025) re #812: Added config file attributes to set quality parameters for Ascension3DG tracker sensors (QualityErrorSlope, QualityErrorOffset, QualityErrorSensitivity, QualityFilterAlpha - see PlusConfiguration_SensorFusion_Ascension3DG.xml for an example)

#### 2013-12-07, 02:49:50 - Andras Lasso
The feature is complete, it is ready for testing - e.g., capture data using fCal, with the PlusConfiguration_SensorFusion_Ascension3DG.xml config file.

Quality values are returned in the Quality matrix. Quality values the first 0-2 sensors are in the translation part of the matrix. Quality values for the 3-5 sensors are in the diagonal of the rotation part of the matrix.

With this development completed, PlusServer can send the transforms and quality values to clients through OpenIGTLink. Need to implement an OpenIGTLink receiver in Matlab - see #832.


#### 2013-12-07, 02:49:50 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-07, 03:16:00 - Hossein Sadjadi
Thanks Andras for your supports. I'll try to test this first thing on Monday and hopefully soon with the next development we'll be able to receive them in Matlab too! -- Excellent 

#### 2013-12-07, 12:45:36 - Andras Lasso
(In r:3026|plus:3026) re #812: Changed quality value storage in transformation matrices. Now only the translation values are used, because rotation matrix components are not interpolated linearly when the values are resampled due to time synchronization. Two matrices are used: quality1 port stores values for sensor 0, 1, 2; quality2 port stores values for sensor 3.

#### 2013-12-07, 12:51:54 - Andras Lasso
(In r:3027|plus:3027) re #812: Updated sample config file for Ascension quality value saving

#### 2013-12-09, 22:25:59 - Andras Lasso
(In r:3037|plus:3037) re #812: Fixed Ascension3DGTracking issue (tracking failed when quality value was requested)

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 16:54:25 - Andras Lasso
Hossein confirmed that it works for him

#### 2013-12-19, 16:54:25 - Andras Lasso
status: changed from "Test" to "Fixed"


## #813 Tool status widget does not accurately respresent all known transforms
When two tools have the same Tool name but different frames of reference, only one item is shown.

#### 2013-10-17, 15:42:48 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-10-17, 16:28:57 - Adam Rankin
Nevermind, apparently I did this already.

#### 2013-10-17, 16:28:57 - Adam Rankin
status: changed from "Accepted" to "Invalid"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #814 Confirm correct application of temporal calibration results to devices
I remember seeing a local device offset in the mixer. This would indicate that the algorithm is not properly applied to the original devices.

Confirm correctness of results.

#### 2013-10-21, 19:35:52 - Adam Rankin
Results are not correctly applied to the device of origin.

#### 2013-10-21, 19:35:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-10-22, 19:42:44 - Adam Rankin
(In r:2972|plus:2972) fixed #815 corrected saving of data sources when a device is written to xml
fixed #814 correctly assigning temporal calibration results to the fixed and moving devices

#### 2013-10-22, 19:42:44 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-10-27, 20:04:13 - Andras Lasso
@rankin: Do you change the offset of the fixed signal as well?
Probably the best would be to only modify the moving signal's offset so that we can calibrate all devices by multiple pairwise calibrations (for this we would need to keep the fixed signal's offset unchanged and only modify the moving signal's offset).

#### 2013-10-29, 17:21:15 - Adam Rankin
Yes, I set the fixed offset to 0.

#### 2013-10-29, 17:21:52 - Adam Rankin
Multiple pairwise offsets only make sense if the fixed signal source is always the same? Therefore it should always be the 0 offset?

#### 2013-10-29, 19:43:40 - Andras Lasso
Unfortunately, the fixed signal's offset should be kept unchanged to allow 'chained' pairwise temporal calibration.
e.g., we have A, B, C, D devices, we should be able to determine the offsets by doing these 3 calibrations: A->B, A->C, C->D; when we perform the C->D calibration we shouldn't modify C's offset, because it would erase the A->C calibration


#### 2013-10-29, 19:43:40 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2013-10-29, 19:46:44 - Adam Rankin
Got it. Will do that now.

#### 2013-11-25, 14:51:22 - Adam Rankin
(In r:2994|plus:2994) test #814 no longer changing fixed signal offset when temporal calibration completed to enable independent pairwise calibration

#### 2013-11-25, 14:51:22 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-11-25, 14:51:55 - Adam Rankin
@lassoan Could you confirm this is acceptable?

#### 2013-11-25, 14:51:55 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-20, 15:20:24 - Andras Lasso
From code review it seems that a few things are still not perfect:
* Fixed device's time offset should never be changed at all (currently I think it is set to 0 and not restored)
* Moving device's time offset should not be changed before the calibration: it'll be a new behavior, but it's good because then the 'before calibration' diagram will show how good the calibration was with the previously computed temporal calibration applied => a very good verification that the offset is correct and it is applied correctly (sign is OK, ...)
* Only change the moving device's time offset at the end of a successful temporal calibration (just something like this->MovingChannel->GetOwnerDevice()->SetLocalTimeOffsetSec(this->MovingChannel->GetOwnerDevice()->GetLocalTimeOffsetSec()+trackerLagSec); or this->MovingChannel->GetOwnerDevice()->SetLocalTimeOffsetSec(this->MovingChannel->GetOwnerDevice()->GetLocalTimeOffsetSec()-trackerLagSec);)

Unfortunately, the temporal calibration result doesn't seem to be applied correctly. If the temporal calibration result is correctly applied then:
* moving device's local time offset will oscillate around the same value after multiple temporal calibrations
* if you add 0.5sec to the fixed device's local time offset and perform temporal calibration then the moving device's local time offset should increase by 0.5sec, too


#### 2013-12-20, 15:20:24 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-12-20, 15:20:24 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-12-20, 16:15:21 - Andras Lasso
There could be an issue in the saveddatasource loop time computation and application of local time offset - I try to investigate this aspect (in vtkSavedDataSource and vtkDataCollector::SetLoopTimes)

#### 2013-12-26, 23:07:40 - Andras Lasso
(In r:3091|plus:3091) re #814: Added default column titles to temporal calibration plots (they were defined in fCal but not in the temporal calibration algo test)

#### 2014-01-02, 21:07:33 - Andras Lasso
(In r:3113|plus:3113) fixed #814: Fixed time offset application for saved data sources. Fixed time offset application for tracking devices (before this the time offset had to be applied to the video source, now it can be applied to any of the devices). Fixed latest available timestamp computation.

#### 2014-01-02, 21:07:33 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #815 Tools are not saved correctly due to incorrect tool ID lookup
Tools are not saved correctly due to incorrect tool ID lookup

#### 2013-10-22, 18:32:45 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-10-22, 19:42:44 - Adam Rankin
(In r:2972|plus:2972) fixed #815 corrected saving of data sources when a device is written to xml
fixed #814 correctly assigning temporal calibration results to the fixed and moving devices

#### 2013-10-22, 19:42:44 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #816 Make windows detection preprocessor macros consistent
In Plus windows environment is detected in various ways:

#ifdef _WIN32
#if (defined(_WIN32) || defined(WIN32)) 
#ifdef WIN32
#if(WIN32)

The first one seems to be the most correct, so use that consistently.


#### 2013-10-24, 16:33:24 - Andras Lasso
(In r:2976|plus:2976) fixed #816: Made windows compiler detection consistent across all Plus code. Also, added unistd.h include to vtkPlusConfig.cxx for linux builds.

#### 2013-10-24, 16:33:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #817 Investigate stylus calibration toolbox behaviour with new multi-tracker configurations
Complained about missing stylus to reference transform when values were correctly set in config file.

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-13, 05:26:06 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2014-06-05, 01:34:42 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-10, 17:21:05 - Adam Rankin
re #817 forcing continuous build
Commit: r:3398|plus:3398

#### 2014-06-11, 20:40:38 - Adam Rankin
re #817 removing qt3 request from individual cmake files as qt3 support is no longer required
Commit: r:3406|plus:3406

#### 2014-06-12, 13:32:46 - Andras Lasso
re #817: Reverted commit 3406 as it introduced build errors. The changes will be integrated again when a solution for the build errors are worked out.
Commit: r:3411|plus:3411

#### 2014-06-12, 13:55:14 - Adam Rankin
re #817 adjusting includes to fix build
Commit: r:3412|plus:3412

#### 2014-06-12, 14:27:06 - Adam Rankin
re #817 .
Commit: r:3413|plus:3413

#### 2014-06-12, 14:47:55 - Andras Lasso
Thanks, the build has no errors anymore!

#### 2014-06-12, 18:22:28 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-09-27, 19:21:27 - Andras Lasso
Stylus calibration seems to work well.

#### 2014-09-27, 19:21:27 - Andras Lasso
status: changed from "Accepted" to "Invalid"


## #818 Simulate multiple moving objects in US images
Currently only one object can be simulated. Add support for simulating imaging of any number of SpatialModel objects.

#### 2013-11-07, 22:19:45 - Andras Lasso
(In r:2978|plus:2978) re #818: Cleaned up intensity computation in SpatialModel

#### 2013-11-12, 04:38:26 - Andras Lasso
(In r:2980|plus:2980) test #818: Ultrasound simulator now supports generating images from multiple models (e.g., soft tissue, bone, needle). Each model is defined by a surface mesh and material properties. A simple physics-based model is used: diffuse reflection from material surfaces, attenuation (absorption+reflection), and noise (using procedural texture: Perlin noise) is simulated.

Next steps: Performance could be improved. Beamwidth and specular reflection is not yet included in the model.

#### 2013-11-12, 04:38:26 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-11-12, 04:48:46 - Andras Lasso
image:c22HZQs1ur46SgacwqEsg8
Sample simulated US image of bone and needle

#### 2013-11-12, 04:48:46 - Andras Lasso
Attachment added: "SpineNeedleSim_01.png"

#### 2013-11-12, 05:18:37 - Andras Lasso
(In r:2981|plus:2981) re #818: Fixed linux build error


#### 2013-11-12, 22:20:39 - Andras Lasso
(In r:2982|plus:2982) test #818: Improved performance of the US simulator. Removed magic numbers (exposed them as parameters in the config file).

#### 2013-11-14, 14:42:20 - Andras Lasso
(In r:2983|plus:2983) test #818: Implemented transducer/SpatialModel overlap resolution (scanline/SpatialModel intersections are searched TransducerSpatialModelMaxOverlapMm away from the transducer surface, default is 10mm)

#### 2013-11-14, 21:08:57 - Andras Lasso
(In r:2984|plus:2984) test #818: Adjustments for proper reflection from transducer/air surface (no image is visible when the transducer is in the air)

#### 2013-11-14, 21:45:46 - Andras Lasso
(In r:2986|plus:2986) re #818: Updated US simulator baseline image

#### 2013-11-18, 05:01:11 - Andras Lasso
(In r:2988|plus:2988) re #818: Added OpenIGTLinkIF.pushOnConnection node attributes to OpenIGTLinkIF output nodes to make sure the PlusServer receives all the current transform values from Slicer on connection (see http://www.na-mic.org/Bug/view.php?id=3501)

#### 2013-11-18, 22:11:55 - Andras Lasso
(In r:2989|plus:2989) re #818: Updated pushOnConnect attribute name to new OpenIGTLinkIF implementation

#### 2013-11-19, 21:50:49 - Andras Lasso
(In r:2990|plus:2990) re #818: Added specular (incidence angle dependent) reflection to the US simulator. In Test_PlusConfiguration_SimulatedUS.xml tuned vessel simulation model to look more realistic.

#### 2013-12-03, 21:19:51 - Andras Lasso
(In r:3012|plus:3012) re #818: Simplified the sample simulator config file and made the Slicer scene nicer

#### 2013-12-03, 21:52:17 - Andras Lasso
Added documentation page at
https://www.assembla.com/spaces/plus/wiki/Ultrasound_simulation

#### 2013-12-03, 21:52:17 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2014-03-02, 13:38:10 - Andras Lasso
re #818: Modified simulated image baseline comparison on linux to accept an approximately matching volume

Commit: r:3206|plus:3206

#### 2014-07-25, 20:59:12 - Andras Lasso
re #818: Fixed last pixel of simulated RF lines

Last pixel of each simulated RF lines were not filled (random memory content was used).
Commit: r:3551|plus:3551

#### 2014-07-28, 13:59:49 - Andras Lasso
re #818: Removed special handling of curvilinear transducer US simulator test on linux (difference was due to unitinitalized last pixel in the RF line)
Commit: r:3557|plus:3557

#### 2016-07-14, 19:01:07 - Andras Lasso
re #818: Prevent crash when AttenuationCoefficientDbPerCmMhz is set to 0
Commit: r:4734|plus:4734


## #819 Make default MorphologicalOpeningBarSizeMm segmentation parameter higher
Currently the MorphologicalOpeningBarSizeMm segmentation parameter in most config files is 1.0.
This sometimes leads to detecting two fiducial point candidates at one fiducial point.

A value of 2.0 works better in most of the cases.

#### 2013-11-08, 02:17:38 - Andras Lasso
(In r:2979|plus:2979) fixed #819: Changed MorphologicalOpeningBarSizeMm parameter value to 2.0. Also added NumberOfMaximumFiducialPointCandidates attribute to all config files to avoid the warning about using the default value.

#### 2013-11-08, 02:17:38 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #820 OpenIGTLinkTracker does not work with Slicer
Slicer only sends transform values when they change. Need to have an option to use previous transform values when no update is received.

#### 2013-11-14, 21:13:07 - Andras Lasso
(In r:2985|plus:2985) test #820: Added UseLastTransformsOnReceiveTimeout option to OpenIGTLinkTracker device. Added updated US simulator config file that uses this function.

#### 2013-11-14, 21:13:07 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-11-15, 21:22:45 - Andras Lasso
(In r:2987|plus:2987) re #820: Cleaned up vtkOpenIGTLinkTracker. vtkOpenIGTLinkTracker, vtkUsSimulatorVideoSource, and vtkOpenIGTLinkServer no longer report non-relevant warnings or errors during connection setup.

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-19, 17:18:17 - Andras Lasso
It works well now (see the Test_PlusConfiguration_SimulatedUS.xml config)

#### 2013-12-19, 17:18:17 - Andras Lasso
status: changed from "Test" to "Fixed"


## #821 Create a virtual device for tracker sensor fusion
I would like to configure PLUS in a way that it makes one virtual tracker tool out of two real ones. To start, it can produce the average of translations and rotations. The actual algorithm may be developed later.


#### 2013-11-17, 00:20:25 - Andras Lasso
as we discussed, it's probably better to implement this feature at the application level (in Slicer)

#### 2013-11-17, 00:20:25 - Andras Lasso
status: changed from "New" to "Invalid"


## #822 QVariant::asString -> toString
 `QVariant::asString` is only available in Qt 4 when Qt is built with the Qt3 compatibility layer:

http://qt-project.org/doc/qt-4.7/qt4-intro.html#id-92ae81c6-b3eb-4f76-9250-cd7b41c36e8a

My understanding was that PLUS requires Qt 4.7.4 at minimum, which does not include this function by default.
http://harmattan-dev.nokia.com/docs/library/html/qt4/qvariant.html

Alternatively, perhaps the PLUS build instructions should mention the qt3support requirement?

(note that the Qt3 layer has been removed in Qt5)

Thanks

#### 2013-11-20, 16:53:33 - Isaiah Norton
file:bkAIKOuGqr44rAacwqjQWU


#### 2013-11-20, 16:53:33 - Isaiah Norton
Attachment added: "diff.patch"

#### 2013-11-20, 16:54:01 - Isaiah Norton
file:bBfaPquGqr45XyacwqjQWU
build error

#### 2013-11-20, 16:54:01 - Isaiah Norton
Attachment added: "error.txt"

#### 2013-11-20, 17:03:45 - Adam Rankin
Ah, PLUS requires exactly 4.7.4. The newer releases of Qt aren't supported.

#### 2013-11-20, 17:19:53 - Andras Lasso
If there is a solution that is compatible with both the officially supported Qt 4.7.4 and with newer Qt versions then it would be nice do that.
This way when the Qt version is changed in Slicer (and Plus always follows the officially Qt version used by Slicer) then there is a chance that everything will just work.

#### 2013-11-20, 17:21:32 - Andras Lasso
@rankin, could you please test this change and integrate it if it works well with 4.7.4? Thanks!

#### 2013-11-20, 17:22:52 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-11-20, 17:22:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-11-20, 17:28:44 - Isaiah Norton
Right, I am building against 4.8.4; in any case, this deprecation was made long before 4.7. With this patch, fCal builds and runs against 4.8.4.
Thanks.

#### 2013-11-20, 17:28:44 - Isaiah Norton
assigned_to_id: changed from "rankin" to null

#### 2013-11-20, 17:28:44 - Isaiah Norton
status: changed from "Accepted" to "New"

#### 2013-11-20, 17:29:08 - Isaiah Norton
assigned_to_id: changed from null to "rankin"

#### 2013-11-20, 17:29:08 - Isaiah Norton
status: changed from "New" to "Accepted"

#### 2013-11-20, 18:25:26 - Adam Rankin
(In r:2991|plus:2991) fixed #822 removing references to qt3 function asString

#### 2013-11-20, 18:25:26 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2013-11-20, 21:34:57 - Adam Rankin
(In r:2993|plus:2993) re #822 eeeehhhh why not, removing all references to qt3 legacy functions

manually confirmed correctness of colors and behaviour, auto tests in pluslib ran but not necessary as all items are in plusapp

#### 2013-11-20, 22:42:53 - Isaiah Norton
re: 2993 Heh, cool. Should make the transition to Qt5 a bit smoother.
Thanks.

#### 2013-12-02, 14:07:25 - Adam Rankin
(In r:3010|plus:3010) re #822 removing qt3 dependency in cmake


## #823 Change default AnatomicalOrientation tag in vtkVolumeReconstructor output to RAI
AnatomicalOrientation tag is interpreted in MetaIO inverted manner compared to DICOM.
See http://www.itk.org/Wiki/Proposals:Orientation#Some_notes_on_the_DICOM_convention_and_current_ITK_usage

Therefore, to indicate DICOM LPS orientaiton, the MetaIO header has to contain AnatomicalOrientation = RAI

#### 2013-11-20, 19:54:24 - Andras Lasso
(In r:2992|plus:2992) Fixed #823: MetaIO image orientation of reconstructed volumes has changed to LPS (which is encoded in the MetaIO header as AnatomicalOrientation = RAI)

#### 2013-11-20, 19:54:24 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #824 Separate UI and data collector into different threads
Currently the UI and data collector occupy the same thread. A better user experience can be had by decoupling the two elements.

A solution could be to launch the data collector from the UI thread, and have this launched thread behave as a master thread for the data collector.

This might create some issues with synchronization, but the UI should be behaving in a polling mode, so any polling functions should be made thread-safe anyways.

#### 2013-11-25, 16:31:18 - Andras Lasso
Note that some devices (those that provide a callback function) have to call the device SDK from the main thread. Also, some devices require processing of the message queue (PeekMessage/TranslateMessage/DispatchMessage).
So, probably the data collector still has to be at least initialized and stopped from the main thread and the main thread may have to call a DataCollector::ProcessPendingMessages method regularly (to give the DataCollector and devices a chance to run some functions from the main thread).

#### 2013-11-25, 19:15:10 - Adam Rankin
As this is very similar to another ticket that was decided to be not worth, I am closing this as invalid as well.

#### 2013-11-25, 19:15:10 - Adam Rankin
status: changed from "New" to "Invalid"


## #825 Add more detailed error logging to MicronTracker device
When Markers directory or the MicronTracker.ini file is missing the logged error message doesn't indicate clearly what's the problem. Log more descriptive error message.

#### 2013-11-26, 13:54:15 - Andras Lasso
(In r:2997|plus:2997) test #825: Added more detailed logging to MicronTracker

#### 2013-11-26, 13:54:15 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-11-26, 14:31:22 - Andras Lasso
(In r:2998|plus:2998) test #825: Add

#### 2013-11-28, 02:38:25 - Andras Lasso
(In r:3007|plus:3007) re #825: Added logging if MicronTracker IniFile or TemplateDirectory is not found

#### 2013-12-10, 16:01:47 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:47 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-30, 20:06:03 - Andras Lasso
Logging seems enough for now.

#### 2013-12-30, 20:06:03 - Andras Lasso
status: changed from "Test" to "Fixed"


## #826 Make CreateSliceModels take cliprectangle into account
Currently CreateSliceModels ignores cliprectangle origin and size when creating the slice models

#### 2013-11-28, 01:43:48 - Andras Lasso
(In r:3006|plus:3006) fixed #826: CreateSliceModels creates frame rectangles with the specified clip rectangle size and origin

#### 2013-11-28, 01:43:48 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-11-28, 01:43:48 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2015-05-14, 04:23:26 - Andras Lasso
re #826: Fixed clip rectangle definition in CreateSliceModels (when nothing is specified the full frame size is used)
Commit: r:4136|plus:4136


## #827 Allow user to specify frame size with generic Windows framegrabber device
Concerning VfW it is not possible to set the resolution manually, which is in fact a problem, when the video device supports several resolutions.
As Adam told me, plus asks the device for the resolution and sets it accordingly. If the frame grabber now supports several resolutions this may be a huge problem, because plus gets a list (I guess so) of several resolutions supported. Plus now (again a guess) selects the first of the list and configures the device to that resolution.

The resolution set in my actual case is 320x240 which is far to low to get a reasonable picturequality and there is no way to force such driver settings. Not only that the resolution is that low, the US-Image is only a rectangle of about 130x130 pixel. In most cases where a Webcam is used this is not such a problem, as they only support one resolution, but for video cards this can be a problem as mentioned.
So it would be great to implement such a setting in the Plus configuration for VfW.

Thanks, Reinhard

#### 2013-11-29, 16:58:33 - reiker
resolution set by plus for VfW frame grabber

#### 2013-11-29, 16:58:33 - reiker
Attachment added: "320x240.tif"

#### 2013-11-29, 17:26:57 - Andras Lasso
There are many options that can be configured for an imaging device, so it would be hard to pick a few ones that Plus would specifically control. Plus just uses the settings that you've configured for your device (does not do anything like selecting a first option from a list).

Configure the resolution, bit depth, compression, color mode, etc. parameters in the software that comes with your framegrabber.
You can also use the following Plus tool to change the settings:
vtkWin32VideoSourceTest.exe --show-dialogs

Let me know if it works for you and then I'll update the documentation accordingly.

If you don't like the solution described above then we can implement setting some parameters from the config file as well (such as the frame size, if this is the only parameter that you would like to customize).


#### 2013-11-29, 17:26:57 - Andras Lasso
assigned_to_id: changed from "rankin" to "reiker"

#### 2013-11-29, 17:47:42 - reiker
I've already tried to change the settings with virtual dub, you may know it. But it did not work. I have to admit, I'm using the btwincab driver as the one from active silicon lead plus to crash. I will try if the vtkwin32vfw tool will work. But where to find it? The tools aren't available in the latest releases, I had a look. 

Thanks, Reinhard 

#### 2013-11-29, 17:53:40 - Adam Rankin
The test executable are only built in the development environment. I can send you my version, you could try to put it in the bin folder and see if it will run (compiled under win 7 as a 32bit app)

#### 2013-11-29, 17:55:23 - reiker
That would be great, thanks! 

#### 2013-11-29, 19:41:43 - Adam Rankin
(In r:3008|plus:3008) re #827 getting vfw to work again

#### 2013-11-29, 20:11:34 - Adam Rankin
(In r:3009|plus:3009) re #827 getting vfw based implementation working again with plus 2.0

#### 2013-11-29, 21:31:23 - reiker
Have tested the vtkWin32VideoSourceTest.exe --show-dialogs with my webcam on my laptop and get a window were i can choose the resolution, but it is not saved, so when changing to fCal i have the standard resolution again. That is with the webcam, I have to check with the frame grabber

#### 2013-12-02, 18:27:34 - Andras Lasso
@reiker: FYI, @rankin is working on this, you'll be able to set the desired resolution from the config file

#### 2013-12-02, 18:27:34 - Andras Lasso
assigned_to_id: changed from "reiker" to "rankin"

#### 2013-12-02, 18:27:34 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-12-03, 16:16:57 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.1.0"

#### 2013-12-03, 20:33:16 - reiker
thanks a lot, that would help a lot!

#### 2013-12-05, 15:34:40 - Adam Rankin
(In r:3013|plus:3013) test #455 re #827 Added Microsoft Media Foundation based capture device

TODO: add resolution selection

Device can be chosen by the type MMFVideo

#### 2013-12-06, 15:30:27 - Adam Rankin
New type is MmfVideo

#### 2013-12-10, 16:01:48 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-11, 15:52:40 - Adam Rankin
(In r:3042|plus:3042) WIP re #455 re #827 Adding Input Capture Library source to media foundation capture system to enable advanced controls

Custom resolution not working, possibly order of operations needs to be changed

Replacing all tabs with two spaces

#### 2013-12-11, 18:26:02 - Andras Lasso
Please move the Input Capture Library to PlusLib/tools (where all other third-party libs are). Thanks!

#### 2013-12-11, 19:54:10 - Adam Rankin
Can I compile it from there?

Or do you want me to create a separate project for it and compile it into a .lib?

#### 2013-12-11, 20:04:54 - Andras Lasso
I just see that I wrote a wrong path: the correct path is PlusLib\\src\\Utilities (PlusLib/tools are for binary packages).
Yes, create just a static lib, it's very simple, use the other projects in the Utilities directory as examples.

#### 2013-12-17, 14:17:48 - Adam Rankin
(In r:3061|plus:3061) re #827 extending library api to support a query

todo: move the lib to the correct location

#### 2013-12-17, 16:06:13 - Adam Rankin
(In r:3062|plus:3062) re #827 moving MfVideoCaptureLibrary to the Utilities subtree

removing dependency to pluslogger

#### 2013-12-17, 16:37:43 - Adam Rankin
(In r:3063|plus:3063) re #827 resolving naming differences

#### 2013-12-17, 17:06:25 - Adam Rankin
(In r:3064|plus:3064) re #827 added test that links to mmf video source test

#### 2013-12-17, 19:15:19 - Adam Rankin
(In r:3066|plus:3066) test #827 now successfully able to select resolution of capture device with configuration file details

#### 2013-12-17, 19:15:19 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-12-17, 19:28:16 - Adam Rankin
Hi Reinhard,

You can now select the resolution of devices using the type 'MmfVideo'.

See the wiki for the parameters to the device
url:https://www.assembla.com/spaces/plus/wiki/Device_Types|https://www.assembla.com/spaces/plus/wiki/Device_Types

#### 2013-12-17, 20:15:25 - Andras Lasso
summary: changed from "VfW - force Plus to use custom resolution" to "Allow user to specify frame size with generic Windows framegrabber device"

#### 2013-12-19, 16:53:05 - Andras Lasso
Tested with two webcams on two computers and it works well

#### 2013-12-19, 16:53:05 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-11-07, 17:02:48 - Andras Lasso
re #827: Fixed build warning
Commit: r:3843|plus:3843


## #828 Video source review
Ensure compliance with plus 2.0 architecture

#### 2013-11-29, 20:11:23 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-12-02, 18:33:55 - Andras Lasso
Include these:
* Add a method to create default output channels (useful for testing now; in the future we could make the definition of output channels optional)
* Instead of OutputChannels[0] (which may fail if there is no output channels at all, etc.) use specialized getter functions, such as GetFirstActiveVideoSource

#### 2013-12-10, 16:01:48 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-18, 14:11:15 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-18, 14:11:15 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-12-20, 00:14:31 - Andras Lasso
(In r:3081|plus:3081) re #828: Cleaned up default video channel creation in video source tests

#### 2013-12-20, 01:02:55 - Adam Rankin
I have some of these things in progress. I will try to commit so tha they can be incorporated into anything you have in progress. If you are almost done I can revert my changes.

#### 2013-12-20, 01:05:16 - Adam Rankin
Would it be wise to prefix the function createdefaultoutputchannel as 'Test' to indicate this function should not be used in regular behaviour?

#### 2013-12-20, 02:12:26 - Andras Lasso
CreateDefaultOutputChannel is not only for testing. It's useful whenever we want to let the device to define its own output channel(s). We might decide in the future to not require setting the output channels explicitly in the config files, then this function would be used for creating the output channel(s). Explicit output channel specification has advantages (simpler config file) but also disadvantages (not clear from the config file what output channels are available and with what content), so for now we keep things as is.

#### 2013-12-20, 02:13:37 - Andras Lasso
(In r:3082|plus:3082) re #828: Always check number of output channels before using OutputChannels[0]

#### 2013-12-20, 02:14:17 - Andras Lasso
I'm done with the cleanups, you can take over

#### 2013-12-20, 02:14:17 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2013-12-20, 02:14:17 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-12-20, 03:00:38 - Andras Lasso
(In r:3084|plus:3084) re #828: Fixed build error

#### 2013-12-20, 04:44:40 - Andras Lasso
(In r:3085|plus:3085) re #828: Added a check to avoid crash when loading file from saved dataset fails

#### 2014-01-02, 21:08:36 - Andras Lasso
No more cleanup before the release.

#### 2014-01-02, 21:08:36 - Andras Lasso
status: changed from "Test" to "Fixed"


## #829 PlusServer sends StylusToTracker transform when Reference unavailable
Using the NDI Polaris with a Stylus sensor and a Reference sensor, I want to send the StylusTipToReference sensor to Slicer. Everything works until I block the line of sight to one of the sensors with my hand. If I put my hand in front of the Stylus sensor, the transform stops updating (which is good). If I put my hand in front of the Reference sensor, I get what appears to be the StylusTipToTracker transform (but I would like it to just stop updating the StylusTipToReference transform).

I created an identity transform ReferenceToTest in the config file and sent the StylusTipToTest transform with the PlusServer. There was no change in behaviour.

I tried this using the latest download available (PlusApp_2.0.0.2873) and with one of the other binaries (PlusApp_2.1.0.2971).

#### 2013-12-02, 17:00:44 - Andras Lasso
Have you set SendValidTransformsOnly='true' in the config file?

#### 2013-12-02, 17:29:58 - Matthew Holden
file:bDWVtSw3Cr465xacwqEsg8


#### 2013-12-02, 17:29:58 - Matthew Holden
Attachment added: "PLUS_LinearObjectRegistration_NDIPolarisCalibrated.xml"

#### 2013-12-02, 17:30:15 - Matthew Holden
Yes, I've attached the config file.

#### 2013-12-02, 18:27:55 - Andras Lasso
Investigating...

#### 2013-12-02, 18:27:55 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-12-02, 18:27:55 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2013-12-02, 23:38:34 - Andras Lasso
Most probably fixed by #830. Please test.

#### 2013-12-02, 23:38:34 - Andras Lasso
assigned_to_id: changed from "lassoan" to "mholden8"

#### 2013-12-02, 23:38:34 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2013-12-03, 16:16:43 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.1.0"

#### 2013-12-03, 18:46:32 - Matthew Holden
Yes, this is fixed by #830. Thanks.

#### 2013-12-03, 18:46:32 - Matthew Holden
status: changed from "Test" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #830 Status of inverted transforms are not updated in the transform repository
When updating an non-inverted transform (such as ReferenceToTracker) in the transform repository, the inverted transform (such as TrackerToReference) status is not updated in the repository.

If ReferenceToTracker status is invalid on startup => TrackerToReference transform status will remain invalid for the whole execution time of the application, even if the reference sensor gets in the view.
If ReferenceToTracker status is valid on startup => TrackerToReference (and therefore StylusToReference) transform status will remain valid, even if the reference sensor is out of view.

#### 2013-12-02, 23:37:47 - Andras Lasso
(In r:3011|plus:3011) fixed #830: Inverted transform status was not updated (the first status kept for the whole execution time)

#### 2013-12-02, 23:37:47 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #831 Loaded temporal calibration results are not shown on GUI
When we load a configuration file to the fCal, the temporal calibration box in the gui does not show the calibration result we already got. 
I wonder when we redo only the spatial calibration, the temporal calibration that we have in the configuration file is applied although the temporal calibration is not shown in the box of the GUI.


#### 2013-12-06, 20:37:48 - Andras Lasso
Example:
On the GUI: Temporal calibration is 0.0ms.
In the log:
* Device local time offset for VideoDevice: 0ms
* Device local time offset for TrackedVideoDevice: 249.455ms

The correct solution would be to show the difference between the local time offsets on the GUI.

#### 2013-12-06, 21:46:29 - Adam Rankin
I can create a GUI that has two drop down boxes, and based on which devices you choose will show the relative offset between them?

#### 2013-12-06, 21:46:51 - Adam Rankin
Also is that with the latest PLUS, because it shouldn't be assigning the local time offset to the virtual devices anymore.

#### 2013-12-06, 22:58:31 - Andras Lasso
file:dTq6ZyxSKr44ozacwqjQYw


#### 2013-12-06, 22:58:31 - Andras Lasso
Attachment added: "120613_142304_PlusLog.txt"

#### 2013-12-06, 22:58:53 - Andras Lasso
it should be a recent Plus, see the revision in the full log attached

#### 2013-12-06, 23:00:34 - Andras Lasso
The GUI should show the local time offset between the two selected devices (or show the local time offset next to the device selector combo boxes)

#### 2013-12-07, 00:05:23 - Adam Rankin
Perfect, I'll loadcthe offset based on the two current selected channels (their owner devices)

#### 2013-12-07, 00:05:23 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2013-12-08, 02:19:46 - Adam Rankin
Could you have them send you the config file?

#### 2013-12-08, 02:27:05 - Adam Rankin
(In r:3031|plus:3031) test #831 temporal calibration results now shown based on the two selected devices

@lassoan may have the offset backwards, is it fixed - moving or moving - fixed?

#### 2013-12-08, 02:27:05 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2013-12-10, 16:01:48 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:01:48 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"

#### 2013-12-20, 04:25:27 - Andras Lasso
Temporal calibration crashes with the following scenario:
* connect to 'simulation mode for temporal calib'
* perform temporal calibration
* disconnect
* connect
* switch to temporal calibration panel => crash

this->FixedChannel seems to point to a deleted object

#### 2013-12-20, 04:25:27 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2013-12-20, 04:28:33 - Adam Rankin
Crap!! I can investigate tomorrow.

#### 2013-12-20, 04:39:03 - Andras Lasso
Cannot perform temporal calibration if the tracker source already contains an offset:

How to reproduce:

* Modify the 'TrackerDeviceSavedDataset' device LocalTimeOffsetSec from 0 to: LocalTimeOffsetSec='-0.0646585'
* Go to the temporal calibration tab => no tools can be selected for the TrackerOutput

In the log:
|ERROR|039.037000| TrackerDeviceSavedDataset-ReferenceToTracker: vtkPlusBuffer: Failed to get data buffer timestamp (time: 38.981186)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1169)
|ERROR|039.053000| ReferenceToTracker: Failed to get tracker item from buffer by time: 38.981186 (Latest timestamp: 38.916527 Oldest timestamp: 31.350641).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(483)
|ERROR|039.078000| Unable to retrieve tracked frame from channel: TrackerOutput|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(897)
|WARNING|039.095000| TrackerDeviceSavedDataset-ReferenceToTracker: vtkPlusBuffer: Cannot get any item from the buffer for time: 39.109600. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1129)
|ERROR|039.112000| TrackerDeviceSavedDataset-ReferenceToTracker: vtkPlusBuffer: Failed to get data buffer timestamp (time: 39.109600)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1169)
|ERROR|039.126000| ReferenceToTracker: Failed to get tracker item from buffer by time: 39.109600 (Latest timestamp: 39.044941 Oldest timestamp: 31.350641).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(483)
|WARNING|039.142000| TrackerDeviceSavedDataset-StylusToTracker: vtkPlusBuffer: Cannot get any item from the buffer for time: 39.109600. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1129)
|ERROR|039.158000| TrackerDeviceSavedDataset-StylusToTracker: vtkPlusBuffer: Failed to get data buffer timestamp (time: 39.109600)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1169)
|ERROR|039.171000| StylusToTracker: Failed to get tracker item from buffer by time: 39.109600 (Latest timestamp: 39.109055 Oldest timestamp: 31.350641).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(483)
|ERROR|039.195000| Unable to retrieve tracked frame from channel: TrackerOutput|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(975)
|WARNING|039.251000| TrackerDeviceSavedDataset-ReferenceToTracker: vtkPlusBuffer: Cannot get any item from the buffer for time: 39.214329. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1129)
|ERROR|039.263000| TrackerDeviceSavedDataset-ReferenceToTracker: vtkPlusBuffer: Failed to get data buffer timestamp (time: 39.214329)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1169)
|ERROR|039.273000| ReferenceToTracker: Failed to get tracker item from buffer by time: 39.214329 (Latest timestamp: 39.190213 Oldest timestamp: 31.350641).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(483)
|ERROR|039.293000| Unable to retrieve tracked frame from channel: TrackerOutput|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(975)


#### 2013-12-20, 04:43:23 - Andras Lasso
Minor GUI tuning:
1. Moving (offset=x) => would be better to show the actual offset value the same way as for the Fixed (offset=0.0234s)
2. Add 's' after the offset value: (offset=0.1234s)
3. If no transform is chosen for a tracking output then disable the start button or abort the temporal calibration immediately immediately after clicking on Start (now it looks as if it computes something, progress bar is moving, etc. and only fails at the end)

#### 2014-01-02, 21:03:57 - Andras Lasso
(In r:3112|plus:3112) fixed #831: Sign of computed lag is not displayed correctly. Temporal calibration doesn't crash anymore after a reconnect. Show both fixed and moving device time offset. Do not reset time offset before starting calibration (to see improvement on the before/after plot).

#### 2014-01-02, 21:03:57 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #832 Implement a Matlab script for receiving transforms through OpenIGTLink
Use the MatlabBridge OpenIGTLink server as a starting point

#### 2013-12-07, 12:53:12 - Andras Lasso
(In r:3028|plus:3028) re #832: Added skeleton for OpenIGTLinkReceiver (just a copy of the MatlabBridge OpenIGTLink server)

#### 2013-12-07, 15:12:33 - Andras Lasso
(In r:3029|plus:3029) re #832: OpenIGTLink transform receiver (WIP)

#### 2013-12-07, 17:36:28 - Andras Lasso
(In r:3030|plus:3030) test #832: Basic OpenIGTLink transform receiver implementation completed

#### 2013-12-07, 17:36:28 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-07, 17:49:11 - Andras Lasso
@hosane: the OpenIGTLink transform receiver is also ready for testing - see https://subversion.assembla.com/svn/plus/trunk/sandbox/MatlabUtils/MatlabOpenIGTLinkReceiver/

#### 2013-12-07, 22:08:54 - Hossein Sadjadi
Thanks Andras! I'll test and let you know if there are any issues.

#### 2013-12-09, 01:07:29 - Andras Lasso
(In r:3032|plus:3032) test #832: Optimized OpenIGTLink transform receiver (WIP)

#### 2013-12-09, 07:55:24 - Andras Lasso
(In r:3033|plus:3033) test #832: Simplified and optimized OpenIGTLink transform receiver

#### 2013-12-09, 14:35:43 - Andras Lasso
(In r:3034|plus:3034) re #832: Moved Matlab utilities to trunk/MatlabUtils to indicate that is not experimental code anymore

#### 2013-12-09, 15:27:42 - Andras Lasso
(In r:3035|plus:3035) re #832: Updated Plus overview with Matlab interface details

#### 2013-12-22, 04:35:23 - Andras Lasso
This works well now

#### 2013-12-22, 04:35:23 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-22, 04:35:23 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2013-12-30, 22:54:17 - Andras Lasso
(In r:3104|plus:3104) re #832: Added simple example for igtlReceiveTransform


## #833 PlusServer should find config files in the device set config directory
PlusServer should automatically find config XML files in the directory specified in PlusConfig.xml:
DeviceSetConfigurationDirectory='../config'

e.g.,

If the contents of PlusConfig.xml is:


~~~~
<PlusConfig
...
  DeviceSetConfigurationDirectory='../config'
...
/>

~~~~

then this should work:
_PlusServer.exe --config-file=PlusConfiguration_File_PlusServer.xml_

but now only this works:
_PlusServer.exe --config-file=../config/PlusConfiguration_File_PlusServer.xml_


#### 2013-12-09, 15:52:54 - Andras Lasso
(In r:3036|plus:3036) fixed #833: Config file paths in PlusServer --config-file parameter are now relative to the DeviceSetConfigurationDirectory. Config file from any other directory can be loaded by specifying full (absolute) path.

#### 2013-12-09, 15:52:54 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2013-12-10, 16:00:11 - Andras Lasso
Issues were still added to the completed Plus-2.1.0 milestone. They are actually part of Plus-2.1.1.

#### 2013-12-10, 16:00:11 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.0" to "Release Plus-2.1.1"


## #834 Add OpenIGTLink transform sending to MatlabUtils
Currently transforms can be only received in Matlab. Implement transformation sending as well.

#### 2014-03-03, 19:33:03 - Andras Lasso
re #834: Added Matlab function for sending transforms
Commit: r:3209|plus:3209

#### 2014-03-04, 00:43:43 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-03-04, 00:43:43 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:21 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:21 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #835 OpenIGTLink TDATA bugs
There are a couple issues in the OpenIGTLink TDATA support in current trunk. I have a patch that I plan to commit referencing this issue, after testing against real BrainLab.

- need to unpack header in InternalUpdate before checking the DeviceType
- need to use full transform name for TimeStampedUpdate

#### 2013-12-09, 22:51:45 - Andras Lasso
Great, the patch is welcome. Let me know if we can help with code review or testing.

#### 2013-12-12, 18:02:01 - Andras Lasso
We would like to release a new stable version next week. Do you think you can provide your patch by then?

#### 2013-12-12, 19:19:56 - Isaiah Norton
Thanks for the heads-up. Yes, at least to restore basic TDATA functionality. The simulator works fine with the patch.

I did some testing with the clinical system earlier in the week, and found that with the patch, the TDATA connection opens correctly and data is received for a short time. Unfortunately, somewhere in the changes from r2985 on, the timeouts are now too aggressive, and PLUS tries to reconnect seemingly every time there is a missed tracking message. On the clinical system we must manually accept each connection, so it becomes a problem when 100 reconnects are sent in succession (the resulting behavior of the target system is 'undesirable'..). I will look for a solution tomorrow when I have access to the room.

#### 2013-12-12, 19:29:32 - Andras Lasso
There should be no reconnects at all when ReconnectOnReceiveTimeout='false' is set for the tracker Device element in the config file. Maybe you could check that.

#### 2013-12-12, 19:31:57 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2013-12-12, 19:31:57 - Andras Lasso
milestone_id: changed from null to "Release Plus-2.1.1"

#### 2013-12-13, 18:02:30 - Isaiah Norton
(In r:3055|plus:3055) Re: #835 Fix OpenIGTLink TDATA support

#### 2013-12-13, 18:05:36 - Isaiah Norton
Yes, that was the problem. Dropped that flag in debugging and forgot to restore it. Thanks.

I tested with patch against clinical system and it works well.

#### 2013-12-13, 18:05:36 - Isaiah Norton
status: changed from "New" to "Fixed"

#### 2013-12-13, 22:04:33 - Andras Lasso
Great, thanks! We'll add an automatic test for OpenIGTLink tracking using TDATA to detect such regressions in the future (#839).


## #836 Clean up PlusServer command processing
Make it conform to the documentation at PlusServer_commands

#### 2013-12-11, 03:47:49 - Andras Lasso
(In r:3040|plus:3040) test #836: Updated PlusServer and PlusServerRemoteControl to reply with XML messages

#### 2013-12-11, 03:47:49 - Andras Lasso
status: changed from "New" to "Test"

#### 2013-12-11, 04:43:27 - Andras Lasso
(In r:3041|plus:3041) re #836: Fixed vtkVirtualDiscCapture device file writing (header was finalized before all frames have been added, leading to ElementDataFile not being the last field in the header)

#### 2013-12-11, 20:44:43 - Andras Lasso
(In r:3044|plus:3044) re #836: Added command for querying device IDs (RequestDeviceIds). Renamed command for querying channel IDs to RequestChannelIds.

#### 2013-12-19, 20:09:36 - Andras Lasso
this works well now

#### 2013-12-19, 20:09:36 - Andras Lasso
status: changed from "Test" to "Fixed"


## #837 Add automatic tests for PlusServer commands
Add a test mode to PlusServerRemoteControl.exe. It would spawn a PlusServer process and send some commands and check the returned responses and written files.

#### 2014-06-05, 02:06:28 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-06, 21:07:49 - Andras Lasso
re #837: Added automatic test for OpenIGTLink remote command execution
Commit: r:3803|plus:3803

#### 2014-10-06, 21:07:49 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-10-06, 21:08:43 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-07, 16:03:21 - Andras Lasso
re #837: Reduced input image size to avoid OpenIGTLinkCommandTest speed warnings on very slow computers
Commit: r:3808|plus:3808

#### 2014-10-07, 16:16:47 - Andras Lasso
re #837: Add more detailed logging of volume reconstruction performance issues
Commit: r:3809|plus:3809

#### 2014-10-07, 17:46:44 - Andras Lasso
re #837: Reduce frame rate and relax warning threshold to avoid warnings during OpenIGTLinkCommandsTest on very slow computers
Commit: r:3810|plus:3810

#### 2014-10-07, 18:06:09 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-10-07, 20:18:24 - Andras Lasso
re #837: Refined error handling in PlusServerRemoteControl to make sure the process is stopped on error
Commit: r:3811|plus:3811

#### 2014-10-08, 12:00:56 - Andras Lasso
re #837: Redirect PlusServer log to file to avoid logging server warnings  during PlusServerRemoteControl test
Commit: r:3812|plus:3812

#### 2014-10-08, 14:11:37 - Andras Lasso
re #837: Added more detailed logging to PlusServerRemoteControl
Commit: r:3813|plus:3813


## #838 PlusServer is stopped if Q button is pressed in any application
PlusServer should quit only if Q button is pressed in the PlusServer window. Otherwise it's too simple to accidentally stop the process.

If it's difficult, then maybe remove the option to stop with Q and only allow stopping with CTRL-C.

#### 2013-12-22, 04:19:25 - Andras Lasso
Now the PlusServerLauncher is recommended for users (with a QT GUI), which is not susceptible to this issue

#### 2013-12-22, 04:19:25 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2013-12-22, 04:19:25 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2013-12-22, 04:19:31 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"


## #839 Add automatic tests for OpenIGTLink tracker with TDATA input
To make sure Plus works correctly with BrainLab. The BrainLabTrackerSim tool can be used as the server.

#### 2017-08-18, 18:54:25 - Adam Rankin
re #839 Adding config files for TDATA test
Commit: r:5118|plus:5118

#### 2017-08-18, 18:54:25 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-08-18, 18:55:40 - Adam Rankin
test #839 openigtlink tracker device not properly requested tdata tracking start due to incorrect order of client info and starttdata messages

test added for tdata tracking

transformName parsing added to determine if a brainlab or a plus style transform name was sent in igt message

Branch: tdata_device_cleanup
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8a01d4111d1a507b64f8ffc42dd0d3dba1ba9bad|plus:8a01d4111d

#### 2017-08-18, 18:55:40 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-08-29, 16:15:12 - Adam Rankin
test #839 openigtlink tracker device not properly requested tdata tracking start due to incorrect order of client info and starttdata messages (#71)

test added for tdata tracking

transformName parsing added to determine if a brainlab or a plus style transform name was sent in igt message

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/86b01e0765556146d21686ee36189683cd5c8d26|plus:86b01e0765


## #840 Check Windows SDK requirement if MMF video is enabled
If MMF video option is enabled and no recent Windows SDK is installed then Plus build fails with

9>2>..\\..\\..\\..\\PlusLib\\src\\Utilities\\MfVideoCaptureLibrary\\FormatReader.cpp(307) : error C2065: 'MF_MT_FRAME_RATE_RANGE_MAX' : undeclared identifier
9>2>..\\..\\..\\..\\PlusLib\\src\\Utilities\\MfVideoCaptureLibrary\\FormatReader.cpp(318) : error C2065: 'MF_MT_FRAME_RATE_RANGE_MIN' : undeclared identifier
9>2>..\\..\\..\\..\\PlusLib\\src\\Utilities\\MfVideoCaptureLibrary\\FormatReader.cpp(381) : error C2065: 'MF_MT_AAC_PAYLOAD_TYPE' : undeclared identifier

This is not very informative for the developer.

We should add a try-compile test that checks the existence of these constants and prints a detailed error message at configuration time (that explains what SDK has to be installed).

#### 2013-12-17, 20:46:54 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-17, 20:46:58 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2013-12-17, 20:55:56 - Adam Rankin
(In r:3067|plus:3067) fixed #840 cmake now checks for windows sdk version

updating tags to match similar naming convention

#### 2013-12-17, 20:55:56 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2013-12-17, 21:01:16 - Andras Lasso
Sorry, leaving in the x in the 640x480 was a typo. Please just use a space as a separator(...='640 480'). Thanks!

#### 2013-12-17, 21:01:16 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2013-12-18, 05:15:17 - Andras Lasso
(In r:3070|plus:3070) re #840: Fixed Windows SDK detection

The FindWindowsSDK.cmake in Utilities caused build error with VS2008, as it returned the wrong SDK version (6.1). The issue is this find macro can only return the CURRENT version or a specific version. So, just keep using the FindWindowsSDK.cmake that is already in PlusBuild and works better (can return the LATEST SDK version).

Removed SDK detection error check, because it did not work (did not print an error when the wrong SDK was used, the build failed at the unspecified constant in an FormatReader.cpp). The problem is that when multiple SDKs are detected it's not enough to check if 7.1 is detected but it should be checked what is actually used. Moreover, any SDK version >7.1 should be accepted, too, so this check actually prevents some correct configuration from building. Implementing a correct solution would be difficult, so removed this check and just added a comment in FormatReader.cpp where the error occurs that SDK 7.1 or more recent has to be installed (it's in the build instructions, too).

Moved required MF link libraries to the MfVideoCaptureLibrary.


#### 2013-12-18, 14:15:30 - Andras Lasso
What is still missing is a check that the latest found SDK version is at least 7.1 (but accept anything that >7.1, too). This is only a convenience function for developers, so not essential for this release.

#### 2013-12-18, 14:15:30 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2013-12-18, 20:01:37 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-18, 20:01:37 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Release Plus-2.1.1"

#### 2013-12-18, 20:03:03 - Andras Lasso
(In r:3074|plus:3074) fixed #840: Added Windows SDK version testing with a CMake TRY_COMPILE

#### 2013-12-18, 20:03:03 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #841 Change video resolution definition tag in ICCapturing
In all other framegrabber video sources FrameSize and VideoFormat are two separate attributes, while ICCapturing combines them in one (VideoFormat='Y800 (640x480)'). Change ICCapturing implementation to read frame size from a separate FrameSize attribute (and generate the string for the SDK in the device implementation).

#### 2014-06-05, 02:06:41 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-09-28, 03:18:03 - Andras Lasso
re #841: Use regular VideoFormat and FrameSize attribute in vtkICCapturingSource
Commit: r:3743|plus:3743

#### 2014-09-28, 03:18:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-28, 04:00:59 - Andras Lasso
test #841: Fixed build error. Updated documentation and samples.
Commit: r:3744|plus:3744

#### 2014-09-28, 04:00:59 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-07, 14:49:38 - Andras Lasso
re #841: Added command-line option to vtkICCapturingSourceTest1 to print all available devices, norms, and formats
Commit: r:3806|plus:3806

#### 2014-10-07, 15:10:52 - Andras Lasso
re #841: Log list of available ICCapturing devices and video modes if invalid device name or video mode is specified
Commit: r:3807|plus:3807

#### 2014-10-07, 15:11:01 - Andras Lasso
status: changed from "Test" to "Fixed"


## #842 Release management
This ticket is for collecting commits related to release tagging and branching.

#### 2013-12-19, 15:10:35 - Andras Lasso
(In r:3077|plus:3077) re #842: Updated Plus version to 2.1.1 (the contents is not final yet but set the version identified so that we can start creating release candidate packages)

#### 2013-12-19, 15:10:35 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-05, 22:20:43 - Andras Lasso
re #842: Updated Plus version to 2.1.2
Commit: r:3382|plus:3382

#### 2016-08-15, 19:13:13 - Adam Rankin
re #842 Updated Plus version to 2.4.0
Commit: r:4801|plus:4801

#### 2016-08-15, 19:20:53 - Adam Rankin
re #842: Created new release (https://app.assembla.com/spaces/plus/milestones/10081073-plus-2-4-0)
Commit: r:4802|plus:4802

#### 2016-08-15, 19:22:27 - Adam Rankin
re #842 pointing external projs to proper branch for 2.4.0
Commit: r:4803|plus:4803

#### 2016-08-16, 13:39:40 - Adam Rankin
re #842 Updating Plus to 2.5.0 - Development Release

Improving detection of Windows SDK to actually find latest
 - Revoking detection of ucrt builds as they do not contain all libraries necessary
Commit: r:4805|plus:4805

#### 2016-08-16, 13:39:55 - Adam Rankin
re #842 Updating Plus to 2.5.0 - Development Release

Improving detection of Windows SDK to actually find latest
 - Revoking detection of ucrt builds as they do not contain all libraries necessary
Commit: r:4806|plus:4806

#### 2016-08-16, 14:53:53 - Andras Lasso
re #842: Renamed stable branch to Plus-2.4

Plus-2.4.0 is a specific version name that can be used as tag, but we create all Plus-2.4 releases in a single branch.
Commit: r:4808|plus:4808

#### 2016-08-16, 14:55:24 - Adam Rankin
Just a reminder to update the build scripts on TESLA with the new location
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com]
Sent: Tuesday, August 16, 2016 10:54 AM

#### 2016-08-16, 15:01:06 - Adam Rankin
re #842: Renamed stable branch to Plus-2.4
Commit: r:4809|plus:4809

#### 2016-08-26, 20:42:38 - Adam Rankin
re #842 updating required version of gcc to 4.8
Commit: r:4835|plus:4835

#### 2016-11-02, 20:25:25 - Andras Lasso
re #842: Updated Plus stable version to 2.4 (it was incorrectly left at 2.3 when the 2.4 branch was created)
Commit: r:4919|plus:4919


## #843 MMF video device is not usable after reconnect
If SafeRelease(&this->CaptureSourceReader); is called in vtkMmfVideoSource::InternalDisconnect() then the process crashes (with some stack corruption? it seems that it makes some bogus vtkPlusDevice destructor to be called).

If SafeRelease(&this->CaptureSourceReader); is called in vtkMmfVideoSource::InternalDisconnect() then there is no crash, but video is not captured on the next Connect().

#### 2013-12-20, 02:23:46 - Andras Lasso
(In r:3083|plus:3083) re #843: Commented out SafeRelease(&this->CaptureSourceReader); in disconnect to prevent crash. Added locking to serialize MF access, but in itself it is not enough to avoid the crash.

#### 2013-12-20, 02:24:53 - Andras Lasso
The crash is reproducible with 
vtkMmfVideoSourceTest.exe --frame-size 640 480 --rendering-off
in release mode (when the release is not commented out in the disconnect).

Interestingly, these don't crash:
vtkMmfVideoSourceTest.exe --frame-size 640 480
vtkMmfVideoSourceTest.exe --rendering-off

#### 2013-12-20, 17:44:56 - Adam Rankin
(In r:3086|plus:3086) test #843 adding functionality to media capture library to start/stop recording of a device

corrected connect/disconnect and StartRecording/StopRecording behaviour of mmf video source

flushing source reader before releasing prevents crash on disconnect

#### 2013-12-20, 17:44:56 - Adam Rankin
status: changed from "New" to "Test"

#### 2013-12-20, 17:45:31 - Adam Rankin
@lassoan could you confirm this as working?

#### 2013-12-20, 17:45:31 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2013-12-30, 17:09:54 - Andras Lasso
It still crashes after every couple of reconnects in PlusServerLauncher, but I think we should not delay the Plus release because of this.

#### 2013-12-30, 17:09:54 - Andras Lasso
assigned_to_id: changed from "lassoan" to null

#### 2013-12-30, 17:09:54 - Andras Lasso
milestone_id: changed from "Release Plus-2.1.1" to "Release Plus-Future"

#### 2013-12-30, 17:09:54 - Andras Lasso
status: changed from "Test" to "New"

#### 2014-01-03, 14:20:45 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-01-03, 14:22:02 - Andras Lasso
(In r:3116|plus:3116) fixed #843: Fixed MMF video source crash. The MF reference counter was uninitialized and called this->delete directly instead of decrementing the reference counter of the object.

#### 2014-01-03, 14:22:02 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-01-03, 14:22:02 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #844 Auto-detect landmark points during phantom registration
During the phantom registration the user has to mark 8 landmark points: for each point he should place the sylustip into the landmark point and click a button or press the foot pedal. 

We could implement point auto-detection: instead of requiring the user to click a button or press the foot pedal, the user could simply pivot the needle for a few seconds (while keeping the tip at a landmark point) to signal that a landmark point is touched.


#### 2014-05-19, 15:32:17 - Andras Lasso
duplicate of #886

#### 2014-05-19, 15:32:17 - Andras Lasso
status: changed from "New" to "Invalid"


## #845 Generate user manual from code
Currently it's very difficult to keep the wiki and the code in sync. To make this simpler, create the manual pages (that contains command-line parameters, configuration file options, etc.) from the code.

Create UserManual.dox pages in PlusLib for each device (e.g., PlusLib\\src\\DataCollection\\3dConnexionTracking\\UserManual.dox).
Migrate contents from User guide section of the wiki to .dox pages in PlusApp\\Documentation 

#### 2014-01-04, 00:08:52 - Andras Lasso
(In r:3119|plus:3119) re #845: Create user manual from code (WIP)

#### 2014-01-04, 06:42:52 - Andras Lasso
(In r:3120|plus:3120) re #845: Added a few user manual pages

#### 2014-01-04, 06:43:30 - Andras Lasso
(In r:3121|plus:3121) re #845: Added a few user manual pages

#### 2014-03-25, 18:18:57 - Adam Rankin
milestone_id: changed from "Plus-2.2.0" to "Continuous activities"

#### 2014-05-15, 17:22:39 - Andras Lasso
assigned_to_id: changed from "lassoan" to "garciaguevara"

#### 2014-05-15, 17:32:53 - Andras Lasso
milestone_id: changed from "Continuous activities" to "Plus-2.2.0"

#### 2014-05-15, 18:28:15 - Jaime Garcia Guevara
status: changed from "New" to "Accepted"

#### 2014-06-04, 20:51:45 - Jaime Garcia Guevara
re #845: Add template user manual pages 
Commit: r:3363|plus:3363

#### 2014-06-04, 20:52:46 - Jaime Garcia Guevara
re #845: Add template user manual pages in to HardwareSetup.dox
Commit: r:3364|plus:3364

#### 2014-06-04, 23:32:45 - Jaime Garcia Guevara
re #845 first user manual DeviceChRobotics.dox, the rest only minor changes.
Commit: r:3366|plus:3366

#### 2014-06-06, 18:34:56 - Jaime Garcia Guevara
@lassoan Could u please check this first user manaual so I do the other ones alike, or modify them /trunk/PlusLib/src/DataCollection/ChRobotics/DeviceChRobotics.dox

#### 2014-06-09, 23:05:05 - Jaime Garcia Guevara
re #845 add cmake documentation build option
Commit: r:3394|plus:3394

#### 2014-06-09, 23:06:10 - Jaime Garcia Guevara
re #845 add cmake documentation build option
Commit: r:3395|plus:3395

#### 2014-06-09, 23:07:27 - Jaime Garcia Guevara
re #845 add cmake documentation build option
Commit: r:3396|plus:3396

#### 2014-06-09, 23:58:33 - Andras Lasso
The changes look good. Please also add doxygen and dot detection at PlusBuild level. That would allow:
1. Reporting error to the user immediately (when configuring the project) if doxygen or dot is not installed/not found
2. Verifying/modifying the default doxygen and doth paths.

No modifications should be needed in PlusLib and PlusApp. Should be enough to just send the paths to PlusLib external project.

#### 2014-06-10, 20:42:17 - Jaime Garcia Guevara
re #845 @lassoan New user manual DeviceEpiphan.dox, the rest only minor changes.
Commit: r:3399|plus:3399

#### 2014-06-11, 16:49:20 - Andras Lasso
It looks OK.
* Maybe move the Supported platforms before installation (Supported hardware devices, Supported platforms, Installation, Configuration settings, ...)
* Add the list of supported platforms
* For installation write how to install the device: Do you need to install any drivers? If yes, where those drivers are available? Mention the GrabberLocation
* Instead of having the 'Color image acquisition is supported' comment maybe describe how you can actually configure color image acquisition (see PlusDeviceSet_Server_EpiphanColorVideoCapture.xml example)
* Create a page for common imaging devices attributes (PortUsImageOrientation, ImageType, etc.) and add a link to that page
* Create a page for common device attributes (AcquisitionRate, BufferSize, AveragedItemsForFiltering, etc.) and add a link to that page


#### 2014-06-11, 17:20:54 - Jaime Garcia Guevara
re #845 doxygen and dot detection at PlusBuild level
Commit: r:3403|plus:3403

#### 2014-06-11, 17:23:16 - Jaime Garcia Guevara
re #845 proper filepath cmake variable
Commit: r:3404|plus:3404

#### 2014-06-11, 17:24:40 - Jaime Garcia Guevara
re #845 proper filepath cmake variable


Commit: r:3405|plus:3405

#### 2014-06-11, 18:23:46 - Andras Lasso
Don't forget to add Graphviz and Doxygen installation to the prerequisites in Windows_Build_Instructions

#### 2014-06-13, 17:43:14 - Andras Lasso
re #845: Added user documentation for temporal calibration algorithm
Commit: r:3420|plus:3420

#### 2014-06-13, 18:06:00 - Andras Lasso
re #845: Updated 'How to cite' section with the new TBME paper
Commit: r:3421|plus:3421

#### 2014-06-13, 18:10:21 - Andras Lasso
re #845: Updated 'How to cite' section with the new TBME paper
Commit: r:3422|plus:3422

#### 2014-06-13, 22:26:17 - Jaime Garcia Guevara
re #845 New user manual DeviceStealthLink.dox, corrections for DeviceEpiphan.dox, the rest only minor changes.
Commit: r:3424|plus:3424

#### 2014-06-16, 15:43:30 - Jaime Garcia Guevara
re #845 remove doxygen from plus tools 
Commit: r:3425|plus:3425

#### 2014-06-16, 15:45:16 - Jaime Garcia Guevara
re #845 remove doxygen from plus tools 
Commit: r:3426|plus:3426

#### 2014-06-16, 15:47:02 - Jaime Garcia Guevara
re #845 remove doxygen from plus tools 
Commit: r:3427|plus:3427

#### 2014-06-17, 13:51:07 - Andras Lasso
re #845: Improved CommonAttributesDevices.dox
Commit: r:3428|plus:3428

#### 2014-06-18, 14:25:29 - Jaime Garcia Guevara
re #845 Add css to set documentation section, subsection styles
Commit: r:3440|plus:3440

#### 2014-06-18, 14:29:46 - Jaime Garcia Guevara
re #845 Documentation using section and subsection styles, device attributes listed and linked individually 
Commit: r:3441|plus:3441

#### 2014-06-18, 16:14:37 - Andras Lasso
Thanks, nice improvements. The CSS formatting looks good. I've added comments to the commits with some suggestions.

#### 2014-06-20, 15:51:30 - Jaime Garcia Guevara
re #845 Comments modifications Specified supported platforms, DeviceAcquisitionRate reference, attributes lists, alias for default optional and required parameters.
Commit: r:3451|plus:3451

#### 2014-06-20, 15:52:39 - Jaime Garcia Guevara
re #845 Comments modifications alias for default optional and required parameters, dons show overview twice.
Commit: r:3452|plus:3452

#### 2014-06-23, 22:17:55 - Jaime Garcia Guevara
re #845 Hierarchy of config attributes and Icons added
Commit: r:3459|plus:3459

#### 2014-06-23, 22:18:49 - Jaime Garcia Guevara
re #845 Icons style added
Commit: r:3460|plus:3460

#### 2014-06-24, 14:34:59 - Andras Lasso
Thanks, looks nice!
Notes:
* the 'required' icon is missing
* the 'optional' icon is a bit too big and with the Default value it does not look that nice, can you somehow reformat it to look nicer?

#### 2014-06-24, 15:16:22 - Jaime Garcia Guevara
re #845 Icon missing added, move CommonAttributes files
Commit: r:3461|plus:3461

#### 2014-06-24, 15:18:34 - Jaime Garcia Guevara
re #845 required and optional icon size change
Commit: r:3462|plus:3462

#### 2014-06-24, 15:22:53 - Jaime Garcia Guevara
re #845 required and optional icon size change
Commit: r:3463|plus:3463

#### 2014-06-24, 16:35:38 - Jaime Garcia Guevara
re #845 fix automatic script errors
Commit: r:3464|plus:3464

#### 2014-06-24, 17:52:07 - Andras Lasso
Thanks for the update. The required/optional icons should have other difference than just color, otherwise it looks good to me now.

#### 2014-06-24, 22:16:10 - Jaime Garcia Guevara
re #845 required icon size change
Commit: r:3465|plus:3465

#### 2014-06-24, 22:24:56 - Jaime Garcia Guevara
re #845 Update acquisitionRate default value, virtual devices independent dox, red arrow for required attribute. 
Commit: r:3466|plus:3466

#### 2014-06-25, 20:51:56 - Jaime Garcia Guevara
re #845 ToolReference attribute frame only for trackers, portName required for most of trackers, PortUsImageOrientation for most imaging devices
Commit: r:3467|plus:3467

#### 2014-06-26, 20:44:14 - Jaime Garcia Guevara
re #845 Info from the wiki to dox
Commit: r:3468|plus:3468

#### 2014-06-27, 03:53:37 - Andras Lasso
Thanks Jaime, nice progress.

#### 2014-06-30, 22:29:12 - Jaime Garcia Guevara
re #845 With the attributes from the code and ready to be review. @lassoan \  odoAndras points to parts I could not easily found.
Commit: r:3478|plus:3478

#### 2014-07-01, 00:49:33 - Andras Lasso
Thank you Jaime, I take it over from here!

#### 2014-07-01, 00:49:33 - Andras Lasso
assigned_to_id: changed from "garciaguevara" to "lassoan"

#### 2014-07-01, 13:27:21 - Andras Lasso
re #845: Added sample configuration file for distribution of acquisition and processing on two different PlusServer instances
Commit: r:3479|plus:3479

#### 2014-07-02, 14:03:03 - Jaime Garcia Guevara
There are still some devices I have to finish


#### 2014-07-02, 15:01:30 - Andras Lasso
OK, then please finish them as soon as possible and when you are ready assign the ticket to me.

#### 2014-07-02, 15:01:30 - Andras Lasso
assigned_to_id: changed from "lassoan" to "garciaguevara"

#### 2014-07-04, 22:00:26 - Jaime Garcia Guevara
re #845: All attributes from source to devices. Just needs some final touches. 
Commit: r:3489|plus:3489

#### 2014-07-04, 22:04:01 - Jaime Garcia Guevara
re #845 add virtual devices to dox
Commit: r:3490|plus:3490

#### 2014-07-07, 19:22:56 - Jaime Garcia Guevara
re #845 Ready for review.
Commit: r:3492|plus:3492

#### 2014-07-07, 19:23:51 - Jaime Garcia Guevara
assigned_to_id: changed from "garciaguevara" to "lassoan"

#### 2014-07-07, 22:59:00 - Andras Lasso
re #845: Updated supported platforms section in documentation
Commit: r:3493|plus:3493

#### 2014-07-07, 22:59:16 - Andras Lasso
re #845: Updated supported platforms section in documentation
Commit: r:3494|plus:3494

#### 2014-07-15, 21:28:27 - Jaime Garcia Guevara
re #845 It is SavedDataSource
Commit: r:3500|plus:3500

#### 2014-07-17, 02:32:29 - Andras Lasso
re #845: Moved user manual contents from wiki
Commit: r:3506|plus:3506

#### 2014-07-17, 02:32:51 - Andras Lasso
re #845: Moved user manual contents from wiki
Commit: r:3507|plus:3507

#### 2014-07-17, 02:46:46 - Andras Lasso
re #845: Add revision information to user manual
Commit: r:3508|plus:3508

#### 2014-07-17, 02:47:39 - Andras Lasso
re #845: Add revision information to user manual
Commit: r:3509|plus:3509

#### 2014-07-21, 01:37:44 - Andras Lasso
re #845: Added experimental documentation for EditSeqMetaFile
Commit: r:3514|plus:3514

#### 2014-07-21, 05:37:10 - Andras Lasso
re #845: Added some more specifications to the user manual
Commit: r:3515|plus:3515

#### 2014-07-21, 05:38:14 - Andras Lasso
re #845: Updated doxyfile to 1.7 version. Added links to specification pages.
Commit: r:3516|plus:3516

#### 2014-07-21, 16:18:34 - Andras Lasso
re #845: Added more specification pages
Commit: r:3517|plus:3517

#### 2014-07-21, 16:19:04 - Andras Lasso
re #845: Added more specification pages
Commit: r:3518|plus:3518

#### 2014-07-21, 20:23:39 - Andras Lasso
re #845: Added more tools pages to user manual. Renamed some tools to have a more user-friendly name.
Commit: r:3520|plus:3520

#### 2014-07-21, 20:23:53 - Andras Lasso
re #845: Added procedure descriptions
Commit: r:3521|plus:3521

#### 2014-07-22, 14:05:56 - Andras Lasso
re #845: Added option to specify documentation format
Commit: r:3522|plus:3522

#### 2014-07-22, 14:06:30 - Andras Lasso
re #845: Added option to specify documentation format
Commit: r:3523|plus:3523

#### 2014-07-22, 14:08:19 - Andras Lasso
re #845: Moved all user manual pages to a single directory (it was too difficult to find the files dispersed in many directories)
Commit: r:3524|plus:3524

#### 2014-07-22, 15:41:12 - Andras Lasso
re #845: Updated doc generator batch file (reports error, works on VS2012)
Commit: r:3525|plus:3525

#### 2014-07-22, 15:41:34 - Andras Lasso
re #845: Updated doc generator batch file (reports error, works on VS2012)
Commit: r:3526|plus:3526

#### 2014-07-22, 16:10:47 - Andras Lasso
re #845: Changed ApiReference doc html output dir to be consistent with PlusApp
Commit: r:3527|plus:3527

#### 2014-07-22, 17:14:18 - Andras Lasso
re #845: Simpified doc format (on windows only chm compression is available, so we only have two options)
Commit: r:3528|plus:3528

#### 2014-07-22, 17:15:04 - Andras Lasso
re #845: Simpified doc format (on windows only chm compression is available, so we only have two options)
Commit: r:3529|plus:3529

#### 2014-07-22, 17:15:45 - Andras Lasso
re #845: Simpified doc format (on windows only chm compression is available, so we only have two options)
Commit: r:3530|plus:3530

#### 2014-07-24, 03:29:42 - Andras Lasso
re #845: Moved basic specification pages to PlusLib
Commit: r:3531|plus:3531

#### 2014-07-24, 14:05:42 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3532|plus:3532

#### 2014-07-24, 14:05:59 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3533|plus:3533

#### 2014-07-24, 21:32:00 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3540|plus:3540

#### 2014-07-24, 21:32:49 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3541|plus:3541

#### 2014-07-24, 21:39:09 - Andras Lasso
re #845: Fixed build error
Commit: r:3542|plus:3542

#### 2014-07-25, 01:08:20 - Andras Lasso
re #845: Added more user manual pages. Fixed build error.
Commit: r:3543|plus:3543

#### 2014-07-25, 04:30:12 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3545|plus:3545

#### 2014-07-25, 04:30:35 - Andras Lasso
re #845: Added more user manual pages
Commit: r:3546|plus:3546

#### 2014-07-25, 04:33:27 - Andras Lasso
re #845: Refined sensor fusion user manual page
Commit: r:3547|plus:3547

#### 2014-07-25, 21:29:42 - Andras Lasso
re #845: Added more user manual pages. Improved diagnostic and test tools to find config files and images in directories defined in the application configuration file.
Commit: r:3553|plus:3553

#### 2014-07-25, 21:31:02 - Andras Lasso
re #845: Improved user manual pages
Commit: r:3554|plus:3554

#### 2014-07-26, 12:15:38 - Andras Lasso
re #845: Fixed build error
Commit: r:3556|plus:3556

#### 2014-07-28, 19:23:20 - Andras Lasso
re #845: Added user manual to installation package.

Also removed PLUSDOCUMENTATION_TARGET_IN_ALL option, as documentation is only rebuilt if the main dox file is changed, but not if any other documentation files are changed, so documentation has to be built manually anyway (forcing a clean build)
Commit: r:3560|plus:3560

#### 2014-07-28, 19:24:22 - Andras Lasso
re #845: Added user manual to installation package.

Also removed PLUSDOCUMENTATION_TARGET_IN_ALL option, as documentation is only rebuilt if the main dox file is changed, but not if any other documentation files are changed, so documentation has to be built manually anyway (forcing a clean build)

Commit: r:3561|plus:3561

#### 2014-07-28, 19:25:44 - Andras Lasso
re #845: Added user manual to installation package.

Also removed PLUSDOCUMENTATION_TARGET_IN_ALL option, as documentation is only rebuilt if the main dox file is changed, but not if any other documentation files are changed, so documentation has to be built manually anyway (forcing a clean build)

Commit: r:3562|plus:3562

#### 2014-07-30, 17:13:37 - Andras Lasso
re #845: Finalized user manual pages
Commit: r:3565|plus:3565

#### 2014-07-30, 17:14:14 - Andras Lasso
re #845: Finalized user manual pages
Commit: r:3566|plus:3566

#### 2014-07-30, 17:33:26 - Andras Lasso
The user manual is at least as good as it was on the wiki, but now it is generated from code, so it is fully up-to-date and also included in the installed package.

#### 2014-07-30, 17:33:26 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2014-07-31, 01:04:52 - Andras Lasso
re #845: removed documentation shortcut from the package if no documentation is generated
Commit: r:3567|plus:3567

#### 2014-07-31, 15:10:09 - Andras Lasso
re #845: Fixed HHC path for chm generation
Commit: r:3568|plus:3568

#### 2014-07-31, 15:10:29 - Andras Lasso
re #845: Fixed HHC path for chm generation
Commit: r:3569|plus:3569

#### 2014-08-06, 22:23:00 - Andras Lasso
re #845: Improved StealthLink documentation
Commit: r:3581|plus:3581

#### 2014-08-07, 04:12:12 - Andras Lasso
re #845: Fixed StealthStation configuration reading error
Commit: r:3584|plus:3584

#### 2014-08-07, 05:39:47 - Andras Lasso
re #845: Restored Plus command prompt shortcut in windows installer package
Commit: r:3586|plus:3586

#### 2014-08-07, 20:33:52 - Andras Lasso
re #845: Fixed a few inconsistencies in the documentation
Commit: r:3587|plus:3587

#### 2014-08-08, 02:02:02 - Andras Lasso
re #845: Fixed server-indexed documentation generation on Windows
Commit: r:3588|plus:3588

#### 2014-08-09, 07:00:12 - Andras Lasso
re #845: Fixed server-indexed documentation generation on Windows
Commit: r:3589|plus:3589

#### 2014-08-11, 15:57:46 - Andras Lasso
re #845: Improved PlusServer documentation
Commit: r:3590|plus:3590

#### 2014-08-11, 15:57:51 - Andras Lasso
re #845: Improved PlusServer documentation
Commit: r:3591|plus:3591

#### 2014-08-12, 16:21:03 - Andras Lasso
re #845: Improved documentation
Commit: r:3593|plus:3593

#### 2014-08-12, 16:21:44 - Andras Lasso
re #845: Improved documentation
Commit: r:3594|plus:3594

#### 2014-08-20, 00:24:25 - Andras Lasso
re #845: Added troubleshooting info for out of memory problems during volume reconstruction
Commit: r:3615|plus:3615

#### 2014-08-24, 05:02:33 - Andras Lasso
re #845: Fixed frame size format in MMF video source example
Commit: r:3638|plus:3638

#### 2014-08-28, 18:33:00 - Andras Lasso
re #845: Added documentation for DrawScanLines and DrawClipRegion tools
Commit: r:3643|plus:3643

#### 2014-08-28, 18:34:49 - Andras Lasso
re #845: Reduced sample image sizes in documentation of DrawScanLines and DrawClipRegion tools
Commit: r:3644|plus:3644

#### 2014-08-28, 19:05:09 - Andras Lasso
re #845: Improved VolumeReconstruction documentation
Commit: r:3645|plus:3645

#### 2014-09-15, 14:51:49 - Andras Lasso
re #845: Improved fCal documentation
Commit: r:3679|plus:3679

#### 2014-09-15, 14:51:59 - Andras Lasso
re #845: Improved fCal documentation
Commit: r:3680|plus:3680

#### 2014-09-18, 14:58:03 - Andras Lasso
re #845: Improved fCal documentation (added note about how to verify wire positions)
Commit: r:3695|plus:3695

#### 2014-09-18, 19:49:15 - Andras Lasso
re #845: Fixed server-based doc indexing configuration
Commit: r:3699|plus:3699

#### 2014-09-27, 03:43:28 - Andras Lasso
re #845: Added full reference to Plus paper
Commit: r:3734|plus:3734

#### 2014-09-27, 03:43:39 - Andras Lasso
re #845: Added full reference to Plus paper
Commit: r:3735|plus:3735

#### 2014-09-27, 03:44:55 - Andras Lasso
re #845: Added full reference to Plus paper
Commit: r:3736|plus:3736

#### 2014-10-01, 16:45:38 - Andras Lasso
re #845: Improved SonixVideo documentation. Removed optional attributes from config files with -1 value (they are not needed anymore as placeholders, as they are described in the user manual).
Commit: r:3757|plus:3757

#### 2014-10-13, 12:42:49 - Andras Lasso
re #845: Added faq about angle difference warning
Commit: r:3820|plus:3820

#### 2014-10-19, 23:40:35 - Andras Lasso
re #845: Fixed link to Plus paper
Commit: r:3822|plus:3822

#### 2014-10-27, 19:04:08 - Andras Lasso
re #845: Fixed PlusApp install package uninstallation (missed deletion of Plus user manual shortcut)
Commit: r:3825|plus:3825

#### 2014-11-01, 15:35:15 - Andras Lasso
re #845: Fixed Polaris device documentation (it is supported on Win64)
Commit: r:3830|plus:3830

#### 2014-11-15, 21:34:57 - Andras Lasso
re #845: Fixed linear transducer center pixel definition in documentation
Commit: r:3846|plus:3846

#### 2014-11-15, 21:35:12 - Andras Lasso
re #845: Fixed linear transducer center pixel definition in documentation
Commit: r:3847|plus:3847

#### 2015-01-22, 19:33:56 - Andras Lasso
re #845: Enhanced description of using Plus with Slicer (added another sample config name for webcam)
Commit: r:3920|plus:3920

#### 2015-03-05, 14:53:45 - Andras Lasso
re #845: Tuned temporal calibration documentation
Commit: r:4029|plus:4029

#### 2015-03-05, 14:56:25 - Andras Lasso
re #845: Tuned temporal calibration documentation
Commit: r:4030|plus:4030

#### 2015-03-15, 03:43:17 - Andras Lasso
re #845: Improved tools documentation
Commit: r:4051|plus:4051

#### 2015-03-15, 03:43:39 - Andras Lasso
re #845: Improved tools documentation
Commit: r:4052|plus:4052

#### 2015-04-12, 16:32:19 - Andras Lasso
re #845: Added new plus package editions to documentation
Commit: r:4097|plus:4097

#### 2015-04-21, 02:03:00 - Andras Lasso
re #845: Improved MicronTracker documentation
Commit: r:4110|plus:4110

#### 2015-04-23, 00:53:11 - Andras Lasso
re #845: Improved fCal documentation
Commit: r:4112|plus:4112

#### 2015-05-25, 20:28:23 - Andras Lasso
re #845: Added documentation for Philips and Telemed systems
Commit: r:4155|plus:4155

#### 2015-05-25, 20:38:41 - Andras Lasso
re #845: Fixed typo (Phillips -> Philips)
Commit: r:4158|plus:4158


## #846 Recorded sequences on disk are sometimes corrupted
Frame 230 is corrupted (see frame 230, attached) in the sequence recorded from an Epiphan framegrabber. The text header is somehow get mixed into the image data.

Probably acquired with revision 2866

#### 2014-01-08, 21:19:14 - Andras Lasso
image:cfT8bYEkOr44oOacwqjQXA
Corrupted frame recorded

#### 2014-01-08, 21:19:14 - Andras Lasso
Attachment added: "TrackedImageSequence_20121211_095306.bmp"

#### 2014-01-08, 21:38:13 - Andras Lasso
description: changed from "Frame 230 is corrupted (see..." to "Frame 230 is corrupted (see..."

#### 2014-01-20, 18:34:57 - Adam Rankin
url:https://www.assembla.com/code/plus/subversion/commit/2866|rev 2866

#### 2015-05-23, 01:57:55 - Andras Lasso
We could not reproduce this.

#### 2015-05-23, 01:57:55 - Andras Lasso
status: changed from "New" to "Invalid"


## #847 MMF video source does not compile on Win64
stdint.h is not found and some assembler routines in MF library does not seem to compile

#### 2014-01-20, 17:29:56 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-01-20, 17:30:01 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-01-20, 18:30:53 - Adam Rankin
(In r:3134|plus:3134) fixed #847 removing assembler from media capture library, allowing compiler to create assembler, removing un-used functions preventing successful build

#### 2014-01-20, 18:30:53 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2014-01-20, 18:31:44 - Adam Rankin
Hmm, I never received the stdint.h not found.

#### 2014-01-20, 18:31:44 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2014-01-20, 18:32:55 - Adam Rankin
@lassoan Was this on a machine with the 7.1 sdk installed? It should be located in the ITK project.

#### 2014-01-20, 18:33:08 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2014-01-20, 18:33:08 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-01-21, 01:45:54 - Andras Lasso
Yes, it was with 7.1 SDK installed (32-bit build was OK, 64-bit failed due to the assembly code).

#### 2014-02-20, 16:05:58 - Andras Lasso
I confirm that it builds fine on x64 by partially removing the ImageGrabber functionality from the library. I think we should remove this completely as we don't use the ImageGrabber functionality and it would reduce the maintenance overhead.

Could you please remove ImageGrabber, ImageGrabberThread, and RawImage classes?
(and the GetRawImageOut and IsFrameNew methods and other small things that may refer to them in the MediaFoundationVideoDevice and MediaFoundationVideoCaptureApi)

#### 2014-02-20, 16:05:58 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2014-02-20, 16:05:58 - Andras Lasso
status: changed from "Test" to "New"

#### 2014-02-20, 16:55:41 - Adam Rankin
@lassoan Mine builds fine with no classes removed. What are the build failed messages?

#### 2014-02-20, 17:45:52 - Andras Lasso
Sorry I was not clear. I confirm that it builds fine on x64.

You've removed some of the ImageGrabber functionality, but actually we don't need the ImageGrabber at all (the Plus device performs the tasks). So, I suggested to remove the whole ImageGrabber feature from the lib.

#### 2014-02-20, 17:53:27 - Adam Rankin
Ah, sure!

#### 2014-02-20, 18:15:19 - Adam Rankin
re #847 removing unnecessary classes/functionality
Commit: r:3174|plus:3174

#### 2014-02-20, 19:26:45 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #848 Remove No output channels defined for device log message
Message
 VolumeReconstructorDevice: No output channels defined for device: VolumeReconstructorDevice
is confusing the users.

Only display this message if an output channel is expected.

#### 2014-01-20, 18:59:06 - Adam Rankin
(In r:3135|plus:3135) fixed #848 removing error message, not needed device wide, and individual devices already report their own errors

cleaned up logging in plus device

#### 2014-01-20, 18:59:06 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-01-20, 18:59:06 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #849 Reported recorded sequence file name is incorrect
When a sequence is recorded using OpenIGTLink commands in the reply the reported output filename is incorrect

#### 2014-01-09, 00:01:27 - Andras Lasso
(In r:3122|plus:3122) test #849: Fixed the reported filename of the recorded sequence

#### 2014-01-09, 00:01:27 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-01-09, 05:45:25 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #850 Allow definition of output volume size and resolution through OpenIGTLink
Add these 3 new attributes to the ReconstructVolume and StartVolumeReconstruction commands:
OutputSpacing: spacing of the output volume, 3 floating point values in the reference coordinate system (example: '0.3 0.3 0.3') (optional)
OutputOrigin: origin of the output volume, 3 floating point values in the reference coordinate system (example: '-15.0 -20.0 40.0') (optional)
OutputExtent: extent in voxels, 6 integer values iStart, iStop, jStart, jStop, kStart, kStop (for example'0 150 0 180 0 200') (optional)

#### 2014-01-09, 02:28:26 - Andras Lasso
description: changed from "Add these 3 new attributes ..." to "Add these 3 new attributes ..."

#### 2014-01-09, 02:30:25 - Andras Lasso
(In r:3123|plus:3123) re #850: Added option to define volume reconstruction output spacing, origin, and extent through OpenIGTLink

#### 2014-01-09, 05:40:14 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #851 Issues connecting to medSAFE tracker when both 3DG and 3DGm are enabled
With both 3DG and 3DGm enabled, trying to connect to 3DGm leads to this error:

|ERROR|1703.785000| Board # 0: Time out before response from target
board |in c:\\andrey\\plusbuild-win32-bin\\pluslib\\src\\datacollection\\ascension3dgtracking\\vtkAscension3DGTrackerBase.cxx(457)

|ERROR|1703.797000| System : InitializeBIRDSystem() not called yet |in
c:\\andrey\\plusbuild-win32-bin\\pluslib\\src\\datacollection\\ascension3dgtracking\\vtkAscension3DGTrackerBase.cxx(457)

 The symbols exported by ATC3DG.dll and ATC3DGm.dll appear to have the same signatures. Both libraries are linked when 3DGm is used. I think what I was seeing was caused by 3DG libraries being used. To verify this hypothesis, I deleted ATC3DG.dll and copied 3DGm to 3DG. After this I was able to connect to the tracker.

from @lassoan: need to test if it works correctly when you enable PLUS_USE_Ascension3DGm and disable PLUS_USE_Ascension3D.

#### 2014-01-15, 13:27:34 - Andrey Fedorov
I checked with a clean build, when compiled with only 3DGm enabled, 3DG libraries are not copied to the binary directory, so there should be no problem.

#### 2014-01-15, 13:49:59 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-01-15, 13:50:09 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-01-15, 13:50:15 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-01-15, 13:54:00 - Andras Lasso
(In r:3130|plus:3130) fixed #851: Prevent enabling regular and medSAFE Ascension trackers simultaneously

#### 2014-01-15, 13:54:00 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #852 Unproper outliers detection
Hello,

During pivot point calculation in GetPivotPointPosition function (vtkPivotCalibrationAlgo.cxx) each measured point (or better: each transformation matrix MarkerToReference) is represented by three consecutive rows in the matrix. But inside RemoveOutliersFromLSRQ (PlusMath.cxx, by the way, is there a typo?) all rows are treated independently. 

So it might happened then, if we had one 'almost outlier point', only one or two rows would be removed from processing, while the algorithm should remove all three points. I know, with most ouliers all three rows will be removed, but at least because of the performance it would be good idea to process rows by three. 

I attach here the proposal of fix (new lines are 269-306 instead of original 269-299). I am git-oriented man and I don't know how to create a pull request with svn. Probably my soulution is wrong because the function LSQRMinimize is used by different algorithms.

Regards,
Bartłomiej

#### 2014-01-19, 21:28:13 - Bart??omiej Pyci??ski
file:cz9vh-Gvar46pdacwqjQXA


#### 2014-01-19, 21:28:13 - Bart??omiej Pyci??ski
Attachment added: "PlusMath-modified.cxx"

#### 2014-01-20, 03:58:49 - Andras Lasso
Thanks for looking into this and proposing a modification. You are right that PlusMath::LSQRMinimize is a generic LSQR solver and it removes outliers for each coordinate axis separately and I agree that most cases when one component of a transform is corrupted then probably all the other components are corrupted, too, so we could decide to remove a sample entirely if we find any discrepancy in any of its components.

However, it may be possible that rejecting only the faulty component is the right thing to do (e.g., when there is an intermittent flip in the transform) and we should not reject the whole transform. Also, when a component of a sample is not an outlier, it can only influence the results very slightly (if the percentage of outliers is below a few percent then I'm sure that the difference is not measurable).

As the implementation in PlusMath::LSQRMinimize is generic, I cannot change it as you suggested. I could add a post-processing step in vtkPivotCalibrationAlgo, but it would mean some extra code to write, test, and maintain and I'm not even sure if there is any practical benefit (or even in theory we would do better). Let me know if you see this differently, I'm open to reconsider this if you can show that the current behavior is bad.

#### 2014-01-20, 03:58:49 - Andras Lasso
assigned_to_id: changed from null to "bpycinski"

#### 2014-01-20, 03:58:49 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-01-20, 04:12:18 - Andras Lasso
(In r:3133|plus:3133) re #852: Fixed typo and added more information about the outlier rejection in the pivot calibration algorithm

#### 2014-01-20, 21:19:37 - Bart??omiej Pyci??ski
I agree that the results are probably very similiar, regardless of this modification. Although I am pretty sure that current behaviour with leaving some rows is not mathematicaly correct, I don't think that implementing the modifications is necessary for correct job. For example if there was 100 pints, let's say there was 6 outliers, 4 of them were 'full' and 2 'partially', then there would be 2-4 false rows against 284-286 correct. 1.4%, it might look pretty much, but don't forget that these values are not recorded from real ouliers, but the boundary one, so the difference should be even smaller.

I mainly wanted to point out that inside the source there had been no information, if this was intentional, or by mistake. If there will be a necessity to implement modifications, I think the easiest solution is to add another funcion to PlusMath.

Unfortunately I don't have presently posibilities to compare results with sample data. I think you can close the thicket if there are no other voices in the discussion

Bart.



#### 2014-01-21, 20:49:48 - Andras Lasso
OK. I've added some explanation in the source code and closing the ticket. It can be reopened in the future if anybody encounter any issue.

#### 2014-01-21, 20:49:48 - Andras Lasso
status: changed from "Test" to "Fixed"


## #853 OutputDirectory setting should check if path is directory
The OutputDirectory setting in PlusConfig.xml only works correctly if the path ends with a slash. It would be helpful to check whether the non-slash-terminated path is a directory before assuming it is a filename.

#### 2014-01-21, 20:50:51 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2014-01-21, 20:50:57 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-01-21, 20:50:59 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-01-21, 21:09:46 - Adam Rankin
Hey @ihnorton, do you have a repro case? My config works with an OutputDirectory of  ... OutputDirectory='./Output' ...

#### 2014-01-21, 22:06:50 - Isaiah Norton
I can't reproduce with simulator, and not at the OR anymore. I will reopen if I can reproduce, maybe it was a wrong/old config file. Sorry for the noise.

#### 2014-01-21, 22:06:50 - Isaiah Norton
assigned_to_id: changed from "rankin" to null

#### 2014-01-21, 22:06:50 - Isaiah Norton
status: changed from "New" to "Invalid"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #854 Add support for BK 8862/8863 probes
We have used the attached patch to add support for several additional BK probes (so far used with 8862 probe to acquire RF data during one neurosurgery case).
This issue is to request review and advice. In particular there are two points which would break support for the prostate probe:

L44: there is only one channel available (also for 8863 and 8820e probes)

* Should I add a configuration option to make this check contingent on a configured number of channels?

L57: the modelID field != 0 for at least the 8862

* Not sure what to do about this.

Thank you.

#### 2014-01-21, 17:31:36 - Isaiah Norton
file:dGXikqGSer46ZcacwqjQWU


#### 2014-01-21, 17:31:36 - Isaiah Norton
Attachment added: "8862-diff.txt"

#### 2014-01-21, 17:32:06 - Isaiah Norton
description: changed from "We have used the attached p..." to "We have used the attached p..."

#### 2014-01-21, 20:48:01 - Andras Lasso
Any solution that is backward compatible should be fine.
@rankin, could you please review and integrate the proposed changes?

#### 2014-01-21, 20:48:01 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2014-01-21, 20:51:18 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-01-21, 21:11:46 - Adam Rankin
It seems fine. Does is still work for the existing setups is the real question.

#### 2014-01-21, 21:21:06 - Isaiah Norton
Well I think we are the only existing BK setup (?). I will see if I can get access to the other probe and make this compatible before committing. Thanks.

#### 2014-03-05, 20:23:58 - Adam Rankin
@ihnorton Any luck? The change didn't seem very risky. If you don't think you'll have a chance to test it soon I'll move this to PLUS future for further testing.

#### 2014-03-06, 19:17:07 - Isaiah Norton
That's fine.

#### 2014-03-07, 16:13:47 - Adam Rankin
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"

#### 2014-03-07, 16:13:55 - Adam Rankin
assigned_to_id: changed from "rankin" to "ihnorton"

#### 2014-03-07, 16:14:02 - Adam Rankin
status: changed from "New" to "Test"


## #855 Add support for Medtronic StealthLink
* Check status with Sunnybrook (Andras)
* Check the features in StealthLink 2.0
* Build Plus, try PlusServer and fCal in simulation mode
* Decide on what StealthLink features to support
* Create vtkStealthLink class 

#### 2014-02-03, 21:36:23 - Andras Lasso
assigned_to_id: changed from null to "ckrahmet"

#### 2014-02-03, 21:55:24 - Andras Lasso
description: changed from "" to "* Check status with Sunnybr..."

#### 2014-02-03, 22:03:53 - Ahmet Cakir
description: changed from "* Check status with Sunnybr..." to "* Check status with Sunnybr..."

#### 2014-02-21, 18:32:52 - Ahmet Cakir
StealthLink folder added to DataCollection source folder within PLusLib. The folder contains StealthLinkQuery.cpp in order to try if the Cmake and the communication works. 

#### 2014-02-22, 18:51:28 - Ahmet Cakir
re #855: Cxx File for the StealthLink Server
Commit: r:3182|plus:3182

#### 2014-02-22, 19:11:50 - Ahmet Cakir
re #855: The Cmake file is updated by adding the commands to find the StealthLink package.
Commit: r:3183|plus:3183

#### 2014-02-22, 19:13:20 - Ahmet Cakir
re #855: a line with '<<<<<<mine' was added to the file by tortoise. that line is deleted
Commit: r:3184|plus:3184

#### 2014-02-22, 19:14:52 - Ahmet Cakir
re #855: The cmake file to find the StealthLink Server package
Commit: r:3185|plus:3185

#### 2014-02-22, 19:18:17 - Ahmet Cakir
re #855: Ckame file is updated for it to install necessary header and libraries for the StealthLink server to the solution's path
Commit: r:3186|plus:3186

#### 2014-02-22, 19:26:09 - Ahmet Cakir
re #855: Two lines created by svn are deleted
Commit: r:3187|plus:3187

#### 2014-02-22, 22:15:10 - Ahmet Cakir
re #855: Option for PLUS_USE_StealthLink2 added
Commit: r:3188|plus:3188

#### 2014-02-22, 22:33:58 - Ahmet Cakir
re #855: :#cmakedefine PLUS_USE_StealthLink2: added
Commit: r:3189|plus:3189

#### 2014-02-22, 22:34:27 - Ahmet Cakir
re #855: 'SET(PLUS_USE_StealthLink2 @PLUS_USE_StealthLink2@)' added
Commit: r:3190|plus:3190

#### 2014-02-23, 02:30:50 - Ahmet Cakir
re #855: Directories for StealthLink Server added
Commit: r:3191|plus:3191

#### 2014-02-23, 02:32:05 - Ahmet Cakir
re #855: Message commands are deleted.
Commit: r:3192|plus:3192

#### 2014-02-23, 02:37:52 - Ahmet Cakir
Cmake file for StealthLink Server is completed and it is committed to the server along with the changes on the other files. 

#### 2014-04-02, 15:34:49 - Ahmet Cakir
re #855:
vtkPlusDeviceFactory.cxx stealthlink device is added to the plus device factory
Cmakefile for testing is modified to include vtkStealthLinkTrackingTest
Testing.cxx is modified: The full tool name is being used in the if statement rather than the part before 'From'
Necessary files (cxx,h) for vtkStealthlink, vtkStealthLinkTesting and config files are added


Commit: r:3260|plus:3260

#### 2014-04-02, 17:11:52 - Ahmet Cakir
re #855: Cxx and header files for vtkStealthLinkTracker
Commit: r:3261|plus:3261

#### 2014-04-02, 17:15:10 - Ahmet Cakir
re #855: cxx file for StealthlinkTracker Test
Commit: r:3262|plus:3262

#### 2014-04-02, 17:26:20 - Ahmet Cakir
re #855: Config file for StealthLink
Commit: r:3263|plus:3263

#### 2014-04-03, 14:39:10 - Andras Lasso
re #855: Fix build error (occurred when StealthLink option was disabled)
Commit: r:3264|plus:3264

#### 2014-04-10, 17:06:05 - Ahmet Cakir
re #855: The Find Cmake file for StealthLink is modified and cleaned. The name is changed from PLUS_USE_StealthLink2 to PLUS_USE_STEALTHLINK. 
Commit: r:3266|plus:3266

#### 2014-04-10, 17:07:22 - Ahmet Cakir
re #855: The files have been cleaned and modified.
Commit: r:3267|plus:3267

#### 2014-04-10, 17:18:03 - Ahmet Cakir
re #855: Unnecessary hello message is deleted
Commit: r:3268|plus:3268

#### 2014-04-10, 17:38:00 - Ahmet Cakir
re #855: The StealthLinkTrackerTest.cxx deleted 
Commit: r:3269|plus:3269

#### 2014-04-10, 17:40:42 - Ahmet Cakir
re #855: The code is cleaned. The transformation matrix for reference frame is implemented correctly. The bug caused when Stealth Server is shut down is fixed. 
Commit: r:3270|plus:3270

#### 2014-04-28, 22:19:33 - Ahmet Cakir
re #855: The variable names that are STEALTHLINK2_* changed to STEALTHLINK_*
Commit: r:3297|plus:3297

#### 2014-04-28, 22:27:56 - Ahmet Cakir
re #855: 
-The code has been cleaned. Variable names are changed, those belonging to a class are capital, otherwise not.
-Extra error check to prevent crashing for when getting data from StealtLink returns an error 
-The command to get images from the StealthLink added(GET_EXAM_DATA)
-The necessary files for the command, vtkPlusStealthLinkCommand.cxx and vtkPlusStealthLinkCommand.h are added.
Commit: r:3298|plus:3298

#### 2014-04-28, 23:52:33 - Ahmet Cakir
re #855:
- 'StealthLink\\StealthLink.h' is removed from the included header files
Commit: r:3299|plus:3299

#### 2014-04-29, 13:26:27 - Ahmet Cakir
re #855:

-Unused variables defined in the MNavStealthLink namespace were causing build errors. They are deleted. 
Commit: r:3300|plus:3300

#### 2014-04-29, 14:17:33 - Andras Lasso
re #855: Fixed build error happening when building without StealthLink support
Commit: r:3301|plus:3301

#### 2014-05-13, 18:44:54 - Ahmet Cakir
re #855: The orientation and the origin of the vtk volume are fixed. The 3D volume is also flipped. 
Commit: r:3307|plus:3307

#### 2014-05-20, 21:20:57 - Ahmet Cakir
re #855: The orientation and the origin of the stealth image is calculated by changing the LPS coordinate system to RPI. The getexam command works well for images with identity orientation matrix. 
TODO: Find the correct formula to calculate the origin in RPI when the orientation matrix is not identity. 

Commit: r:3319|plus:3319

#### 2014-05-26, 14:29:05 - Andras Lasso
re #855: Removed debug message from CMakeLists.txt
Commit: r:3326|plus:3326

#### 2014-05-28, 19:15:50 - Ahmet Cakir
re #855: The orientation problem fixed. Now the volume is represented in the correct orientation and the result matches exactly what is seen on the stealthlink system. 


Commit: r:3339|plus:3339

#### 2014-05-30, 16:16:17 - Ahmet Cakir
re #855: The orientation problem fixed. Now the volume is represented in the correct orientation and the result matches exactly what is seen on the stealthlink system. 


Commit: r:3347|plus:3347

#### 2014-06-01, 12:00:49 - Andras Lasso
re #855: Made Plus OpenIGTLink command response handling more generic. Now multiple command responses can be generated by a single command.
Commit: r:3350|plus:3350

#### 2014-06-05, 21:19:32 - Ahmet Cakir
re #855: Plus is now able to respond to GET_IMGMETA and GET_IMAGE messages. 
         
Commit: r:3378|plus:3378

#### 2014-06-05, 21:38:50 - Andras Lasso
re #855: Fixed build error
Commit: r:3380|plus:3380

#### 2014-06-06, 18:47:33 - Ahmet Cakir
re #855:The methods of vtkStealthLinkTracker are made thread safe.
         
Commit: r:3386|plus:3386

#### 2014-06-06, 19:49:18 - Ahmet Cakir
re #855:The code has been cleaned. 
         
Commit: r:3388|plus:3388

#### 2014-06-09, 02:08:02 - Andras Lasso
re #855: Fixed linux build error

Commit: r:3390|plus:3390

#### 2014-06-11, 22:10:14 - Ahmet Cakir
re #855: The handle for different reference frames has been added. The attributes of the internal class has been divided into three different classes in order to better handle calls from different threads. Assigning id for image meta datasets is now handled by vtkPlusGetImageCommand. 
Commit: r:3407|plus:3407

#### 2014-06-12, 00:26:13 - Ahmet Cakir
status: changed from "New" to "Test"

#### 2014-08-06, 21:49:01 - Andras Lasso
re #855: Add StealthLink support on Linux (not tested)
Commit: r:3578|plus:3578

#### 2014-08-06, 21:54:23 - Andras Lasso
re #855: Add StealthLink support on Linux (not tested)
Commit: r:3579|plus:3579

#### 2014-08-06, 21:55:25 - Andras Lasso
re #855: Add StealthLink support on Linux (not tested)
Commit: r:3580|plus:3580

#### 2014-08-07, 04:33:12 - Andras Lasso
re #855: Make CreatePackage.bat work for VS2012 MSBuild
Commit: r:3585|plus:3585

#### 2014-08-20, 00:42:24 - Andras Lasso
re #855: Fixed linux build errors - thanks to Normand Robert for the contribution
Commit: r:3616|plus:3616

#### 2014-09-23, 13:19:10 - Andras Lasso
re #855: Simplified GetImageMetaDatasetsCountAsString() implementation
Commit: r:3709|plus:3709

#### 2014-09-27, 18:58:18 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"

#### 2014-09-27, 18:58:18 - Andras Lasso
status: changed from "Test" to "Fixed"


## #856 Add support for controlling the sandwich robot
* Get information about the commands (Andras)
* Implement class to communicate with the hardware

#### 2014-06-05, 02:09:57 - Andras Lasso
assigned_to_id: changed from "ckrahmet" to null

#### 2014-06-05, 02:10:03 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"


## #857 Incorrect phantom model is displayed in fCal after loading a different config file
Incorrect phantom model is displayed in fCal after loading a different config file (sometime the old and the new phantom is displayed as well).

#### 2014-02-04, 19:59:40 - Andras Lasso
fixed #857: The 3d object visualizer was not cleared on disconnect (the config file was reloaded immediately after clearing it). The phantom model was not always reloaded in the PhantomRegistrationToolbox.
Commit: r:3144|plus:3144

#### 2014-02-04, 19:59:40 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #858 Create PlusServer launching service
Currently PlusServer has to be started manually on the data collection computer, which may be inconvenient. We could develop a simple always-running application that can start (and stop) a PlusServer with a chosen configuration file requested through an OpenIGTLink command.

The config file could be a locally stored file (then the filename would be defined in the OpenIGTLink command) or the XML string could be sent in the OpenIGTLink command.

The service could start with Windows. The service could be added to the startup menu by the installer (with the same shortcut name, to avoid having multiple servers started).

It should be able to start PlusServer with a specific config and also kill the process.

Probably the simplest implementation would be to add an OpenIGTLink listener socket to PlusServerLauncher.

#### 2015-01-27, 04:21:21 - Matt McCormick
re #858: PlusLib set PLUS_EXECUTABLE_OUTPUT_PATH default.

Required for configuration outside the PlusBuild superbuild.

Commit: r:3926|plus:3926

#### 2015-01-27, 04:21:21 - Matt McCormick
assigned_to_id: changed from null to "matt.mccormick"

#### 2015-01-27, 04:22:21 - Matt McCormick
status: changed from "New" to "Fixed"

#### 2015-01-27, 05:32:56 - Andras Lasso
Accidentally committed under this ticket, while commit 3926 is actually related to #958

#### 2015-01-27, 05:32:56 - Andras Lasso
assigned_to_id: changed from "matt.mccormick" to null

#### 2015-01-27, 05:32:56 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2016-02-05, 20:57:54 - Andras Lasso
description: changed from "Currently PlusServer has to..." to "Currently PlusServer has to..."

#### 2016-11-25, 05:21:03 - Andras Lasso
re #858: Added (optional) OpenIGTLinkIO usage for remote control of PlusServerLauncher
Commit: r:4944|plus:4944

#### 2016-11-25, 05:21:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-11-25, 05:22:59 - Andras Lasso
re #858: Added (optional) OpenIGTLinkIO usage for remote control of PlusServerLauncher (PlusLib component)
Commit: r:4945|plus:4945

#### 2016-11-25, 05:56:35 - Andras Lasso
re #858: Added (optional) OpenIGTLinkIO usage for remote control of PlusServerLauncher (PlusApp component)

Remote controller not functional yet.

Also fixed PlusServer process monitoring (signals/slots were not correctly connected).
Commit: r:4946|plus:4946

#### 2017-01-10, 03:34:00 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.5.0"

#### 2017-01-10, 03:34:55 - Adam Rankin
re #858 enabling build of OpenIGTLinkIO
Commit: r:5013|plus:5013


## #859 Workaround VTK bug in vtkXMLDataElement::RemoveAttribute
It causes printing out of garbage after removeattribute is called.

bug details: http://paraview.org/Bug/print_bug_page.php?bug_id=9381

Seem to be fixed in VTK6, so either upgrade and/or implement a workaround

#### 2014-02-10, 14:20:06 - Andras Lasso
re #859: Added a correct RemoveAttribute method implementation for vtkXMLDataElement and temporarily use that instead of the faulty VTK implementation
Commit: r:3151|plus:3151

#### 2014-02-10, 14:20:38 - Andras Lasso
re #859: Added a correct RemoveAttribute method implementation for vtkXMLDataElement and temporarily use that instead of the faulty VTK implementation
Commit: r:3152|plus:3152

#### 2014-02-10, 14:49:15 - Andras Lasso
Added a correct RemoveAttribute, Replace it by the regular VTK implementation when moving to VTK 6.x - it's tracked in #860.

#### 2014-02-10, 14:49:15 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-11, 03:23:17 - Andras Lasso
re #859: Fixed linux build warning
Commit: r:3153|plus:3153

#### 2014-02-18, 20:10:19 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:19 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #860 Upgrade supported VTK version to 6.x
Wait until Slicer4 changes the officially supported VTK version to 6.x

When it's done clean up the vtkXMLDataElement::RemoveAttribute patches - see details in #859

#### 2014-02-09, 14:19:45 - Andras Lasso
summary: changed from "Upgrade supported version to VTK 6.x" to "Upgrade supported VTK version to 6.x"

#### 2014-04-28, 16:17:24 - Andras Lasso
re #860: Added support for building Plus with VTK6. If Plus superbuild is used then enabling the PLUSBUILD_USE_VTK6 flag will build Plus with VTK6. By default PLUSBUILD_USE_VTK6 is disabled for now, probably VTK6 will be the default in a few months (when 3D Slicer is moved to VTK6).
Commit: r:3290|plus:3290

#### 2014-04-28, 16:17:24 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-04-28, 16:18:16 - Andras Lasso
re #860: Updated PlusLib to support VTK6 (backward compatible with VTK5)
Commit: r:3291|plus:3291

#### 2014-04-28, 16:18:27 - Andras Lasso
re #860: Updated PlusApp to support VTK6 (backward compatible with VTK5)
Commit: r:3292|plus:3292

#### 2014-04-28, 17:43:42 - Andras Lasso
re #860: Fixed remaining VTK6 build problems in PlusLib
Commit: r:3293|plus:3293

#### 2014-04-28, 17:43:50 - Andras Lasso
re #860: Fixed remaining VTK6 build problems in PlusApp
Commit: r:3294|plus:3294

#### 2014-04-28, 18:12:55 - Andras Lasso
re #860: Fixed VTK5 build problems in PlusLib
Commit: r:3295|plus:3295

#### 2014-04-28, 20:13:35 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-04-28, 21:32:08 - Andras Lasso
re #860: Fixed VTK6 build problem in PlusLib (VTK version was not included)
Commit: r:3296|plus:3296

#### 2014-04-29, 15:29:30 - Adam Rankin
re #860: Fixed linux build problems

Commit: r:3302|plus:3302

#### 2014-04-29, 16:23:47 - Adam Rankin
re #860: Fixed linux build error

Commit: r:3303|plus:3303

#### 2014-04-29, 17:24:29 - Andras Lasso
re #860: Added NULL-pointer checks and minor style fixes in vtkImageVisualizer
Commit: r:3305|plus:3305

#### 2014-06-05, 02:06:50 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-07-29, 13:53:19 - Andras Lasso
re #860: Fixed build error
Commit: r:3564|plus:3564

#### 2014-09-12, 15:41:24 - Andras Lasso
re #860: Removed unnecessary vtkImageData::Update() call
Commit: r:3677|plus:3677

#### 2014-10-01, 14:23:48 - Andras Lasso
re #860: Changed default VTK version to VTK6. Updated to VTK6 version used by latest Slicer
Commit: r:3756|plus:3756

#### 2014-10-03, 12:57:28 - Andras Lasso
Everything seems to work well with VTK6.

#### 2014-10-03, 12:57:28 - Andras Lasso
status: changed from "Test" to "Fixed"


## #861 Allow definition of origin for scan conversion
Currently the image origin for scan conversion is the top/left corner for linear transducers and x-mm-from-bottom/center for curvilinear transducers, this has to be made configurable by adding TransducerCenterPixel[2] parameter that defines the centerpoint of the transducer in the MF coordinate system.
The TransducerCenter is the position of the center transducer element on the transducer surface (this is consistent with how BrainLab and Ultrasonix defines the probe position).

Make the OutputImageStartDepthMm attribute obsolete (remove from documentation; in the code use it only if the new attribute is not defined).


#### 2014-02-16, 13:53:49 - Andras Lasso
re #861: Updated scan conversion documentation with new TransducerCenterPixel attribute
Commit: r:3160|plus:3160

#### 2014-02-16, 13:55:20 - Andras Lasso
fixed #861: Added TransducerCenterPixel attribute to scan conversion to allow specification of any position of the ultrasound image within the image frame
Commit: r:3161|plus:3161

#### 2014-02-16, 13:55:20 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:20 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:20 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"

#### 2014-03-02, 21:10:08 - Andras Lasso
re #861: Simplified configuration files by using the new TransducerCenterPixel parameter (round it to integer, earlier it was not integer, as it was specified in mm), no need to use the ImageToImageFullFrame transform, as full-frame images can now be simulated (the US image can be generated anywhere within the frame, while previously it had to be placed in the top-left corner for linear and top-middle for curvilinear probes)
Commit: r:3208|plus:3208

#### 2014-03-08, 19:27:28 - Andras Lasso
re #861: Fixed scanline position computation for linear probes
Commit: r:3226|plus:3226


## #862 When one Ascension tool is out of view then other tools may appear as out of view
Attach 4 sensors. When the sensor in port 2 is out of view then the sensor in port 3 appears to be out of view, too.

#### 2014-02-18, 18:56:33 - Andras Lasso
fixed #862: Tool status was not set OK by default for each Ascension tool, only for the first one. So, when one tool was not OK, all the subsequent tools remained with not OK status. Now the OK/not OK status is explicitly set for each tool.
Commit: r:3162|plus:3162

#### 2014-02-18, 18:56:33 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-02-18, 20:10:20 - Andras Lasso
Move already fixed tickets to 2.1.1 to create a new snapshot release

#### 2014-02-18, 20:10:20 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-2.1.1"


## #863 fCal controls in the capturing tab clipped
fCal with spatial calib simulation config file: in the Capturing tab scrollbars are displayed and the CaptureDevice widget is clipped, see screenshot.

#### 2014-02-21, 01:38:05 - Andras Lasso
image:dpew4-MPGr455vacwqjQXA


#### 2014-02-21, 01:38:05 - Andras Lasso
Attachment added: "CaptureTabDoesntFit.png"

#### 2014-03-05, 20:04:37 - Adam Rankin
test #863 reworking capture control widgets and toolbox to enable cleaner scrolling
Commit: r:3217|plus:3217

#### 2014-03-05, 20:04:37 - Adam Rankin
status: changed from "New" to "Test"

#### 2014-03-05, 20:05:55 - Adam Rankin
re #863 merging to trunk
Commit: r:3218|plus:3218

#### 2014-03-05, 20:20:03 - Adam Rankin
re #863 reworking capture control widget to be grid layout'd

this enables a dynamic layout that will resize itself depending on whether or not there are scroll bars present
Commit: r:3219|plus:3219

#### 2014-03-05, 20:21:53 - Adam Rankin
re #863 Merged revision(s) 3218-3219 from branches/rankin-sandbox/PlusApp:


Commit: r:3220|plus:3220

#### 2014-03-05, 20:22:54 - Adam Rankin
@lassoan Could you check and see that you are pleased with this solution? I put the capture control widgets in their own scroll area. This way, no matter how many devices there are, the top portion of the UI will remain unaffected.

#### 2014-03-05, 20:22:54 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2014-03-06, 02:30:07 - Andras Lasso
There is no clipping of the right side of the capture control, so that's good. But the horizontal scrollbar is still there. Can we get rid of that?

#### 2014-03-06, 02:33:55 - Adam Rankin
Hmm, is that when fcal is not vertically maximized?

If so I think that happens to all toolboxes? I can fix that as well if you want.

#### 2014-03-06, 02:35:54 - Adam Rankin
Yeah I updated the meta sequence reader/writer as well. I think I covered all the bases.

#### 2014-03-06, 02:37:11 - Andras Lasso
It only happens with the Capturing tab.

By the way, if I start fCal and switch to Capturing and then to Configuraiton tab then fCal crashes. Could you fix this, too?

#### 2014-03-06, 02:52:08 - Adam Rankin
Yes, would you mind adding a ticket?

#### 2014-03-06, 02:52:08 - Adam Rankin
status: changed from "Test" to "New"

#### 2014-03-06, 02:54:11 - Andras Lasso
#872 added

#### 2014-03-25, 12:54:14 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-03-25, 15:36:09 - Adam Rankin
re #863 adjusting fCal layout for a cleaner presentation
Commit: r:3251|plus:3251

#### 2014-03-25, 15:36:48 - Adam Rankin
test #863 Merged revision(s) 3248-3251 from branches/rankin-sandbox/PlusApp:
Commit: r:3252|plus:3252

#### 2014-03-25, 15:36:48 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-03-25, 15:38:32 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2014-03-25, 15:56:42 - Adam Rankin
test #863 adjusting capture toolbox to match layout of other toolboxes
Commit: r:3253|plus:3253

#### 2014-03-25, 15:56:42 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-03-25, 15:57:03 - Adam Rankin
@lassoan Ok now check it out!

#### 2014-05-15, 22:43:24 - Andras Lasso
Thank you, it works well now.

#### 2014-05-15, 22:43:24 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #864 Add basic support for image acquisition from Interson USB ultrasound probes
Allow B-mode image acquisition from Interson USB ultrasound probes. Make imaging parameters configurable from the config file. Maybe also add a simple application for setting the imaging parameters (imaging depth, TGC, LUT, etc.) in real-time using a GUI.

#### 2014-02-22, 14:48:31 - Andras Lasso
re #864: Added Interson SDK to makefiles in PlusBuild
Commit: r:3178|plus:3178

#### 2014-02-22, 14:53:13 - Andras Lasso
re #864: Added sample Interson configuration file to PlusApp install package
Commit: r:3179|plus:3179

#### 2014-02-22, 14:54:10 - Andras Lasso
description: changed from "Allow image acquisition fro..." to "Allow B-mode image acquisit..."

#### 2014-02-22, 14:54:08 - Andras Lasso
re #864: Plus can now acquire images from Interson ultrasound probes. Imaging parameters are hardcoded in vtkIntersonVideoSource. Added automatic test for scan conversion for linear and curvilinear probes.
Commit: r:3180|plus:3180

#### 2014-02-22, 15:09:11 - Andras Lasso
image:bjbJfeM9mr47xcacwqjQXA


#### 2014-02-22, 15:09:11 - Andras Lasso
Attachment added: "fCalInterson.png"

#### 2014-02-22, 15:26:18 - Andras Lasso
re #864: Added sample Interson configuration file to Plus overview doc
Commit: r:3181|plus:3181

#### 2014-02-25, 19:08:03 - Andras Lasso
re #864: Added missing PLUS_USE_INTERSON_VIDEO define for external projects
Commit: r:3193|plus:3193

#### 2014-02-25, 19:52:10 - Andras Lasso
Basic implementation works, remaining issues are tracked in new tickets: #865, #866, #867, #868.

#### 2014-02-25, 19:52:10 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #865 Application crash when Interson ultrasound is reconnected
Crash when connection is closed and opened again

#### 2014-04-16, 16:08:48 - GuillermoCarbajal
re #865 Application does.not crush anymore. The order in which methods are called was slightly changed.  usbStopHardware() is not called any more in InternalDisconnect because no probe is detected when connecting again.
Commit: r:3278|plus:3278

#### 2014-04-29, 22:22:23 - Andras Lasso
@GuillermoCarbajal: is this still a problem?

#### 2014-05-01, 23:10:18 - GuillermoCarbajal
              
No, it is not.

#### 2014-05-01, 23:28:34 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #866 Make Interson imaging parameters configurable from config file
Make imaging parameters configurable from config file and from the vtkIntersonVideoSourceTest.
Parameters: imaging depth, frequency, near/med/far gains, power, contrast/intensity (window width/level for the LUT generation) - use the same parameter names as for the SonixVIdeo config file

#### 2014-10-01, 17:42:00 - Andras Lasso
assigned_to_id: changed from "GuillermoCarbajal" to null

#### 2014-10-07, 19:10:04 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2014-12-10, 21:05:13 - Adam Rankin
This was partly completed within my branch.

vtkUsImagingParameters has a readconfig/writeconfig functionality that will restore device parameters. I did not test the order of operations to verify that the loaded parameters are used on Connect

See
https://subversion.assembla.com/svn/plus/branches/rankin-sandbox/PlusLib/src/DataCollection/Interson/

#### 2015-10-30, 22:10:23 - Adam Rankin
re #866 updating interson sandbox, unverified if workingMerged revision(s) 3882-4393 from trunk/PlusApp:

Merged revision(s)  from trunk/PlusLib:

Merged revision(s) 3882-4393 from trunk/PlusBuild:
Commit: r:4394|plus:4394

#### 2015-10-30, 22:10:23 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-11-16, 20:41:07 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-04-04, 15:08:40 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-04-04, 15:08:43 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-04-04, 15:09:08 - Adam Rankin
Now configurable via vtkUsImagingParameters subtag. More parameters can be added as needed.

#### 2016-04-04, 15:09:08 - Adam Rankin
status: changed from "Test" to "Fixed"


## #867 Add OpenIGTLink commands for changing ultrasound imaging parameters
Allow setting of the imaging parameters through OpenIGTLink. 
Make it work for Interson first, but keep in mind that it should work for Ultrasonix and BK, too.

Also add a simple scripted Slicer module to change the imaging parameters from Slicer.

#### 2014-02-25, 19:49:56 - Andras Lasso
description: changed from "Allow setting of the imagin..." to "Allow setting of the imagin..."

#### 2014-10-01, 17:42:07 - Andras Lasso
assigned_to_id: changed from "GuillermoCarbajal" to null

#### 2014-10-07, 19:10:25 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2014-11-27, 16:42:42 - Adam Rankin
re #867 creating branch to experiment in
Commit: r:3862|plus:3862

#### 2014-11-27, 16:42:42 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-11-27, 16:44:02 - Adam Rankin
re #867 checking out correct pluslib and plusapp for branch
Commit: r:3863|plus:3863

#### 2014-11-27, 16:45:31 - Adam Rankin
Hmm, commiting auto-assigns it. I am still experimenting!

#### 2014-11-28, 14:00:49 - Adam Rankin
re #867 experimental imaging parameters and making sonix use the revamped class
Commit: r:3873|plus:3873

#### 2014-12-01, 19:11:49 - Adam Rankin
re #867 Refactoring imaging parameters to be more flexible

Converting sonix video source to work with reworked imaging parameters, interson already operational with imaging parameters interface
Commit: r:3878|plus:3878

#### 2014-12-01, 19:12:59 - Adam Rankin
re #867 Merged revision(s) 3862-3878 from trunk/PlusLib:
Merged revision(s)  from trunk/PlusApp:
Commit: r:3879|plus:3879

#### 2014-12-03, 17:19:44 - Adam Rankin
re #867 adding callback function to devices to handle new imaging parameters

implementing callback for sonix video source device
Commit: r:3880|plus:3880

#### 2014-12-03, 17:29:43 - Adam Rankin
re #867 build fix
Commit: r:3881|plus:3881

#### 2014-12-10, 16:11:59 - Adam Rankin
re #867 Merged revision(s) 3862-3881 from trunk/PlusBuild:
Merged revision(s)  from trunk/PlusApp:
Merged revision(s)  from trunk/PlusLib:
Commit: r:3882|plus:3882

#### 2014-12-10, 16:17:16 - Adam Rankin
re #867 Why didn't this commmit!
Commit: r:3883|plus:3883

#### 2014-12-10, 18:23:55 - Adam Rankin
re #867 Creating interson ApplyNewImagingParameters

refactored interson code to support new functionality
Commit: r:3884|plus:3884

#### 2014-12-10, 20:03:08 - Adam Rankin
re #867 enabling interface through data collector to apply the imaging parameters to device/devices
Commit: r:3885|plus:3885

#### 2014-12-10, 21:01:14 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2015-07-07, 02:30:22 - Andras Lasso
People were interested in having this feature for Telemed, too.
MITK-US group and UBC group were interested in having this for Ultrasonix.

#### 2015-11-25, 14:13:34 - Adam Rankin
This is possibly something that can come of the OpenIGTLink standardization discussion at NAMIC. I will keep it in mind.

#### 2015-11-25, 15:19:39 - Andras Lasso
Yes, we should include this in the discussions.

#### 2016-06-30, 14:35:45 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-08-15, 19:18:48 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2017-01-10, 14:53:13 - Andras Lasso
summary: changed from "Add OpenIGTLink commands for changing ultrasound imaging parameters for Interson" to "Add OpenIGTLink commands for changing ultrasound imaging parameters"

#### 2017-01-10, 14:54:23 - Andras Lasso
re #867: Added config file for testing imaging parameter changes with a simulated ultrasound device
Commit: r:5014|plus:5014

#### 2017-01-10, 14:54:23 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-01-10, 21:25:43 - Andras Lasso
re #867: Moved config file to correct location
Commit: r:5016|plus:5016

#### 2017-01-10, 21:27:06 - Andras Lasso
re #867: Added probe motion simulation data file
Commit: r:5017|plus:5017

#### 2017-08-29, 20:11:09 - Andras Lasso
See this topic branch:
https://github.com/cpinter/PlusLib/tree/set-us-parameters-command

More information:
https://na-mic.org/wiki/Project_Week_25/Tracked-Ultrasound-Standardization-IV


## #868 Test if Interson works in a 64-bit application
It works in a 32-bit application but could be useful to be able to use it in 64-bit apps

#### 2014-03-25, 18:44:09 - Adam Rankin
re #868 adjusting constant to support 64 bit
Commit: r:3255|plus:3255

#### 2014-03-25, 18:44:53 - Adam Rankin
Doesn't build. Linker errors.

#### 2014-04-17, 18:14:34 - GuillermoCarbajal
file:aHimlAXLWr45D-acwqjQWU


#### 2014-04-17, 18:14:34 - GuillermoCarbajal
Attachment added: "BuildLog.htm"

#### 2014-04-17, 18:16:04 - GuillermoCarbajal
Attached is the log error. I think the errors are because the SDK doesn't support 64 bits. But I am not sure...

#### 2014-10-01, 12:18:00 - Andras Lasso
It seems that no 64-bit .lib is included in the Interson SDK. Maybe 64-bit application can be built using IntersonSDKCxx device.

#### 2014-10-01, 12:18:00 - Andras Lasso
status: changed from "New" to "Invalid"


## #869 Interson probe settings.
Methods must be added to setup the interson probe (Gain, Frequency, Sector, Depth, etc). 

#### 2014-02-27, 23:33:10 - GuillermoCarbajal
re #869 The skeleton of the vtkUsImagingParameters class was added. This class will be used to manage the settings of the US imaging devices.
Commit: r:3203|plus:3203

#### 2014-02-28, 04:22:42 - GuillermoCarbajal
re #869 Some methods were added in vtkIntersonVideoSource.cxx in order to set up the imaging parameters. 
Commit: r:3204|plus:3204

#### 2014-02-28, 13:49:15 - GuillermoCarbajal
re #869 Units were added in the names of the attributes and methods of the class vtkUsImagingParameters. Attributes and methods arguments were also changed from int/float to double.
Commit: r:3205|plus:3205

#### 2014-03-02, 14:35:15 - GuillermoCarbajal
re #869 Declaration of two attributes of the class vtkUsImagingParameters were modified in order to pass the tests. In fact, one of the attributes was temporarily deleted and the other modified.
Commit: r:3207|plus:3207

#### 2014-03-03, 21:14:01 - GuillermoCarbajal
Re #869 Some values that were hard-coded are now variables of the class vtkIntersonVideoSource.cxx. A method was added in order to know which one are the allowed modes for the probe. The implementation of this method is not nice and will be changed in the future. Also was added a method to set the depth of the probe. If the requested depth is not allowed, the first one of the allowed methods is chosen. The probe that we are using seems to have only two available modes: a) 10cm, 3.75 MHz b) 15 cm, 3.75 MHz.  
Commit: r:3210|plus:3210

#### 2014-03-13, 19:38:01 - GuillermoCarbajal
re #869 Intensity, contrast, and TGC at three different depth (near the probe, in the middle and far) can be set in the Interson config file. Those are parameters that can also be modified with the See More software. The uploaded file PlusDeviceSet_Server_IntersonVideoCapture_WithParameters.xml can be used as an example. 
Commit: r:3229|plus:3229

#### 2014-03-14, 14:21:57 - GuillermoCarbajal
re #869 Comments were added in the methods that set the TGC values.
Commit: r:3230|plus:3230

#### 2014-03-14, 21:37:42 - GuillermoCarbajal
re #869 The sample config file was updated with parameters that seems to be fine for scoliosis monitoring scan. 
Commit: r:3231|plus:3231

#### 2014-03-25, 18:19:16 - Adam Rankin
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-04-04, 19:09:43 - GuillermoCarbajal
re #869 The method that set the TGC was slightly modified in vtkIntersonVideoSource.cxx. 
Commit: r:3265|plus:3265

#### 2014-05-29, 20:39:34 - GuillermoCarbajal
re #869 CMakeLists was modified so it can build the vtkIntersonVideoSourceTest project when PLUS is built with Interson support.
Commit: r:3345|plus:3345

#### 2014-06-09, 16:20:12 - GuillermoCarbajal
Re #869: The name of some variables was modified. Floating points are compared now with a tolerance. 
Commit: r:3392|plus:3392

#### 2014-06-09, 16:25:45 - GuillermoCarbajal
The power point explain how the parameters of the Interson probe are set.

file:c1h3967_ir44hcacwqjQXA


#### 2014-06-09, 16:25:45 - GuillermoCarbajal
Attachment added: "IntersonUSBProbeparameters.pptx"

#### 2014-06-09, 16:25:45 - GuillermoCarbajal
CommentContent: changed from "file:c1h3967_ir44hcacwqjQXA
" to "The power point explain how the parameters of the Interson probe are set.

file:c1h3967_ir44hcacwqjQXA
"

#### 2014-06-09, 16:43:50 - Andras Lasso
@GuillermoCarbajal Thanks, this ppt is very useful! We are planning to merge the vtkIntersonVideoSource (that we use with the older probes) and vtkIntersonSDKCxxVideoSource (that uses the new SDK) classes. This would mean many changes in both classes. Do you have any pending changes that you would like commit before this big code reorganization?

#### 2014-06-10, 17:07:25 - GuillermoCarbajal
It's great that you will give full support for the Interson probes. Hopefully in the future we will be one of the users! I have no pending commits so feel free to change whatever you want.
Cheers,
Guillermo

#### 2014-10-01, 17:42:23 - Andras Lasso
assigned_to_id: changed from "GuillermoCarbajal" to null

#### 2014-10-07, 19:09:56 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2016-01-07, 16:01:42 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-07, 16:01:47 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-04-19, 18:35:58 - Adam Rankin
status: changed from "Test" to "Fixed"


## #870 Some DLLs has to be updated when using Plus with MicronTracker 3.7.2
Error when building Plus:
CMake Error at src/DataCollection/CMakeLists.txt:786 (FILE):file COPY cannot find 'c:/Program Files/Claron Technology/MicronTracker/Windist/digiclops.dll'.

The new MicronTracker SDK only uses FlyCapture and not Digiclops. As seen url:http://www.ptgrey.com/support/kb/index.asp?a=4&q=262|here, the new Micron Tracker model using the Bumblee XB3 is not compatible with Digiclops and newer versions of the MicronTracker SDK do not include it. Older cameras may still require Digiclops. Might be best to add a CMake option for MicronTracker SDK version.


Update:
Was successful building Plus with the following steps:
1. Install the Micron Tracker 3.7.2.3 software (64-bit or 32-bit)
2. Install Flycapture 2.5.3.4 (64-bit or 32-bit) selecting 'I will use firewire cameras.' (an earlier version of FlyCapture 2 may work, but this is what I used)
3. Copy the FlyCapture2.dll and FlyCapture2_C.dll from the Program Files\\Point Grey Research\\FlyCapture2\\bin64 folder to Program Files\\Claron Technology\\MicronTracker and Program Files\\Point Grey Research\\FlyCapture2\\bin64 folder to Program Files\\Claron Technology\\MicronTracker\\Dist (and wherever else to replace the existing FlyCapture2.dll and FlyCapture2_C.dll if the application needs it)
3. Copy PGRFlyCapture.dll from the Program Files\\Point Grey Research\\FlyCapture2\\bin64\\FC1 folder to Program Files\\Claron Technology\\MicronTracker, Program Files\\Claron Technology\\MicronTracker\\Dist, and Program Files\\Claron Technology\\MicronTracker\\Dist\\Windist (and wherever else to replace the existing PGRFlyCapture.dll if the application needs it)
4. Copy digiclops.dl and triclops.dll from Program Files\\Claron Technology\\MicronTracker\\Dist to Program Files\\Claron Technology\\MicronTracker\\Dist\\Windist
5. Copy MTVideo.h from Program Files\\Claron Technology\\MicronTracker\\MTDemoCPP to Program Files\\Claron Technology\\MicronTracker\\Dist
6. Build 32-bit Plus

However, Plus still fails to recognize the camera with a 'Failed to attach cameras using calibration data' error showing.

Plus also does not copy Flycapture2.dll and FlyCapture2_C.dll.

#### 2014-02-28, 22:35:54 - Franklin King
priority: changed from "Normal (3)" to "Low (4)"

#### 2014-02-28, 22:46:14 - Franklin King
May just be an issue with different filepaths in the new SDK.

#### 2014-02-28, 23:59:32 - Andras Lasso
priority: changed from "Low (4)" to "Normal (3)"

#### 2014-03-01, 00:00:15 - Andras Lasso
As far as I understand this prevents building of Plus with some newer MicronTracker SDK's so it has to be fixed. Let me know when you have a clear picture about what need to be done.

#### 2014-03-09, 03:06:31 - Franklin King
summary: changed from "Update MicronTracker support to not require Digiclops" to "Plus does not support Micron Tracker 3.7.2"

#### 2014-03-09, 03:06:31 - Franklin King
priority: changed from "Normal (3)" to "High (2)"

#### 2014-03-09, 03:06:31 - Franklin King
description: changed from "Error when building Plus:
C..." to "Error when building Plus:
C..."

#### 2014-03-14, 18:39:29 - Franklin King
Works correctly when installed with the following procedure (might not all be necessary, but it's the exact procedure which led to it working):

Was successful building Plus with the following steps:
1. Install Flycapture 2.5.3.4 (64-bit or 32-bit) first selecting 'I will use firewire cameras.'
2. Restart the computer
3. Run \\'Program Files\\Point Grey Research\\FlyCapture2\\bin64\\Point Grey FlyCap2.exe' and ensure that the camera is detected
4. Install the Micron Tracker 3.7.2.3 software (64-bit or 32-bit)
5. Copy the FlyCapture2.dll and FlyCapture2_C.dll from the Program Files\\Point Grey Research\\FlyCapture2\\bin64 folder to Program Files\\Claron Technology\\MicronTracker and Program Files\\Point Grey Research\\FlyCapture2\\bin64 folder to Program Files\\Claron Technology\\MicronTracker\\Dist (and wherever else to replace the existing FlyCapture2.dll and FlyCapture2_C.dll if the application needs it)
6. Copy PGRFlyCapture.dll from the Program Files\\Point Grey Research\\FlyCapture2\\bin64\\FC1 folder to Program Files\\Claron Technology\\MicronTracker, Program Files\\Claron Technology\\MicronTracker\\Dist, and Program Files\\Claron Technology\\MicronTracker\\Dist\\Windist (and wherever else to replace the existing PGRFlyCapture.dll if the application needs it)
7. Copy digiclops.dl and triclops.dll from Program Files\\Claron Technology\\MicronTracker\\Dist to Program Files\\Claron Technology\\MicronTracker\\Dist\\Windist
8. Copy MTVideo.h from Program Files\\Claron Technology\\MicronTracker\\MTDemoCPP to Program Files\\Claron Technology\\MicronTracker\\Dist
9. Build 32-bit Plus
10. Copy the dll files to the Plus build
11. Uninstall the Micron Tracker software and Flycapture2
12. Install Flycapture 2.5.3.4 (64-bit or 32-bit) first selecting 'I will use firewire cameras.'
13. Restart the computer
14. Run \\'Program Files\\Point Grey Research\\FlyCapture2\\bin64\\Point Grey FlyCap2.exe' and ensure that the camera is detected
15. Install the Micron Tracker 3.7.2.3 software (64-bit or 32-bit)
16. Run Plus Server

#### 2014-03-17, 20:56:45 - Andras Lasso
@FranklinK: thanks for the above info, it's very useful. Could you make the changes necessary in Plus to avoid the need of copying files around?

#### 2014-04-14, 19:28:23 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-05-15, 17:14:38 - Andras Lasso
Need to verify the steps on a new computer then simplify the steps (e.g., Plus should look for the SDK files where they are located; if the file location is different in different SDK versions, then do the lookup based on the SDK version - similarly to as it is done for Ultrasonix).

#### 2014-05-15, 17:14:38 - Andras Lasso
assigned_to_id: changed from null to "garciaguevara"

#### 2014-10-04, 19:08:12 - Andras Lasso
Check again later with an updated Claron MicronTracker SDK version, which doe not have to be patched.

#### 2014-10-04, 19:08:12 - Andras Lasso
assigned_to_id: changed from "garciaguevara" to "lassoan"

#### 2014-10-04, 19:17:54 - Andras Lasso
summary: changed from "Plus does not support Micron Tracker 3.7.2" to "Some DLLs has to be updated when using Plus with MicronTracker 3.7.2"

#### 2014-10-06, 14:12:31 - Andras Lasso
re #870: Use latest MicronTrackerInterface SDK version (MTC_3.7.6.8) by default
Commit: r:3798|plus:3798

#### 2014-10-06, 14:12:46 - Andras Lasso
re #870: Updated MicronTrackerInterface to support latest SDK version (MTC_3.7.6.8)
Commit: r:3799|plus:3799

#### 2014-10-06, 17:27:13 - Andras Lasso
re #870: Enable PLUSBUILD_PREFER_MICRONTRACKER_36 by default

By default prefer MTC_3.6 as MTC_3.7 requires installation of VS2013 redistributable package.

Commit: r:3801|plus:3801

#### 2014-10-06, 17:29:29 - Andras Lasso
re #870: Added FlyCapture2, FlyCapture2_C, libiomp5md DLLs to package if MicronTracker SDK MTC_3.7 is used
Commit: r:3802|plus:3802

#### 2014-10-06, 17:39:38 - Andras Lasso
priority: changed from "High (2)" to "Normal (3)"

#### 2014-10-06, 17:39:38 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-06, 17:42:39 - Andras Lasso
@ungi: PocUs builds starting from tomorrow will be built with MicronTracker 3.7 and Interson support. It only requires installation of 32-bit MTC_3.7.6.8 (Claron and Pointgrey package, with default options everywhere).

#### 2014-10-07, 18:05:21 - Andras Lasso
Tested using two trackers (one was originally set up with 3.7, the other was upgraded from 3.6 to 3.7) and both worked. Installing VS2013 runtime package was necessary on one system (available in the MicronTracker install package).

#### 2014-10-07, 18:05:21 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-04-30, 10:53:25 - Andras Lasso
re #870: Fixed MicronTracker build error on 64-bit systems
Commit: r:4117|plus:4117

#### 2015-05-01, 00:28:37 - Andras Lasso
re #870: Updated FindMicronTracker.cmake to use the 64-bit SDK distribution on 64-bit build configurations
Commit: r:4119|plus:4119

#### 2015-05-01, 00:29:09 - Andras Lasso
re #870: Fixed 64-bit MicronTracker build
Commit: r:4120|plus:4120


## #871 Interson device causes missing dll on run
Plus searches for WDAPI1010.dll and fails to find it. With the device enabled this dll should be put into bin directory.

#### 2014-03-20, 19:48:14 - Andras Lasso
WDAPI1010.dll is installed into the Windows directory as part of the driver installation process, so it cannot be shipped with Plus. This is the same situation as with the BK CameraLink Sapera DLLs. Clarified this on the Hardware_setup page

#### 2014-03-20, 19:48:14 - Andras Lasso
status: changed from "New" to "Invalid"


## #872 fCal crash if switch to Capturing tab without connecting first
if I start fCal and switch to Capturing and then to Configuraiton tab then fCal crashes

#### 2014-03-07, 16:11:58 - Adam Rankin
fixed #872 only deleting memory if it was created in the first place
Commit: r:3224|plus:3224

#### 2014-03-07, 16:11:58 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2014-03-07, 16:12:45 - Adam Rankin
re #872 Merged revision(s) 3220-3224 from branches/rankin-sandbox/PlusApp:

Commit: r:3225|plus:3225

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #873 Receive transforms in PlusServerRemoteControl client
Make a looping PlusServerRemoteControl client that is able to receive tracking data sent by the PlusServer through a message of type TRANSFORM.

This ticket was created as a consequence of the following conversation: https://www.assembla.com/spaces/plus/messages/3827933.

#### 2014-03-18, 15:48:26 - Andras Lasso
is this a feature request or something that you are planning to do?

#### 2014-03-18, 15:59:38 - mmscr
I have already implemented it and I've been suggested that I could commit it to the trunk/sandbox. I cannot commit it, though, because of authentication reasons. Please check my last message from the following conversation: https://www.assembla.com/spaces/plus/messages/3827933.

#### 2014-03-18, 17:27:28 - Andras Lasso
You should be able to commit now.

#### 2014-03-18, 17:35:39 - mmscr
re #873: New directory that contains 2 modified files: PlusServerRemoteControl.cxx and vtkPlusOpenIGTLinkClient.cxx. These have been adapted such that: 
1. the OpenIGTLink client reads the tracking information sent by the PlusServer in a message of type TRANSFORM - see modifications brought to the file vtkPlusOpenIGTLinkClient.cxx;
2. the PlusServerRemoteControl client doesn't end its session after it runs its command, but rather loops indefinitely until an interruption even takes place - see modifications brought to the file PlusServerRemoteControl.cxx.

The purpose of these was to read for a indefinite period of time the tracking information sent by the PlusServer.
Commit: r:3232|plus:3232

#### 2014-03-18, 20:41:37 - Andras Lasso
re #873: Added the option to PlusServerRemoteClient to remain connected to the server and log the received transforms (mainly serves as an example)
Commit: r:3233|plus:3233

#### 2014-03-18, 20:41:52 - Andras Lasso
Thanks for your contribution. I've integrated the functionality into the existing PlusServerRemoteControl and vtkPlusOpenIGTLinkClient. To test it, run the PlusServerRemoteControl with the --keep-connected flag to activate the transform logging.
If you find that all the functionalities that you wanted are there in the updated clients then we'll remove the files from the sandbox.

#### 2014-03-18, 20:41:52 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-03-19, 12:19:27 - mmscr
Everything works as expected if I initialize the boolean flag keepConnected to 'false' instead of 'true' (see line 361, file PlusServerRemoteControl.cxx). Left as it is now(true), makes the client to loop infinitely, read and print the TRANSFORM messages, even though the --keep-connected flag is not used. I've noticed this behavior while running the client without any flag whatsoever - in this case, the statement

~~~~

 if ( command.empty() && !keepConnected)
  {
    LOG_ERROR('The program has nothing to do, as neither --command nor --keep-connected is specifed'); 
    std::cout << 'Help: ' << args.GetHelp() << std::endl;
    exit(EXIT_FAILURE); 
  }

~~~~

does not behave as expected, i.e., it doesn't exit the program.

Thank you for your help.

#### 2014-03-19, 12:45:07 - Andras Lasso
re #873: Fixed --keep-connected flag behavior in PlusServerRemoteControl
Commit: r:3236|plus:3236

#### 2014-03-19, 12:45:38 - Andras Lasso
Thanks for the testing. The flag was indeed initialized to an incorrect value. Now it's fixed.

#### 2014-03-19, 13:08:34 - mmscr
No problem, thank you for your quick and constant dedication!

#### 2014-03-19, 13:17:02 - Andras Lasso
You're welcome. As I understand the changes in the trunk work well, so I'll remove the code from the Sandbox.

#### 2014-03-19, 13:19:11 - mmscr
Yes, they work as expected. You can remove the code from the Sandbox. I am closing this ticket by setting it to fixed.

#### 2014-03-19, 13:19:16 - mmscr
status: changed from "Test" to "Fixed"

#### 2014-03-19, 13:23:58 - Andras Lasso
re #873: Removed LoopRemoteServerClientToReceiveTrackingData

the suggested changes have been integrated into the trunk
Commit: r:3237|plus:3237

#### 2014-03-19, 13:33:08 - Andras Lasso
re #873: Fixed linux build error in PlusServerRemoteControl
Commit: r:3238|plus:3238


## #874 Changing image orientation for Mmf device does not flip the image in fCal
Changing the orientation to anything not MF results in a grey image.

Flipping code needs rewrite to support flipping images with multiple components.

#### 2014-03-19, 15:16:26 - Andras Lasso
which attribute in the XML you changed exactly?

#### 2014-03-19, 18:46:06 - Adam Rankin
Might be specific to MMF device.

#### 2014-03-19, 18:48:48 - Adam Rankin
Component: changed from "PlusApp-fCal" to "PlusLib"

#### 2014-03-19, 18:48:48 - Adam Rankin
summary: changed from "Changing image orientation does not flip the image in fCal" to "Changing image orientation for Mmf device does not flip the image in fCal"

#### 2014-03-19, 18:48:48 - Adam Rankin
description: changed from "Switching the image orienta..." to "Changing the orientation to..."

#### 2014-03-19, 20:45:24 - Adam Rankin
fixed #874 flip image re-written to consider multiple scalar components

MMF video device lack of internal orientation fixed
Commit: r:3239|plus:3239

#### 2014-03-19, 20:45:24 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2014-03-19, 21:02:10 - Adam Rankin
re #874 Merged revision(s) 3221-3239, 2441-3220 from branches/rankin-sandbox/PlusLib:
Commit: r:3240|plus:3240

#### 2014-03-20, 13:39:36 - Andras Lasso
re #874: Added GetBytePerPixel method and changed a few classes to use it when it is more appropriate (when frame size in bytes is computed).
Commit: r:3241|plus:3241

#### 2014-03-20, 17:22:58 - Andras Lasso
re #874: Fixed the replay of color images from sequence metafiles. Added handling of color images and number of scalar components where it was missing. Renamed NumberOfComponents to NumberOfScalarComponents to be consistent with VTK nomenclature.
Commit: r:3242|plus:3242

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #875 Add support for color image acquisition using Epiphan
Add support for color image acquisition using Epiphan, similarly to MmfVideoSource.

To enable color image acquisition the user has to add the ImageType='RGB_COLOR' attribute to the DataSource:

      <DataSources>
        <DataSource Type='Video' Id='Video' PortUsImageOrientation='MF' BufferSize='100' ImageType='RGB_COLOR' AveragedItemsForFiltering='20' />
      </DataSources>      


#### 2014-03-25, 16:08:24 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2014-03-25, 16:08:27 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-03-25, 16:08:31 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-03-25, 16:51:45 - Adam Rankin
Local changes made, waiting for hardware to test.

#### 2014-03-25, 16:51:45 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-04-01, 19:27:20 - Adam Rankin
re #875 WIP fixing up remaining issues in epiphan color image capture

dropping YUY2 support as it doesn't seem necessary and takes up memory
Commit: r:3256|plus:3256

#### 2014-04-02, 15:18:43 - Adam Rankin
test #875 Merged revision(s)  from branches/rankin-sandbox/PlusLib:
Commit: r:3258|plus:3258

#### 2014-04-23, 18:01:40 - Adam Rankin
Hardware test confirms this as working.

#### 2014-04-23, 18:01:40 - Adam Rankin
status: changed from "Test" to "Fixed"


## #876 Cmake files fail to find dll files having same name for both debug and release


#### 2014-04-01, 20:35:24 - Ahmet Cakir
milestone_id: changed from null to "Release Plus-Future"

#### 2014-04-01, 20:38:18 - Ahmet Cakir
re #876: CMakeLists.txt file has been changed in order to distinguish between dll files having the same name for both release and debug. FindStealthlink2.cmake file has been also updated in regards 
Commit: r:3257|plus:3257

#### 2014-04-02, 15:11:47 - Ahmet Cakir
The commit number 3257: The comment should be different than what is says. The changes in the cmake files here were made in order to add stealthlink to plus. Also FindStealthlink2 is changed according to the other find files so that they follow the same pattern

#### 2014-04-02, 15:20:50 - Ahmet Cakir
re #876: The cmake file is modified in order to distinguish between dll files having the same name for both debug and release
In addition, The modification to automatically find Stealthlink cxx and header files is done
Commit: r:3259|plus:3259

#### 2014-05-19, 15:30:23 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-05-19, 15:30:23 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-05-19, 15:30:23 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #877 Build types (32-bit/64-bit/embedded) are not recognizable
If you install a 32-bit and a 64-bit version of PLUS, it is currently very hard to tell which item in the Start Menu corresponds to which build. If possible, it should be indicated in the start menu folders which build type is the installed PLUS.

#### 2014-04-14, 19:29:00 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-04-14, 20:09:04 - Andras Lasso
re #877: Add Win32 or Win64 postfix to package names
Commit: r:3272|plus:3272

#### 2014-04-14, 20:09:04 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-04-14, 20:17:10 - Andras Lasso
fixed #877: Added Win32 or Win64 postfix to package names
Commit: r:3273|plus:3273

#### 2014-04-14, 20:17:10 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #878 Plus Server crashes when modifying path under config file
I connected to devices using PlusServer. While it was running, I changed the folder name of the config file that was used for the connection. When I pressed disconnect, Plus Server crashed. It probably should have gone back to a state where no config file is selected, and the folder selection should probably go back to some default folder.

#### 2014-04-14, 19:28:05 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-04-14, 20:11:19 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-04-14, 20:10:34 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2014-04-14, 20:10:45 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2014-04-14, 20:22:45 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-04-14, 20:30:08 - Adam Rankin
re #878 Merged revision(s)  from trunk/PlusLib:
Commit: r:3274|plus:3274

#### 2014-04-14, 21:07:13 - Adam Rankin
test #878 checking index of current item before attempting to access an item that might not exist
Commit: r:3275|plus:3275

#### 2014-04-14, 21:07:13 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-04-14, 21:09:41 - Adam Rankin
re #878 Merged revision(s)  from branches/rankin-sandbox/PlusApp:


Commit: r:3276|plus:3276

#### 2014-04-15, 13:00:45 - Adam Rankin
@ungi Could you check that you are pleased with this change?

#### 2014-04-15, 13:55:13 - Tamas Ungi
Thanks for working on this. I can test it today in the afternoon.

#### 2014-04-15, 18:29:15 - Tamas Ungi
Yes, it seems to be handling the mentioned exceptional situation well now. Thanks.

#### 2014-04-16, 17:53:02 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #879 Tracked image data stream sometimes jittery
When acquiring tracked image data the tracking data in Slicer looks jittery. When only tracking data is acquired then there is no jitter.

#### 2014-04-11, 20:26:15 - Andras Lasso
fixed #879: Fixed tracked image data acquisition jitter. The logic that determined the latest video frame timestamp with valid tracking data was incorrect.

Also corrected help text of EditSeqMetaFile and added a NULL pointer check.
Commit: r:3271|plus:3271

#### 2014-04-11, 20:26:15 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #880 Create utility that shows scanlines and clipping fan and rectangle
It would be very useful to have a tool that can display the scanlines and clipping fan and rectangle over the US image. Main applications are setting up volume reconstruction and scan conversion parameters.

#### 2014-04-29, 22:23:15 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2014-05-15, 17:10:55 - Andras Lasso
@Tamas: Please assign to Matt Lougheed when he joins the Plus project on assembla

#### 2014-05-15, 17:10:55 - Andras Lasso
assigned_to_id: changed from null to "ungi"

#### 2014-06-05, 02:06:59 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-10, 16:09:03 - Tamas Ungi
assigned_to_id: changed from "ungi" to "MattLougheed"

#### 2014-06-19, 16:28:39 - Matt Lougheed
re #880: Add the first version of the Scanlines utility application
Commit: r:3448|plus:3448

#### 2014-06-20, 04:20:21 - Andras Lasso
Thanks Matt. I've added comments at https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/3448. Have you seen them?

#### 2014-06-20, 13:29:49 - Matt Lougheed
Yes, I saw the comments. Thanks for taking the time to review. I've made most of the changes, just need to write the deep copy function.

#### 2014-06-20, 13:51:43 - Tamas Ungi
Can you also list this program on this page: https://www.assembla.com/spaces/plus/wiki/Diagnostic_and_test_tools with a little user guide.
BTW, maybe that page should be reorganized by alphabetical order of tool names, or create a TOC?


#### 2014-06-20, 13:54:18 - Andras Lasso
We are in the process of reworking the user documentation. It'll be generated by doxygen. We'll make sure the tools can be easily browsed.

#### 2014-08-27, 18:48:18 - Andras Lasso
test #880: Cleaned up DrawScanLines tool implementation. Added documentation, test. Fixed linear scanline endpoint computation.
Commit: r:3640|plus:3640

#### 2014-08-27, 18:48:18 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-09-03, 16:09:09 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-11-13, 19:38:46 - Tamas Ungi
re #880: Added option to use SetInputData for vtkUsScanConvert

Before this only SetInputConnection worked correctly for linear converter.
Commit: r:4403|plus:4403

#### 2015-11-14, 11:57:06 - Andras Lasso
re #880: Fixed vtk5 build error
Commit: r:4404|plus:4404


## #881 Consolidate color image design in epiphan device
Instead of VideoFormat device parameter, detect color based on ImageType param for video data source

#### 2014-04-23, 18:35:04 - Andras Lasso
re #881: Added sample config file for color Epiphan capture (doesn't work yet, requires changes in the code)
Commit: r:3284|plus:3284

#### 2014-04-23, 18:35:56 - Andras Lasso
re #881: Added sample config file for color Epiphan capture (doesn't work yet, requires changes in the code)
Commit: r:3285|plus:3285

#### 2014-04-23, 18:55:09 - Adam Rankin
re #881 WIP epiphan rewrite to support capturing to multiple video sources, each with their own capture settings

un-tested on hardware or for performance
Commit: r:3286|plus:3286

#### 2014-04-23, 20:13:39 - Adam Rankin
status: changed from "New" to "Test"

#### 2014-04-24, 22:08:53 - Andras Lasso
Works well, thanks!

#### 2014-04-24, 22:08:53 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-04-25, 19:45:46 - Andras Lasso
re #881: Cleaned up config files (allocate 100 video frames by default to avoid running out of memory)
Commit: r:3288|plus:3288

#### 2014-04-25, 19:47:04 - Andras Lasso
re #881: Disable connect/disconnect button during connecting/disconnecting
Commit: r:3289|plus:3289

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #882 Remove backward compatibility code
For a transition period, Plus is supported to be used with VTK5, VTK6 and VTK7. To reduce maintenance and testing overhead, VTK5 and VTK6 support should be removed.

The same applies to Qt4 support.

Remove VTK5/VTK6 backward-compatibility code:
* Search for VTK_VERSION_MAJOR in the PlusLib and PlusApp source code and remove all code that is in the VTK_VERSION_MAJOR<6 branch
* Remove SetInputData_vtk5compatible
* Update CMake scripts to disallow VTK5/6 and to fetch only VTK7

Remove Qt4 backward-compatibility code:
* Update CMake scripts to disallow Qt4
* Remove Qt4 specific code from PlusApp

#### 2014-06-04, 20:16:05 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2016-04-01, 16:47:14 - Andras Lasso
priority: changed from "Low (4)" to "Normal (3)"

#### 2016-04-01, 16:47:23 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2016-06-27, 01:44:43 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-06-27, 05:42:57 - Andras Lasso
We should do this but let's stabilize the current version and release a stable version first. The latest stable with VTK5 support is very old.

#### 2016-06-27, 12:03:49 - Adam Rankin
Ah that makes sense. I will separate out my change lists.

#### 2016-06-27, 18:08:39 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-06-30, 14:34:37 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-07-01, 12:43:26 - Adam Rankin
re #882 restoring VTK5 protections until after release
Commit: r:4701|plus:4701

#### 2016-07-01, 12:43:26 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-15, 19:18:54 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-17, 19:23:08 - Adam Rankin
re #882 Say goodbye to my little friend!

Removing all aspects of VTK5 support from the project.
Commit: r:4814|plus:4814

#### 2016-08-18, 20:31:52 - Adam Rankin
summary: changed from "Remove VTK5 backward compatibility code" to "Remove backward compatibility code"

#### 2016-08-18, 20:34:56 - Adam Rankin
description: changed from "For a transition period, Pl..." to "For a transition period, Pl..."

#### 2016-08-19, 14:58:21 - Adam Rankin
re #882 Removing support for VTK6 and Qt4. Disabling support for VS2008, 2012.
Commit: r:4818|plus:4818

#### 2016-08-20, 14:51:53 - Adam Rankin
re #882 Further progress towards removing Qt4/VTK&lt;6 support

Removing dependency of PlusLibData on PlusLib (for build)

Allowing Slicer to be used as a build speedup (free ITK).
Commit: r:4819|plus:4819

#### 2016-08-22, 15:44:40 - Dzenan Zukic
The suggestion to 'Rename SetInputData_vtk5compatible to SetInputData_vtk5compatible' is certainly a mistake. Did you mean rename to 'SetInputData' or something else?

#### 2016-08-22, 17:46:12 - Adam Rankin
description: changed from "For a transition period, Pl..." to "For a transition period, Pl..."

#### 2016-08-22, 17:55:04 - Dzenan Zukic
re #882 Fixing build error
Commit: r:4820|plus:4820

#### 2016-08-22, 18:46:21 - Dzenan Zukic
re #882 Renaming all instances of SetInputData_vtk5compatible
Commit: r:4821|plus:4821

#### 2016-08-23, 12:33:56 - Dzenan Zukic
file:dBTU2iAs0r5QRdacwqjQYw


#### 2016-08-23, 12:33:56 - Dzenan Zukic
Attachment added: "Output-Build.txt"

#### 2016-08-23, 12:33:56 - Dzenan Zukic
file:dB1hWyAs0r5QRdacwqjQYw


#### 2016-08-23, 12:33:56 - Dzenan Zukic
Attachment added: "CMakeCache.txt"

#### 2016-08-23, 12:34:00 - Dzenan Zukic
Maeliss, a colleague, is having problems building Plus after the recent refactoring. I can't figure out why there are link errors - I don't have them. Maybe you have a clue? CMake config and build log are hers.

P.S. How does she join Plus on Assembla, so she can post messages or create tickets? She already created an url:https://app.assembla.com/profile/maeliss.jallais765352|account.

#### 2016-08-23, 12:34:00 - Dzenan Zukic
CommentContent: changed from "Maeliss, a colleague, is having problems building Plus after the recent refactoring. I can't figure out why there are link errors - I don't have them. Maybe you have a clue?

P.S. How does she join Plus on Assembla, so she can post messages or create" to "Maeliss, a colleague, is having problems building Plus after the recent refactoring. I can't figure out why there are link errors - I don't have them. Maybe you have a clue? CMake config and build log are hers.

P.S. How does she join Plus on Assembla, so"

#### 2016-08-23, 12:59:37 - Dzenan Zukic
She found the problem. For some reason, the Interson library in the generated project file was pointing to the wrong place (the old build which used Qt4). And this was the second clean build.

The question of how to get access to posting messages and tickets in Plus remains open.

#### 2016-08-23, 12:59:37 - Dzenan Zukic
CommentContent: changed from "She found the problem. For some reason, the Interson library in the generated project file was pointing to the wrong place (the old build which used Qt4). And this was the second clean build.

The question of how get access to posting messages and tickets" to "She found the problem. For some reason, the Interson library in the generated project file was pointing to the wrong place (the old build which used Qt4). And this was the second clean build.

The question of how to get access to posting messages and"

#### 2016-08-23, 13:46:02 - Andras Lasso
How to join the project is described at the bottom of the main page and in User documentation / How to report an error (http://perk-software.cs.queensu.ca/plus/doc/nightly/user/ReportError.html).
Where did you look for instructions? How could we make this easier to find?

#### 2016-08-23, 14:02:23 - Dzenan Zukic
I took a quick look at url:https://app.assembla.com/spaces/plus/wiki/Users_guide|User's guide and Developer's Guide, and Googled for 'Assembla join project'. I also looked at url:https://app.assembla.com/spaces/plus/team|Team to see if I can add or invite her.

I guess I don't frequently use Assembla because almost everything is on Github, so I didn't know where to find the join procedure.

#### 2016-08-23, 14:06:15 - Dzenan Zukic
I can't open the url:https://www.assembla.com/spaces/join/plus|join link. I thought it was because I am already a member, but she can't join either. We both get redirected to:
url:https://app.assembla.com/not_permitted|https://app.assembla.com/not_permitted

#### 2016-08-23, 14:16:38 - Adam Rankin
I made the contact procedure more visible on the home page of the Wiki. Hopefully it will be easier for new people to report a problem.

#### 2016-08-26, 20:46:58 - Adam Rankin
With the build machines stabilized, I am closing this ticket. Any new issues should be filed in individual tickets.

#### 2016-08-26, 20:46:58 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-08-27, 15:10:11 - Adam Rankin
re #882 fixing linux/mac build
Commit: r:4836|plus:4836

#### 2016-08-27, 15:57:07 - Adam Rankin
re #882 nothing to see here... definitely not a rookie mistake
Commit: r:4837|plus:4837

#### 2016-08-27, 16:45:23 - Adam Rankin
re #882 enabling build of stable branch with VS2015
Commit: r:4838|plus:4838

#### 2016-09-05, 18:09:06 - Adam Rankin
re #882 testing continuous build
Commit: r:4847|plus:4847


## #883 fCal Lego Phantom 2.0
Phantom made from LEGO bricks which accommodates a deeper imaging depth.  The phantom is a modification of the fCal-L-1.0 and has a similar wiring configuration and the same defined origin.

#### 2014-05-14, 14:39:45 - Marie Soehl
re #883: Lego Phantom 2.0 model stl file 
Commit: r:3308|plus:3308

#### 2014-05-14, 14:39:45 - Marie Soehl
assigned_to_id: changed from null to "msoehl"

#### 2014-05-14, 14:40:43 - Marie Soehl
Cad model and config file are complete.  The phantom needs to be tested.

#### 2014-05-14, 14:40:43 - Marie Soehl
status: changed from "New" to "Accepted"

#### 2014-05-14, 14:41:52 - Marie Soehl
re #883: Config file for Lego Phantom 2.0
Commit: r:3309|plus:3309

#### 2014-05-14, 19:47:05 - Marie Soehl
re #883: Files renamed and extra file remove
Commit: r:3310|plus:3310

#### 2014-05-14, 19:48:07 - Marie Soehl
re #883: files renamed, title renamed, determining why phantom registration is not working
Commit: r:3311|plus:3311

#### 2014-05-15, 15:08:02 - Marie Soehl
re #883: updated vtk xml definition to match latest release
Commit: r:3312|plus:3312

#### 2014-05-15, 19:14:07 - Marie Soehl
re #883: rescaled, translated and rotated Lego Phantom 2.0 model
Commit: r:3313|plus:3313

#### 2014-05-21, 18:44:21 - Marie Soehl
re #883: Changed deeper wire configuration to have a larger separation between wires.  Measured wire locations and landmark locations with calipers. Updated locations.
Commit: r:3320|plus:3320

#### 2014-05-23, 16:12:20 - Marie Soehl
re #883: Separated top and bottom wires into two separate config files
Commit: r:3324|plus:3324

#### 2014-05-27, 19:05:57 - Marie Soehl
re #883: 3Nwire configuration for deep imaging for LEGO and printed phantom
Commit: r:3333|plus:3333

#### 2014-05-28, 16:32:32 - Marie Soehl
re #883: updated landmark locations and model file
Commit: r:3336|plus:3336

#### 2014-05-28, 16:33:29 - Marie Soehl
re #883: Updated model and origin
Commit: r:3337|plus:3337

#### 2014-05-29, 19:16:06 - Marie Soehl
re #883: Error in wire configuration corrected
Commit: r:3344|plus:3344

#### 2014-06-05, 01:33:56 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-06-05, 17:14:43 - Marie Soehl
re #883: Updated origins of Lego and fCal-3.1 phantoms in CADmodels 
Commit: r:3372|plus:3372

#### 2014-06-05, 17:16:26 - Marie Soehl
re #883: Updated landmarks and wire configuration
Commit: r:3373|plus:3373

#### 2014-06-18, 16:50:15 - Marie Soehl
re #883: Landmarks and wire configuration definitions adjusted. Origin of fCal-3.1 shifted.
Commit: r:3442|plus:3442

#### 2014-06-23, 18:54:32 - Marie Soehl
re #883: config files now include tool definition, fCal3.1 slanted holes accomodated for
Commit: r:3457|plus:3457

#### 2014-07-24, 20:47:58 - Marie Soehl
re #883: Polaris tracking config file
Commit: r:3539|plus:3539

#### 2014-10-07, 19:04:41 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2015-11-25, 15:39:00 - Andras Lasso
Some clean up and consistencty check between the stl model and wiring description would be needed, but we don't plan to work on this unless somebody asks for it.

#### 2015-11-25, 15:39:00 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2015-11-25, 15:39:00 - Andras Lasso
assigned_to_id: changed from "msoehl" to null


## #884 Allow multiple configuration files to have the same device set name
Currently, when PlusConfiguration / DataCollection / DeviceSet / Name attribute has the same value in multiple device set configuration files, then only one is listed in the config file selector listbox. Change the behavior to list all of them (if they have the same name, then list it twice).

#### 2014-05-15, 17:33:26 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-05-15, 18:38:26 - Jaime Garcia Guevara
status: changed from "New" to "Accepted"

#### 2014-05-30, 16:08:07 - Jaime Garcia Guevara
re #884 Same set devices are saved with different version [number] using the hash table
Commit: r:3346|plus:3346

#### 2014-05-30, 18:53:46 - Jaime Garcia Guevara
test #884 Set file name at device set tool tip, think looks better.
Commit: r:3349|plus:3349

#### 2014-05-30, 18:53:46 - Jaime Garcia Guevara
status: changed from "Accepted" to "Test"

#### 2014-05-31, 12:13:22 - Andras Lasso
image:d1KcWS6lWr451HacwqEsg8


#### 2014-05-31, 12:13:22 - Andras Lasso
Attachment added: "DeviceSetSelectorTooltip.png"

#### 2014-05-31, 12:17:56 - Andras Lasso
Thanks, the filename is shown nicely now.

The tooltip in the dropdown is useful because the listbox is not always wide enough to show the full name of the device set (see the screenshot). So, I think we should keep showing the device set name.

We may also consider showing the device set description in the tooltip. If you think  it looks nice and useful, then add that, too.

#### 2014-05-31, 12:17:56 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2014-06-02, 14:20:30 - Jaime Garcia Guevara
Ahh right then better keep both at tooltip

#### 2014-06-02, 14:28:13 - Jaime Garcia Guevara
test #884 Device set description in tool tip too 
Commit: r:3354|plus:3354

#### 2014-06-02, 14:28:13 - Jaime Garcia Guevara
status: changed from "Accepted" to "Test"

#### 2014-06-03, 00:17:04 - Andras Lasso
As we discussed, if you can limit the tooltip width then add the device set description to the tooltip, too. If we cannot control the tooltip width then you can close this ticket as is, without modifying the current implementation.

#### 2014-06-03, 21:44:50 - Jaime Garcia Guevara
test #884 Add device set description to tooltip with rich text word wrapped
Commit: r:3360|plus:3360

#### 2014-06-03, 21:55:19 - Andras Lasso
Thank you Jaime! Congratulations on your first completed ticket!

#### 2014-06-03, 21:55:19 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-06-03, 21:55:19 - Andras Lasso
CommentContent: changed from "Thank you Jaime! Congratulations for your first completed ticket!" to "Thank you Jaime! Congratulations on your first completed ticket!"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #885 Fix coverity errors in PlusLib
https://scan.coverity.com/projects/916

#### 2014-05-15, 17:25:43 - Adam Rankin
Sign up required, I don't suppose the summary screen is easy enough to replicate on this ticket?

#### 2014-05-15, 17:31:36 - Andras Lasso
Add your coverity account to this ticket and then I can grant you access.

#### 2014-05-15, 17:33:17 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2014-06-05, 02:07:36 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-07, 19:11:35 - Andras Lasso
assigned_to_id: changed from "garciaguevara" to null

#### 2014-10-07, 19:11:35 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"

#### 2014-10-08, 14:02:08 - Jaime Garcia Guevara
status: changed from "New" to "Accepted"

#### 2014-10-08, 15:33:24 - Jaime Garcia Guevara
status: changed from "Accepted" to "New"


## #886 Make fCal easier to use without a foot pedal
* Stylus calibration: have a timer (wait for a few seconds after clicking the start button, before actually starting to collect data)
* Phantom calibration: auto-detect pivoting with stationary tip and use mean position (this also makes the point position more accurate); implement the algorithm in a separate class so that we can easily port it to SlicerIGT (Fiducial Registration Wizard module)
* Temporal calibration: have a timer
* Spatial calibration: have a timer


#### 2014-05-15, 17:21:39 - Adam Rankin
If we're getting really fancy, then maybe we could have a visible countdown before data collection.

#### 2014-05-15, 17:33:12 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-05-15, 19:41:06 - Andras Lasso
Yes, I agree, the visible counter is essential (it's important to know when the data collection actually begins).

#### 2014-07-09, 18:47:05 - Jaime Garcia Guevara
re #886 Stylus calibration timer
Commit: r:3495|plus:3495

#### 2014-07-10, 18:51:58 - Jaime Garcia Guevara
re #886 Stylus calibration timer, no event loop used and rename to DelayStartup 
Commit: r:3496|plus:3496

#### 2014-07-10, 19:17:35 - Andras Lasso
I've tried the stylus calibration timer and it works perfectly! Just need to refine the code a bit and then it could be ported to the temporal and spatial calibration, too.

#### 2014-07-10, 19:17:39 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-07-14, 20:48:05 - Jaime Garcia Guevara
re #886 Delay time varables properly named, read and set with xml attribute macro. Signals connected while GUI setup. One slot for start button another for timer. 
Commit: r:3498|plus:3498

#### 2014-08-02, 00:00:52 - Jaime Garcia Guevara
re #886 Basic pivot detection working need to clean up and adapt to phantom calibration.
Commit: r:3570|plus:3570

#### 2014-08-02, 00:03:34 - Jaime Garcia Guevara
re #886 Automatic pivot detection fitting sphere, with out calibration, by fitting a sphere. It was not needed though. 
Commit: r:3571|plus:3571

#### 2014-08-15, 16:07:49 - Jaime Garcia Guevara
re #886 pivot detecting (vtkPivotDetectionAlgo) works for several pivots in row, still may need some clean but it is ready to put into fcal. vtkReadTrackedSignals class and plotting is not necessary but was (and might) be useful for testing. Tests need to be cleaned up, PivotDetectionTest might be redundant so maybe better to remove later.
Commit: r:3597|plus:3597

#### 2014-08-16, 12:48:09 - Andras Lasso
@garciaguevara Missing vtkPhantomRegistrationAutoDetectPivotingTest.cxx caused build errors. Upload the missing file and enable the vtkPhantomRegistrationAutoDetectPivotingTest test. To avoid such problems in the future, register at the PLUS dashboard (http://crunch.cs.queensu.ca/CDash/index.php?project=PLUS) and then you get personal email in 15 minutes if your commit causes build error or tests failures.


#### 2014-08-16, 12:48:20 - Andras Lasso
re #886: Disable vtkPhantomRegistrationAutoDetectPivotingTest until the missing vtkPhantomRegistrationAutoDetectPivotingTest.cxx file is committed.
Commit: r:3601|plus:3601

#### 2014-08-17, 13:59:29 - Andras Lasso
re #886: Disabled vtkPivotDetectionTest (it appeared to be incomplete or incorrectly configured) to not pollute the dashboard with tests that always fail
Commit: r:3603|plus:3603

#### 2014-08-18, 16:11:44 - Jaime Garcia Guevara
re #886 Pivot detection phantom test file added
Commit: r:3604|plus:3604

#### 2014-08-18, 21:31:30 - Jaime Garcia Guevara
re #886 Cleaning and LOG verbose, vtkMatrix smart pointers instead and corrections 
Commit: r:3611|plus:3611

#### 2014-08-20, 20:41:39 - Jaime Garcia Guevara
re #886 This removes US image data from the mha tracked list file. For simplicity and to keep current functionality untouched new vtkMetaImageSequenceIO methods were created but some methods could be merged (as AppendImagesToHeader method was) and improved. 
Commit: r:3621|plus:3621

#### 2014-08-21, 16:36:21 - Jaime Garcia Guevara
re #886 vtkPhantomRegistrationAutoDetectPivotingTest working
Commit: r:3625|plus:3625

#### 2014-08-21, 19:54:43 - Jaime Garcia Guevara
re #886 Some automatic end of lines changes 
Commit: r:3626|plus:3626

#### 2014-08-22, 13:05:43 - Jaime Garcia Guevara
re #886 Get rid of the warning
Commit: r:3629|plus:3629

#### 2014-09-02, 15:16:04 - Jaime Garcia Guevara
re #886 RecordedAutoDetectPivotingPhantomLandmarks config, smaller detection time, pivot threshold give smaller registration error. vtkPivotDetectionAlgo reset, undo and directly insert detected pivot list. vtkFrameTracker PivotCalibrationAutoDetect, RecordedPoseFrameList modes added. 
Commit: r:3648|plus:3648

#### 2014-09-02, 15:20:54 - Jaime Garcia Guevara
re #886 PhantomRegistrationToolbox supports the pivot detection for landmark registration.
Commit: r:3649|plus:3649

#### 2014-09-09, 22:12:36 - Jaime Garcia Guevara
re #886 Read aquisition rate from tracked frames, test with a folder or file. Window time default spans WINDOW_SIZE=3 of acquisition points, dont average after pivot found, dont use the first 2 windows of detected pivots, acquisition rate from tracker not required in config file. Tested with 8 (not noisy) out 17 of datasets S:\\data\\PivotDetection\  rackedDataClean
Commit: r:3670|plus:3670

#### 2014-09-10, 13:00:22 - Jaime Garcia Guevara
re #886 Pivot detection set minimun distance between markers and set acquisition rate from tracker device. Change button position
Commit: r:3674|plus:3674

#### 2014-09-10, 23:59:10 - Jaime Garcia Guevara
re #886 pivot calibration only one start-stop button, as other toolboxes 
Commit: r:3675|plus:3675

#### 2014-09-15, 17:20:02 - Andras Lasso
There is a failing test on linux: http://crunch.cs.queensu.ca/CDash/testDetails.php?test=564676&build=28429

Make sure that tests only require a terminal (don't require a graphics window). This is usually achieved by adding an optional --rendering-off command-line parameter (see for example TrackingTest.cxx), which can be used for disabling rendering for automatic testing.

#### 2014-09-15, 19:13:54 - Jaime Garcia Guevara
re #886 stdev and mean using vtkDescriptiveStats and bounding box instead of last stylus position
Commit: r:3681|plus:3681

#### 2014-09-15, 19:18:23 - Jaime Garcia Guevara
re #886 Button start. when done and start over reset pivots detected
Commit: r:3682|plus:3682

#### 2014-09-15, 19:40:45 - Jaime Garcia Guevara
re #886 Do not plot tracker signal for testing. Should remove linux test error
Commit: r:3683|plus:3683

#### 2014-09-15, 19:54:49 - Jaime Garcia Guevara
re #886 unused variable warnin
Commit: r:3684|plus:3684

#### 2014-09-16, 16:04:47 - Jaime Garcia Guevara
re #886 temporal calibration timer and one button to start and Cancel Calibration
Commit: r:3685|plus:3685

#### 2014-09-16, 17:08:01 - Jaime Garcia Guevara
re #886 Spatial calibration timer and one button to Start and Cancel calibration
Commit: r:3686|plus:3686

#### 2014-09-16, 17:11:04 - Jaime Garcia Guevara
re #886 Spatial and temporal startup delays at config files
Commit: r:3687|plus:3687

#### 2014-09-16, 20:14:01 - Andras Lasso
@garciaguevara: I've set up VTK6 build dashboard and it detected this error:
http://crunch.cs.queensu.ca/CDash/viewBuildError.php?buildid=28487
You need to use VTK5/6 compatible SetInput to fix it.

#### 2014-09-17, 03:18:22 - Jaime Garcia Guevara
re #886 Orange message  and reset camera when landmark already detected. vtkPlusDevice should update the acquisition rate now.
Commit: r:3691|plus:3691

#### 2014-09-17, 03:20:13 - Jaime Garcia Guevara
re #886 make public IsNewPivotPointPosition method
Commit: r:3692|plus:3692

#### 2014-09-17, 15:18:45 - Jaime Garcia Guevara
re #886 Fix test error and vtk setInputPort compatible for vtkDescriptiveStatistics
Commit: r:3693|plus:3693

#### 2014-09-18, 16:42:28 - Jaime Garcia Guevara
re #886 Documentation for fcal phantom registration pivot detection. Set default pivotthreshold 3 times the calibration error 
Commit: r:3696|plus:3696

#### 2014-09-18, 16:46:26 - Jaime Garcia Guevara
re #886 pivot detection related parameters updated with documentation
Commit: r:3697|plus:3697

#### 2014-09-18, 17:15:52 - Andras Lasso
Tried to test the algorithm in simulation mode and I've found a few issues:
* Merge vtkPivotDetectionAlgo element attributes into vtkPhantomLandmarkRegistrationAlgo (it would be just too complex for the user to have another element and there is significant overlap between the two elements)
* If pivot detection attributes are missing then use default values (this way we avoid the need to add pivot detection attributes to all existing configuration files)
* ObjectMarkerCoordinateFrame='Stylus' - this is not necessary and should be removed. Use a coordinate system that is computed by translating the StylusTip by 10cm along the X axis (X axis corresponds to the stylus shaft direction, see http://perk-software.cs.queensu.ca/plus/doc/nightly/user/CommonCoordinateSystems.html)
* Rename AbovePivotThresholdMM to AbovePivotThresholdMm and PivotThresholdMM to PivotThresholdMm for consistency (Mm is more readable than MM, for example MmPerPixel vs MMPerPixel)
* Add a fake tracker mode that simulates pivoting

#### 2014-09-18, 17:49:40 - Andras Lasso
This line caused crash when trying the registration in simulation mode:
ui.label_Instructions->setText(QString('The landmark %1 is already detected\
\
').arg(m_PhantomLandmarkRegistration->GetDefinedLandmarkName(m_CurrentLandmarkIndex-1).c_str()));

m_CurrentLandmarkIndex was 0 => GetDefinedLandmarkName was attempted for -1

#### 2014-09-18, 17:57:21 - Andras Lasso
More things to fix/improve:
* threshold of detecting that we are near an existing point: closest distance/3 instead of /2
* fix the number in the orange message (we are too close point # x)
* auto-rotate to next point: vtkCamera::SetFocalPoint = LandmarkPointsCenterOfGravity_Reference, vtkCamera::SetPosition = LandmarksCenterOfGravityPoint_Reference-500*(CurrentLandmarkPoint_Reference-LandmarksCenterOfGravityPoint_Reference), vtkCamera::SetViewUp = PhantomToReferenceTransform*PhantomViewUpVector_Phantom (PhantomViewUpVector_Phantom can be constant: [0,0,1] vector

#### 2014-09-18, 18:17:14 - Andras Lasso
One more thing: Disable 'Record point' button until phantom registration is started. Otherwise it's not really clear for the user if the phantom registration is in progress or not. Accordingly, rename 'Start Pivot Detection' to 'Start phantom registration' (also note the capitalization: in Plus we always capitalize the first letter only).

#### 2014-09-18, 18:18:21 - Andras Lasso
re #886: Fixed crash when disconnecting while phantom calibration is in progress
Commit: r:3698|plus:3698

#### 2014-09-18, 19:47:45 - Jaime Garcia Guevara
Todo: number of landmark orange and minDistance/3, view camera view landmark->centergravity, vtk6Macro, 

#### 2014-09-18, 22:21:14 - Jaime Garcia Guevara
re #886 Merge vtkPivotDetectionAlgo element attributes into vtkPhantomLandmarkRegistrationAlgo and ObjectMarkerCoordinateFrame removed
Commit: r:3700|plus:3700

#### 2014-09-18, 22:25:33 - Jaime Garcia Guevara
re #886 ObjectMarkerCoordinateFrame removed get calibration error in different way
Commit: r:3701|plus:3701

#### 2014-09-20, 15:02:36 - Andras Lasso
re #886: Fixed VTK6 build error
Commit: r:3702|plus:3702

#### 2014-09-22, 14:26:35 - Jaime Garcia Guevara
re #886 Rename AbovePivotThresholdMM to AbovePivotThresholdMm and PivotThresholdMM,fix the number in the orange message (we are too close point x), auto-rotate to next point methods landmarks average and camera position 
Commit: r:3705|plus:3705

#### 2014-09-22, 14:32:06 - Jaime Garcia Guevara
re #886 fix the number in the orange message (we are too close point x), auto-rotate to next point methods landmarks,Disable 'Record point' button until phantom registration is started. Rename AbovePivotThresholdMM to AbovePivotThresholdMm and PivotThresholdMM.
Commit: r:3706|plus:3706

#### 2014-09-22, 22:11:41 - Jaime Garcia Guevara
re #886: threshold of detecting that we are near an existing point: closest distance/3 instead of /2
Commit: r:3707|plus:3707

#### 2014-09-22, 22:26:15 - Jaime Garcia Guevara
re #886 Simulation with record button works (always vtkPivotDetectAlgo), setCameraViewNextLandmark when undo and with recordPoint button, stop and reset detection when toolbox is deactivated. 
Commit: r:3708|plus:3708

#### 2014-09-23, 20:24:41 - Jaime Garcia Guevara
re #886 New example recorded data slowly recorded, new 3d printed stylus. Class for highlight next landmark to detect in main render.
Commit: r:3714|plus:3714

#### 2014-09-23, 20:27:16 - Jaime Garcia Guevara
re #886 Highlight next landmark to detect in main render.
Commit: r:3715|plus:3715

#### 2014-09-24, 14:47:46 - Jaime Garcia Guevara
re #886 MM to Mm was missing
Commit: r:3720|plus:3720

#### 2014-09-24, 15:09:11 - Jaime Garcia Guevara
re #886 fix bug that crashed when changing toolbox, buttons enable/disable improved dont reset when finished but stop, when undo dont show next landmark point when less than 3 points detected. 
Commit: r:3721|plus:3721

#### 2014-09-24, 19:08:52 - Jaime Garcia Guevara
todos:
- check start detection disabled when phantom registered->conect->disconect->register-again
- change proportional error from stylus calibration to default value
- restart when undo last 
- green color for detected landmakrs,blue color for nextlandmark
- timer default 5 sec
- update doc
- video user

#### 2014-09-24, 20:51:43 - Jaime Garcia Guevara
re #886  green color for detected landmakrs, orange color for nextlandmark. Timer was already 5 sec default
Commit: r:3726|plus:3726

#### 2014-09-24, 21:19:44 - Jaime Garcia Guevara
re #886 PivotThreshold from config file or default value 1.5 mm. Do not use the stylus calibration error proportion as default.
Commit: r:3727|plus:3727

#### 2014-09-24, 21:23:37 - Jaime Garcia Guevara
re #886 config files updated renaming MM->Mm
Commit: r:3728|plus:3728

#### 2014-09-25, 15:24:37 - Jaime Garcia Guevara
re #886 start pivot detection of phatom registration enabled when phantom registered->conected->disconected->register-again. Restart detection when undo last detected point
Commit: r:3729|plus:3729

#### 2014-09-25, 15:44:46 - Jaime Garcia Guevara
re #886 Documentation/ApplicationfCal.dox updated
Commit: r:3730|plus:3730

#### 2014-09-25, 21:48:57 - Jaime Garcia Guevara
re #886 Update results changed by different pivotThreshold
Commit: r:3731|plus:3731

#### 2014-09-29, 22:14:44 - Andras Lasso
Few more things:
* Reduce log level from info to debug for info that is logged during registration
* Log error report at the end at info level: for all points: mean error, RMS error; for each point separately: point position in Phantom coordinate system; error magnitude; error component x y z
* screen capture video upload to image server

#### 2014-09-29, 23:25:23 - Jaime Garcia Guevara
Here is simulation video S:\\data\\PivotDetection\\VideoSimulation but opensource recording is not such great video quality 

#### 2014-09-30, 19:01:29 - Andras Lasso
re #886: Fixed fCal crash when switching to spatial calibration and then to phantom calibration

Spatial calibration removes all points, therefore Initialize shall not be called on result points but on result polydata.
Commit: r:3745|plus:3745

#### 2014-09-30, 19:18:38 - Andras Lasso
Demo video uploaded to youtube:
https://www.youtube.com/watch?v=6Oi8baLmRNY

#### 2014-09-30, 23:57:51 - Jaime Garcia Guevara
re #886 Display recorded landmarks in Phantom coordinate system. Rename variables. Use for instead while loops.
Commit: r:3749|plus:3749

#### 2014-10-01, 00:05:15 - Jaime Garcia Guevara
re #886 Log Debug instead Info.Recorded landmarks in Phantom coordinate system. Rename variables.
Commit: r:3750|plus:3750

#### 2014-10-01, 03:07:37 - Andras Lasso
re #886: Simplified phantom registration auto-detect pivoting algo test: removed data collector, removed multiple file support (a batch file can be created to process multiple files)
Commit: r:3752|plus:3752

#### 2014-10-01, 17:29:38 - Jaime Garcia Guevara
re #886 rename pivot to landmarkDetection, move files to landmarkRegistration
Commit: r:3758|plus:3758

#### 2014-10-01, 18:44:46 - Andras Lasso
re #886: Fixed build error
Commit: r:3759|plus:3759

#### 2014-10-01, 18:46:47 - Jaime Garcia Guevara
re #886 rename pivot to landmarkDetection,
Commit: r:3760|plus:3760

#### 2014-10-01, 18:50:17 - Jaime Garcia Guevara
re #886 this file names also changed do not why it was not in last commit
Commit: r:3761|plus:3761

#### 2014-10-01, 21:48:09 - Jaime Garcia Guevara
re #886 rename - tmp -> temporal temporalPoint - filterWindow-> window - Above -> StylusShaft - stylusTipWindowsAverage -> AverageFilterLastStylusTipPositions - AbovePivotThreshold -> StylusShaftMinimumDisplacementThreshold - pivotThreshold -> StylusTipMaximumMotionThreshold - _Reference all points pivotDetection - RemoveAllFilterWindows->RemoveAllDetectionPoints - EraseLastPoints -> KeepLastWindow - ExpectedNumberOfWindows -> NumberOfWindows - StylusShaftBoundigBox
Commit: r:3764|plus:3764

#### 2014-10-01, 23:34:17 - Jaime Garcia Guevara
re #886 First file header, then groups and alphabetic order.  < xxxxx > symmetric spaces. Do not do in linux ( >> ). Minimum Distance double for loop. Call LandmarksAverage method then transform. Point_CoordSystem [4] always size. don't record more points that expected landmarks
Commit: r:3767|plus:3767

#### 2014-10-01, 23:35:51 - Jaime Garcia Guevara
re #886 rename tempPtr -> temporalPoint. 
Commit: r:3768|plus:3768

#### 2014-10-02, 01:09:15 - Andras Lasso
re #886: Fixed build error
Commit: r:3771|plus:3771

#### 2014-10-02, 14:58:49 - Jaime Garcia Guevara
re #886 remove the aboveStylusTipAverage
Commit: r:3773|plus:3773

#### 2014-10-02, 15:11:36 - Jaime Garcia Guevara
re #886 remove LastAboveStylusTip
Commit: r:3774|plus:3774

#### 2014-10-02, 15:19:30 - Jaime Garcia Guevara
re #886 remove comment for averaging after detection time
Commit: r:3775|plus:3775

#### 2014-10-02, 15:32:31 - Jaime Garcia Guevara
re #886 remove NumberOfWindowsFoundPerLandmark used for averaging after detection time
Commit: r:3776|plus:3776

#### 2014-10-02, 18:50:11 - Jaime Garcia Guevara
re #886 remove last current iterators, replace list with deque 
Commit: r:3777|plus:3777

#### 2014-10-02, 20:12:51 - Jaime Garcia Guevara
re #886 remove PartialInsertedPoints
Commit: r:3778|plus:3778

#### 2014-10-02, 20:15:42 - Andras Lasso
re #886: Updated mha file name that contains pivoting of 8 landmark points
Commit: r:3779|plus:3779

#### 2014-10-02, 20:54:30 - Jaime Garcia Guevara
re #886 newLandmarkFound flag moved to addStylusTransform(transform, bool newLandmarkFound)
Commit: r:3782|plus:3782

#### 2014-10-02, 20:55:29 - Jaime Garcia Guevara
re #886 newLandmarkFound flag moved to addStylusTransform(transform, bool newLandmarkFound)
Commit: r:3783|plus:3783

#### 2014-10-02, 21:40:15 - Jaime Garcia Guevara
re #886: set to NULL pointers in destructor
Commit: r:3786|plus:3786

#### 2014-10-02, 22:46:26 - Jaime Garcia Guevara
re #886: FIx build
Commit: r:3787|plus:3787

#### 2014-10-03, 01:31:37 - Andras Lasso
re #886: Updated mha file directory that contains pivoting of 8 landmark points
Commit: r:3788|plus:3788

#### 2014-10-03, 18:09:53 - Jaime Garcia Guevara
re #886: use plusMath for stdev and mean 
Commit: r:3790|plus:3790

#### 2014-10-03, 20:27:57 - Jaime Garcia Guevara
re #886 clean upo member variables and static const
Commit: r:3791|plus:3791

#### 2014-10-03, 22:39:34 - Jaime Garcia Guevara
re #886 use boundingbox to decide if tip is fixed or not
Commit: r:3793|plus:3793

#### 2014-10-03, 23:33:19 - Jaime Garcia Guevara
re #886 remove filteredPoints list it was used for averaging after detection time, not needed anymore
Commit: r:3794|plus:3794

#### 2014-10-04, 00:09:28 - Jaime Garcia Guevara
re #886 class Documentation updated
Commit: r:3795|plus:3795

#### 2014-10-08, 20:18:47 - Jaime Garcia Guevara
re #886 Removed IsLandmarkDetectionCompleted and IsNewLandmarkPointFound methods. Removed ReferenceCoordinateFrame. Log errors for set methods. Documentation updated. 
Commit: r:3814|plus:3814

#### 2014-10-08, 20:20:08 - Jaime Garcia Guevara
re #886 Removed IsLandmarkDetectionCompleted and IsNewLandmarkPointFound methods.
Commit: r:3815|plus:3815

#### 2014-10-09, 20:11:29 - Jaime Garcia Guevara
re #886 remove warning and clean up
Commit: r:3818|plus:3818

#### 2014-10-09, 20:12:45 - Jaime Garcia Guevara
re #886 PhatomRegistrationToolbox cleanup
Commit: r:3819|plus:3819

#### 2014-11-05, 17:18:49 - Jaime Garcia Guevara
re #886 InsertNextStylusTipToReferenceTransform method simplified. Magnitude error computed.
Commit: r:3832|plus:3832

#### 2014-11-05, 18:48:20 - Jaime Garcia Guevara
re #886 More descriptive warning logs
Commit: r:3833|plus:3833

#### 2014-11-05, 21:46:38 - Jaime Garcia Guevara
re #886 Correct to log_info messages and return. Should fix the test dashboard. 
Commit: r:3834|plus:3834

#### 2014-11-06, 16:07:43 - Jaime Garcia Guevara
re #886 Log error corrected
Commit: r:3835|plus:3835

#### 2014-11-18, 03:59:57 - Jaime Garcia Guevara
re #886 Update documentation landmark instead of pivot
Commit: r:3848|plus:3848

#### 2014-11-18, 04:01:54 - Jaime Garcia Guevara
re #886 Update documentation landmark instead of pivot
Commit: r:3849|plus:3849

#### 2014-11-27, 14:11:05 - Andras Lasso
Everything seems to work well!

#### 2014-11-27, 14:11:05 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2015-04-12, 16:31:20 - Andras Lasso
re #886: Fixed disabled toolbox after interrupted stylus calibration

Toolbox was stuck in disabled state if stylus calibration was stopped while in progress.
Simplified state and timer management.
Commit: r:4096|plus:4096


## #887 Allow hiding of phantom without hiding wires
It would be often useful to see only the wires and the image plane in 3D to verify their alignment, but when the wires are shown then the phantom is always shown, too, which makes it difficult to see the wires.
Allow the user to hide only the phantom, while still seeing the wires (have a separate option for show/hide phantom and show/hide wires).

#### 2014-06-05, 02:07:32 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-06-05, 12:04:24 - Andras Lasso
fixed #887: Phantom box can be hidden independently from the phantom wires. This makes inspection of the slice/wire intersections easier.
Commit: r:3370|plus:3370

#### 2014-06-05, 12:04:24 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-05, 12:04:24 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"

#### 2014-06-05, 22:16:25 - Andras Lasso
re #887: Fixed phantom wires show/hide
Commit: r:3381|plus:3381


## #888 Relax the PlusMath::Floor time testing criteria
On a linux virtual machine PlusMath::Floor runs slightly slower than floor(). Relax the time testing criteria to only fail if PlusMath::Floor to not report error if the difference is less than 10%.

#### 2014-05-19, 15:11:45 - Andras Lasso
test #888: Relax PlusMath::Floor timing testing to not report if the performance is equivalent or just slightly worse

This will allow tests to pass on linux VM.
Commit: r:3316|plus:3316

#### 2014-05-19, 15:11:45 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-05-26, 15:18:43 - Andras Lasso
Nightly tests are passing now.

#### 2014-05-26, 15:18:43 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-06-05, 19:01:22 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:22 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #889 Remove SIGPIPE ignore if MSG_NOSIGNAL patch integrated into OpenIGTLink
If MSG_NOSIGNAL flag is set in OpenIGTLink socket send (https://github.com/openigtlink/OpenIGTLink/pull/37) then the 
signal(SIGPIPE, SIG_IGN)
call in PlusServer and PlusServerLauncher is not needed anymore and should be removed.

#### 2014-06-04, 21:16:11 - Andras Lasso
priority: changed from "Normal (3)" to "Low (4)"

#### 2014-10-01, 12:34:18 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-10-01, 12:34:18 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2014-10-01, 12:35:15 - Andras Lasso
re #889: Updated OpenIGTLink version to the latest that includes MSG_NOSIGNAL flag setting
Commit: r:3753|plus:3753

#### 2014-10-01, 12:53:41 - Andras Lasso
re #889: Removed signal(SIGPIPE, SIG_IGN) setting, as OpenIGTLink does not throw exception on client disconnect
Commit: r:3754|plus:3754

#### 2014-10-01, 12:54:07 - Andras Lasso
re #889: Removed signal(SIGPIPE, SIG_IGN) setting, as OpenIGTLink does not throw exception on client disconnect
Commit: r:3755|plus:3755

#### 2014-10-01, 12:54:28 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-01, 14:05:20 - Andras Lasso
Tested on Linux and Windows: no crashes on client disconnect.

#### 2014-10-01, 14:05:20 - Andras Lasso
status: changed from "Test" to "Fixed"


## #890 Cube artifacts in Volume Reconstruction
When Calculation='MAXIMUM' parameter is added to the VolumeReconstruction element of the PLUS config file then bright cubes appear around bright voxels. What it should do is only update a single voxel with the maximum value, not fill a whole kernel with it.

Here is a folder with everything you need to reproduce this issue:
s:\\data\\SlicerIGT\\2014-05-26_BugReport\\
Just run the .bat file to generate the ...-VolRec.mha file that contains the bright cubes.


#### 2014-05-26, 20:23:34 - Tamas Ungi
priority: changed from "Normal (3)" to "High (2)"

#### 2014-05-27, 00:17:33 - Thomas Vaughan
Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to 'NEAREST_NEIGHBOR' (each pixel is distributed to only the nearest voxel), I see a very different result. For comparison:

Nearest Neighbor: https://www.assembla.com/spaces/plus/documents/bJo8KW5tmr44k6acwqjQYw/download/bJo8KW5tmr44k6acwqjQYw
Linear: https://www.assembla.com/spaces/plus/documents/bYwXa45tmr45bAdmr6bg7m/download/bYwXa45tmr45bAdmr6bg7m

Does this look like it will address the problem?

I wonder if it might be worth renaming the parameters to be a bit more clear? I don't know if 'Interpolation' is quite the right word to describe what that particular parameter does.

Thomas


#### 2014-05-27, 00:17:33 - Thomas Vaughan
CommentContent: changed from "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to" to "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to"

#### 2014-05-27, 00:17:33 - Thomas Vaughan
CommentContent: changed from "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to" to "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to"

#### 2014-05-27, 00:17:33 - Thomas Vaughan
CommentContent: changed from "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to" to "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to"

#### 2014-05-27, 00:17:33 - Thomas Vaughan
CommentContent: changed from "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to" to "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to"

#### 2014-05-27, 00:17:33 - Thomas Vaughan
CommentContent: changed from "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to" to "Hi Tamas,

I noticed in the config file that the 'interpolation' field was set to 'LINEAR' (which I think is the default). This causes each input pixel to be distributed over a 2*2*2 kernel, which could explain the artefact you saw.
If I change it to"

#### 2014-05-27, 00:25:49 - Tamas Ungi
Thanks. Setting NEAREST_NEIGHBOR seems to improve the result. Could you please explain what this parameter does? Interpolation does not really give away much. First I thought that it interpolates between multiple input slices when more than one is available for one output voxel. But I figured out that is 'Calculation'.
BTW 'Calculation' is another very confusing term. As anything that happens on a computer is 'calculation'. If you know the meanings of these parameters, it would be very useful to rename them.
And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

#### 2014-05-27, 01:02:30 - Thomas Vaughan
> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

The 'Interpolation' parameter describes *_where_* each input pixel intensity is distributed.

In the most common case, an input pixel intensity will be distributed to the spatially nearest voxel. This is 'Nearest Neighbor'.

In a more complex case, we would take into consideration the fact that a pixel could be anywhere. It is rare that a pixel would be located exactly on a grid point in a volume, rather it is usually located _between_ the grid points. The pixel intensity could be distributed to the 8 surrounding voxels according to a distance weight. This is what the 'Linear' (reverse tri-linear interpolation) does.

I think 'Distribution' would be a better parameter name.

> 'Calculation' is another very confusing term. As anything that happens on a computer is 'calculation' [...] If you know the meanings of these parameters, it would be very useful to rename them.

A voxel could have had several input pixel intensities distributed into it. The 'Calculation' parameter describes *_how_* to determine the final voxel intensity from the input pixel intensities. In truth, 'Compounding' would probably be a better word to describe what this parameter does, but that name is already used for something else...

---

Everything should be renamed all at once. The names of many of the parameters are mixed-up or confusing. Not only that, but I'm unsure whether all of the volume reconstructor's functionality is necessarily useful... maybe worth talking about?

Would we want to support old config files without the new names / is that realistic?

#### 2014-05-27, 01:02:30 - Thomas Vaughan
CommentContent: changed from "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

In any volume reconstruction, each input pixel intensity is" to "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

In any volume reconstruction, each input pixel intensity is"

#### 2014-05-27, 01:02:30 - Thomas Vaughan
CommentContent: changed from "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

In any volume reconstruction, each input pixel intensity is" to "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

In any volume reconstruction, each input pixel intensity is"

#### 2014-05-27, 01:02:30 - Thomas Vaughan
CommentContent: changed from "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

In any volume reconstruction, each input pixel intensity is" to "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

The 'Interpolation' parameter describes *_where_* each input"

#### 2014-05-27, 01:02:30 - Thomas Vaughan
CommentContent: changed from "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

The 'Interpolation' parameter describes *_where_* each input" to "> Could you please explain what this parameter does? [...] And why would the input pixel be distributed over a 2x2x2 (or any) kernel? Does that help in any situation? To me it is just blur.

The 'Interpolation' parameter describes *_where_* each input"

#### 2014-05-27, 01:58:10 - Tamas Ungi
Thanks for the explanation. Renaming these would be very useful, as now I see that the names don't reflect the functionality at all. Of course renaming is not an urgent issue. Maybe another ticket should be created for that with low priority...

So this 'bug' is not really a bug. The only problem is that linear distribution and maximum intensity compounding don't go well with each other. Now that I understand the issue, I would be OK with just a note on the wiki page of volume reconstruction that warns users who use maximum intensity compounding that they should set distribution to nearest neighbour.

#### 2014-05-27, 01:58:17 - Tamas Ungi
priority: changed from "High (2)" to "Low (4)"

#### 2014-05-27, 01:58:32 - Tamas Ungi
Issue Type: changed from "Bug" to "Enhancement"

#### 2014-05-27, 01:59:30 - Tamas Ungi
And thank you, Thomas, for the quick help!

#### 2014-05-27, 11:44:59 - Andras Lasso
Actually, MAXIMUM is a compounding operator. So, Compounding options should be NONE (or OFF), MEAN, MAXIMUM. So, the 'Calculation' attribute can be removed.

The 'Interpolation' attribute name is accurate, so it should be kept.

It's not trivial how to do linear interpolation with MAXIMUM compounding: what should be the weight of the existing voxel value. If we try a few weights and none of them give nice results then we may disallow combining MAX with LINEAR.



#### 2014-05-27, 12:21:39 - Thomas Vaughan
Thanks Andras. What should be the behaviour when Compounding == NONE?

Perhaps we should print a warning to the console when MAXIMUM is combined with LINEAR? I agree that it is not trivial. I wonder if giving weights could be misleading, since it's no longer a 'MAXIMUM'.

#### 2014-05-27, 12:21:39 - Thomas Vaughan
CommentContent: changed from "Thanks Andras. What should be the behaviour when Compounding == NONE?

Perhaps we should print a warning to the console when MAXIMUM is combined with LINEAR? I agree that it is not trivial. I think if weights are given, then it's not really a 'MAXIMUM'" to "Thanks Andras. What should be the behaviour when Compounding == NONE?

Perhaps we should print a warning to the console when MAXIMUM is combined with LINEAR? I agree that it is not trivial. I wonder if giving weights could be misleading, since it's no"

#### 2014-05-27, 13:12:51 - Andras Lasso
Compounding == NONE: latest pixel value in the output volume
Compounding == MAX: highest pixel value in the output volume
Compounding == MEAN: mean of all pixel values in the output volume

Before disabling the MAXIMUM&LINEAR combination I would try how the results look if we compute the updated pixel like NONE&LINEAR but we only modify the volume if the new pixel is brighter (f=fraction of the input pixel inside the output voxel):

~~~~

if (*inPtrTmp > *outPtrTmp)
{
  *outPtrTmp = *inPtrTmp * f + *outPtrTmp * (1-f);
}
else
{
  // darker value, ignore it
}

~~~~



#### 2014-05-27, 13:12:51 - Andras Lasso
CommentContent: changed from "Compounding == NONE: latest pixel value in the output volume
Compounding == MAX: highest pixel value in the output volume
Compounding == MEAN: mean of all pixel values in the output volume

Before disabling the MAXIMUM&LINEAR combination I would try how" to "Compounding == NONE: latest pixel value in the output volume
Compounding == MAX: highest pixel value in the output volume
Compounding == MEAN: mean of all pixel values in the output volume

Before disabling the MAXIMUM&LINEAR combination I would try how"

#### 2014-05-27, 13:12:51 - Andras Lasso
CommentContent: changed from "Compounding == NONE: latest pixel value in the output volume
Compounding == MAX: highest pixel value in the output volume
Compounding == MEAN: mean of all pixel values in the output volume

Before disabling the MAXIMUM&LINEAR combination I would try how" to "Compounding == NONE: latest pixel value in the output volume
Compounding == MAX: highest pixel value in the output volume
Compounding == MEAN: mean of all pixel values in the output volume

Before disabling the MAXIMUM&LINEAR combination I would try how"

#### 2014-06-05, 01:33:58 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-06-05, 12:10:56 - Andras Lasso
@thomasvaughan Would you have some time to fix this? It shouldn't take more than a few hours + testing.

#### 2014-06-06, 21:29:13 - Thomas Vaughan
I'll take a look when my thesis is submitted or while it is being reviewed within the next few weeks.

I'm presently having problems getting PLUS to compile. I followed the latest building instructions for developers (and updated all the relevant tools), but when I compile in VS get several errors. They are all variations of:
>> CMake Error: install(EXPORT 'ITKTargets') given absolute DESTINATION '/lib/InsightToolkit' but the export references an installation of target 'itkTestDriver' which has relative DESTINATION 'bin'

I tried searching for this issue on Google, but I can't find a solution. I tried clearing the CMake cache, reinstalling CMake, ITK, etc... but to no avail. Are you familiar with this error? Do you know how I might be able to solve it?

#### 2014-06-06, 21:29:13 - Thomas Vaughan
assigned_to_id: changed from null to "thomasvaughan"

#### 2014-06-06, 21:36:32 - Andras Lasso
When there are major version changes (e.g., ITK3=>ITK4) you cannot do an in-place update.
Delete all the contents in your PlusExperimental-bin directory (itk, itk-bin, vtk-vtk-bin, ... all of these). Then reconfigure your project and build from scratch.

#### 2014-08-06, 20:16:43 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2014-08-16, 02:23:26 - Thomas Vaughan
I made a few changes. I'm going to attach screenshots in the next few comments to show how parameter selection now affects the reconstruction. Each screenshot shows one of the compounding modes (LATEST, MEAN, MAXIMUM) together with LINEAR interpolation and STICKS hole filling. Please let me know what you think. :-)

#### 2014-08-16, 02:23:59 - Thomas Vaughan
image:bHF0UGjoWr5ioPacwqjQXA


#### 2014-08-16, 02:23:59 - Thomas Vaughan
Attachment added: "20140815VaughanOldMaximum.PNG"

#### 2014-08-16, 02:24:11 - Thomas Vaughan
image:bOV1BqjoWr5ikkdmr6bg7m


#### 2014-08-16, 02:24:11 - Thomas Vaughan
Attachment added: "20140815VaughanMaximum.PNG"

#### 2014-08-16, 02:24:18 - Thomas Vaughan
image:bS2zxCjoWr5lNcacwqjQWU


#### 2014-08-16, 02:24:18 - Thomas Vaughan
Attachment added: "20140815VaughanMean.PNG"

#### 2014-08-16, 02:24:23 - Thomas Vaughan
Attachment added: "20140815VaughanLatest.PNG"

#### 2014-08-16, 02:24:23 - Thomas Vaughan
CommentContent: changed from "image:bV4LryjoWr5ioPacwqjQXA
" to null

#### 2014-08-16, 02:29:02 - Thomas Vaughan
image:awcs1ijo0r5ilddmr6bg7m


#### 2014-08-16, 02:29:02 - Thomas Vaughan
Attachment added: "20140815VaughanLatest.PNG"

#### 2014-08-16, 02:43:05 - Thomas Vaughan
Test #890. Using LINEAR interpolation, the compounding operator for LATEST and MAXIMUM is only applied if the trilinear weight is 0.125 or higher (one over eight). I chose one over eight, since there are eight corners and a pixel right in the middle should be applied to each of them, else it should only be applied to the nearest corner(s).
Commit: r:3600|plus:3600

#### 2014-08-16, 02:43:05 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2014-08-16, 04:46:35 - Andras Lasso
This is great Thomas, thank you! Could you put the images above in a ppt file and attach it to this ticket? (I would like to add these images to the user manual)

#### 2014-08-16, 04:58:44 - Andras Lasso
Remaining tasks:
* add test cases for each compounding option (a run test and a result comparison test for each)
* update the documentation page (PlusLib\\src\\Documentation\\UserManual\\AlgorithmVolumeReconstruction.dox)
* add a check if old config attributes (Calculation, Compounding) are specified; if specified then display a warning message explaining that they are deprecated, initialize the new parameters based on the value of the deprecated attributes, remove the deprecated attribute when writing the configuration (similarly to FanOrigin attribute that has been deprecated).
* update all config files in PlusExp-bin\\PlusLib\\data\\ConfigFiles to use the new attributes

Let me know if anything is not clear or you won't have time to implement. Thanks!

#### 2014-08-16, 04:58:44 - Andras Lasso
CommentContent: changed from "Remaining tasks:
* add test cases for each compounding option (a run test and a result comparison test for each)
* update the documentation page (PlusLib\\src\\Documentation\\UserManual\\AlgorithmVolumeReconstruction.dox)
* add a check if old config" to "Remaining tasks:
* add test cases for each compounding option (a run test and a result comparison test for each)
* update the documentation page (PlusLib\\src\\Documentation\\UserManual\\AlgorithmVolumeReconstruction.dox)
* add a check if old config"

#### 2014-08-16, 14:43:57 - Thomas Vaughan
>> Could you put the images above in a ppt file and attach it to this ticket? (I would like to add these images to the user manual)
Sure, I'll do that next week when I'm back in the lab.

>> add test cases for each compounding option (a run test and a result comparison test for each)
Do we want to do a test for each combination of CompoundingMode + Interpolation? Or is it sufficient if each appears at least once?

>> add a check if old config attributes (Calculation, Compounding) are specified; if specified then display a warning message explaining that they are deprecated, initialize the new parameters based on the value of the deprecated attributes, remove the deprecated attribute when writing the configuration (similarly to FanOrigin attribute that has been deprecated).
This is partially done already. The user should get a warning when using 'Compounding' or 'Calculation'. I have not yet changed 'CompoundingMode' based on those inputs, since the intended effect may be ambiguous (for instance, Compounding=Off suggests LATEST is intended, but if in addition Calculation=Mean, then MEAN might be intended?). I see two things that could be done here:
1. Attempt to interpret what the user wanted to do, output that choice to the screen in a warning; or,
2. Output an error if CalculationMode is absent. Say that CalculationMode must be supplied.
Which should be done?

>> update all config files in PlusExp-bin\\PlusLib\\data\\ConfigFiles to use the new attributes
The ones that are used for volume reconstruction testing should have been updated already. I will check for others next week.


#### 2014-08-16, 14:47:10 - Thomas Vaughan
(I'll also correct the magic number when I'm next in the lab)

#### 2014-08-16, 17:00:22 - Andras Lasso
It would be nice to test several combinations. We should not increase the total testing time more than by maximum about 30 seconds, so choose the parameters accordingly.
LIN+MAX, LIN+MEAN, LIN+LATEST, NN+MAX, NN+MEAN, NN+LATEST, and vary other parameters randomly (enabled/disabled hole filling, linear/curvilinear transducer).

If obsolete params specified then log a warning and do a reasonable guess, for example:
Compounding = off => CompoundingMode = LATEST
Compounding = on => CompoundingMode = MEAN
Calculation = MAXIMUM => CompoundingMode = MAXIMUM (regardless of the Compounding value)

Thank you!


#### 2014-08-18, 16:36:34 - Thomas Vaughan
file:drlxnEjVur5iojacwqEsg8


#### 2014-08-18, 16:36:34 - Thomas Vaughan
Attachment added: "Vaughan_LinearVolumeReconstructions_20140818.pptx"

#### 2014-08-18, 16:53:05 - Thomas Vaughan
Re #890, re #924 Put 0.125 into a variable, added comment explaining choice.
Commit: r:3605|plus:3605

#### 2014-08-18, 17:17:10 - Andras Lasso
re #890: Added samples for volume reconstruction compounding mode to the user manual
Commit: r:3606|plus:3606

#### 2014-08-18, 17:17:39 - Andras Lasso
re #890: Added samples for volume reconstruction compounding mode to the user manual
Commit: r:3607|plus:3607

#### 2014-08-18, 17:21:08 - Andras Lasso
Source of the user manual page that should be updated to explain the new volume reconstruction options:
PlusLib\\src\\Documentation\\UserManual\\AlgorithmVolumeReconstruction.dox

(it generates this page: http://perk-software.cs.queensu.ca/plus/doc/nightly/user/AlgorithmVolumeReconstruction.html) 


#### 2014-08-18, 17:26:07 - Thomas Vaughan
I couldn't find out how to edit .dox files for PLUS. Where can I read about this?

#### 2014-08-18, 17:29:22 - Andras Lasso
Text file with trivial markup, edit with a text editor. No need to apply a new formatting but if you are interested in the markup specification then you can find it here: http://www.stack.nl/~dimitri/doxygen/manual/commands.html

#### 2014-08-18, 18:09:15 - Thomas Vaughan
Re #890, re #924 Updating volume reconstruction .dox
Commit: r:3608|plus:3608

#### 2014-08-18, 19:19:24 - Thomas Vaughan
Re #890, re #924, Updating all config files to use the updated xml tag
Commit: r:3609|plus:3609

#### 2014-08-18, 20:25:48 - Thomas Vaughan
Re #890, re #924 Make it so that, if CompoundingMode is not specified, then a reasonable guess is made (and a warning output). If the deprecated Calculation and Compounding are present, then those are used to help make this guess.
Commit: r:3610|plus:3610

#### 2014-08-18, 21:36:28 - Thomas Vaughan
Re #890, re #924 Reimplemented the volume reconstruction tests. All combinations of interpolation and compounding are tested. Some have hole filling and others do not. Names are clearer now and would help narrow down specific problems.
Commit: r:3612|plus:3612

#### 2014-08-18, 21:40:48 - Thomas Vaughan
Ok, that should be it. I'll wait until more Dashboard tests have been done before marking this and #924 as fixed.

#### 2014-08-18, 22:15:28 - Andras Lasso
re #890: Fixed help text alignment
Commit: r:3613|plus:3613

#### 2014-08-18, 23:33:18 - Thomas Vaughan
Re #890, re #924 Updating the documentation. Explain effects of changing compounding mode. Updated example config files to new versions.
Commit: r:3614|plus:3614

#### 2014-08-19, 04:23:15 - Andras Lasso
Thank you Thomas, very nice work, done very quickly. It's be very useful to have this ready for the EMBC tutorial next week (http://www.slicerigt.org/wp/embc-2014-tutorial/) and all our users will appreciate it, too (they had trouble figuring out working configuration combinations; your changes have made this much simpler).

#### 2014-08-22, 01:22:32 - Thomas Vaughan
Things look ok on the dashboard, so I'll close the ticket.

I agree the old way was confusing, this new way is much easier to make sense of.  Let me know if any issues or problems pop up.

#### 2014-08-22, 01:22:32 - Thomas Vaughan
status: changed from "Test" to "Fixed"

#### 2014-08-22, 03:40:31 - Andras Lasso
ok, thanks!


## #891 MSVC / Ninja Build
Build/test with the CMake Ninja with MSVC. 

#### 2014-05-27, 02:45:44 - Matt McCormick
re #891: Pass CMAKE_BUILD_TYPE with MSVC / Ninja

Redefine ep_common_args, which had been abandoned for
PlusLib, OpenIGTLink, PlusApp, VTK, ITK PlusBuild's.

Commit: r:3328|plus:3328

#### 2014-05-27, 02:51:55 - Matt McCormick
re #891: PlusLib does not assume VS output paths.

MSVC / Ninja does not have Release in TEST_OUTPUT_PATH.

Use TARGET_FILE CMake generator expression in ADD_TEST commands.

Commit: r:3329|plus:3329

#### 2014-05-27, 04:53:58 - Matt McCormick
re #891: BuildAndTest.bat needs build configuration.

So CMake is aware of the build directories.

Commit: r:3331|plus:3331

#### 2014-05-28, 03:02:30 - Matt McCormick
re #891: Use BUILD_TYPE variable for Nightly build.

As noted by @rankin.

Commit: r:3335|plus:3335

#### 2014-09-16, 19:49:02 - Andras Lasso
re #891: Fixed BuildAndTest.bat in PlusApp for VS2012
Commit: r:3688|plus:3688

#### 2014-09-16, 20:12:00 - Andras Lasso
re #891: Fixed BuildAndTest.bat to make sure errors are reported to the dashboard

The problem was that when the build failed then the script terminated before performing the build&test step with dashboard submission.
Commit: r:3689|plus:3689

#### 2014-09-16, 20:12:17 - Andras Lasso
re #891: Fixed BuildAndTest.bat to make sure errors are reported to the dashboard

The problem was that when the build failed then the script terminated before performing the build&test step with dashboard submission.
Commit: r:3690|plus:3690


## #892 Add IntersonSDKCxx (Interson SDK 1.X) support.
Add support for the new Interson USB Ultrasound SDK with the C++ wrapper around the C# SDK.

#### 2014-05-27, 03:38:26 - Matt McCormick
re #892: Add IntersonSDKCxx BMode support.

The vtkIntersonSDKCxxVideoSource is added with B-Mode output along with the
Test.

PlusLib support for IntersonSDKCxx is enabled with the

  PLUS_USE_INTERSONSDKCXX_VIDEO

CMake configuration variable.

Commit: r:3330|plus:3330

#### 2014-05-27, 05:07:31 - Matt McCormick
re #892: Add IntersonSDKCxx to PlusDeviceFactory.

Commit: r:3332|plus:3332

#### 2014-05-30, 17:44:56 - Matt McCormick
re #892: Export IntersonSDKCxx_DIR in PlusLibConfig.cmake.

Commit: r:3348|plus:3348

#### 2014-06-09, 01:46:42 - Matt McCormick
re #892: Add missing IntersonSDKCxxVideoSourceTest config file.

Commit: r:3389|plus:3389

#### 2014-06-09, 02:21:32 - Matt McCormick
re #892: Add vtkIntersonSDKCxxVideoSource sources.

Commit: r:3391|plus:3391

#### 2014-06-09, 13:11:04 - Andras Lasso
@matt.mccormick Thanks for your contribution! As there are several similarities between vtkIntersonSDKCxxVideoSource and vtkIntersonVideoSource it would make sense to create an abstract base class and put SDK-specific details (iSDK and SDKCxx) into two child classes. What do you think?

What are your plans with vtkIntersonSDKCxxVideoSource? Do you plan to add more features, clean up things, etc? Do you have time to contribute with implementation and/or testing to the consolidation of the iSDK and SDKCxx classes?

#### 2014-06-09, 16:04:24 - Matt McCormick
@lassoan I did not expect much overlap with the old SDK, but I am open to suggestions.  Interson said they re-wrote the new SDK from scratch, so I do not expect many similarities.  Are there particular methods you think should be shared?  I don't have access to the old SDK or an old probe, so I would need some help testing.

Other todo's here include fixing the probe initialization -- there is something odd going on in that the SDK example application needs to be run before it starts populating the buffer.  RF output needs to be added, too.  Any suggestions on examples to look at for reference on how to best add both BMode and RF dual output are welcome :-).

#### 2014-06-09, 16:52:54 - Andras Lasso
These Interson classes are quite similar. The hardware architecture and capabilities are also very similar, so it is very likely that we'll use them the same way.

I'll create the common base class and move both classes into the same directory. I just wait for confirmation from Guillermo that he doesn't have any pending changes.

We'll have a look at concurrent B/RF-mode acquisition. I think the BK ultrasound class may serve as example.

#### 2014-06-09, 16:54:42 - Andras Lasso
A short note on this comment (in SetDepth): // Since we are not using their scan converter, this does not have much effect

It's not just the scan conversion parameters, but pulse frequency and sample rate parameters need to be changed, too (see the attached ppt in  #869), if you want to have optimal image quality. Also, if we want to do the scan conversion then we need to get the probe geometry from the SDK (or define it in the config file).

#### 2014-06-09, 17:15:08 - Matt McCormick
The pulse frequency / sample rate / clock divider no longer need to be paired like they did in the old probe / SDK.

They don't export the probe geometry in the public methods of their SDK, so we will either need to hard code them on in the Plus .cxx files or define them in the config file.

#### 2014-06-09, 21:10:10 - Matt McCormick
re #892: Updates to vtkIntersonSDKCxxVideoSource.

Commit: r:3393|plus:3393

#### 2014-06-09, 21:11:42 - Andras Lasso
Is the frequency/sample rate/clock divider constant for all depths when the new SDK is used?

If the probe geometry is not available in the SDK then we should store it in the config file (there is already an XML element to describe probe geometry).

#### 2014-06-09, 21:12:38 - Andras Lasso
Do you plan to add IntersonSDKCxx to PlusBuild? (add an option, if enabled then download from github, build it, make PlusLib to use it - the same way as for OpenIGTLink, ITK, VTK)

#### 2014-06-09, 21:17:49 - Matt McCormick
With the new probe/SDK, yes, the sample rate/clock divider is constant for all frequencies.  When a different depth is set on their scan converter, it just shows the depths requested (a subset of what is actually acquired).

I'll add the probe geometry to the config file, then.

Yes, I'll add IntersonSDKCxx to PlusBuild like the other projects.  I'll get a config file that does the scan conversion so we can view the probe content with PlusApp.

Thanks for the pointers.

#### 2014-06-12, 00:43:28 - Matt McCormick
re #892: Initialize Interson SDK scan converter.

Required to initialize the probe even if we do not use their scan converter.

Commit: r:3410|plus:3410

#### 2014-06-19, 02:48:41 - Matt McCormick
re #892: Add IntersonSDKCxx ExternalProject.

PLUS_USE_INTERSONSDKCXX_VIDEO in PlusBuild will build the required library.

Commit: r:3446|plus:3446

#### 2014-06-19, 03:56:14 - Matt McCormick
re #892: Add PlusDeviceSet_Server_IntersonSDKCxx_GP3.5.xml start.

Still needs scan conversion.

Commit: r:3447|plus:3447

#### 2014-06-20, 06:18:21 - Matt McCormick
re #892: IntersonSDK BMode scan conversion.

Commit: r:3450|plus:3450

#### 2014-06-22, 21:30:11 - Matt McCormick
re #892: IntersonSDKCxx: do not downcast to Curvilinear.

The vtkUsScanConvert interface can be used for all transducer.

Suggested-by: Andras Lasso.

Commit: r:3453|plus:3453

#### 2014-06-22, 21:49:48 - Matt McCormick
re #892: IntersonSDKCxx: Do not downcast scan converter.

Commit: r:3454|plus:3454

#### 2014-06-23, 00:47:18 - Matt McCormick
re #892: IntersonSDKCxx: start RF collection.

Test currently crashes.

Commit: r:3456|plus:3456

#### 2014-06-23, 20:34:32 - Matt McCormick
re #892: vtkPlusDevice::RequestData use correct ScalarType.

Use the ScalarType from the vtkPlusBuffer in the vtkPlusDevice::RequestData
before AllocateOutputs.  Previously, it was hard coded to unsigned char, which
changed the ScalarType for the output with signed short RF data.

Commit: r:3458|plus:3458

#### 2014-06-26, 20:59:36 - Matt McCormick
re #892: Improve plotting parameters for IntersonSDK RF test.

Commit: r:3469|plus:3469

#### 2014-06-27, 22:35:04 - Matt McCormick
re #892: IntersonSDK RF -> BMode generation.

Support two output channels, one with the RF data and the other with the
BMode image simultaneously generated from the RF.

Commit: r:3470|plus:3470

#### 2014-06-27, 22:37:12 - Matt McCormick
re #892: Run IntersonSDK RF to BMode test.

Commit: r:3471|plus:3471

#### 2014-06-27, 22:52:48 - Matt McCormick
re #892: Add Interson configuration for collecting RF.

Using fCal, it displays the B-Mode generated from the RF and writes the RF to a
MetaImage file.

Commit: r:3472|plus:3472

#### 2014-06-27, 23:48:27 - Andras Lasso
Very nice!

#### 2014-06-28, 19:07:05 - Matt McCormick
Plus BMode creation looks much nicer than the on-board BMode :-)

#### 2014-06-28, 20:12:43 - Matt McCormick
re #892: Set Interson acquisition frame rate.

Commit: r:3473|plus:3473

#### 2014-06-28, 20:26:32 - Matt McCormick
re #892: Remove DepthMm option from IntersonSDK.

This is for the SDK scan converter, which we do not use.

Commit: r:3474|plus:3474

#### 2014-06-28, 21:18:36 - Matt McCormick
re #892: Make IntersonSDK PulseVoltage configurable.

Commit: r:3475|plus:3475

#### 2014-06-29, 21:01:08 - Matt McCormick
re #892: Add RfDecimation option.

Cuts sampling rate in half, so depth doubles.

Also fix configuration file depths.

Commit: r:3476|plus:3476

#### 2014-06-29, 22:03:52 - Matt McCormick
re #892: Reduce IntersonSDK time to start.

Commit: r:3477|plus:3477

#### 2014-06-30, 03:17:11 - Andras Lasso
@matt.mccormick Plus should provide hardware abstraction for US imaging devices as much as possible. For most US systems the desired imaging depth can be set and Plus and/or the device driver figures out the optimal acquisition parameters to achieve that. Could you implement such mechanism for this device, too?

For example:
* Instead of requiring the user to figure out if he needs decimation or not, we could decide automatically from the requested depth (we would only enable decimation if the desired depth cannot be reached without decimation) and we might also clip the part of the RF lines that are over the requested depth (to optimize speed and memory consumption).
* It would be nice if the scan conversion parameters could be computed from a few simple user inputs, such as: DepthMm and TransducerModel (a string, such as 'GP 3.5MHz', which would be used to look up/compute the optimal TransducerGeometry, RadiusStartMm, ThetaStartDeg, ThetaStopDeg, OutputImageSizePixel, TransducerCenterPixel, and OutputImageSpacingMmPerPixel values). The SDK should already provide at least the TransducerModel name (so the user would not need to specify it), but ideally the SDK should also provide info about the probe's physical dimensions and capabilities. If the SDK does not provide these info then we should ask Interson to add such methods (and until they add it we may need to ask the user to specify the TransducerModel with a string and add tables to Plus that contain parameters for each TransducerModel).

#### 2014-06-30, 04:10:02 - Matt McCormick
@lassoan Yes, it sounds good to provide or compute reasonable defaults when possible. I'll add this to the roadmap, although I will need to work on other priorities in the near term.

#### 2014-11-24, 03:17:30 - Matt McCormick
re #892: vtkIntersonSDKCxxVideoSourceTest compatible with VTK 6.

Commit: r:3858|plus:3858

#### 2014-11-24, 03:32:31 - Matt McCormick
re #892: Doc IntersonSDK needs Interson.dll instead of WDAPI1010.dll.

Commit: r:3859|plus:3859

#### 2015-06-04, 02:17:01 - Matt McCormick
re #892: Fix IntersonSDKCxx image orientations.

The Plus documentation now clearly states the output image orientation of all
B-mode images must be MF and RF must be FM.

Commit: r:4176|plus:4176

#### 2015-08-07, 13:44:40 - Matt McCormick
re #892: Update the IntersonSDKCxx configuration orientations.

Commit: r:4239|plus:4239

#### 2015-08-07, 13:52:56 - Matt McCormick
re #892: Revert Interson orientation changes.

They were not correct.

Commit: r:4240|plus:4240

#### 2015-08-07, 14:41:52 - Matt McCormick
re #892: Increase startup delay for Interson Rf Acquision.

Avoid error of VTK render window not available.


Commit: r:4241|plus:4241


## #893 Implement probe to transducer transform and get correct probe angle
In vtkSonixPortaVideoSource.h

#### 2014-05-27, 21:00:55 - Mikael Brudfors
description: changed from "" to "In vtkSonixPortaVideoSource.h"

#### 2014-05-27, 21:05:36 - Mikael Brudfors
fixed #893: Implemented probe to transducer transform and also getting the probe angle and adding it as a custom field.
Commit: r:3334|plus:3334

#### 2014-05-27, 21:05:36 - Mikael Brudfors
assigned_to_id: changed from null to "mbrudfors"

#### 2014-05-27, 21:05:36 - Mikael Brudfors
status: changed from "New" to "Fixed"

#### 2014-05-28, 00:40:50 - Mikael Brudfors
status: changed from "Fixed" to "Accepted"

#### 2014-06-02, 21:46:20 - Mikael Brudfors
Re #893: Changed how the motor angle is acquired and also added a volume index to each frame.
Commit: r:3357|plus:3357

#### 2014-06-04, 16:23:42 - Mikael Brudfors
Re #893: Added transform to config file.
Commit: r:3362|plus:3362

#### 2014-06-04, 16:48:19 - Andras Lasso
@mbrudfors Please remove all magic numbers from the vtkPortaVideoSource and make them configurable through the config file.

For example:

this->PortaBModeWidth = 484;       // defaults to BMode, 640x480
  this->PortaBModeHeight = 364;
  
this->PortaCineSize = 256 * 1024 * 1024; // defaults to 245MB of Cine

double spacing[2] = {0.2482, 0.2482}; // Add correct spacing
double origin[2] = {242, -51.7857}; // Add correct origin

It is OK to have default values in the video source, which are used when the parameters are not overridden in the config file.

#### 2014-06-04, 16:48:19 - Andras Lasso
CommentContent: changed from "@mbrudfors Please remove all magic numbers from the vtkPortaVideoSource and make them configurable through the config file.

For example:

this->PortaCineSize = 256 * 1024 * 1024; // defaults to 245MB of Cine

double spacing[2] = {0.2482, 0.2482}; // Add" to "@mbrudfors Please remove all magic numbers from the vtkPortaVideoSource and make them configurable through the config file.

For example:

this->PortaCineSize = 256 * 1024 * 1024; // defaults to 245MB of Cine

double spacing[2] = {0.2482, 0.2482}; // Add"

#### 2014-06-04, 16:48:19 - Andras Lasso
CommentContent: changed from "@mbrudfors Please remove all magic numbers from the vtkPortaVideoSource and make them configurable through the config file.

For example:

this->PortaCineSize = 256 * 1024 * 1024; // defaults to 245MB of Cine

double spacing[2] = {0.2482, 0.2482}; // Add" to "@mbrudfors Please remove all magic numbers from the vtkPortaVideoSource and make them configurable through the config file.

For example:

this->PortaBModeWidth = 484;       // defaults to BMode, 640x480
  this->PortaBModeHeight = 364;
 "

#### 2014-06-04, 16:51:47 - Andras Lasso
@mbrudfors this->PortaMotorStartPosition and this->StartMotorAngle; this->PortaMotorPosition and this->CurrentMotorAngle seem to be redundant, please consolidate


#### 2014-06-05, 01:34:10 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-06-05, 16:25:06 - Mikael Brudfors
Re #893: Removed redundant code and added custom field ImageToProbeHeadTransformStatus.
Commit: r:3371|plus:3371

#### 2014-06-06, 16:50:57 - Mikael Brudfors
Re #893: Removed magic numbers.
Commit: r:3385|plus:3385

#### 2014-06-11, 02:02:41 - Andras Lasso
re #893: Added documenation and sample configuration for volume reconstruction with Ultrasonix motorized probe
Commit: r:3402|plus:3402

#### 2014-06-11, 22:49:52 - Mikael Brudfors
Re #893: Added setting B-mode width and height from config-file
Commit: r:3408|plus:3408

#### 2014-06-11, 22:50:47 - Mikael Brudfors
Re #893: Added B-mode width and height
Commit: r:3409|plus:3409

#### 2014-08-20, 19:58:10 - Mikael Brudfors
Re #893: Added volume index to DummyToIndexTransform
Commit: r:3620|plus:3620

#### 2014-08-20, 21:00:30 - Mikael Brudfors
Re #893: added member variables
Commit: r:3622|plus:3622

#### 2014-08-20, 21:05:53 - Mikael Brudfors
Re #893: Config file for motorized probe, name changed
Commit: r:3623|plus:3623

#### 2014-08-20, 21:09:10 - Mikael Brudfors
Re #893: Added config file for motorized probe
Commit: r:3624|plus:3624

#### 2014-10-01, 17:41:13 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2015-07-18, 02:11:04 - Andras Lasso
re #893: Updated probe information (probably the numbers are valid for the linear motorized probe)
Commit: r:4219|plus:4219

#### 2015-07-18, 02:20:02 - Andras Lasso
re #893: Updated probe information (probably the numbers are valid for the linear motorized probe)
Commit: r:4220|plus:4220

#### 2015-11-25, 15:47:37 - Andras Lasso
ProbeToTransducer computation works very reliably and accurately for 4DL14-5 probe.
Probe that don't have zero sensors, such as the 4DC7-3 are currently not supported, for that the implementation should be changed so that the current behavior is kept for sensorized probes but the old behavior (as in rev 4220) is kept for other probes.

#### 2015-11-25, 15:47:37 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #894 Phantom registration missing although performed successfully
What I found out so far is, that I do have the problem of missing Phantom registration (although it was performed succesfully) only when using NDI Poplaris. I do not have the problem, when using the NDI Aurora. I've also tried to begin from scratch using a new configuration file --> same result, I can not perform spatial calibration because of the message 'phantom registration is missing. it needs to be performed or imported'. But as already mentioned, Phantom registration was performed successfully. Under spatial calibration, where I do get the message of missing phantom registration, also the button to import phantom registration results is grayed out, so it is not possible to import any phantom registeration. But this only applays when using NDI Polaris. When using NDI Aurora all works fine. I do not even get the message of a missing phantom registratin.
As I began from scratch, I do not have any idea whats going wrong. So it seems there is a bug in the software, preventing to start spacial calibration

#### 2014-05-28, 13:53:10 - reiker
image:bNkBI85M8r46KIdmr6bg7m


#### 2014-05-28, 13:53:10 - reiker
Attachment added: "Polarisspacialcalibrationmessage.jpg"

#### 2014-05-28, 13:55:28 - reiker
image:c54SH45M8r45L0acwqjQYw


#### 2014-05-28, 13:55:28 - reiker
Attachment added: "PolarisPhantomregistrationperformed.jpg"

#### 2014-05-28, 13:56:07 - reiker
file:dq6sSc5M8r44oeacwqjQXA


#### 2014-05-28, 13:56:07 - reiker
Attachment added: "PlusConfiguration_fCal_test_NDIPolaris.xml"

#### 2014-05-28, 15:03:52 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2014-05-28, 15:03:57 - Adam Rankin
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-05-28, 15:04:00 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2014-05-28, 15:04:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-05-28, 15:04:34 - Adam Rankin
Is the config file the same for the NDI Aurora? If not, could you attach it?

#### 2014-05-28, 15:10:29 - reiker
Yup, the configuration file for the Aurora is the same as for the Polaris. Except for the used device they are the same.

#### 2014-05-28, 15:12:11 - Andras Lasso
Could you please attach a debug-level log file?

#### 2014-05-28, 15:14:37 - reiker
I will do so tomorrow, as I'm already out of office

#### 2014-05-29, 11:40:56 - reiker
Attachment added: "Polarisspacialcalibrationmessage.jpg"

#### 2014-05-29, 11:41:03 - reiker
Attachment added: "PlusConfiguration_fCal_test_NDIPolaris.xml"

#### 2014-05-29, 11:41:07 - reiker
Attachment added: "PolarisPhantomregistrationperformed.jpg"

#### 2014-05-29, 11:41:14 - reiker
image:aJD6Lq5Yyr46JdacwqjQXA


#### 2014-05-29, 11:41:14 - reiker
Attachment added: "PolarisPhantomregistrationmissing.jpg"

#### 2014-05-29, 11:41:27 - reiker
file:aRjcvi5Yyr464fdmr6bg7m


#### 2014-05-29, 11:41:27 - reiker
Attachment added: "PlusConfiguration_VfWVideo_Polaris.xml"

#### 2014-05-29, 11:41:43 - reiker
Attachment added: "052914_134309_PlusLog.txt"

#### 2014-05-29, 11:41:43 - reiker
CommentContent: changed from "file:aYaSRQ5Yyr45X6dmr6bg7m
" to null

#### 2014-05-29, 12:21:11 - reiker
Attachment added: "052914_142012_PlusLog.txt"

#### 2014-05-29, 12:21:11 - reiker
CommentContent: changed from "file:c3W9oK5YSr45VcacwqEsg8
" to null

#### 2014-05-29, 12:21:15 - reiker
Attachment added: "052914_142012_PlusLog.txt"

#### 2014-05-29, 12:21:34 - reiker
Attachment added: "052914_134309_PlusLog.txt"

#### 2014-05-29, 12:21:50 - reiker
file:dpJVLK5YSr47OIacwqEsg8


#### 2014-05-29, 12:21:50 - reiker
Attachment added: "052914_134309_PolarisPlusLog.txt"

#### 2014-05-29, 12:22:20 - reiker
file:dHp-Xa5YSr46xdacwqjQYw


#### 2014-05-29, 12:22:20 - reiker
Attachment added: "PlusConfiguration_VfWVideo_NDIAurora.xml"

#### 2014-05-29, 12:22:29 - reiker
file:dMQa1i5YSr44koacwqjQXA


#### 2014-05-29, 12:22:29 - reiker
Attachment added: "052914_142012_AuroraPlusLog.txt"

#### 2014-05-29, 12:24:49 - reiker
I've uploaded the Debug logs once for the Polaris device and once for the Aurora Device including both configuration files. Hope that helps.
Again, it did work for the Aurora but not for the Polaris.

#### 2014-05-29, 12:34:05 - Adam Rankin
Ok I'll take a look. Thanks.

#### 2014-05-29, 12:36:49 - Adam Rankin
Try adding

ToolReferenceFrame='Tracker'

to the NDI polaris file.

As of a few patches ago, the default tool coordinate frame for a tracker has changed because you can now have multiple trackers in a single device set.

In order to prevent name collisions, the coordinate frame of a tracker is set to the name of the device if not specified.

#### 2014-05-29, 13:02:33 - reiker
that did not help. the problem still exists. i've uploaded the new config but it should be correct, at least i hope so.

#### 2014-05-29, 13:03:00 - reiker
file:cp-R6U5Zer47dcacwqjQWU


#### 2014-05-29, 13:03:00 - reiker
Attachment added: "PlusConfiguration_VfWVideo_Polaris_PhantomRegistration.xml"

#### 2014-05-29, 13:27:14 - Andras Lasso
Could you try the latest release?
I've also made some cleanups in the Polaris device yesterday, so if the latest release still have problems then I can create a release from the current version and you can try that.

In the meantime, I'll analyze the log file further and let you know if I find the root cause of the issue.

#### 2014-05-29, 14:04:21 - Adam Rankin
The ToolReferenceFrame attribute must be within the tracker device tag.

You have 

~~~~
    <Device
      Id='TrackerDevice'
      Type='PolarisTracker'
      SerialPort='3'
      BaudRate='115200'
      AcquisitionRate='50'
      LocalTimeOffsetSec='0.0'>
      ToolReferenceFrame='Tracker'

~~~~


and it must be



~~~~
    <Device
      Id='TrackerDevice'
      Type='PolarisTracker'
      SerialPort='3'
      BaudRate='115200'
      AcquisitionRate='50'
      LocalTimeOffsetSec='0.0'
      ToolReferenceFrame='Tracker'>


~~~~


#### 2014-05-29, 14:23:11 - Andras Lasso
I haven't found any specific issues in the log file, so please try the latest release.

#### 2014-05-29, 14:56:54 - reiker
Oh, what a mistake. Thanks for the info. I will trie so the next week.
About using the latest version, i've used PlusApp_2.1.0.2971 on XP-machine and PlusApp-2.1.1.3273 on Windows 7, same results.
As i'm not able to compile the latest version, could you compile it and upload it. That would be great, so I can give it a trie next week.
Thanks, Reinhard

#### 2014-06-02, 10:50:53 - reiker
I've tried now with included ToolReferenceFrame attribute within the tracker device configuration, but it still does not work. I do get the same message.

#### 2014-06-02, 10:51:10 - reiker
Attachment added: "PlusConfiguration_VfWVideo_Polaris_PhantomRegistration.xml"

#### 2014-06-02, 10:51:19 - reiker
file:dt2FGE6Kmr46Bcdmr6bg7m


#### 2014-06-02, 10:51:19 - reiker
Attachment added: "PlusConfiguration_VfWVideo_Polaris_PhantomRegistration.xml"

#### 2014-06-02, 12:07:05 - Andras Lasso
file:bFZ7P66K4r45rEacwqjQWU


#### 2014-06-02, 12:07:05 - Andras Lasso
Attachment added: "PlusApp-2.1.1.3352-Win32.exe"

#### 2014-06-02, 12:09:25 - Andras Lasso
@reiker Please try this latest release snapshot:
https://www.assembla.com/spaces/plus/documents/bFZ7P66K4r45rEacwqjQWU/download/bFZ7P66K4r45rEacwqjQWU

If this has problems then probably the best is if we can have a look at your computer with skype and desktop sharing. My skype name is lassoan, I'll be available in about an hour.

#### 2014-06-02, 14:19:24 - Andras Lasso
The problem was that the probe coordinate system was called 'Tool' in the data collector and it was called 'Probe' in fCal and the ProbeCalibration elements.

#### 2014-06-02, 14:20:55 - Andras Lasso
fixed #894: Changed the error message that is printed when phantom calibration is not found. Now the coordinate frame names are printed and it is noted that coordinate frame mismatches can cause the error, too.
Commit: r:3353|plus:3353

#### 2014-06-02, 14:20:55 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2014-06-05, 19:01:23 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:23 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #895 Add example for field distortion mapping
Add an example (including config file, sample data, data collection module) for EM distortion field mapping

#### 2014-05-28, 18:59:18 - Andras Lasso
re #895: Added example field distortion mapping Slicer module
Commit: r:3338|plus:3338

#### 2014-05-29, 00:28:53 - Andras Lasso
re #895: Changed distortion mapping Slicer module to use vtkThinPlateSplineTransform to be able to construct a transform from a spare point pair set
Commit: r:3340|plus:3340

#### 2014-05-29, 16:13:44 - Andras Lasso
re #895: Fixed syntax error in FieldDistortionMapping
Commit: r:3343|plus:3343

#### 2014-06-04, 21:15:49 - Andras Lasso
The sample works well.

#### 2014-06-04, 21:15:49 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-18, 21:38:40 - Andras Lasso
re #895: Made FieldDistortionMapping module outputs optional. Fixed some labels and descriptions. Added sample config file.
Commit: r:3443|plus:3443

#### 2014-06-18, 21:47:05 - Andras Lasso
re #895: Renamed FieldDistortionMapping module to PositionErrorMapping, as position error can be due to other reasons and not just field distortion
Commit: r:3444|plus:3444

#### 2014-06-18, 21:48:25 - Andras Lasso
re #895: Renamed FieldDistortionMapping module to PositionErrorMapping, as position error can be due to other reasons and not just field distortion
Commit: r:3445|plus:3445

#### 2014-07-03, 18:54:03 - Andras Lasso
re #895: Made FieldDistortionMapping module work on transformed transforms (where only one of the parent transform is updated)
Commit: r:3488|plus:3488

#### 2014-07-11, 20:36:14 - Andras Lasso
re #895: Added displacement field export to vector volume in PositionErrorMapping module

Commit: r:3497|plus:3497

#### 2014-07-17, 20:34:04 - Andras Lasso
re #895: Added visualization of already visited points

Commit: r:3510|plus:3510

#### 2014-07-17, 20:43:02 - Andras Lasso
re #895: Cleaned up comments

Commit: r:3511|plus:3511

#### 2014-07-17, 20:58:27 - Andras Lasso
re #895: Added sample test data
Commit: r:3512|plus:3512

#### 2014-08-02, 13:21:20 - Andras Lasso
re #895: Added skeleton for a displacement field comparison module
Commit: r:3572|plus:3572

#### 2014-08-02, 18:03:43 - Andras Lasso
RE #895: Implemented displacement field subtraction with arbitrary ROI
Commit: r:3573|plus:3573

#### 2014-08-03, 01:28:27 - Andras Lasso
RE #895: Attempt to use numpy arrays to compute stats (failed, probably due to garbage collection)
Commit: r:3574|plus:3574

#### 2014-08-03, 03:08:02 - Andras Lasso
RE #895: Added computation of mean displacement field and mean displacement vector error
Commit: r:3575|plus:3575

#### 2015-09-16, 03:45:38 - Andras Lasso
re #895: Moved PositionErrorMapping module to https://github.com/SlicerIGT/SlicerTrackingErrorInspector
Commit: r:4352|plus:4352


## #896 Add a command line tool to Plus installer
There are lots of tools in PLUS that only have command line interface. There is also lots of documentation on the wiki pages on how to use these tools (e.g. VolumeReconstructor, EditSeqMetaFile, etc). But most people are not comfortable using the command line.
It would make these command line tools easier to use if Plus users had access to a command line terminal where all the Plus executables are in the PATH.

I suggest when PLUS is installed, an icon gets created in the Start menu (besides fCal and PlusServer) that opens the command line terminal with PLUS bin folder in the PATH. It could be called like 'PLUS terminal', or 'PLUS CLI'.

#### 2014-05-30, 19:32:02 - Tamas Ungi
description: changed from "There are lots of tools in ..." to "There are lots of tools in ..."

#### 2014-06-02, 14:21:13 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-02, 20:43:02 - Andras Lasso
re #896: Added a shortcut to the Plus package that starts a command prompt in the Plus bin directory (it also adds the bin directory to the path)
Commit: r:3355|plus:3355

#### 2014-06-02, 20:43:16 - Andras Lasso
fixed #896: Added a shortcut to the Plus package that starts a command prompt in the Plus bin directory (it also adds the bin directory to the path)
Commit: r:3356|plus:3356

#### 2014-06-02, 20:43:16 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-06-02, 20:43:23 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-06-05, 19:01:23 - Andras Lasso
Creating a development release (Plus-2.1.2), moving all the resolved tickets from the current release to this milestone.

#### 2014-06-05, 19:01:23 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"


## #897 Clean up Interson video source code
The code should be cleaned up and somewhat more detailed documentation should be added.

#### 2014-10-07, 19:09:50 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2014-12-10, 21:03:35 - Adam Rankin
Part of this was completed when I added the ApplyNewImagingParameters. You will probably want to go over my changes and test them, as well as take the cleanup one step further.

See
url:https://subversion.assembla.com/svn/plus/branches/rankin-sandbox/PlusLib/src/DataCollection/Interson/|https://subversion.assembla.com/svn/plus/branches/rankin-sandbox/PlusLib/src/DataCollection/Interson/

#### 2016-01-07, 16:00:30 - Adam Rankin
re #897 Clean up interson (old-sdk) class

Implement imaging parameters class

Add some non-member convenience functions for XML parsing

Clean up virtual switcher class
Commit: r:4425|plus:4425

#### 2016-01-07, 16:00:30 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-07, 16:01:10 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-01-07, 18:08:18 - Adam Rankin
re #897 attempting linux build fix
Commit: r:4426|plus:4426

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-04-19, 18:36:01 - Adam Rankin
status: changed from "Test" to "Fixed"


## #898 Change supported Qt version to Qt-4.8.5
The officially supported Qt version for Plus is always the same as the Qt version used by 3D Slicer.
3D Slicer upgraded to Qt-4.8.5, so change the Qt version in Plus accordingly.

http://download.qt-project.org/archive/qt/4.8/4.8.5/

#### 2014-06-05, 19:05:29 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Plus-2.1.2"

#### 2014-06-05, 19:06:30 - Andras Lasso
Tested Plus with Qt-4.8.4. All good. Updated the build instructions to use Qt-4.8.5.

Need to update the dashboard machines.

#### 2014-06-05, 19:06:30 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-06-05, 22:26:18 - Andras Lasso
status: changed from "Test" to "Fixed"


## #899 Clean up PlusLib library exports
For some external libraries FIND_PACKAGE is in PlusLibConfig.cmake while for others it is int UsePlusLib.cmake:

FIND_PACKAGE(IntersonSDKCxx REQUIRED)
=> PlusLibConfig.cmake

FIND_PACKAGE(ITK PATHS '@ITK_DIR@' NO_DEFAULT_PATH)
FIND_PACKAGE(VTK PATHS '@VTK_DIR@' NO_DEFAULT_PATH)
FIND_PACKAGE(OpenIGTLink PATHS '@OpenIGTLink_DIR@' NO_DEFAULT_PATH)
=> UsePlusLib.cmake

This is inconsistent and should be fixed. See also the discussion at
https://www.assembla.com/code/plus/subversion/changesets/3330#commit/comment:938793/line:16/path:trunk/PlusLib/src/PlusLibConfig.cmake.in


#### 2014-06-04, 15:29:34 - Andras Lasso
Probably most of the current contents of UsePlusLib.cmake should go into PlusLibConfig.cmake. Only the INCLUDE() and LINK_DIRECTORIES() should be left in UsePlusLib.cmake.

#### 2014-06-04, 17:53:48 - Matt McCormick
Nice

#### 2014-06-05, 01:34:15 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-10-06, 21:10:36 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"

#### 2016-06-30, 22:36:05 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.4.0"

#### 2016-08-15, 19:18:59 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-24, 13:25:02 - Adam Rankin
fixed #899 UsePlusLib.cmake is now up-to-date

PlusLibConfig.cmake now contains target definitions via PlusLibTargets.cmake with properly populated link and include variables.

It is recommended to link to targets defined by PlusLibConfig directly instead of the LINK_DIRECTORIES command in UsePlusLib.cmake
Commit: r:4829|plus:4829

#### 2016-08-24, 13:25:02 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-24, 13:25:02 - Adam Rankin
status: changed from "New" to "Fixed"


## #900 PortUsImageOrientation no effect
As I have a problem with inaccurate spacial calibration I figured out, that fCal does not correctly recognice the wires (see screenshot). It can be seen, that wire 9:M1_m1 should be wire 1:H5_h5 and vice versa. As mentioned in the documentation I've tried to change the PortUSImageOrientation, as this seeting seems not to be correct, because the left side of the image is the marked side and the upper part of the image is the far side. Indifferent from the PortUSImageOrientation setting, the green arows always shows M to the right and F down. I've tried several settings, but nothing helps.
I then tried to change DisplayedImageOrientation setting, but this seems only to change the display of the US Image in fCal but not in the spacial calibration parameter settings. There also seems to be a problem, because when changing from MarkedLeft FarUp to MarkedLeft FarDown the Image orientation changes as well as the green Arows, so Far is always wrong, indifferently from the settings.
Screenshots:

wrong far 1:
the far side is on the bottom of the immage, so MarkedLeft Far Down should be correct, but when switching to it, the far side changes to the bottom of the image and the green arrow also changes from Near to Far.

wrong far 2:
The far side is on the top of the image, so marked Left Far Up should be correct, but when switching to it, the far side changes to the bottom of the image and the green arrot also changes from Far to Near

Whatever I'm doing, it' not possible to change the Far side of the US-Image

wrong wires:
in the spacial calibration parameter settings dialog there is no chance to change the Far and Marked side (tried with PortUsImageOrientation setting) and also the wires are not correctly identified.

Seems there is a bug.

#### 2014-06-05, 14:16:36 - reiker
image:aaUE6c7lWr44H_acwqjQWU


#### 2014-06-05, 14:16:36 - reiker
Attachment added: "wrongwires.jpg"

#### 2014-06-05, 14:16:54 - reiker
image:alwBkQ7lWr44fkacwqjQYw


#### 2014-06-05, 14:16:54 - reiker
Attachment added: "wrongfar1.jpg"

#### 2014-06-05, 14:16:58 - reiker
image:anJhPe7lWr46b8acwqjQWU


#### 2014-06-05, 14:16:58 - reiker
Attachment added: "wrongfar2.jpg"

#### 2014-06-05, 14:17:13 - reiker
priority: changed from "Normal (3)" to "High (2)"

#### 2014-06-05, 14:17:18 - reiker
Issue Type: changed from "Enhancement" to "Bug"

#### 2014-06-05, 14:19:33 - reiker
file:bQCTsi7lWr44k0acwqjQYw


#### 2014-06-05, 14:19:33 - reiker
Attachment added: "PlusConfiguration_VfWVideo_Polaris_PhantomRegistration.xml"

#### 2014-06-05, 15:24:16 - reiker
it also seems interesting that the image is up side down, but only in fcal. when using vtkWin32VideoSourceTest.exe the image is correctly aligned.
But when using a webcam the image is also correctly aligned in fcal.
as video device I'm using a VideoForWindows device.

#### 2014-06-05, 15:24:30 - reiker
image:b9kI-07mur443cdmr6bg7m


#### 2014-06-05, 15:24:30 - reiker
Attachment added: "vtkwin32videosource.jpg"

#### 2014-06-05, 17:55:53 - Andras Lasso
Bug confirmed. I'll release a patched version in a few hours.

#### 2014-06-05, 17:56:00 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-06-05, 17:56:00 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-06-05, 18:00:50 - reiker
Great, thanks.
May you also be so kind to release a version for xp embeded. would be great.

#### 2014-06-05, 18:21:53 - Andras Lasso
re #900: Fixed video for windows device port orientation (the UsPortImageOrientation parameter in the config file was ignored)
Commit: r:3375|plus:3375

#### 2014-06-05, 18:38:19 - Adam Rankin
The green arrows only change when you change the visualization of the image via the Gear icon at the top left of fCal. PortUsImageOrientation changes the acquired orientation. fCal then flips it to MF internally.

Using the test MMF webcam configuration I can successfully change the input orientation of the image.

#### 2014-06-05, 18:39:19 - Adam Rankin
Your images also show different orientations. It looks like images 1 and 2 are flipped. Did you change the orientation between these acquisitions?

#### 2014-06-05, 18:47:51 - reiker
yup, i changed the orientation via the gear icon, but only for wrong far 1 and wrong far 2. See image description in the first post

#### 2014-06-05, 21:22:42 - Andras Lasso
re #900: Allow setting of SetScreenRightDownAxesOrientation even if Rendering element is missing (the missing element is added so that the setting will be saved to the config file)
Commit: r:3379|plus:3379

#### 2014-06-05, 21:30:47 - reiker
By flipping the orientation I tried to get the correct alignment, but that did not work. It is not possible to change the far or near side. I thought it is possible to orientate the image right that it is not up side down anymore, but this is not possible.

About the green arrows only changeing when changeing the visualization of the image:
when trying to change marked and unmarked side, the green arrow does not change but to your description adam, it should change. maybe this is also a bug, as related to ticket #696

quotation from adam #696:
During one run, switching the view orientation resulted in the U/M label getting 'stuck'. The view would update but not the labelling. I was able to update the display by switching to 3d mode and back to 2d mode...

#### 2014-06-05, 22:27:59 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-06-05, 22:28:03 - Andras Lasso
milestone_id: changed from null to "Plus-2.1.2"

#### 2014-06-05, 22:28:13 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2014-06-06, 02:49:35 - Adam Rankin
re #900 removing unused branch
Commit: r:3384|plus:3384


## #901 More descriptive config file parameter names needed
Some parameter names in the config files are still not informative enough. E.g.
VolumeReconstruction/OutputSpacing -- this could be OutputSpacingPixelsPerMm.
VolumeReconstruction/ClipRectangleOrigin ans Size -- this is clear for people who are familiar with VTK: http://www.vtk.org/Wiki/VTK/Tutorials/Extents , but not clear to other people. Maybe if units were added, that would make it easier to understand.

In general, when a parameter gives a measure, units must be specified in the name. When the parameter gives a geometrical object (point, vector, rectangle), it would be nice to also specify the coordinate system where the object is defined.

#### 2014-09-27, 18:53:00 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-09-27, 18:53:00 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-10-03, 12:56:35 - Andras Lasso
Full documentation of parameters are provided in the user manual, so that should help.

#### 2014-10-03, 12:56:35 - Andras Lasso
summary: changed from "Informative parameter names needed" to "More descriptive config file parameter names needed"

#### 2014-10-03, 12:56:35 - Andras Lasso
milestone_id: changed from "Plus-2.2.0" to "Release Plus-Future"


## #902 Improve Plus remote module in 3D Slicer
Recording:
* Query the list of recording devices from PlusServer and show a list for the Capture Device ID instead of a text entry field.
** User selects a connection
** PlusRemove asks for the list of capture device IDs: <Command Name='RequestDeviceIds' DeviceType='VirtualDiscCapture' /> (something like this in the code: commandCounter = slicer.modules.openigtlinkremote.logic().ExecuteCommand(connectorNodeId, 'RequestDeviceIds', parameters)), see documentation of commands at PlusServer_commands
** getCommandReply to get the response
** update the listbox with the parsed response
=> Whenever the connection node changes (e.g., connected, disconnected) then refresh the device ID list
=> Make sure the list is up-to-date when first entering the module
=> Add support for simultaneous command processing (have a list of commands active, each with an associated action and remaining time)

Connection:
* Don't let the user to run any command until the connection is established

Reconstruction:
* Query the list of volume reconstructor devices from PlusServer and show a list in the reconstruction section.
* Allow the user to select from a list which sequence to reconstruct (now the last recorded sequence is reconstructed).
* Add user interface to specify output volume spacing.
* Add user interface to specify output extent and direction (with text box and ROI widget).
* Add 'scout scan' feature: set output extent using a quick, low-resolution scan.
* Add possibility to ask for snapshots during live volume reconstruction
* Add option to draw the acquired image slices as thin surface models while acquiring the frames to give an idea what parts are covered already by the scan and if the scanning speed is too high or too low 

Transform update:
* Query the current device set config file name and display it (this would allow the user to know which config file will be updated)

Tool status display
* Show for each transform if they are valid (a transform is valid if it is regularly updated; if there is no update for a long time, e.g., a half second then its status have to be set to unavailable)


#### 2014-06-09, 19:57:30 - Andras Lasso
description: changed from "Recording:
* Query the list..." to "Connection:
* Don't let the..."

#### 2014-06-09, 20:10:28 - Andras Lasso
description: changed from "Connection:
* Don't let the..." to "Recording:
* Query the list..."

#### 2014-06-16, 20:52:24 - Amelie Meyer
description: changed from "Recording:
* Query the list..." to "Recording:
* Query the list..."

#### 2014-06-16, 20:53:05 - Amelie Meyer
description: changed from "Recording:
* Query the list..." to "Recording:
* Query the list..."

#### 2014-06-29, 03:29:38 - Andras Lasso
description: changed from "Recording:
* Query the list..." to "Recording:
* Query the list..."

#### 2014-10-01, 14:13:16 - Andras Lasso
Everything is implemented, except slice display (added separate ticket https://github.com/SlicerIGT/PlusRemote/issues/5) and transform status display (a new module will be developed for that).

#### 2014-10-01, 14:13:16 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-10-01, 14:13:23 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"


## #903 fCal won't launch due to missing .dll when Qt built with -debug-and-release 
Debug build of fCal was looking for release Qt .dlls when trying to launch.

Investigate cause.

#### 2014-06-11, 20:42:51 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-06-12, 16:12:55 - Tamas Heffter
Just a hint: If you've rebuilt Qt after Plus was configured before with Qt -release only option you need to delete Qt related CMake variables and run configure again so FindQt can recheck your Qt bin directory to find debug dlls. Make sure your QT_CORE_LIBRARY_DEBUG CMake variable has the correct debug lib (QtCored4.lib) and not the release one (QtCore4.lib). 
You can easily delete Qt variables in CMake Grouped view, by selecting Qt and click on Remove Entry button and run Configure again. Make sure you do the same with VTK as well (It uses Qt also) prior to Plus. Hope it helps. 

#### 2014-06-12, 16:30:38 - Adam Rankin
I have found that {QT_LIBRARIES} is properly generated as


~~~~
optimized;D:/Qt/4.8.5_x64/lib/QtGui4.lib;debug;D:/Qt/4.8.5_x64/lib/QtGuid4.lib;optimized;D:/Qt/4.8.5_x64/lib/QtCore4.lib;debug;D:/Qt/4.8.5_x64/lib/QtCored4.lib 

~~~~


And now I know that fCal links against a tiny .lib which loads the appropriate .dll

Continuing my investigations.

#### 2014-06-12, 16:40:07 - Adam Rankin
The configuration for linker properties in visual studio for debug contains both debug and release versions of the .lib files.

I wonder if FindQT4.cmake is not generating the proper cmake syntax?

#### 2014-06-12, 17:24:03 - Tamas Heffter
I would check QVTK.dll (vtk could cause the problem too) and all fCal dependent dlls with dependency walker (http://www.dependencywalker.com) to make sure it uses the correct debug dlls. 
My linker dependences shows only debug libs for Qt: 


~~~~

kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\QVTK.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\Qt3Supportd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtGuid4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtXmld4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtSqld4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtNetworkd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtCored4.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\CommonWidgets.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkImageAcquisition.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkPlusCommon.lib;ITKIO.lib;itkvnl.lib;itkvnl_algo.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkCommon.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkRendering.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkHybrid.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkCharts.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkCalibrationAlgo.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkTracking.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkDataCollection.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkVolumeReconstruction.lib;OpenIGTLink.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\QVTK.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkQtChart.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtOpenGLd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtWebKitd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtXmlPatternsd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\Qt3Supportd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtGuid4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtXmld4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtSqld4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtNetworkd4.lib;D:\\devel\\Qt\\4.7.4-x64\\lib\\QtCored4.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkViews.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkInfovis.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkWidgets.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkVolumeRendering.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\PatternLocAlgo.lib;ITKAlgorithms.lib;ITKNumerics.lib;ITKStatistics.lib;itkNetlibSlatec.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkImageAcquisition.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkUsSimulatorAlgo.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkRfProcessingAlgo.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkTracking.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkPlusOpenIGTLink.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkSignaling.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkPlusCommon.lib;ITKIO.lib;ITKNrrdIO.lib;itkgdcm.lib;itkjpeg12.lib;itkjpeg16.lib;itkopenjpeg.lib;snmpapi.lib;rpcrt4.lib;itkpng.lib;itktiff.lib;itkjpeg8.lib;ITKSpatialObject.lib;ITKMetaIO.lib;ITKDICOMParser.lib;ITKEXPAT.lib;ITKniftiio.lib;ITKznz.lib;itkzlib.lib;ITKTransformIOReview.lib;ITKBasicFilters.lib;ITKCommon.lib;itksys.lib;itkvnl_inst.lib;itkvnl_algo.lib;itkvnl.lib;itkvcl.lib;itkv3p_netlib.lib;itkv3p_lsqr.lib;Psapi.lib;Winmm.lib;OpenIGTLink.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkHybrid.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkParallel.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkRendering.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkGraphics.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkImaging.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkIO.lib;comctl32.lib;wsock32.lib;opengl32.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkFiltering.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtkCommon.lib;D:\\devel\\VSIBuild-x64\\bin\\Debug\\vtksys.lib;ws2_32.lib

~~~~


#### 2014-06-12, 17:24:03 - Tamas Heffter
CommentContent: changed from "I would check QVTK.dll (vtk could cause the problem too) and all fCal dependent dlls with dependency walker (http://www.dependencywalker.com) to make sure it uses the correct debug dlls. " to "I would check QVTK.dll (vtk could cause the problem too) and all fCal dependent dlls with dependency walker (http://www.dependencywalker.com) to make sure it uses the correct debug dlls. 
My linker dependences shows only debug libs for Qt:"

#### 2014-06-12, 18:09:28 - Adam Rankin
Updating to CMake 3.0.0 seems to have resolved the issue. With 2.8.12.? the visual studio project was generated with dependencies on both debug and release .lib files (and thus dlls)

#### 2014-06-12, 18:09:28 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2014-06-12, 20:32:45 - Adam Rankin
Not fixed.

#### 2014-06-12, 20:32:45 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2014-06-12, 20:36:06 - Adam Rankin
It is specifically qtwebkit4.lib that is the problem. All the others correctly look for the debug .libs

#### 2014-06-12, 20:53:23 - Adam Rankin
So it would seem that nmake never created QtWebKitd4.lib...

#### 2014-06-13, 02:17:26 - Adam Rankin
Bad Qt build meant missing .lib

Cmake didn't complain, just used the release version instead. Oof.

#### 2014-06-13, 02:17:26 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #904 Add sending custom attributes when stealthlink volume is sent with the command GET_EXAM_DATA
The volume is sent with an id and the id is created as deviceid+hash.
When sending this volume, send also custom attributes like patient name patient id description and slicer should know what to do with them.
This will be implemented in the vtkPlusStealthLinkCommand


#### 2014-09-23, 20:25:33 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"


## #905 Temporal calibration fails with VfwVideoSource if image orientation is UN
I've tried to use the latest version of fcal but now temporal calibration always cancelles with the following error:

061214_171913.266|INFO|116.704000| Temporal calibration started|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(451)
061214_171924.250|ERROR|127.689000| Detected metric values do not vary sufficiently (i.e. video signal is constant)|in ..\\..\\..\\PlusLib\\src\\CalibrationAlgo\\vtkTemporalCalibrationAlgo\\vtkTemporalCalibrationAlgo.cxx(613)
061214_171924.255|ERROR|127.693000| Failed to compute position signal from fixed frames|in ..\\..\\..\\PlusLib\\src\\CalibrationAlgo\\vtkTemporalCalibrationAlgo\\vtkTemporalCalibrationAlgo.cxx(675)
061214_171924.259|ERROR|127.697000| Cannot determine tracker lag, temporal calibration failed! Error: |in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(599)
061214_171924.262|INFO|127.700000| Temporal calibration cancelled.|in ..\\..\\PlusApp\\fCal\  oolboxes\  emporalCalibrationToolbox.cxx(732)
061214_172212.842|INFO|296.280000| Toolbox changed to Configuration|in ..\\..\\PlusApp\\fCal\\fCalMainWindow.cxx(325)


But temporal calibration did work with the previous version of fcal and i did not change anything of the setup or the config file. Do you have any ideas what can be wrong?

What I found out so far about temporal calibration with the latest version:

when changing the configuration parameter PortUsImageOrientation from 'UN' to 'MF', temporal calibration works, but it does not and allways cancels when using it as follows: PortUsImageOrientation='UN'. Seems like it is a bug.

As fixed stream I used the settings you suggested. I also checked the clipping area, that did not help. The interesting thing is that it works when changing PortUsImageOrientation from US to MF. That's why I think it is a bug. 

#### 2014-06-12, 19:58:28 - Andras Lasso
re #905: Added configuration option to vtkTemporalCalibrationAlgo. If SaveIntermediateImages='TRUE' is set then intermediate files of the line segmentation algorithm are written to file.
Commit: r:3414|plus:3414

#### 2014-06-12, 20:02:33 - Andras Lasso
re #905: Improved logging of frame validation. Tuned vtkPlusChannel::GetFrameList to not return frames from the exact timestamp that is provided as input. Changed the 'unspecified' timestamp value from -1 to INVALID_TIMESTAMP.
Commit: r:3415|plus:3415

#### 2014-06-12, 20:03:12 - Andras Lasso
re #905: Improved logging of temporal calibration . Changed the 'unspecified' timestamp value from -1 to INVALID_TIMESTAMP for vtkPlusChannel::GetFrameList.
Commit: r:3416|plus:3416

#### 2014-06-12, 20:32:02 - Andras Lasso
file:ctRRkK8Nar47_cacwqjQYw


#### 2014-06-12, 20:32:02 - Andras Lasso
Attachment added: "PlusApp-2.1.2.3416-Win32-embedded.exe"

#### 2014-06-12, 20:34:20 - Andras Lasso
I've added some more logging to temporal calibration. Please try the attached PlusApp-2.1.2.3416-Win32-embedded.exe release with adding SaveIntermediateImages='TRUE' to the vtkTemporalCalibrationAlgo element. You should find LineSegmentationResult_NNN.png files in your output directory, which may help in finding out what could have been the issue.

#### 2014-06-13, 15:43:25 - Andras Lasso
It was a configuration problem: 'I overlooked to set the ClipRectangleOrigin and ClipRectangleSize in an separate subitem in the configuration. I've changed that and now temporal calibration does work fine. I thought temporal calibration uses the ClipRectangle from the segmentation dialog. Thanks for the help.'

#### 2014-06-13, 15:43:25 - Andras Lasso
status: changed from "New" to "Invalid"


## #906 Simplify configuration files
Make as many attributes optional as possible.
Remove unused attributes.

#### 2014-06-17, 15:27:40 - Andras Lasso
re #906: Removed ReportUnknownToolsOnce Device attribute. We will always report unknown devices only once after each Connect.
Commit: r:3429|plus:3429

#### 2014-06-17, 15:31:41 - Andras Lasso
re #906: Removed unused RequireFrameBufferSizeInDeviceSetConfiguration member of PlusDevice
Commit: r:3430|plus:3430

#### 2014-06-17, 16:09:52 - Andras Lasso
re #906: Made LocalTimeOffsetSec an optional attribute for all devices (deafult value = 0.0). Made AveragedItemsForFiltering an optional attribute for all devices (default=20).
Commit: r:3431|plus:3431

#### 2014-06-17, 16:28:45 - Andras Lasso
re #906: Made BufferSize an optional attribute for all devices. Default value = 150, which is not too small (last 5 sec of acquired data at 30fps acquisition rate, last 2.5 sec at 60fps) and not too big (having 150 image frames in memory should be OK).
Commit: r:3432|plus:3432

#### 2014-06-17, 17:55:45 - Andras Lasso
re #906: Removed unused RequireUsImageOrientationInDeviceSetConfiguration device member
Commit: r:3433|plus:3433

#### 2014-06-17, 20:30:36 - Andras Lasso
re #906: Made AcquisitionRate attribute optional (also updated default value for each device and removed the AcquisitionRate parameter from the config file if it was the same as the default). Removed unused RequireRfElementInDeviceSetConfiguration device member.
Commit: r:3434|plus:3434

#### 2014-06-17, 20:41:56 - Andras Lasso
re #906: Renamed fCal phantom geometry type from Double-N to Multi-N, as usually more N-wires used than just two
Commit: r:3435|plus:3435

#### 2014-06-18, 00:04:46 - Andras Lasso
re #906: Moved tool LED handling and tracker beep functions to NDI trackers, as no other devices support it
Commit: r:3436|plus:3436

#### 2014-06-18, 00:12:39 - Andras Lasso
re #906: Removed unused 'Model' attribute of data source
Commit: r:3437|plus:3437

#### 2014-06-18, 00:32:37 - Andras Lasso
re #906: Moved tool revision, part number, manufacturer, serial number to custom properties
Commit: r:3438|plus:3438

#### 2014-06-20, 01:51:46 - Andras Lasso
re #906: Fixed regression in Interson imaging parameters reading (attempted to set parameters before connecting to the probe)
Commit: r:3449|plus:3449

#### 2014-09-27, 18:52:01 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-10-01, 00:22:34 - Andras Lasso
re #906: Removed Queen's IP address from config files that are included in installation package
Commit: r:3751|plus:3751


## #907 vtkRfProcess::GetBrightess method mis-spelled.


#### 2014-06-22, 22:16:56 - Matt McCormick
re #907: Rename vtkRfProcess::GetBrightess to GetBrightness.

Commit: r:3455|plus:3455

#### 2014-06-22, 22:18:32 - Matt McCormick
status: changed from "New" to "Fixed"

#### 2014-06-23, 01:48:17 - Andras Lasso
Thanks, good catch.


## #908 Check the number of input channels in virtual capture device and report error if it is not 1
If somebody wrote this:
<Device Type='VirtualDiscCapture' Id='CaptureDevice' EnableCapturing='FALSE' BaseFilename='RecordingTest.mha'>
<InputChannels>
  <InputChannel Id='TrackerStream'/>
  <InputChannel Id='VideoStream'/>
</InputChannels>
</Device>

Than he might expect that both streams are captured, while actually only the first one is captured. Log a warning or error when this happens (make it clear that only the first input channel is used, all the others are ignored).

#### 2014-07-01, 00:48:50 - Andras Lasso
assigned_to_id: changed from null to "garciaguevara"

#### 2014-09-27, 19:46:37 - Andras Lasso
fixed #908: Added warning if more than one input channel is defined for vtkVirtualDiscCapture
Commit: r:3740|plus:3740

#### 2014-09-27, 19:46:37 - Andras Lasso
status: changed from "New" to "Fixed"


## #909 Malware warning when downloading a release
Google Chrome (and newer Internet Explorer versions) displays a warning when attempting to download a Plus binary release:
'PlusApp... .exe is malicious and Chrome has blocked it'

The file is not infected (scanned with multiple online scanners, such as https://www.metascan-online.com or https://www.virustotal.com). Downloading the same file form a OneDrive shared folder works without any problem.

This is a common problem when offering download of executable files, many independent software developers complain.

Signing the installer solves the problem for some, but a signing key costs a few hundred $ a year and it adds additional administration work.

Probably hosting the executables on a different server (e.g., on innovate, where we host the generated documentation) may be a simpler solution. The same package that was flagged as malware could be downloaded successfully from innovate.


#### 2014-06-30, 19:49:23 - Andras Lasso
image:cIJtyUai8r5jmMacwqjQXA


#### 2014-06-30, 19:49:23 - Andras Lasso
Attachment added: "PlusReleaseDownloadWarning.png"

#### 2014-09-22, 02:07:17 - Andras Lasso
Malware warning only displayed for a while after uploading the files. Also releases can now be uploaded to http://perk-software.cs.queensu.ca/plus/packages/ (nightlies are uploaded already to there).

#### 2014-09-22, 02:07:23 - Andras Lasso
status: changed from "New" to "Fixed"


## #910 TransformRepository does not handle transform to self correctly
Transform to self (ImageToImage, ProbeToProbe, ...) should be always a valid identity transform.

#### 2014-07-02, 13:30:44 - Andras Lasso
fixed #910: Transform to self is handled correctly in vtkTransformRepository
Commit: r:3481|plus:3481

#### 2014-07-02, 13:30:44 - Andras Lasso
status: changed from "New" to "Fixed"


## #911 Missing header for readlink on Linux


#### 2014-07-01, 18:07:48 - Matt McCormick
Results in compile error.

#### 2014-07-01, 18:10:21 - Matt McCormick
re #911: Add missing unistd.h to vktPlusConfig.cxx

Required for readlink.

Commit: r:3480|plus:3480

#### 2014-07-01, 18:11:12 - Matt McCormick
status: changed from "New" to "Fixed"


## #912 Make OpenIGTLink video source reconnection more robust
If OpenIGTLink server is temporarily gets unavailable then the OpenIGTLink video source device cannot reconnect. Implement the same reconnect mechanism as in the OpenIGTLink tracker device.

#### 2014-07-02, 19:44:14 - Andras Lasso
test #912: OpenIGTLinkVideo device now reconnects if the server becomes temporarily unavailable
Commit: r:3482|plus:3482

#### 2014-07-02, 19:44:14 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-07-02, 19:53:39 - Andras Lasso
test #912: Allow OpenIGTLinkVideo to use received timestamps or the acquisition time of the TRACKEDFRAME message
Commit: r:3483|plus:3483

#### 2014-07-02, 20:05:32 - Andras Lasso
re #912: Fixed build error
Commit: r:3484|plus:3484

#### 2014-07-03, 15:38:49 - Andras Lasso
re #912: Move OpenIGTLinkVideo and OpenIGTLinkTracker to the same directory to allow sharing of source code
Commit: r:3485|plus:3485

#### 2014-07-03, 17:17:33 - Andras Lasso
re #912: Moved common parts of OpenIGTLink tracker and video acquisition devices to a common vtkOpenIGTLinkDevice class
Commit: r:3486|plus:3486

#### 2014-07-03, 18:13:21 - Andras Lasso
re #912: Updated user documentation of OpenIGTLink tracker and video acquisition devices with config file parameter description
Commit: r:3487|plus:3487

#### 2014-07-15, 20:07:13 - Andras Lasso
re #912: Added batch file for PlusApp user documentation
Commit: r:3499|plus:3499

#### 2014-07-15, 21:32:32 - Andras Lasso
re #912: Moved contents from https://www.assembla.com/wiki/show/plus/Device_Types
Commit: r:3501|plus:3501

#### 2014-07-16, 17:39:00 - Andras Lasso
re #912: Moved contents from https://www.assembla.com/spaces/plus/wiki/Configuration_structure_for_plus_version_2
Commit: r:3502|plus:3502

#### 2014-07-16, 17:39:34 - Andras Lasso
re #912: Moved contents from https://www.assembla.com/spaces/plus/wiki/Configuration_structure_for_plus_version_2
Commit: r:3503|plus:3503

#### 2014-07-16, 22:02:57 - Andras Lasso
re #912: Moved contents from https://www.assembla.com/spaces/plus/wiki/Hardware_setup
Commit: r:3504|plus:3504

#### 2014-07-16, 22:03:06 - Andras Lasso
re #912: Moved contents from https://www.assembla.com/spaces/plus/wiki/Hardware_setup
Commit: r:3505|plus:3505

#### 2014-10-06, 21:09:41 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-04-15, 04:45:26 - Andras Lasso
re #912: Fixed incorrectly determined transform name (To transform was added twice)
Commit: r:4102|plus:4102


## #913 Add check for duplicate output channel Ids
Output channel Id should be unique among all devices (otherwise some output channels may be ignored). Add a check to detect duplicate Ids, probably caused by copy-paste errors.

#### 2014-07-07, 14:47:02 - Andras Lasso
fixed #913: Added check for duplicate output channel Ids
Commit: r:3491|plus:3491

#### 2014-07-07, 14:47:02 - Andras Lasso
status: changed from "New" to "Fixed"


## #914 PlusRemote capture and volume device lists are not always updated at the same time
Delay using simultaneous commands processing.
Sometimes capture and volume device lists aren't both updated at the same time.

#### 2014-07-07, 21:59:04 - Andras Lasso
summary: changed from "re #902: delay using simultaneous commands processing " to "PlusRemote capture and volume device lists are not always updated at the same time"

#### 2014-07-07, 22:00:48 - Andras Lasso
To check:
* Why CMD and ACQ nodes are not deleted
* Sometimes the commands and responses are paired incorrectly
* There are more state transitions when the remote server is started/stopped

#### 2014-10-01, 14:07:23 - Andras Lasso
Fixed in Slicer

#### 2014-10-01, 14:07:23 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2014-10-01, 14:13:23 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"


## #915 Artifacts in volume reconstruction if MAXIMUM calculation, hole filling, and linear interpolation is used
Artifacts in volume reconstruction if MAXIMUM calculation, hole filling, and linear interpolation is used.
If setting the interpolation to nearest neighbor then the reconstruction looks OK.

C:\\Users\\lasso\\devel\\PlusExp-bin\\bin\elease\\VolumeReconstructor.exe '--config-file=C:/Users/lasso/devel/PlusExp-bin/PlusLib/data/ConfigFiles/Testing/PlusDeviceSet_SpinePhantomFreehandReconstructionOnlyMaximum.xml' '--source-seq-file=C:/Users/lasso/devel/PlusExp-bin/PlusLib/data/TestImages/SpinePhantomFreehand.mha' '--output-volume-file=vtkVolumeReconstructorMaximum1Output.mha' '--image-to-reference-transform=ImageToReference'


<PlusConfiguration version='2.1'>

  <CoordinateDefinitions>
    <Transform From='Image' To='Probe' 
      Matrix='-0.00157821  0.0785919   -0.00803285  15.3978 
              -0.0839128   0.00372697   0.0153803   49.5705 
               0.0159024   0.00714276   0.0803604   -8.63446 
               0           0            0            1'
      Error='1.68149' Date='022312_110631'
    />
    <Transform From='Phantom' To='Reference'
      Matrix='-0.0263954   0.0123051   -0.999576    11.9823 
             0.0167829   0.999789     0.0118645  -37.1153 
             0.999511   -0.0164626   -0.0265963  -85.3543 
             0           0            0            1' 
      Error='1.87619' Date='022312_110322'
    />
  </CoordinateDefinitions>
  
  <VolumeReconstruction OutputSpacing='0.5 0.5 0.5' 
    ClipRectangleOrigin='0 0' ClipRectangleSize='820 616'
    Interpolation='LINEAR' Optimization='FULL' Calculation='MAXIMUM'
    Compounding='ON' FillHoles='ON' NumberOfThreads='1'>
    <HoleFilling  >
      <HoleFillingElement NumberOfSticksToUse='1'
        Type='STICK'     
        StickLengthLimit='9' />
    </HoleFilling>
  </VolumeReconstruction>

</PlusConfiguration>


#### 2014-07-18, 17:47:11 - Andras Lasso
image:clwFE4dQmr5ioZdmr6bg7m


#### 2014-07-18, 17:47:11 - Andras Lasso
Attachment added: "LinearInterpolationAndMaximumCalculationArtifact.png"

#### 2014-07-18, 17:49:45 - Andras Lasso
re #915: Fixed the volume reconstruction test with maximum operation
Commit: r:3513|plus:3513

#### 2014-07-18, 17:49:45 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-08-06, 22:05:17 - Thomas Vaughan
image:daavJMhBur5lFdacwqjQXA


#### 2014-08-06, 22:05:17 - Thomas Vaughan
Attachment added: "20140806_Ticket915_VolRecMax_Thomas.PNG"

#### 2014-08-06, 22:06:06 - Thomas Vaughan
I don't know if this will help you, but I tried running this with and without optimization. When I use the config file below, it seems to work fine. The problem must be specific to the optimized version of vtkPasteSlicesIntoVolume.

<PlusConfiguration version='2.1'>

  <CoordinateDefinitions>
    <Transform From='Image' To='Probe' 
      Matrix='-0.00157821  0.0785919   -0.00803285  15.3978 
              -0.0839128   0.00372697   0.0153803   49.5705 
               0.0159024   0.00714276   0.0803604   -8.63446 
               0           0            0            1'
      Error='1.68149' Date='022312_110631'
    />
    <Transform From='Phantom' To='Reference'
      Matrix='-0.0263954   0.0123051   -0.999576    11.9823 
             0.0167829   0.999789     0.0118645  -37.1153 
             0.999511   -0.0164626   -0.0265963  -85.3543 
             0           0            0            1' 
      Error='1.87619' Date='022312_110322'
    />
  </CoordinateDefinitions>

  <VolumeReconstruction OutputSpacing='0.5 0.5 0.5' 
    ClipRectangleOrigin='0 0' ClipRectangleSize='820 616'
    Interpolation='LINEAR' Optimization='NONE' Calculation='MAXIMUM'
    Compounding='ON' FillHoles='ON' NumberOfThreads='1'>
    <HoleFilling  >
      <HoleFillingElement NumberOfSticksToUse='1'
        Type='STICK'     
        StickLengthLimit='9' />
    </HoleFilling>
  </VolumeReconstruction>
  
</PlusConfiguration>


#### 2014-08-06, 22:08:14 - Andras Lasso
Can you reproduce the problem if you switch optimization to FULL?

#### 2014-08-06, 22:13:25 - Thomas Vaughan
Yes, I get the same result seen in the ticket description.

#### 2014-08-06, 22:23:35 - Thomas Vaughan
It's very strange - when I run the reconstructor without hole filling and full optimization, the result looks normal.
When I reconstruct with nearest neighbor hole filling (as opposed to sticks) and full optimization, I get another type of artefact.

I'll attach pictures to show what I mean

#### 2014-08-06, 22:23:35 - Thomas Vaughan
CommentContent: changed from "It's very strange - when I run the reconstructor without hole filling, the result looks normal.
When I reconstruct with nearest neighbor hole filling (as opposed to sticks), I get another type of artefact.

I'll attach pictures to show what I mean" to "It's very strange - when I run the reconstructor without hole filling and full optimization, the result looks normal.
When I reconstruct with nearest neighbor hole filling (as opposed to sticks) and full optimization, I get another type of artefact.

I'll"

#### 2014-08-06, 22:23:46 - Thomas Vaughan
Without hole filling
image:buNg0ohBGr5ikndmr6bg7m


#### 2014-08-06, 22:23:46 - Thomas Vaughan
Attachment added: "20140806_Ticket915_VolRecMax_Thomas2.PNG"

#### 2014-08-06, 22:23:46 - Thomas Vaughan
CommentContent: changed from "image:buNg0ohBGr5ikndmr6bg7m
" to "Without hole filling
image:buNg0ohBGr5ikndmr6bg7m
"

#### 2014-08-06, 22:23:50 - Thomas Vaughan
With nearest neighbor hole filling
image:bxESl6hBGr5ifsacwqEsg8


#### 2014-08-06, 22:23:50 - Thomas Vaughan
Attachment added: "20140806_Ticket915_VolRecMax_Thomas3.PNG"

#### 2014-08-06, 22:23:50 - Thomas Vaughan
CommentContent: changed from "image:bxESl6hBGr5ifsacwqEsg8
" to "With nearest neighbor hole filling
image:bxESl6hBGr5ifsacwqEsg8
"

#### 2014-08-15, 04:02:37 - Thomas Vaughan
Fixed #915, corrected the accumulation buffer calculation in vtkPasteSliceIntoVolumeHelperCommon - extra multiplications by 256 were occuring. I do not know for certain why this caused the observed bug, but I suspect some kind of overflow in the fixed point class (fixed.h), which is used only when optimization is set to FULL.
Commit: r:3596|plus:3596

#### 2014-08-15, 04:02:37 - Thomas Vaughan
status: changed from "New" to "Fixed"

#### 2014-08-15, 04:03:16 - Thomas Vaughan
image:avMwPQjder5iRdacwqjQWU


#### 2014-08-15, 04:03:16 - Thomas Vaughan
Attachment added: "20140815_VaughanFix.PNG"


## #916 Add support for getting tracking information from da Vinci systems
Add classes similar to CISST IntuitiveDaVinci classes (https://trac.lcsr.jhu.edu/cisst/browser/trunk/saw/components/sawIntuitiveDaVinci/code/mtsIntuitiveDaVinci.cpp) to acquire tracking information from da Vinci surgical systems.

#### 2014-07-24, 18:31:01 - Andras Lasso
re #916: Added da Vinci classes

Provided by Ricky Singla.
Similar to interface class in CISST (https://trac.lcsr.jhu.edu/cisst/browser/trunk/saw/components/sawIntuitiveDaVinci/code/mtsIntuitiveDaVinci.cpp).

Commit: r:3534|plus:3534

#### 2014-07-24, 18:36:03 - Andras Lasso
re #916: Fixed make file
Commit: r:3535|plus:3535

#### 2014-07-24, 18:39:33 - rsingla92
Regarding the code provided - it is not of great quality at the moment and will be updated in the future. For example, there is at least one hard coded path in the make files. As well, the daVinci class is not intended to be portable or work with the generic user. It was designed with only one user in mind. This can be improved. 



#### 2014-07-24, 19:11:36 - Andras Lasso
re #916: Renamed daVInci device to IntuitiveDaVinci
Commit: r:3536|plus:3536

#### 2014-07-24, 19:12:41 - Andras Lasso
re #916: Renamed daVInci device to IntuitiveDaVinci
Commit: r:3537|plus:3537

#### 2014-07-24, 19:15:10 - Andras Lasso
The CMake files should work now. daVinci was renamed to IntuitiveDaVinci, so you have to reconfigure and build PlusBuild.sln.

#### 2014-07-24, 19:43:21 - rsingla92
Thanks!

On the latest revision, and using the CMake GUI, after enabling the PLUS_USE_IntuitiveDaVinci option I get the expected CMake error (as the include directory and the library are not on the path hints). However, after specifying the location of the include directory and the library, I still get the CMake Erorr. 

I also have a bug in in the FindIntuitiveDaVinci.cmake file. Line 30 should read IF(IntuitiveDaVinci_FOUND). This didn't fix the error however.

#### 2014-07-24, 19:59:23 - Andras Lasso
re #916: Fixed daVinci find package
Commit: r:3538|plus:3538

#### 2014-07-25, 02:17:13 - rsingla92
file:dkBZCse6er5ikzacwqjQXA


#### 2014-07-25, 02:17:13 - rsingla92
Attachment added: "daVinci_07242014_3.patch"

#### 2014-07-25, 02:17:39 - rsingla92
Great thanks! Configuration and generation are good now. Built PlusBuild.sln. and compilation failed due to various errors. 

I've attached a proposed patch file that does the following:

- PlusApp\\InstallFiles.cmake renamed PLUS_USE_DAVINCI to PLUS_USE_IntuitiveDaVinci
- Renamed the daVinci class to be IntuitiveDaVinci
- Added the missing #ifndef guard to the daVinci class
- Various compilation fixes to both classes

For my current build, it sits at linker errors with the ISI API itself. I think this is specific to my machine, and will investigate tomorrow.

Thanks for the help in this ticket!


#### 2014-07-25, 02:17:39 - rsingla92
CommentContent: changed from "Great thanks! Configuration and generation are good now. Built PlusBuild.sln. and compilation failed due to various errors. 

I've attached a proposed patch file that does the following:

- PlusApp\\InstallFiles.cmake renamed PLUS_USE_DAVINCI to" to "Great thanks! Configuration and generation are good now. Built PlusBuild.sln. and compilation failed due to various errors. 

I've attached a proposed patch file that does the following:

- PlusApp\\InstallFiles.cmake renamed PLUS_USE_DAVINCI to"

#### 2014-07-25, 03:53:23 - Andras Lasso
re #916: Merged daVinci interface changes made by Ricky Singla
Commit: r:3544|plus:3544

#### 2014-07-25, 03:59:52 - Andras Lasso
@rsingla92: Thanks! Minor comment on formatting: please use 2 spaces (no tabs) for indentation, as described on the Modifying_Plus_files page.

#### 2014-07-25, 03:59:52 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-07-25, 04:03:24 - rsingla92
Understood. I have a tendency to use Visual Studio's defaults (via ctrl+k, ctrl+f). 

There are going to be a few more changes to this, particularly the IntuitiveDaVinci class, especially as I debug and step through it in practice. Expect a few more patches in the near future.


#### 2014-07-25, 18:22:10 - rsingla92
Curiously, I think there's a CMake step missing still. 

After fixing the compilation issues, the compiler fails to link in the ISI API libraries.Trying to build the PlusLib project in the PlusBuild.sln, the first few messages are:

5>------ Build started: Project: PlusLib, Configuration: Debug Win32 ------
5>Performing update step (SVN update) for 'PlusLib'
5>Updating '.':
5>At revision 3548.
5>Performing configure step for 'PlusLib'
5>-- Current revision is 3548
5>-- Ultrasonix SDK directory: C:/Users/rsingla/devel/plus/trunk/PLTools/Ultrasonix/sdk-5.7.1
5>-- Configuring done
5>-- Generating done
5>CMake Warning:
5>  Manually-specified variables were not used by the project:
5>    IntuitiveDaVinci_INCLUDE_DIR
5>    IntuitiveDaVinci_LIBRARY
5>    PLUS_DOCUMENTATION_SEARCH_SERVER_INDEXED
5>-- Build files have been written to: C:/Users/rsingla/devel/plus-davinci/PlusLib-bin
5>Performing build step for 'PlusLib'
5>Microsoft (R) Visual Studio Version 9.0.30729.1.
5>Copyright (C) Microsoft Corp. All rights reserved.
5>1>------ Build started: Project: vtkDataCollection, Configuration: Debug Win32 ------
5>1>Compiling...
5>1>daVinci.cxx
5>1>c:\\users\singla\\devel\\plus-davinci\\pluslib\\src\\datacollection\\intuitivedavinci\\daVinci.h(13) : fatal error C1083: Cannot open include file: 'isi_api_types.h': No such file or directory
5>1>vtkIntuitiveDaVinciTracker.cxx
5>1>c:\\users\singla\\devel\\plus-davinci\\pluslib\\src\\datacollection\\intuitivedavinci\\daVinci.h(13) : fatal error C1083: Cannot open include file: 'isi_api_types.h': No such file or directory
5>1>vtkPlusDeviceFactory.cxx
5>1>c:\\users\singla\\devel\\plus-davinci\\pluslib\\src\\datacollection\\intuitivedavinci\\daVinci.h(13) : fatal error C1083: Cannot open include file: 'isi_api_types.h': No such file or directory
5>1>Generating Code...
5>1>Build log was saved at 'file://c:\\Users\singla\\devel\\plus-davinci\\PlusLib-bin\\src\\DataCollection\\vtkDataCollection.dir\\Debug\\BuildLog.htm'

which leads me to attribute the linker errors to something in CMake.

Any ideas?


#### 2014-07-25, 18:42:37 - Andras Lasso
re #916: Fixed IntuitiveDaVinci include and lib paths
Commit: r:3549|plus:3549

#### 2014-07-25, 21:13:26 - rsingla92
re #916: Fixing include in vtkPlusDeviceFactory.cxx to find vtkIntuitiveDaVinciTracker.h
Commit: r:3552|plus:3552

#### 2014-07-25, 22:10:10 - rsingla92
Attachment added: "daVinci_07252014_2.patch"

#### 2014-07-25, 22:10:10 - rsingla92
CommentContent: changed from "file:bXtO3afeGr5lFdacwqjQWU
" to null

#### 2014-07-25, 22:12:16 - rsingla92
file:c8AedUfeGr5ik5dmr6bg7m


#### 2014-07-25, 22:12:16 - rsingla92
Attachment added: "daVinci_07252014_2.patch"

#### 2014-07-25, 22:12:18 - rsingla92
I've been able to solve most of my issues, but I'm stuck on a CMake related change. I thought I understood what needed to be changed, but evidently I do not. I also think I'm making the same mistake when editing these files, but am not clear on what that mistake is. 

The ISI library depends on two additional Windows libraries (ws2_32 and iphlpapi).  I thought the attached patch would link those libs in properly, but it doesn't.

Could someone point on what I`m doing wrong in these changes? 


#### 2014-07-25, 23:59:17 - Andras Lasso
re #916: Added missing libraries for davinci build
Commit: r:3555|plus:3555

#### 2014-07-26, 00:02:05 - Andras Lasso
Probably it's enough to add the names of those libraries to the list of linked libraries - see commit 3555. If you have any build problem then copy-paste the error message here.

#### 2014-07-26, 00:20:46 - rsingla92
Well that was simple! Build is good now. Thanks Andras!

#### 2014-07-29, 02:03:36 - rsingla92
re #916: Reading ip addr, port, and password from config file 
re #917: Renaming daVinci class to be in line with naming conventions
Commit: r:3563|plus:3563

#### 2014-08-06, 23:59:50 - rsingla92
re #916: Fixing logic errors. Correcting the transforms naming conventions.
Commit: r:3582|plus:3582

#### 2014-08-07, 00:01:21 - rsingla92
re #916: Correcting daVinci config file to have host information, appropriate reference frame and PlusServer tag
Commit: r:3583|plus:3583

#### 2015-11-25, 14:17:24 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2016-10-26, 01:03:32 - rsingla92
status: changed from "Accepted" to "New"

#### 2016-10-26, 01:03:32 - rsingla92
assigned_to_id: changed from "rsingla92" to null


## #917 General cleanup of da Vinci related classes
Currently the code for da Vinci tracker support do not adhere completely to the Plus coding conventions. This includes the use of printf, whitespace, private variables, etc.

This ticket is to clean up code and adhere to the conventions.

#### 2014-07-25, 04:17:33 - rsingla92
assigned_to_id: changed from null to "rsingla92"

#### 2014-07-25, 04:17:38 - rsingla92
status: changed from "New" to "Accepted"

#### 2014-07-25, 20:49:45 - rsingla92
re #917: Removing printf statements and replacing with LOG macros. Removing unused functions such as saveStreamState.
Commit: r:3550|plus:3550

#### 2014-07-29, 02:03:36 - rsingla92
re #916: Reading ip addr, port, and password from config file 
re #917: Renaming daVinci class to be in line with naming conventions
Commit: r:3563|plus:3563

#### 2015-11-25, 14:17:23 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2016-10-26, 01:04:01 - rsingla92
status: changed from "Accepted" to "New"

#### 2016-10-26, 01:04:11 - rsingla92
assigned_to_id: changed from "rsingla92" to null


## #918 Consolidate ultrasound imaging devices
There are many common properties of ultrasound imaging devices, which should be implemented once and be reused in all the ultrasound imaging device classes.

For example:
- reading of imaging parameters from the config file (allow default values and 'undefined' values)
- setting of imaging parameters in the hardware (set all the defined parameters when connecting to the hardware and allow setting parameters immediately when already connected to the hardware)
- allow notifications to be sent as OpenIGTLink commands (e.g., button pressed on the probe)

vtkUsImagingParameters class is an early attempt which did not really work out. Probably a common base class would be more useful.

#### 2016-07-13, 16:50:45 - Adam Rankin
Closing as fixed. This ticket got lost. The vtkUsImagingParameters is active and functional. the base class vtkPlusUsDevice is active and functional.

#### 2016-07-13, 16:50:45 - Adam Rankin
status: changed from "New" to "Fixed"


## #919 Slicer scene with commands cannot be loaded
See issue here: https://github.com/SlicerIGT/OpenIGTLinkRemote/issues/20


#### 2014-07-25, 17:17:29 - Tamas Ungi
Re #919: Workaround. Removed AnnotationText nodes from MRML file.
Commit: r:3548|plus:3548

#### 2014-07-25, 17:17:29 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2014-07-25, 23:45:46 - Andras Lasso
This is a problem in Slicer and should be fixed in the STRING message node's XML write method. There is nothing to do in Plus.

#### 2014-07-25, 23:45:46 - Andras Lasso
status: changed from "New" to "Invalid"


## #920 NDI Aurora  multiple 5-DOF tools on one connector cannot be accessed
When using 4 pair of 5-DOF tools, each pair using a single connector then only 4 out of 8 tools are accessible.

#### 2014-07-28, 16:09:51 - Jasper Nijkamp
re #920 fixed use of 2 five-degree-of-freedom tools on one Aurora port. Tested the code changes on Aurora and Polaris spectra equipment using active and passive tools. xml file settings are described in vtkNDITracker.h
Commit: r:3558|plus:3558

#### 2014-07-28, 17:19:51 - Andras Lasso
re #920: Fixed whitespaces and typo
Commit: r:3559|plus:3559

#### 2014-07-28, 17:20:39 - Andras Lasso
Thank you very much, this is great contribution.

#### 2014-07-28, 17:20:39 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2016-07-19, 22:00:57 - Andras Lasso
re #920: Added description of multi-channel NDI Aurora tools portname to user manual
Commit: r:4751|plus:4751


## #921 Use the da Vinci logging functionality
Currently very little of the da Vinci logging functions are used. The API does provide some logging, and it is able to tell the API to log to a certain file. This will be helpful in debugging and logging messages in addition to what is logged in PLUS. 


#### 2014-07-29, 17:18:42 - rsingla92
status: changed from "New" to "Accepted"

#### 2014-07-29, 17:27:12 - Andras Lasso
If the API provides a way to send log messages to Plus (e.g., through a callback function) then you can write the messages into the Plus log file. If there is no such mechanism then probably the simplest is specify an additional attribute in the device set config file to allow the user to set log file name.

#### 2015-11-25, 14:17:24 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2016-10-26, 01:03:47 - rsingla92
status: changed from "Accepted" to "New"

#### 2016-10-26, 01:03:47 - rsingla92
assigned_to_id: changed from "rsingla92" to null


## #922 Add minimum clipping fan radius
Add minimum clipping fan radius for volume reconstruction to be able to remove high-intensity pixels near the transducer surface.

#### 2014-08-06, 16:11:15 - Andras Lasso
re #922: Updated clipping fan parameters description in documentation
Commit: r:3576|plus:3576

#### 2014-08-06, 16:25:41 - Andras Lasso
re #922: FanRadiusStartPixel parameter added for volume reconstruction to specify a minimum clipping fan radius

Renamed clipping fan parameters for consistency and clarity: FanRadiusStopPixel (FanDepth is not obsolete), FanOriginPixel (FanOrigin is now obsolete), FanAnglesDeg (FanAngles is now obsolete)
Fixed BuildAndTest.bat for VS2012.
Commit: r:3577|plus:3577

#### 2014-08-06, 16:26:05 - Andras Lasso
status: changed from "New" to "Fixed"


## #923 All volume reconstructions should use an accumulation buffer
- All volume reconstructions should use an accumulation buffer in order to simplify the classes
- The alpha channel is redundant, and may be removed

#### 2014-08-15, 01:41:45 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2014-08-15, 01:42:23 - Thomas Vaughan
Re #923, All volume reconstructions use an accumulation buffer, but the alpha channel has not yet been removed.
Commit: r:3595|plus:3595

#### 2014-08-15, 18:35:22 - Thomas Vaughan
Re #923, No longer store an alpha channel. Can now output the accumulation buffer instead of the alpha channel. Removed functions for exporting to .vtk format, since that is no longer done.
Commit: r:3598|plus:3598

#### 2014-08-15, 18:35:44 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2014-08-16, 14:54:54 - Thomas Vaughan
I've noticed quite a few failed volume reconstructions on CDash since this commit, apparently caused by a segmentation fault.  There doesn't seem to be a pattern to these occurrences, so I don't know if this is a problem or just random errors.

#### 2014-08-16, 15:40:55 - Andras Lasso
Random crash is a huge issue. It has to be fixed ASAP. Can you reproduce it on your computer?

#### 2014-08-16, 15:43:11 - Thomas Vaughan
No, I did about 20 volume reconstructions yesterday, but none of them resulted in a segmentation fault.

What's strange on CDash is that these segmentation faults either happen for all volume reconstructions, or none at all.

#### 2014-08-16, 15:43:11 - Thomas Vaughan
CommentContent: changed from "No, I did about 20 volume reconstructions yesterday, but none of them resulted in a segmentation fault. What's strange is that these segmentation faults either happen for all volume reconstructions, or none at all." to "No, I did about 20 volume reconstructions yesterday, but none of them resulted in a segmentation fault.

What's strange on CDash is that these segmentation faults either happen for all volume reconstructions, or none at all."

#### 2014-08-16, 16:45:27 - Andras Lasso
OK. I see a configuration error on those computers where the tests failed. It may be possible that due to the configuration error the build was incomplete and old version of compiled library was used with the new header. I've fixed the configuration error, so let's see in the next nightly build if the reconstruction error disappears (hopefully it will).

#### 2014-08-17, 13:57:59 - Andras Lasso
The tests look good now, which confirms that it was just a configuration error and not the volume reconstruction algorithm caused the crashes.

#### 2014-08-18, 16:40:20 - Thomas Vaughan
Ok, I'm glad the problem wasn't something more sinister. I'll mark this ticket as fixed.

#### 2014-08-18, 16:40:20 - Thomas Vaughan
status: changed from "Test" to "Fixed"


## #924 The 'Calculation' and 'Compounding' parameters of volume reconstruction should be merged
This simplifies the implementation and use of the volume reconstructor

Possible values:
LATEST - use only the most recent pixel
MEAN - take a (weighted) average of all inserted pixels
MAXIMUM - take only the maximum intensity pixel for each voxel


#### 2014-08-15, 01:39:37 - Thomas Vaughan
summary: changed from "The 'Calculation' and 'Compounding'" to "The 'Calculation' and 'Compounding' parameters of volume reconstruction should be merged"

#### 2014-08-15, 01:39:37 - Thomas Vaughan
description: changed from "" to "This simplifies the impleme..."

#### 2014-08-15, 01:40:04 - Thomas Vaughan
Component: changed from null to "PlusLib"

#### 2014-08-15, 01:40:04 - Thomas Vaughan
assigned_to_id: changed from null to "thomasvaughan"

#### 2014-08-15, 01:41:06 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2014-08-15, 01:41:33 - Thomas Vaughan
status: changed from "Accepted" to "New"

#### 2014-08-15, 18:35:59 - Thomas Vaughan
status: changed from "New" to "Accepted"

#### 2014-08-15, 18:42:37 - Thomas Vaughan
More details for ticket description and intended behaviour

#### 2014-08-15, 18:42:37 - Thomas Vaughan
description: changed from "This simplifies the impleme..." to "This simplifies the impleme..."

#### 2014-08-15, 22:00:41 - Thomas Vaughan
Test #924, Merged the functionality of the 'Compounding' and 'Calculation' parameters in the volume reconstruction config. Both of these tags are now deprecated. Now there is a unified 'CompoundingMode' (renamed 1. to emphasize the difference in how they are used, and 2. to help detect deprecated config file setup). If CompoundingMode is absent from the config, then MEAN is assumed. If Compounding or Calculation are present in the config, then the user will be warned that those are deprecated. I've updated the config files in the test directories, but updates elsewhere will probably be necessary. The LATEST CompoundingMode will need to be tested.
Commit: r:3599|plus:3599

#### 2014-08-15, 22:00:41 - Thomas Vaughan
status: changed from "Accepted" to "Test"

#### 2014-08-16, 12:48:57 - Andras Lasso
re #924: Fixed build error. Next time check the build of PlusApp, too, when modifying header files.
Commit: r:3602|plus:3602

#### 2014-08-16, 14:25:27 - Thomas Vaughan
Oops! Sorry, I'll make sure to do that next time.

#### 2014-08-18, 16:53:05 - Thomas Vaughan
Re #890, re #924 Put 0.125 into a variable, added comment explaining choice.
Commit: r:3605|plus:3605

#### 2014-08-18, 18:09:15 - Thomas Vaughan
Re #890, re #924 Updating volume reconstruction .dox
Commit: r:3608|plus:3608

#### 2014-08-18, 19:19:24 - Thomas Vaughan
Re #890, re #924, Updating all config files to use the updated xml tag
Commit: r:3609|plus:3609

#### 2014-08-18, 20:25:48 - Thomas Vaughan
Re #890, re #924 Make it so that, if CompoundingMode is not specified, then a reasonable guess is made (and a warning output). If the deprecated Calculation and Compounding are present, then those are used to help make this guess.
Commit: r:3610|plus:3610

#### 2014-08-18, 21:36:28 - Thomas Vaughan
Re #890, re #924 Reimplemented the volume reconstruction tests. All combinations of interpolation and compounding are tested. Some have hole filling and others do not. Names are clearer now and would help narrow down specific problems.
Commit: r:3612|plus:3612

#### 2014-08-18, 23:33:18 - Thomas Vaughan
Re #890, re #924 Updating the documentation. Explain effects of changing compounding mode. Updated example config files to new versions.
Commit: r:3614|plus:3614

#### 2014-08-22, 01:22:57 - Thomas Vaughan
Things look ok on the dashboard, so I'll close the ticket.

#### 2014-08-22, 03:40:14 - Andras Lasso
thanks!


## #925 Make PlusServer more robust in serving multiple clients
Reject commands that are not valid in the current state (e.g., start recording, while recording is already in progress).

#### 2014-08-20, 03:01:29 - Andras Lasso
re #925: Made recording and volume reconstruction commands more robust for multiple clients
Commit: r:3618|plus:3618

#### 2014-08-20, 06:00:59 - Andras Lasso
re #925: Report error if trying to stop and already stopped recording or reconstruction. Also made PlusServer to quit only if ctrl-c is pressed (when 'q' was pressed in any window it exited, which may cause the server to be closed unintentionally).
Commit: r:3619|plus:3619

#### 2015-06-17, 15:44:33 - Andras Lasso
It's been fixed already.

#### 2015-06-17, 15:44:33 - Andras Lasso
milestone_id: changed from "Continuous activities" to "Plus-2.3.0"

#### 2015-06-17, 15:44:33 - Andras Lasso
status: changed from "New" to "Fixed"


## #926 Crash when updating a transform through PlusRemote


#### 2014-08-22, 00:17:38 - Andras Lasso
fixed #926: Fixed crash when updating transform from PlusRemote
Commit: r:3628|plus:3628

#### 2014-08-22, 00:17:38 - Andras Lasso
status: changed from "New" to "Fixed"


## #927 Improve remote control of PlusServer through OpenIGTLink
This is a collector ticket for many small improvements in PlusServer remote controlling

#### 2014-08-22, 14:31:35 - Andras Lasso
re #927: Added more accurate response to the remote client about volume reconstruction problems
Commit: r:3630|plus:3630

#### 2014-08-23, 05:22:24 - Andras Lasso
re #927: Fixed build error
Commit: r:3635|plus:3635

#### 2014-08-23, 13:34:39 - Andras Lasso
re #927: Fixed build error
Commit: r:3636|plus:3636

#### 2014-09-27, 19:18:45 - Andras Lasso
No more improvements seem to be necessary for now.

#### 2014-09-27, 19:18:45 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2017-08-04, 03:56:46 - Andras Lasso
re #927: Improved volume reconstructor log messages

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/02ee165b8751eb455a9a445f29959bcccff4e8c0|plus:02ee165b87


## #928 Device set selector combo box order seems random
The device names seem to be in random order in the combo box. They are alphabetically ordered by file name, but most users are not aware of file names. It should probably be ordered by device set name (alphabetically).

#### 2014-09-24, 00:04:26 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-24, 00:04:33 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-09-24, 00:05:29 - Andras Lasso
fixed #928: Sort items in device set selector alphabetically
Commit: r:3716|plus:3716

#### 2014-09-24, 00:05:29 - Andras Lasso
status: changed from "New" to "Fixed"


## #929 Add parts and markers for fixture system
Plus Fixture System will be a set of printable tools that interface between objects and tracking markers.

Talked with Claron, and they suggested
* Marker holders can be thinner to reduce weight of fixtures. Down to 2 mm.
* An orthogonal stabilizer on the back of the marker holders can run down like a triangle from the fixing point.
* Lots of material between the cross markers could be removed.
* Marker holders with orthogonal faces can be configured so that marker works with the tracker from any direction.
* Sterilizer compatible markers can be machined for about 500 dollars each. If we need this, they can give a contact.

Todo:
* Marker holder in 4 orientations (STL)
* 0.1 mm tolerance needed on all sides for plugging in. (Tried 0.05 and it was too tight.)



#### 2014-08-22, 21:48:05 - Tamas Ungi
Re #929: Adding CAD models for simulated ultrasound probe and attachable Micron Tracker holder.
Commit: r:3631|plus:3631

#### 2014-08-22, 21:59:47 - Tamas Ungi
Re #929: Adding printable marker design.
Commit: r:3632|plus:3632

#### 2014-08-22, 22:06:25 - Tamas Ungi
Re #929: Printable markers update with gridlines.
Commit: r:3633|plus:3633

#### 2014-08-23, 01:35:05 - Tamas Ungi
Fixed #929: Adding stylus model and markers.
Commit: r:3634|plus:3634

#### 2014-08-23, 01:35:05 - Tamas Ungi
status: changed from "New" to "Fixed"

#### 2014-09-04, 21:40:35 - Tamas Ungi
summary: changed from "Add parts and markers for Micron Tracker" to "Add parts and markers for fixture system"

#### 2014-09-04, 21:40:35 - Tamas Ungi
description: changed from "Import CAD design of marker..." to "Import CAD design of marker..."

#### 2014-09-04, 21:40:42 - Tamas Ungi
status: changed from "Fixed" to "Accepted"

#### 2014-09-04, 21:41:26 - Tamas Ungi
Re #929: Started to work on fixtures.
Commit: r:3654|plus:3654

#### 2014-09-05, 00:09:46 - Tamas Ungi
description: changed from "Import CAD design of marker..." to "Import CAD design of marker..."

#### 2014-09-05, 02:21:11 - Tamas Ungi
Re #929: Added 10cm and 6cm stylus.

Commit: r:3655|plus:3655

#### 2014-09-05, 03:44:42 - Tamas Ungi
Re #929: Added another marker holder.
Commit: r:3656|plus:3656

#### 2014-09-06, 17:54:48 - Andras Lasso
Thank you, we almost have everything that we need. Could you please also:
* export an STL model of the sensor holder (maybe with little wings and a little hole in the wing to make it easier to glue it to objects, if you add wings then create 3 versions, with the wings on a side, a neighbor side, and the bottom)
* rename all cm values to mm (it will become unmaintainable if we keep using two length units), also make sure that 'mm' is always included or never included in the name (now in some filenames it's included while in others it is not)



#### 2014-09-06, 17:54:48 - Andras Lasso
CommentContent: changed from "Thank you, we almost have everything that we need. Could you please also:
* export an STL model of the sensor holder (maybe with little wings and a little hole in the wing to make it easier to glue it to objects)
* rename all cm values to mm (it will" to "Thank you, we almost have everything that we need. Could you please also:
* export an STL model of the sensor holder (maybe with little wings and a little hole in the wing to make it easier to glue it to objects, if you add wings then create 3 versions,"

#### 2014-09-07, 00:43:01 - Tamas Ungi
Re #929: Consistent naming, added a few more holders.
Commit: r:3659|plus:3659

#### 2014-09-07, 20:17:56 - Tamas Ungi
Re #929: Added parts and a concept assembly for scoliosis.
Commit: r:3660|plus:3660

#### 2014-09-07, 23:19:42 - Tamas Ungi
Re #929: Added parts.
Commit: r:3661|plus:3661

#### 2014-09-08, 13:42:47 - Andras Lasso
re #929: Moved text on markers out of the vector lines (MicronTracker detects x-marks in the text and it interferes with the marker learning process)
Commit: r:3662|plus:3662

#### 2014-09-08, 13:54:24 - Andras Lasso
re #929: Added rendered model image of a tracking fixture
Commit: r:3663|plus:3663

#### 2014-09-08, 14:04:31 - Andras Lasso
re #929: Added rendered model image of all tracking fixtures
Commit: r:3664|plus:3664

#### 2014-09-08, 14:07:31 - Andras Lasso
re #929: Fixed rendered model image of all tracking fixtures
Commit: r:3665|plus:3665

#### 2014-09-08, 15:33:32 - Andras Lasso
re #929: Added rendered model of the simulated linear probe
Commit: r:3666|plus:3666

#### 2014-09-08, 15:47:23 - Andras Lasso
re #929: Added rendered model of fCal 2 and 3 phantoms
Commit: r:3667|plus:3667

#### 2014-09-08, 18:59:55 - Tamas Ungi
description: changed from "Import CAD design of marker..." to "Import CAD design of marker..."

#### 2014-09-08, 19:00:14 - Tamas Ungi
description: changed from "Import CAD design of marker..." to "Import CAD design of marker..."

#### 2014-09-09, 03:11:07 - Tamas Ungi
Re #929: Taking into account printing layer direction and printer precision (0.1 mm tolerance).
Commit: r:3668|plus:3668

#### 2014-09-09, 03:19:46 - Tamas Ungi
Re #929: Updated scoliosis concept.
Commit: r:3669|plus:3669

#### 2014-09-10, 03:43:29 - Tamas Ungi
Re #929: New stylus models compatible with printing layers.
Commit: r:3671|plus:3671

#### 2014-09-10, 04:45:49 - Tamas Ungi
Re #929: STL version was missing.
Commit: r:3672|plus:3672

#### 2014-09-10, 05:20:35 - Tamas Ungi
Re #929: Removed old stylus models.
Commit: r:3673|plus:3673

#### 2014-09-15, 15:34:03 - Tamas Ungi
description: changed from "Import CAD design of marker..." to "Plus Fixture System will be..."

#### 2014-09-25, 14:19:45 - Jaime Garcia Guevara
3D printed stylus is pretty good still sometimes might be worth to put at the end a metal tip, sharper and that does not break. Coz the one left has pivot so many times that the tip is not so sharp anymore.

#### 2014-10-01, 14:16:44 - Andras Lasso
Need to clean up file names (add version number or do not add version number anywhere, make - and _ use consistent, uppercase/lowercase consistent)

#### 2014-10-01, 14:16:44 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-10-01, 14:16:44 - Andras Lasso
assigned_to_id: changed from "ungi" to "lassoan"

#### 2014-10-01, 14:16:44 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-10-01, 22:29:43 - Tamas Ungi
Re #929: Adding sensor holder as ordered part. This allows change of features like thickness of different walls.
Commit: r:3765|plus:3765

#### 2014-10-01, 23:11:55 - Tamas Ungi
Re #929: Adding reference marker holder for spine ultrasound. Working towards thinner pieces.
Commit: r:3766|plus:3766

#### 2014-10-03, 21:18:14 - Andras Lasso
@ungi: Please also change the L-shape marker holder shaft to have two flat sides (that allows the marker to be glued on either side).

#### 2014-10-03, 21:18:28 - Andras Lasso
assigned_to_id: changed from "lassoan" to "ungi"

#### 2014-10-05, 04:11:43 - Tamas Ungi
Re #929: L-shaped plug now two sided. Added holes for stronger glueing.
Commit: r:3797|plus:3797

#### 2014-10-09, 02:28:46 - Tamas Ungi
Re #929: Added holes for fixation. Chosen 4 mm (5/32 in) hole size.
Commit: r:3816|plus:3816

#### 2014-10-15, 15:58:49 - Tamas Ungi
Re #929: First draft of needle holder added.
Commit: r:3821|plus:3821

#### 2014-10-24, 01:27:19 - Tamas Ungi
Re #929: This is the first generation of flappy needle grabbers. (Forgot to commit it last week.)
Commit: r:3823|plus:3823

#### 2014-10-29, 00:08:24 - Tamas Ungi
Re #929: Added parts for surgery.
Commit: r:3826|plus:3826

#### 2014-10-29, 20:06:32 - Tamas Ungi
Re #929: Started working on needle holder clip.
Commit: r:3827|plus:3827

#### 2014-10-29, 23:32:12 - Tamas Ungi
Re #929: Needle clip, first version added.
Commit: r:3828|plus:3828

#### 2014-10-31, 05:13:18 - Tamas Ungi
Re #929: Improving needle clip, because it didn't clip today.
Commit: r:3829|plus:3829

#### 2014-11-05, 04:05:20 - Tamas Ungi
Re #929: Updated surgery fixtures.
Commit: r:3831|plus:3831

#### 2014-11-06, 22:23:54 - Tamas Ungi
Re #929: Last needle clip broke at first test. So made it more flexible.
Commit: r:3838|plus:3838

#### 2014-11-21, 05:02:03 - Tamas Ungi
Re #929: Updated surgery fixtures.
Commit: r:3856|plus:3856

#### 2014-11-27, 17:18:23 - Andras Lasso
re #929: Added simple tool for rendering tracking fixtures for catalog

All catalog images can be generated by a similar batch script:
set RENDER=c:\\Users\\Andras\\devel\\PlusExp-bin\\bin\elease\\ModelRenderer.exe
forfiles /m *.stl /c '%RENDER% ModelRenderer --model-file=@path --output-image-file=@fname.png'

Commit: r:3864|plus:3864

#### 2014-11-27, 17:35:38 - Tamas Ungi
Re #929: Shorter candy cane stylus. Removing log files.
Commit: r:3865|plus:3865

#### 2014-11-27, 22:18:29 - Andras Lasso
re #929: Added automatic 3D model catalog generation
Commit: r:3866|plus:3866

#### 2014-11-28, 03:26:10 - Andras Lasso
re #929: Moved all 3D models to a new subproject for automatic catalog generation
Commit: r:3867|plus:3867

#### 2014-11-28, 03:51:47 - Tamas Ungi
How do I find the new place of the models?

#### 2014-11-28, 03:53:09 - Andras Lasso
https://www.assembla.com/code/plus/subversion/nodes/3867/trunk/PlusModelCatalog

#### 2014-11-28, 04:46:21 - Andras Lasso
re #929: Added automatic model image rendering from STL
Commit: r:3868|plus:3868

#### 2014-11-28, 05:03:38 - Andras Lasso
re #929: Added option for Model Catalog generation from PlusBuild (PLUSBUILD_BUILD_PLUSMODELCATALOG)
Commit: r:3869|plus:3869

#### 2014-11-28, 05:39:33 - Andras Lasso
re #929: Added batch file for regeneration of model catalog
Commit: r:3870|plus:3870

#### 2014-11-28, 06:14:18 - Andras Lasso
re #929: Set catalog index filename to index.html
Commit: r:3871|plus:3871

#### 2014-11-28, 06:35:11 - Andras Lasso
re #929: Moved candycane stylus to tool category
Commit: r:3872|plus:3872

#### 2014-11-28, 06:43:18 - Andras Lasso
@ungi: FYI

The model catalog is regenerated automatically every night and uploaded to: http://perk-software.cs.queensu.ca/plus/doc/nightly/modelcatalog/ (linked from the Download section)

To build the model catalog on your PC: configure PlusBuild and enable PLUSBUILD_BUILD_PLUSMODELCATALOG option. Then build the top-level project file. To regenerate the catalog after some changes, run Plus-bin\\PlusModelCatalog-bin\\CreateModelCatalog.bat

To add/remove a model to the catalog or change descriptions edit the Plus-bin\\PlusModelCatalog\\CatalogContents.cmake file. Any committed change will automatically appear on the Plus website the next day.

#### 2014-12-01, 01:38:46 - Tamas Ungi
Re #929: Removing old, unstable needle clip.
Commit: r:3874|plus:3874

#### 2014-12-01, 01:46:53 - Andras Lasso
Please also remove the deleted items from the catalog (Plus-bin\\PlusModelCatalog\\CatalogContents.cmake).

#### 2014-12-01, 05:41:25 - Tamas Ungi
Re #929: Updated some part descriptions.
Commit: r:3875|plus:3875

#### 2014-12-01, 05:42:03 - Tamas Ungi
I think the ones I removed did not have a description in the CatalogContents. Please let me know if I missed something.

#### 2014-12-01, 16:00:26 - Andras Lasso
re #929: Fixed model catalog (changed ID's according to renamed model files)
Commit: r:3876|plus:3876

#### 2014-12-01, 16:02:05 - Andras Lasso
re #929: Removed obsolete MicronTracker tracking fixtures
Commit: r:3877|plus:3877

#### 2014-12-08, 19:00:25 - Andras Lasso
3D model catalog is up and running:
http://perk-software.cs.queensu.ca/plus/doc/nightly/modelcatalog/

#### 2014-12-08, 19:00:42 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2016-08-05, 20:33:34 - Andras Lasso
re #929: Added models of US probes and a human model. Also cleaned up the catalog (mostly removed unnecessary fields).
Commit: r:4787|plus:4787

#### 2016-08-06, 11:53:58 - Andras Lasso
re #929: Fixed link to STL from image
Commit: r:4789|plus:4789

#### 2016-08-06, 12:03:46 - Andras Lasso
re #929: Fixed SimpleHuman model orientation
Commit: r:4790|plus:4790

#### 2016-08-08, 13:55:41 - Andras Lasso
re #929: Added Telemed L12 probe model and Bard needle model
Commit: r:4792|plus:4792

#### 2016-08-11, 21:06:41 - Tamas Ungi
Re #929: Added model and CT image for lumbar spine phantom.
Commit: r:4795|plus:4795

#### 2016-12-06, 15:25:31 - Andras Lasso
re #929: Fixed origin of stylus and catuery models. Added generic cautery model.
Commit: r:4962|plus:4962


## #930 Ultrasound simulator should not broadcast image when image to reference transform is unavailable
When using optical tracking, when the probe or reference marker is not visible, a large noisy image appears at the origin (instead of a normal image).
Not send an image if a valid image cannot be sent,.

#### 2014-08-26, 04:14:49 - Andras Lasso
re #930: No simulated image is broadcasted if image to reference transform is invalid
Commit: r:3639|plus:3639

#### 2014-08-26, 04:32:09 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-09-23, 19:55:47 - Andras Lasso
re #930: Updated fCal_3.1.stl to have the model origin in the phantom origin (inside end of the A5 hole on the front)
Commit: r:3710|plus:3710

#### 2014-09-23, 19:58:20 - Andras Lasso
re #930: Removed obsolete fCal_3.0 model
Commit: r:3711|plus:3711

#### 2014-10-07, 19:03:25 - Andras Lasso
status: changed from "Test" to "Fixed"


## #931 Auto-detect actual clipping fan angles
When a curvilinear transducer is used, often only a part of the transducer touches the skin surface. Areas where the transducer does not touch the skin surface appear black, which may cause artifacts in the volume reconstruction.

Check the image contents and determine the actual fan angle range where there is proper acoustic coupling and exclude the black areas.

#### 2014-08-28, 03:09:53 - Andras Lasso
re #931: Added automatic fan detection algorithm developed by Rahul Sastry (BWH). Added tests and diagnostic tool (DrawClipRegion). The algorithm does not seem to work yet, maybe due lack of parameter tuning.
Commit: r:3641|plus:3641

#### 2014-08-28, 17:10:22 - Andras Lasso
test #931: Cleaned up and fixed automatic fan detection algorithm
Commit: r:3642|plus:3642

#### 2014-08-28, 17:10:22 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-09-02, 13:23:00 - Andras Lasso
re #931: Cleaned up and fixed automatic fan detection algorithm
Commit: r:3646|plus:3646

#### 2014-09-02, 13:25:43 - Andras Lasso
re #931: Fixed ROI editing and display in fCal. Don't show fiducials in fCal during spatial calibration if fiducials are not detected on the frame.
Commit: r:3647|plus:3647

#### 2014-09-03, 15:55:05 - Andras Lasso
fixed #931: Added automatic test for fan angle auto detection

Also added a new operation to EditSeqMetaFile: decimation (keep every N-th frame).
Commit: r:3650|plus:3650

#### 2014-09-03, 15:55:05 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-09-03, 16:08:13 - Andras Lasso
re #931: Added link to demo video
Commit: r:3651|plus:3651

#### 2016-12-27, 02:24:21 - Andras Lasso
re #931: Fixed volume reconstructor parameter name EnableFanAnglesAutoDetect (EnableFanAngleAutoDetect is obsolete)
Commit: r:4999|plus:4999


## #932 Make spatial calibration marker visibility errors more obvious
If optical tracker is used then during spatial calibration a marker may become not visible and the calibration process may stall. Show a clear warning message if this is the problem.

#### 2014-09-04, 15:52:28 - Andras Lasso
re #932: Prevent spatial calibration on a tracked frame list that includes invalid transforms
Commit: r:3652|plus:3652

#### 2014-09-04, 15:53:19 - Andras Lasso
re #932: Show warning if a required optical marker is out of view during spatial calibration
Commit: r:3653|plus:3653

#### 2014-09-22, 01:57:16 - Andras Lasso
status: changed from "New" to "Fixed"


## #933 PlusServer crash if invalid clip rectangle defined for Epiphan
if clip rectangle does not fit in the image then PlusServer crashes

we should log an error instead

#### 2014-09-11, 18:37:52 - Andras Lasso
re #933: Added error message if too large clipping region is defined for Epiphan
Commit: r:3676|plus:3676

#### 2014-09-22, 01:56:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #934 Tool status is invalid after going out of view
I tested the out of view problems on the latest build of plusserver with SendValidTransformsOnly set to false.

I have a setup in which I track two different optical trackers using the NDI Polaris Hybrid system. At a certain time point during tracking I occlude one of the trackers to make sure it is not visible anymore on the camera. A short while later I make sure the tracker is visible again. In the case of the Polaris system, Plusserver stops providing transforms for both trackers as soon as one is occluded and functionality does not return when both sensors are visible again. So actually, as soon as one sensor is out of view, the system stops providing tracking data for all sensors.

Source: PluslogPolaris.txt (see attachment)
For Polaris Spectra at line 1784 we see that one of the optical sensors is out of view:
Line 1784: 090914_121438.203|DEBUG|022.565000| Polaris-SensorsToPolaris: vtkPlusBuffer: Cannot do data interpolation. The closest item to the requested time (time: 7222.545000, uid: 200) is invalid.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1019)

After which plus tries to get the trackerbuffer at timestamp 14422.5 which is not available, even when the sensor is back in sight.

Line 1787: 090914_121438.223|TRACE|022.585000| vtkPlusDevice::GetTrackedFrameList(14422.5, 1)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(581)

Line 1790: 090914_121438.247|ERROR|022.609000| Failed to get tracker buffer item by timestamp 14422.5. Item not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(705)

I perform the exact same experiment with the NDI Aurora tabletop field generator. Here I track four 6DOF sensors. During tracking I move one of the sensors out of the magnetic field. Plusserver stops sending tracking information for all sensors as soon as one is out of view. As soon as all sensors are back within the EM field Plusserver behaves normally again, and provides actual tracking data.

Source: PluslogAurora.txt (see attachment)
For Aurora Tabletop Fieldgenerator at line 6193 one of the sensors is out of view. At line 6846 Plusserver function goes back to normal.

So in both systems tracking information stops when only one sensor/tracker is out of view. I have a working sollution in which I send a unity matrix for sensors which are out of view. It works fine for me, since it is easy to test if a matrix is unity. But given the comments above better sollutions might be available. Please help.

Thanks, Jasper 

See logs at
https://www.assembla.com/spaces/plus/messages/4585714

#### 2014-09-16, 12:41:16 - Andras Lasso
@jaspernijkamp: You have LocalTimeOffsetSec='7200.0' in the config file, which is a huge number (2 hours - while this time offset is typically a small fraction of a second). Can you reproduce the error if you set the LocalTimeOffsetSec to 0 or a small value (0.1 or -0.1)?

#### 2014-09-16, 12:41:16 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-09-16, 12:41:54 - Andras Lasso
description: changed from "I tested the out of view pr..." to "I tested the out of view pr..."

#### 2014-09-16, 13:09:45 - Andras Lasso
It seems that the timestamp is computed incorrectly (local time offset applied twice?) after a tool is out of view: timestamps are around 7261 (7200 is the local time offset) and then suddenly timestamps are searched around (14461, which is 7200 more).

090914_123158.691|TRACE|061.162000| vtkPlusChannel::GetNumberOfFramesBetweenTimestamps(7261.13, 7261.13)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(1288)
090914_123158.697|DEBUG|061.167000| TrackerDevice-EM_1ToAurora: vtkPlusBuffer: Cannot do data interpolation. The closest item to the requested time (time: 7261.133000, uid: 395) is invalid.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1019)
090914_123158.704|DEBUG|061.175000| TrackerDevice-EM_1ToAurora: vtkPlusBuffer: Cannot do data interpolation. The closest item to the requested time (time: 7261.133000, uid: 395) is invalid.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1019)
090914_123158.713|TRACE|061.184000| Number of added frames: 1 out of 1|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(760)
090914_123158.717|DEBUG|061.188000| TrackerDevice-EM_1ToAurora: vtkPlusBuffer: Cannot do data interpolation. The closest item to the requested time (time: 7261.133000, uid: 395) is invalid.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1019)
090914_123158.726|DEBUG|061.196000| TrackerDevice-EM_2ToAurora: vtkPlusBuffer: Cannot get any item from the data buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1000)
090914_123158.733|WARNING|061.204000| TrackerDevice-EM_2ToAurora: vtkPlusBuffer: Cannot get any item from the buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1153)
090914_123158.740|ERROR|061.211000| TrackerDevice-EM_2ToAurora: vtkPlusBuffer: Failed to get data buffer timestamp (time: 14461.133000)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1193)
090914_123158.746|ERROR|061.217000| EM_2ToAurora: Failed to get tracker item from buffer by time: 14461.133000 (Latest timestamp: 7261.133000   Oldest timestamp: 7221.855000).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(513)
090914_123158.754|DEBUG|061.225000| TrackerDevice-EM_3ToAurora: vtkPlusBuffer: Cannot get any item from the data buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1000)
090914_123158.763|WARNING|061.233000| TrackerDevice-EM_3ToAurora: vtkPlusBuffer: Cannot get any item from the buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1153)
090914_123158.769|ERROR|061.240000| TrackerDevice-EM_3ToAurora: vtkPlusBuffer: Failed to get data buffer timestamp (time: 14461.133000)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1193)
090914_123158.776|ERROR|061.246000| EM_3ToAurora: Failed to get tracker item from buffer by time: 14461.133000 (Latest timestamp: 7261.238000   Oldest timestamp: 7221.855000).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(513)
090914_123158.783|DEBUG|061.254000| TrackerDevice-EM_4ToAurora: vtkPlusBuffer: Cannot get any item from the data buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1000)
090914_123158.790|WARNING|061.261000| TrackerDevice-EM_4ToAurora: vtkPlusBuffer: Cannot get any item from the buffer for time: 14461.133000. Item is not available yet.|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1153)
090914_123158.799|ERROR|061.269000| TrackerDevice-EM_4ToAurora: vtkPlusBuffer: Failed to get data buffer timestamp (time: 14461.133000)|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusBuffer.cxx(1193)
090914_123158.805|ERROR|061.275000| EM_4ToAurora: Failed to get tracker item from buffer by time: 14461.133000 (Latest timestamp: 7261.238000   Oldest timestamp: 7221.855000).|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(513)
090914_123158.812|ERROR|061.283000| Unable to get tracked frame by time: 7261.133000|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(779)
090914_123158.816|ERROR|061.287000| Failed to get tracked frame list from data collector (last recorded timestamp: 7261.038000|in ..\\..\\..\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(437)
090914

#### 2014-09-16, 21:19:44 - Andras Lasso
@garciaguevara: could you please check if you can reproduce this issue here with Polaris or Aurora, with the config file that is attached here
https://www.assembla.com/spaces/plus/messages/4585714

#### 2014-09-16, 21:19:44 - Andras Lasso
assigned_to_id: changed from "lassoan" to "garciaguevara"

#### 2014-09-16, 21:19:44 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2014-09-17, 07:29:48 - Jasper Nijkamp
Hi Guys,

Thanks for the help. The problem actually seems to be related to the localtimeoffsetsec. It occurs only when the localtimeoffsetsec is larger than the time spent to get one sample. So if I use a framerate of 10, the problem occurs when the offset is 0.1 or larger.

Jasper

#### 2014-09-17, 07:29:48 - Jasper Nijkamp
assigned_to_id: changed from "garciaguevara" to "jaspernijkamp"

#### 2014-09-17, 07:29:48 - Jasper Nijkamp
status: changed from "New" to "Test"

#### 2014-10-01, 19:55:42 - Andras Lasso
assigned_to_id: changed from "jaspernijkamp" to "lassoan"

#### 2014-10-01, 19:55:42 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2015-05-23, 01:58:42 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #935 PlusRemote recon button hangs after 2nd run
I used the offline reconstruction button to recon two different volumes. After the 1st, the button was grayed but I could click once to reactivate and then again to run. After the 2nd recon, the volume was loaded but the button is permanently grayed out with 'Offline Reconstruction in progress'. The volume recon did complete and load into Slicer. Using Slicer 2014-09-01

#### 2014-09-16, 14:43:46 - Isaiah Norton
Perhaps this is why, from the Slicer log:



~~~~

Traceback (most recent call last):
  File 'C:/Users/in016/AppData/Roaming/NA-MIC/Extensions-23642/SlicerIGT/lib/Slicer-4.3/qt-scripted-modules/PlusRemote.py', line 1381, in getCommandReply
    responseCallback(commandId, textNode)
  File 'C:/Users/in016/AppData/Roaming/NA-MIC/Extensions-23642/SlicerIGT/lib/Slicer-4.3/qt-scripted-modules/PlusRemote.py', line 1053, in onVolumeReconstructed
    commandResponse=textNode.GetText(0)
AttributeError: 'NoneType' object has no attribute 'GetText'

~~~~


#### 2014-09-16, 14:48:19 - Isaiah Norton
I don't want restart Slicer (in case) so worked around using:
<code>
slicer.modules.PlusRemoteWidget.offlineReconstructButton.setEnabled(1)
</code>
which allowed to recon again (have to call after each recon).



#### 2014-09-16, 14:48:19 - Isaiah Norton
CommentContent: changed from "I don't want restart Slicer (in case) so worked around using:

~~~~

slicer.modules.PlusRemoteWidget.offlineReconstructButton.setEnabled(1)

~~~~


which allowed to recon again (have to call after each recon).

" to "I don't want restart Slicer (in case) so worked around using:
<code>
slicer.modules.PlusRemoteWidget.offlineReconstructButton.setEnabled(1)
</code>
which allowed to recon again (have to call after each recon).

"

#### 2014-09-16, 14:55:31 - Andras Lasso
How long did the reconstruction take? (maybe the waiting for response was timed out)
Can you attach the full logs? (if you use a recent version of Slicer then go to menu: Help / Report a bug and choose the error log from the list).

#### 2014-09-16, 14:55:38 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2014-09-16, 14:55:43 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2014-09-16, 14:55:51 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-09-16, 15:00:17 - Isaiah Norton
Around 1 minute each time (1.5-2.5 GB recordings).

I don't have that option, but I selected all messages from View->Error Log, after I click the button:


~~~~

Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line 131
vtkObserverManager (0000000010358D50): Setting the same object should be a no-op.


Traceback (most recent call last):
  File 'C:/Users/in016/AppData/Roaming/NA-MIC/Extensions-23642/SlicerIGT/lib/Slicer-4.3/qt-scripted-modules/PlusRemote.py', line 1381, in getCommandReply
    responseCallback(commandId, textNode)
  File 'C:/Users/in016/AppData/Roaming/NA-MIC/Extensions-23642/SlicerIGT/lib/Slicer-4.3/qt-scripted-modules/PlusRemote.py', line 1053, in onVolumeReconstructed
    commandResponse=textNode.GetText(0)
AttributeError: 'NoneType' object has no attribute 'GetText'

ERROR: In ..\\..\\..\\..\\..\\OpenIGTLinkIF\\MRML\\vtkMRMLIGTLConnectorNode.cxx, line 890
vtkMRMLIGTLConnectorNode (000000000DEACE30): Only read -1 but expected to read 1310792



Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line 131
vtkObserverManager (0000000010358D50): Setting the same object should be a no-op.


Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line 131
vtkObserverManager (0000000010358D50): Setting the same object should be a no-op.


qSlicerVolumeResliceDriverModuleWidget::onLayoutChanged 
qSlicerVolumeResliceDriverModuleWidget::onLayoutChanged 
qSlicerVolumeResliceDriverModuleWidget::onLayoutChanged 
qSlicerVolumeResliceDriverModuleWidget::onLayoutChanged 

~~~~


#### 2014-09-16, 15:00:17 - Isaiah Norton
CommentContent: changed from "Around 1 minute each time (1.5-2.5 GB recordings).

I don't have that option, but I selected all messages from View->Error Log, after I click the button:

<code>
Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line" to "Around 1 minute each time (1.5-2.5 GB recordings).

I don't have that option, but I selected all messages from View->Error Log, after I click the button:


~~~~

Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line"

#### 2014-09-16, 15:00:17 - Isaiah Norton
CommentContent: changed from "Around 1 minute each time (1.5-2.5 GB recordings).

I don't have that option, but I selected all messages from View->Error Log, after I click the button:


~~~~

Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line" to "Around 1 minute each time (1.5-2.5 GB recordings).

I don't have that option, but I selected all messages from View->Error Log, after I click the button:


~~~~

Warning: In ..\\..\\..\\..\\..\\Slicer-1\\Libs\\MRML\\Core\\vtkObserverManager.cxx, line"

#### 2014-09-16, 15:08:43 - Andras Lasso
OK, so it's a timeout problem then (in case of a timeout the error is not handled properly). I'll commit a fix soon.

Have you tried the live volume reconstruction option? It can give you the reconstructed volume in a few seconds after the recording has completed (actually it sends partially completed volumes during reconstruction). The live volume reconstruction can work in parallel with recording, so you can have your original frames as well (just test if the computer is fast enough to cope with these simultaneously). We may add an option to always save the raw frames, too, when doing live reconstruction.

#### 2014-09-16, 15:08:43 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2014-09-16, 15:12:16 - Isaiah Norton
yeah it looks like you just need a check if textNode is None here
https://github.com/SlicerIGT/PlusRemote/blob/b88ace21493a6541847868fc037f3f00d55a07ef/PlusRemote.py#L1052

#### 2014-09-16, 15:16:02 - Isaiah Norton
I have not tried live recon. I think Alireza tested a little bit. I will try if they acquire again later.

#### 2014-09-16, 21:16:57 - Andras Lasso
Fixed in this commit: https://github.com/SlicerIGT/PlusRemote/commit/8c533c9eeae0982b8f142b1c0347ba321d28fc12


#### 2014-09-16, 21:16:57 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #936 Fix landmark position definitions and origin in fCal-3.1 phantom
There are small errors in the fCal-3.1 phantom landmark and coordinate system definition.

#### 2014-09-23, 20:00:09 - Andras Lasso
re #936: Updated fCal_3.1.stl to have the model origin in the phantom origin (inside end of the A5 hole on the front)

Commit: r:3712|plus:3712

#### 2014-09-23, 20:00:26 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-09-23, 20:07:53 - Andras Lasso
re #936: Updated fCal_3.1 descriptions to have the model origin in the phantom origin (inside end of the A5 hole on the front)
Commit: r:3713|plus:3713

#### 2014-10-06, 21:16:40 - Andras Lasso
status: changed from "Test" to "Fixed"


## #937 Fix DiagDataCollection tool to work with multiple channels
Now DiagDataCollection tool is hardcoded to work with two channels, with a specific name.

#### 2014-09-24, 13:54:44 - Andras Lasso
re #937: Fixed timestamp reporting
Commit: r:3717|plus:3717

#### 2014-09-24, 13:55:20 - Andras Lasso
re #937: Fixed DiagDataCollection to work with mutiple channels
Commit: r:3718|plus:3718

#### 2014-09-24, 13:55:53 - Andras Lasso
status: changed from "New" to "Fixed"


## #938 Add a separate set of styluses (Stylus_60mm, Stylus_100mm) with a hole at the tip, where we can glue a pin/nail.
3D printed stylus is pretty good still sometimes might be worth to put at the end a metal tip, sharper and that does not break. Because the one used has been pivoted so many times that the tip is not so sharp anymore.

#### 2014-09-26, 15:06:37 - Andras Lasso
Instead of gluing we could create a hole where standard high-precision indicator tips (sharp or sphere) could be inserted.

For example, one of these:
http://www.mcmaster.com/#indicator-tips/


#### 2014-09-26, 15:06:37 - Andras Lasso
summary: changed from "add a separate set of styluses (Stylus_60mm, Stylus_100mm) with a hole at the tip, where we can glue a pin/nail." to "Add a separate set of styluses (Stylus_60mm, Stylus_100mm) with a hole at the tip, where we can glue a pin/nail."

#### 2014-09-26, 15:06:37 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"


## #939 Simplify FakeTracker
SavedDataSource device should be used for replaying data from file. Duplicating this functionality would lead to additional duplicate maintenance workload.
Therefore, RecordedPoseFrameList mode should be removed.

We do not plan to detect pivoting automatically during stylus calibration, therefore PivotCalibrationAutoDetect mode should be removed.

#### 2014-10-06, 22:49:02 - Jaime Garcia Guevara
re #939 removed faketracker replay data and fake tracker pivoting
Commit: r:3804|plus:3804

#### 2014-10-06, 22:51:07 - Jaime Garcia Guevara
fixed #939 removed faketracker replay data and fake tracker pivoting
Commit: r:3805|plus:3805

#### 2014-10-06, 22:51:07 - Jaime Garcia Guevara
status: changed from "New" to "Fixed"

#### 2015-02-20, 17:04:04 - Adam Rankin
re #939 hFlip crash caused by off-by-one error, working correctly now
Commit: r:4002|plus:4002


## #940 Decode video stream in MmfVideoSource
Some framegrabbers can only provide compressed video steam. Use MF to decode compressed streams.

Example:
http://msdn.microsoft.com/en-us/library/windows/desktop/dd940436(v=vs.85).aspx

#### 2015-02-24, 18:57:13 - Isaiah Norton
Attachment added: "diff1.patch"

#### 2015-02-24, 18:57:13 - Isaiah Norton
CommentContent: changed from "file:dXS-M4Vfyr5j43acwqjQYw
" to null

#### 2015-02-24, 19:05:12 - Isaiah Norton
I have uploaded a proposed patch to fix this. Based on:
https://msdn.microsoft.com/en-us/library/windows/desktop/dd389281(v=vs.85).aspx#setting_output_formats

which indicates that Mmf will automatically load a decoder (if available) to the requested output type. I have tested with a firewire video device presenting DVSD.

If you have a chance to review, please  me know if this is acceptable to commit (I think I still have access), or if you any changes are required. Thanks.

#### 2015-02-24, 20:08:01 - Isaiah Norton
file:dXS-M4Vfyr5j43acwqjQYw


#### 2015-02-24, 20:08:01 - Isaiah Norton
attachment_updated:name: changed from "diff1.patch" to "diff2.patch"

#### 2015-02-24, 20:08:01 - Isaiah Norton
attachment_updated:filesize: changed from "1306" to "1339"

#### 2015-02-24, 20:10:30 - Andras Lasso
I quickly test it and let you know.

#### 2015-02-24, 21:01:30 - Isaiah Norton
By the way, there seems to be a bug if an epiphan device is connected. MediaFoundationVideoDevice::ResetDevice fails at line 190, so then the FriendlyName is set to NULL. Later on it still tries to use the device and construct a wstring from the null pointer. This leads to an access violation. My temporary solution was to unplug the epiphan, but I will send a patch to fix it.

#### 2015-02-24, 21:23:23 - Andras Lasso
I've tested your patch and did not find any difference (what worked still works, what did not work is not fixed either). Does the patch fixes something for you?

#### 2015-02-24, 21:35:43 - Isaiah Norton
image:awtz8qVg0r5jpcacwqjQWU


#### 2015-02-24, 21:35:43 - Isaiah Norton
Attachment added: "unpatched.png"

#### 2015-02-24, 21:35:51 - Isaiah Norton
image:aA-8mcVg0r5jpcacwqjQWU


#### 2015-02-24, 21:35:51 - Isaiah Norton
Attachment added: "patched.png"

#### 2015-02-24, 21:37:38 - Isaiah Norton
Yes, without the patch I get 'Unexpected video format: DVSD' and a solid gray image. With the patch I get no error and the correct image (vtkMmf test does not display in color, but I can get color via OpenIGTLink).

#### 2015-02-24, 21:37:38 - Isaiah Norton
CommentContent: changed from "Yes, without the patch I get 'Unexpected video format: DVSD' and a gray image. With the patch I get no error and the correct image (vtkMmf test does not display in color, but I can get color via OpenIGTLink)." to "Yes, without the patch I get 'Unexpected video format: DVSD' and a solid gray image. With the patch I get no error and the correct image (vtkMmf test does not display in color, but I can get color via OpenIGTLink)."

#### 2015-02-24, 21:40:16 - Andras Lasso
OK then. The code looks good to me as is, so you can integrate it. Thank you!

#### 2015-02-24, 21:40:45 - Andras Lasso
Please integrate the other fix, too (crash when epiphan is connected). Thanks!

#### 2015-02-24, 21:51:19 - Isaiah Norton
re #940: Attempt to set SourceReader output type to get automatic decoder
Commit: r:4014|plus:4014

#### 2015-02-24, 21:51:19 - Isaiah Norton
assigned_to_id: changed from null to "ihnorton"

#### 2015-02-24, 21:53:54 - Isaiah Norton
I am curious what did you test, that did not work? (is it testable without some specific hardware..?)

#### 2015-02-24, 21:58:10 - Andras Lasso
When I set my webcam resolution to 1280x720 then encoding is switched to MJPG (even though YUY2 is listed in the available modes and no error is reported when initializing that mode).
With your patch the encoding is switched to YUY2 but the resolution is also changed to 640x480.

#### 2015-03-10, 00:02:41 - Isaiah Norton
re #940: don't use invalid MediaFoundation device.

If pActivate->ActivateObject fails then the MMF device is invalid and it should
not be enumerated. Keeping the device in the list causes a crash later
in MediaFoundationVideoCaptureApi::GetCaptureDeviceName.
Commit: r:4035|plus:4035

#### 2015-03-10, 00:06:22 - Andras Lasso
Thanks for the fix!

#### 2015-03-10, 20:21:00 - Isaiah Norton
Regarding the issue with the webcam, does it work if you explicitly specify RGB24 as the format instead? Maybe Media Foundation can't automatically find a decode pathway to YUY2, but if you specify RGB24 if might find one (I'm not entirely sure how the selection works underneath. I think we would need to manually set up the url:https://msdn.microsoft.com/en-us/library/windows/desktop/ms703138(v=vs.85).aspx |MF Transform paths to fully control this).

Are there any other issues to address in order to close this?

#### 2015-03-11, 18:38:44 - Andras Lasso
No, the webcam unfortunately does give RGB24 image at high resolution, even if we explicitly request it. I agree that probably MF transforms should be set up to handle this, but as we have a solution that works on all the clinical-grade imaging sources and we can find working video modes for most (all?) webcams, we can consider this ticked fixed.

#### 2015-03-11, 18:38:44 - Andras Lasso
status: changed from "New" to "Fixed"


## #941 Improve fCal-3.x phantom
* Create wiring recommendation (XML description and screenshots)
* Create non-regression test case with test config file, image sequence, baseline data
* The letters on both sides are denoted with capital letters, one side should be lower case (as per fCal 2.0)
* Not all landmark dimples have the same depth


## #942 Make hole-filling optional for volume reconstruction snapshots
Make hole-filling optional for volume reconstruction snapshots to speed up snapshot creation process.

#### 2014-10-09, 13:43:42 - Andras Lasso
test #942: Added optional ApplyHoleFilling attribute to GetVolumeReconstructionSnapshot command
Commit: r:3817|plus:3817

#### 2014-10-09, 13:43:42 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-10-10, 02:17:01 - Andras Lasso
status: changed from "Test" to "Fixed"


## #943 Make PlusLib reusable from other applications
Goal: Algorithms implemented in Plus should be reusable from Slicer modules or other external applications.

Approach: Modify PlusLib so it is usable alone. Compile PlusLib without hardware support.

Tasks:
- Try to compile PlusLib in a SlicerIGT module. Create superbuild CMake that checks out the code. (Andras)
- In the same module implement conversion between Plus tracked frame list and sequence nodes (Multidim Data). (Matt)
- Check how module/extension dependency works in Slicer so this module would automatically install Multidim Data. (Lower priority, Matt)


#### 2014-11-27, 14:06:40 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"


## #944 Slicer 3D view update stops if the system is running for an extended period of time
Reported by Thomas Chen: I have tested the new PlusServer US610 Embedded nightly and it works well with our 6.1.0 Exam on Touch.  I did found one problem: after I set up the Slicer/SlicerIGT/PlusServer all working with tracked US and our GPS needle and acquire some volume, if I leave the system there for a couple of hours and come back, the 3D view (where the tracked image and needle) would cease to update the position when I move the probe and needle.  The 2D live US image still works so it means the data streaming to the 2D is fine, but strangely all updates to the 3D view stop.  I can still rotate/zoom the 3D view, but there is no response when I move the probe/needle.  This is not a random error and happens every time if I leave the system sit for a while.  I checked the PlusServer running on SonixTouch, it is connected fine.

#### 2014-10-23, 20:43:30 - Andras Lasso
Most likely it's a Slicer bug. Need to reproduce it to investigate.

#### 2014-10-27, 15:21:09 - Jaime Garcia Guevara
 Hello @thomasckr I am trying to reproduce this issue but still have not. 

I guess you disable the automatic freeze option from the sonix touch, right? If not do you get this errors 102414_190531.083|ERROR|7286.053000| Failed to get video buffer item UID from time: 5856.522917|in ..\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusChannel.cxx(999) in plus server? 

You said that the 2D image streaming in slicer is working, right? And the needle and US poses tracking are the ones that does not work any more, right?

#### 2015-04-25, 15:21:11 - Andras Lasso
Reproduced the issue: transformation matrix values were updating in the Transforms module but tools did not move, which confirms that it is a Slicer issue.
Added a ticket in SlicerIGT: https://www.assembla.com/spaces/slicerigt/tickets/210-slicer-3d-view-is-not-updated-if-slicer-is-running-for-very-long#/activity/ticket:

#### 2015-04-25, 15:21:11 - Andras Lasso
status: changed from "New" to "Invalid"


## #945 Broadcast Interson physical probe button status through OpenIGTLink
Allow applications to get notified if the physical button on the Interson probe is pressed.

#### 2014-11-06, 17:44:57 - Andras Lasso
test #945: Allow monitoring of Interson physical probe button status through OpenIGTLink

If EnableProbeButtonMonitoring attribute is 'true' then Interson device adds ProbeButtonToDummyTransform to its output channel. The first translation component of the transform contains the number of probe button presses. The number is incremented each time the button is pressed.
Commit: r:3836|plus:3836

#### 2014-11-06, 17:44:57 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-11-06, 19:59:35 - Andras Lasso
fixed #945: Added sample config file for Interson probe button state sending through OpenIGTLink
Commit: r:3837|plus:3837

#### 2014-11-06, 19:59:35 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-11-07, 22:29:45 - Andras Lasso
re #945: Added support for multiple PhidgetSpatial devices. SerialNumber attribute specifies the target device.
Commit: r:3844|plus:3844


## #946 Performance issue on Ultrasonix machine with exam software 6.1
Running PlusServer on a Sonix Touch machine just to stream the 2D images thought the network already uses the CPU at 99% capacity. When volume reconstruction is requested though PlusServer there are unpredictable errors. E.g. command is not processed at all, or chunks of data is lost, etc.

A solution is to raise the priority of PlusServer in the Task Manager of Sonix Touch. A setting 'high' already provides acceptable user experience and no loss of data. Priority setting of 'real time' is even faster.


#### 2014-11-27, 14:07:16 - Andras Lasso
milestone_id: changed from null to "Plus-2.3.0"

#### 2014-12-08, 18:59:24 - Andras Lasso
Performance may be improved in more recent versions. For example, 6.1.1 is reported to have much better performance compared to 6.1.0

#### 2015-11-25, 15:50:40 - Andras Lasso
Lots of improvements have been done in 6.1.1. Need to test if the problem still exists with 6.1.1.

#### 2015-11-25, 15:50:40 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-06-30, 14:36:39 - Adam Rankin
Which hardware version of SonixTouch was this? Perhaps this issue doesn't exist on more recent platforms.

#### 2016-06-30, 19:35:24 - Andras Lasso
Usually we don't notice this issue on 6.1.1 (although we don't always use volume reconstruction). I think we should just add notes about workarounds to the user manual and then close this ticket. 

#### 2016-06-30, 19:38:08 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-06-30, 19:42:47 - Adam Rankin
fixed #946 adding workaround details to FAQ regarding ultrasonix exam software slowdown
Commit: r:4696|plus:4696

#### 2016-06-30, 19:42:47 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-07-01, 09:19:20 - Andras Lasso
re #946: Moved Sonix Exam 6.1 performance issue description to Ultrasonix-specific manual page
Commit: r:4699|plus:4699

#### 2016-07-01, 09:20:05 - Andras Lasso
re #946: Moved Sonix Exam 6.1 performance issue description to Ultrasonix-specific manual page
Commit: r:4700|plus:4700


## #947 Make Plus compatible with VTK6 VTK_LEGACY_REMOVE option
If Plus is built with VTK6 and the VTK_LEGACY_REMOVE option is enabled then there are build errors.

At least vtkTypeRevisionMacro is not available and there may be other issues.

#### 2014-11-07, 04:45:45 - Andras Lasso
re #947: Switched from vtkTypeRevisionMacro to vtkTypeMacro to be compatible with VTK_LEGACY_REMOVE build option
Commit: r:3839|plus:3839

#### 2014-11-07, 04:46:10 - Andras Lasso
re #947: Switched from vtkTypeRevisionMacro to vtkTypeMacro to be compatible with VTK_LEGACY_REMOVE build option
Commit: r:3840|plus:3840

#### 2014-11-07, 04:46:29 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-11-07, 14:33:04 - Dzenan Zukic
file:d7Z4TOzOOr5iddacwqjQWU


#### 2014-11-07, 14:33:04 - Dzenan Zukic
Attachment added: "vtkLegacyRemove.patch"

#### 2014-11-07, 14:35:00 - Dzenan Zukic
This patch gets rid of the remaining errors to compile it with VTK_LEGACY_REMOVE on VS2013.

#### 2014-11-07, 14:49:28 - Andras Lasso
re #947: Integrated patch for adding missing .str() for getting stream output (required by VS2013 and VTK_LEGACY_REMOVE option)
Commit: r:3841|plus:3841

#### 2014-11-07, 15:44:56 - Andras Lasso
re #947: Replaced obsolete strstream by stringstream (it is safer because it returns string object instead of char*). Use ostringstream if only used for output (safer, faster than the generic stringstream).
Commit: r:3842|plus:3842

#### 2014-11-27, 14:09:56 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-12-16, 16:02:50 - Andras Lasso
re #947: Removed 0x00 character after timestamp value in log files
Commit: r:3896|plus:3896


## #948 Add support for connecting to multiple PhidgetSpatial devices at the same time


#### 2014-11-07, 22:30:39 - Andras Lasso
example config file:

<PlusConfiguration version='2.1'>

  <DataCollection StartupDelaySec='1.0'>
    <DeviceSet 
      Name='PlusServer: Two PhidgetSpatial MARG sensors' 
      Description='Broadcasting tool tracking data through OpenIGTLink
Keep the device stationary for 2 seconds after connect for accurate gyroscope initialization.'
    />

    <Device
      Id='TrackerDevice1'
      Type='PhidgetSpatial'
      SerialNumber='301972'
      AhrsAlgorithm='MADGWICK_MARG'
      AhrsAlgorithmGain='1.5'
      TiltSensorWestAxisIndex='1'
      FilteredTiltSensorAhrsAlgorithm='MADGWICK_IMU'
      FilteredTiltSensorAhrsAlgorithmGain='0.01'
      FilteredTiltSensorWestAxisIndex='1'      
      ToolReferenceFrame='Tracker1' >
      <DataSources>
        <DataSource Type='Tool' Id='OrientationSensor1' PortName='OrientationSensor' />    
        <DataSource Type='Tool' Id='TiltSensor1' PortName='TiltSensor' />
        <DataSource Type='Tool' Id='FilteredTiltSensor1' PortName='FilteredTiltSensor' />
        <DataSource Type='Tool' Id='Accelerometer1' PortName='Accelerometer' />
        <DataSource Type='Tool' Id='Gyroscope1' PortName='Gyroscope' />
        <DataSource Type='Tool' Id='Magnetometer1' PortName='Magnetometer' />
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='TrackerStream1' >
          <DataSource Id='OrientationSensor1'/>
          <DataSource Id='TiltSensor1'/>
          <DataSource Id='FilteredTiltSensor1'/>
          <DataSource Id='Accelerometer1'/>
          <DataSource Id='Gyroscope1'/>
          <DataSource Id='Magnetometer1'/>
        </OutputChannel>
      </OutputChannels>
    </Device>

    <Device
      Id='TrackerDevice2'
      Type='PhidgetSpatial'
      SerialNumber='302015'
      AhrsAlgorithm='MADGWICK_MARG'
      AhrsAlgorithmGain='1.5'
      TiltSensorWestAxisIndex='1'
      FilteredTiltSensorAhrsAlgorithm='MADGWICK_IMU'
      FilteredTiltSensorAhrsAlgorithmGain='0.01'
      FilteredTiltSensorWestAxisIndex='1'      
      ToolReferenceFrame='Tracker2' >
      <DataSources>
        <DataSource Type='Tool' Id='OrientationSensor2' PortName='OrientationSensor' />    
        <DataSource Type='Tool' Id='TiltSensor2' PortName='TiltSensor' />
        <DataSource Type='Tool' Id='FilteredTiltSensor2' PortName='FilteredTiltSensor' />
        <DataSource Type='Tool' Id='Accelerometer2' PortName='Accelerometer' />
        <DataSource Type='Tool' Id='Gyroscope2' PortName='Gyroscope' />
        <DataSource Type='Tool' Id='Magnetometer2' PortName='Magnetometer' />
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='TrackerStream2' >
          <DataSource Id='OrientationSensor2'/>
          <DataSource Id='TiltSensor2'/>
          <DataSource Id='FilteredTiltSensor2'/>
          <DataSource Id='Accelerometer2'/>
          <DataSource Id='Gyroscope2'/>
          <DataSource Id='Magnetometer2'/>
        </OutputChannel>
      </OutputChannels>
    </Device>

    <Device 
      Id='CombinedTracker' 
      Type='VirtualMixer' >
      <InputChannels>
        <InputChannel Id='TrackerStream1' />
        <InputChannel Id='TrackerStream2' />
      </InputChannels>
      <OutputChannels>
        <OutputChannel Id='CombinedTrackerStream'/>
      </OutputChannels>
    </Device>

    <Device
      Id='CaptureDevice'
      Type='VirtualDiscCapture'
      BaseFilename='RecordingTest.mha'
      EnableCapturing='FALSE' >
      <InputChannels>
        <InputChannel Id='CombinedTrackerStream' />
      </InputChannels>
    </Device>    
  </DataCollection>
  
  <PlusOpenIGTLinkServer 
    MaxNumberOfIgtlMessagesToSend='1' 
    MaxTimeSpentWithProcessingMs='50' 
    ListeningPort='18944' 
    OutputChannelId='CombinedTrackerStream' > 
    <DefaultClientInfo> 
      <MessageTypes> 
        <Message Type='TRANSFORM' />
      </MessageTypes>
      <TransformNames> 
        <Transform Name='OrientationSensor1ToTracker1' /> 
        <Transform Name='TiltSensor1ToTracker1' /> 
        <Transform Name='FilteredTiltSensor1ToTracker1' /> 
        <xTransform Name='Accelerometer1ToTracker1' /> 
        <xTransform Name='Gyroscope1ToTracker1' /> 
        <xTransform Name='Magnetometer1ToTracker1' /> 
        <Transform Name='OrientationSensor2ToTracker2' /> 
        <Transform Name='TiltSensor2ToTracker2' /> 
        <Transform Name='FilteredTiltSensor2ToTracker2' /> 
        <xTransform Name='Accelerometer2ToTracker2' /> 
        <xTransform Name='Gyroscope2ToTracker2' /> 
        <xTransform Name='Magnetometer2ToTracker2' />
      </TransformNames>
    </DefaultClientInfo>
  </PlusOpenIGTLinkServer>
  
</PlusConfiguration>


#### 2014-11-07, 22:31:37 - Andras Lasso
commit plus:3844 implements the feature (accidentally the commit referred to #945)

#### 2014-11-07, 22:31:37 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-11-08, 23:34:28 - Andras Lasso
re #948: Fixed SerialNumber documentation
Commit: r:3845|plus:3845


## #949 OpenIGTLink command receive latency gets longer if multiple clients are connected
Polling client for commands takes about 0.5-1 sec (if the client has not sent anything). It means in worst case the time it takes for PlusServer to process a command is 0.5sec * (NumberOfConnectedClients-1). This may result in a long latency in remote command processing if many clients are connected to PlusServer.

Probably the most robust solution would be to create a separate data receiver thread for each connected client. Then waiting on one client could not delay the processing of events received from another client.


#### 2015-03-13, 18:04:21 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2015-03-13, 18:04:23 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-03-13, 18:25:52 - Andras Lasso
test #949: Made OpenIGTLink data receiving in PlusServer multithreaded. There is no more delay in responding to OpenIGTLink STRING commands when multiple clients are connected.
Commit: r:4046|plus:4046

#### 2015-03-13, 18:25:52 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-29, 19:44:34 - Andras Lasso
status: changed from "Test" to "Fixed"


## #950 Write saved data source input file path relative to the config file path
Currently when a saved data source device config is saved, the full absolute path of the sequence file is written to the config file. When the config file and sequence is moved, the sequence file cannot be found.

Proposed solution: Write saved data source input file path relative to the config file path

#### 2016-07-13, 16:52:29 - Adam Rankin
@lassoan Does PLUS look relative to the config file directory or to the Image directory as specified by PlusConfig.xml? (or both)

#### 2016-07-13, 18:08:29 - Andras Lasso
I've checked the code. Currently Plus looks for the sequence file in the image directory, then relative to config file directory, then in current working directory. So, this part is actually OK.

The issue is that the lookup of the full image file path is implemented in vtkPlusSavedDataSource::ReadConfiguration. The relative input path is converted to an absolute path and stored in SequenceFile member. The behavior should be changed to not store the found absolute path in the member variable.

#### 2016-07-13, 18:08:41 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.4.0"

#### 2016-08-15, 19:19:02 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-24, 23:55:30 - Adam Rankin
test #950 storing exact value of source filename and only using absolute path to load the data
Commit: r:4830|plus:4830

#### 2016-08-24, 23:55:30 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-24, 23:55:30 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-08-25, 11:34:01 - Andras Lasso
Thanks for working on this. Have you fixed the problem that the file name is changed in the config file when the config file is saved?

The issue was that the relative path that was originally in the config file was replaced with an absolute path on save. Having an absolute path in the config file is bad, as it only works on the computer where that config file was saved.

#### 2016-08-25, 11:34:01 - Andras Lasso
assigned_to_id: changed from "rankin" to "testtesttesttesttesttesttest"

#### 2016-08-25, 13:45:47 - Adam Rankin
assigned_to_id: changed from "testtesttesttesttesttesttest" to null

#### 2016-08-25, 13:45:51 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-08-25, 13:46:31 - Adam Rankin
Yup, the absolute path is only determined when loading the file. In all other instances this->SequenceFile contains exactly what is in the config file, so when written out it is the same.

#### 2016-08-25, 21:42:36 - Andras Lasso
re #950: Fix crash in PlusCommon::Trim when called with a NULL argument
Commit: r:4832|plus:4832

#### 2016-08-26, 18:16:51 - Adam Rankin
re #950 removing c-style Trim function
Commit: r:4833|plus:4833

#### 2016-08-26, 20:46:25 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-08-27, 18:40:32 - Adam Rankin
re #950 removing redundant function call
Commit: r:4839|plus:4839


## #951 Clean up Matlab OpenIGTLink implementation
Use this repo:
https://github.com/niravatgit/MatlabOpenIGTLink

and remove the files in Plus:
https://www.assembla.com/code/plus/subversion/nodes/3847/trunk/MatlabUtils/MatlabOpenIGTLinkInterface





## #952 Use performance profiler and memory checker to optimize Plus
Use DevPartnerStudio (license available in PerkLab)


## #953 Remove image data from mha file
Add to the command-line tool for editing sequence metafiles, the operation to REMOVE_IMAGE_DATA
EditSeqMetaFile.exe --operation=REMOVE_IMAGE_DATA --source-seq-file=e:\\data\  ransformsAndUS.mha --output-seq-file=e:\\data\  ransforms.mha

Using the method SaveTrackerDataOnlyToSequenceMetafile(const char* filename) from the class vtkTrackedFrameList. To save only the tracker data from an mha file that has both tracker data and US images.


#### 2014-11-19, 01:06:09 - Jaime Garcia Guevara
re #953 REMOVE_IMAGE_DATA operation added to the command-line tool for editing sequence metafiles. @lassoan Might be not the best thing to remove the data when writing (at that time was the simplest), should I do it differently?
Commit: r:3850|plus:3850

#### 2014-11-19, 01:19:19 - Andras Lasso
Yes, implementing it in the writing step is the simplest. Remove the unused/TODO code sections.

#### 2014-11-19, 13:50:36 - Andras Lasso
re #953: Fixed build error
Commit: r:3851|plus:3851

#### 2014-11-19, 15:36:34 - Jaime Garcia Guevara
re #953: add image for compare test, remove TODOs
Commit: r:3852|plus:3852

#### 2014-11-19, 21:52:47 - Andras Lasso
Replace this
  case REMOVE_IMAGE_DATA: 
    {
      if (RemoveImageData(trackedFrameList)!=PLUS_SUCCESS)
      {
        LOG_ERROR('There is no tracked list');
        return EXIT_FAILURE;
      }
    }
    break;

with just a comment that REMOVE_IMAGE_DATA does not require changing of trackedFrameList (to make clear that processing is not done intentionally).

This is not needed either:
PlusStatus RemoveImageData( vtkTrackedFrameList* trackedFrameList)
{
  if ( trackedFrameList == NULL )
  {
    LOG_ERROR('Tracked frame list is NULL!'); 
    return PLUS_FAIL; 
  }
  return PLUS_SUCCESS; 
}





#### 2014-11-21, 15:36:18 - Jaime Garcia Guevara
re #953 Remove not needed case of changing trackedFrameList
Commit: r:3857|plus:3857

#### 2014-11-24, 17:06:50 - Jaime Garcia Guevara
re #953 The operation case was needed
Commit: r:3860|plus:3860

#### 2014-11-24, 18:24:06 - Andras Lasso
re #953: Minor style change
Commit: r:3861|plus:3861

#### 2014-11-27, 14:04:21 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2014-11-27, 14:04:21 - Andras Lasso
summary: changed from "remove image data from mha file" to "Remove image data from mha file"

#### 2014-11-27, 14:04:21 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2014-11-27, 14:04:21 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2014-12-12, 00:10:26 - Adam Rankin
assigned_to_id: changed from "garciaguevara" to "rankin"

#### 2014-12-12, 00:10:29 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2014-12-12, 14:24:33 - Adam Rankin
test #953 cleaned up vtkMetaImageSequenceIO to remove code redundancy
Commit: r:3888|plus:3888

#### 2014-12-12, 14:24:33 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-12-12, 14:27:13 - Adam Rankin
@lassoan @garciaguevara The automatic tests pass, could you verify that this still does what you expect of it? It stores 1x1xNfr blank images as per the previous iteration.

#### 2014-12-12, 18:37:04 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2014-12-12, 18:37:27 - Adam Rankin
Further cleanup to be done in WriteImagePixelsCompressed and I want to create an automated test for compression testing

#### 2014-12-12, 18:50:34 - Andras Lasso
Thanks Adam. Please also rename the trackerOnly flag to blankImage (or removeImageData or something similar), as we only know that we remove the image data. In general, a binary flag should never be called '...Only', because it may become obsolete if more flags or features are added (for example, if we add some other signal then trackerOnly would indicate that we remove that other signal, while the implementation only removes the image data).

#### 2014-12-12, 23:01:59 - Adam Rankin
test #953 Last set of clean up changes for removing image data. Compressed output now supported (but pretty much useless, however it does clean up the code).
Commit: r:3890|plus:3890

#### 2014-12-12, 23:01:59 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2014-12-12, 23:02:23 - Adam Rankin
Also added a new automated test to test the compression

#### 2014-12-12, 23:33:04 - Adam Rankin
re #953 Fixing changes to meta image sequence
Commit: r:3892|plus:3892

#### 2014-12-13, 16:32:39 - Adam Rankin
@lassoan @garciaguevara Would one of you guys mind confirming that it works to your satisfaction? My tests seem to show that it's functioning.

#### 2014-12-15, 17:49:17 - Adam Rankin
re #953 confirming loading of 4d meta image successful, updating other devices to be work with new API
Commit: r:3895|plus:3895

#### 2014-12-15, 17:52:07 - Adam Rankin
Wrong ticket =/

#### 2014-12-16, 16:30:29 - Adam Rankin
re #953 fixing broken sequence writer, merge issue
Commit: r:3897|plus:3897

#### 2015-01-23, 20:50:26 - Adam Rankin
@lassoan I believe this is working as expected, could you confirm and close?

#### 2015-01-23, 20:50:26 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2015-01-24, 02:16:22 - Andras Lasso
Yes, it's working.

#### 2015-01-24, 02:16:22 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-03-15, 03:39:40 - Andras Lasso
re #953: Allow updating field in sequence metafiles that don't have image data
Commit: r:4050|plus:4050

#### 2015-03-15, 05:06:09 - Andras Lasso
re #953: Fixed the regression that has been just introduced in metafile writing
Commit: r:4054|plus:4054

#### 2015-03-15, 05:30:54 - Andras Lasso
re #953: Fixed the regression that has been just introduced in metafile writing
Commit: r:4055|plus:4055

#### 2015-03-15, 05:32:59 - Andras Lasso
re #953: Fixed the regression that has been just introduced in metafile writing
Commit: r:4056|plus:4056


## #954 Create image processor device for real-time bone enhancement
We finally agreed that in the near future we will implement ultrasound processing (bone segmentation) in PLUS, not Slicer. Andras will create a new virtual device in PLUS, like a Hello World device, that we can continue working on. Virtual devices take input data streams and produce output data streams. The output of the bone segmentation device can be either written to file, or sent to Slicer.


#### 2014-11-19, 18:57:55 - Andras Lasso
test #954: Added image processor device and sample BoneEnhancer processing algorithm. Try PlusServer with this config file: PlusLib\\data\\ConfigFiles\\PlusDeviceSet_Server_Sim_BoneEnhancer.xml

Commit: r:3853|plus:3853

#### 2014-11-19, 18:57:55 - Andras Lasso
status: changed from "New" to "Test"

#### 2014-11-19, 20:50:59 - Andras Lasso
re #954: Fixed build to be compatible with both VTK5 and VTK6
Commit: r:3854|plus:3854

#### 2014-11-19, 21:44:25 - Andras Lasso
re #954: Fixed test failures (caused by find&replace)
Commit: r:3855|plus:3855

#### 2014-11-27, 14:10:13 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2014-11-27, 14:23:39 - Adam Rankin
Yay! Virtual devices are being used!

#### 2015-08-19, 16:31:06 - Andras Lasso
re #954: Added shallow copy method to PlusVideoFrame
Commit: r:4260|plus:4260

#### 2015-08-19, 16:31:27 - Andras Lasso
re #954: Added shallow copy method to PlusVideoFrame
Commit: r:4261|plus:4261

#### 2015-08-19, 16:50:41 - Andras Lasso
re #954: Created a branch to experiment with integration of Foroughi's bone enhancer algorithm, based on implementation of Mikael Brudfors (https://github.com/brudfors/BoneEnhancer)
Not integrated directly into the core because the algorithm depends on Intel MKL and also may require significant changes.
Commit: r:4264|plus:4264

#### 2015-08-19, 17:03:34 - Andras Lasso
re #954: Created a branch to experiment with integration of Foroughi's bone enhancer algorithm, based on implementation of Mikael Brudfors (https://github.com/brudfors/BoneEnhancer)
Not integrated directly into the core because the algorithm depends on Intel MKL and also the algorithm may require performance improvements.
Commit: r:4265|plus:4265

#### 2015-08-19, 17:04:37 - Andras Lasso
summary: changed from "Create image processor device" to "Create image processor device for real-time bone enhancement"

#### 2015-08-19, 17:04:37 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2015-08-19, 17:40:29 - Andras Lasso
re #954: Don't use a new branch after all for bone enhancement (will add build flags to enable/disable)
Commit: r:4266|plus:4266

#### 2015-08-19, 18:52:04 - Andras Lasso
re #954: Made vtkBoneEnhancer available in trunk, can be enabled by specifying PLUS_USE_INTEL_MKL manually for PlusLib. The algorithm is a work in progress.
Commit: r:4267|plus:4267

#### 2015-08-20, 00:23:30 - Andras Lasso
re #954: Fixed 3D test data file name and comparison tolerances
Commit: r:4268|plus:4268

#### 2015-08-20, 13:06:26 - Andras Lasso
re #954: Adjusted tolerances to fix test errors on linux VM
Commit: r:4269|plus:4269

#### 2016-01-11, 17:57:19 - Adam Rankin
milestone_id: changed from "Plus-2.2.0" to "Plus-2.3.0"

#### 2016-06-30, 14:37:24 - Adam Rankin
This seems to be operational, is there any update on this virtual device?

#### 2016-06-30, 14:53:08 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-06-30, 15:15:53 - Tamas Ungi
Yes, it works. We tried it a couple of weeks ago. I think this ticket could be closed. This is a good template for those who want to add image processing devices in the future. Although the long term plan is to add such algorithms in Slicer. Running potentially computation intensive algorithms in PLUS may delay real time data streams. So PLUS is best kept minimal. But it is good to have this option.

#### 2016-06-30, 19:50:33 - Adam Rankin
status: changed from "Test" to "Fixed"


## #955 Enable support of 3D data in PLUS
With the goal of supporting the Philips ie33 probe (and hopefully other modalities/probes), it is necessary to support the acquisition of streaming volumes.

Currently, there is a driver/software package that can receive data from the Philips system, so this task will consist of retrofitting PLUS to support 3D image data, and creating a video source to support the ie33 probe.

This ticket focuses on retrofitting PLUS to support 3D.

#### 2014-12-11, 18:58:45 - Adam Rankin
@lassoan Andras if you want to choose the milestone please do, my best guess would be 2.3.0

#### 2014-12-11, 18:59:06 - Adam Rankin
re #955 creating branch for 3d support development
Commit: r:3886|plus:3886

#### 2014-12-11, 19:00:04 - Adam Rankin
re #955 pointing to new branched projects
Commit: r:3887|plus:3887

#### 2014-12-12, 14:34:53 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2014-12-12, 14:35:29 - Adam Rankin
re #955 committing in progress changes to branch in order to merge in cleanup of vtkMetaImageSequenceIO
Commit: r:3889|plus:3889

#### 2014-12-12, 23:04:27 - Adam Rankin
re #955 commiting TrackedFrame changes so I can merge in vtkMetaImageSequenceIO changes from trunk
Commit: r:3891|plus:3891

#### 2014-12-13, 18:19:03 - Adam Rankin
re #955 3d support initial pass up and working, saved data for calibration test works, data now stored in X Y 1 Nfr format in TrackedFrame/PlusVideoFrame/vtkImageData
Commit: r:3893|plus:3893

#### 2014-12-13, 22:13:45 - Adam Rankin
re #955 adding empty Philips ie33 ultrasound probe interface class
Commit: r:3894|plus:3894

#### 2014-12-15, 17:52:20 - Adam Rankin
In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 *re #955 confirming loading of 4d meta image successful, updating other devices to be work with new API*

Committed to: *plus*

#### 2014-12-15, 17:52:20 - Adam Rankin
CommentContent: changed from "In plus:3895 re #953 confirming loading of 4d meta image successful, updating other devices to be work with new API

Committed to: plus" to "In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 re #953 confirming loading of 4d meta image successful, updating other devices to be work with new API

Committed to: plus"

#### 2014-12-15, 17:52:20 - Adam Rankin
CommentContent: changed from "In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 re #953 confirming loading of 4d meta image successful, updating other devices to be work with new API

Committed to: plus" to "In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 re #955 confirming loading of 4d meta image successful, updating other devices to be work with new API

Committed to: plus"

#### 2014-12-15, 17:52:20 - Adam Rankin
CommentContent: changed from "In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 re #955 confirming loading of 4d meta image successful, updating other devices to be work with new API

Committed to: plus" to "In url:https://www.assembla.com/code/plus/subversion/commit/3895|plus:3895 *re #955 confirming loading of 4d meta image successful, updating other devices to be work with new API*

Committed to: *plus*"

#### 2014-12-16, 15:58:46 - Andras Lasso
@rankin: Many automatic tests still fail. It's the highest priority to fix them.
http://crunch.cs.queensu.ca/CDash/index.php?project=PLUS


#### 2014-12-16, 17:12:57 - Adam Rankin
re #955 modifications to PlusBuild to pass on philips device boolean
Commit: r:3898|plus:3898

#### 2014-12-19, 20:51:19 - Adam Rankin
re #955 Adding Philips interface classes

Updating framesizes in code base to be 3d
Commit: r:3901|plus:3901

#### 2014-12-19, 20:51:56 - Adam Rankin
re #955 Adding Philips interface classes

Updating framesizes in code base to be 3d
Commit: r:3902|plus:3902

#### 2014-12-30, 14:45:53 - Adam Rankin
re #955 Merged revision(s) 3892-3903 from trunk/PlusLib:
Merged revision(s)  from trunk/PlusApp:
Commit: r:3904|plus:3904

#### 2014-12-30, 16:25:05 - Adam Rankin
re #955 some errors when saving/loading 4d data in mha format, investigating

small sample data set causing errors (double data value, very small dims)

converting 190 frame 2d dataset into 19 frame 3d dataset (z-dim=10) working perfectly uncompressed (yay!)
Commit: r:3905|plus:3905

#### 2014-12-30, 20:31:17 - Adam Rankin
re #955 error in header saving, incorrect number of dimensions written out

now that 4d data writing works, compressing 4d file to save on check out time
Commit: r:3906|plus:3906

#### 2014-12-30, 20:38:38 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2014-12-30, 20:39:18 - Adam Rankin
Streaming 4d data from PLUS to Slicer operational! Real-time volume rendering at full FPS on my home rig (i5, GTX670, etc...)

Very exciting. Now to get the probe interface operational.

#### 2014-12-31, 01:18:51 - Adam Rankin
re #955 sample config file for streaming 3d data
Commit: r:3907|plus:3907

#### 2015-01-13, 18:38:11 - Adam Rankin
re #955 preventing conflict between ultrasonix and philips devices due to libmmd version conflict
Commit: r:3915|plus:3915

#### 2015-01-13, 20:44:53 - Adam Rankin
re #955 Enabling successful connection to philips device by registering .dll

Adding error feedback to better diagnose issues

Correcting config file to use proper variable name 'IP'
Commit: r:3916|plus:3916

#### 2015-01-15, 19:59:09 - Adam Rankin
re #955 small update to zFlip logic
Commit: r:3918|plus:3918

#### 2015-01-23, 16:54:04 - Adam Rankin
re #955 Updating branch from trunk
Merged revision(s) 3904-3920 from trunk/PlusApp:
Merged revision(s)  from trunk/PlusLib:
Commit: r:3921|plus:3921

#### 2015-01-23, 21:06:46 - Adam Rankin
I am able to stream 3D from Philips ie33 to Slicer, and I successfully did a classic 2D probe calibration. I think everything is working as expected.

Edit: The 2D calibration was with Ultrasonix L14-5 and NDI Aurora

#### 2015-01-23, 21:06:46 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2015-01-23, 21:06:46 - Adam Rankin
CommentContent: changed from "I am able to stream 3D from Philips ie33 to Slicer, and I successfully did a classic 2D probe calibration. I think everything is working as expected." to "I am able to stream 3D from Philips ie33 to Slicer, and I successfully did a classic 2D probe calibration. I think everything is working as expected.

Edit: The 2D calibration was with Ultrasonix L14-5 and NDI Aurora"

#### 2015-01-26, 02:09:27 - Adam Rankin
re #955 Correcting tracked frame message header packing to prevent 4-byte mis-alignment

Correctly renaming philips config file
Commit: r:3922|plus:3922

#### 2015-01-26, 21:26:33 - Adam Rankin
re #955 correcting erroneous setting of Z bounds in scan conversion algorithm

0-1 in vtk dimensions means two images, now set to 0-0 (one image)
Commit: r:3923|plus:3923

#### 2015-01-26, 21:27:46 - Adam Rankin
re #955 Merged revision(s) 3921-3923 from trunk/PlusLib:
Commit: r:3924|plus:3924

#### 2015-01-26, 21:33:07 - Adam Rankin
re #955 adding third dimension in sonix volume reader test in order to properly allocate a frame
Commit: r:3925|plus:3925

#### 2015-01-28, 10:21:00 - Bart??omiej Pyci??ski
Hi Adam, I wonder, how do you obtain 3D stream from your machine? We have Philips iU22 with X6-1 probe and havn't figure, how to get 3D data (except DICOM volumes offline). I couldn't find any information at Philips website.
Regards,
Bartłomiej

#### 2015-01-28, 14:10:52 - Adam Rankin
re #955 WIP skeleton for automatic 3D test and Philips 3D ultrasound test
Commit: r:3927|plus:3927

#### 2015-01-28, 14:14:46 - Adam Rankin
re #955 WIP cleaned up showing of test options, only shows when the device is chosen for use
Commit: r:3928|plus:3928

#### 2015-01-28, 14:18:09 - Andras Lasso
Bartlomiej, You need to get the SDK that allows communication with the device. To get that you need to sign a research contract with Philips.

#### 2015-01-28, 16:25:23 - Adam Rankin
re #955 WIP emptied out tests, ensured compile
Commit: r:3929|plus:3929

#### 2015-01-28, 21:28:02 - Bart??omiej Pyci??ski
Thank you Andras for the information. I will try to encourage the authorities to apply.
Bartłomiej

#### 2015-01-28, 21:56:03 - Adam Rankin
re #955 updating vtkVirtualDiscCapture widget to properly update field header

extracted common method for proper software architecture

added some rudimentary action to the 3d data test

added missing function in vtkVirtualMixer

cleaned up naming of variables in vtkVirtualDiscCapture
Commit: r:3930|plus:3930

#### 2015-01-28, 22:24:31 - Adam Rankin
re #955 WIP fixing function to not crash by accessing tracked frames that have already been written and discarded
Commit: r:3931|plus:3931

#### 2015-01-28, 22:34:57 - Adam Rankin
re #955 fixing vtkMetaImageSequenceIOTest to properly set frame size before testing different frame sizes
Commit: r:3932|plus:3932

#### 2015-01-28, 22:39:10 - Adam Rankin
re #955 fixing cmake for 3d test
Commit: r:3933|plus:3933

#### 2015-01-30, 15:57:56 - Adam Rankin
re #955 Adding sample 3D dataset for testing purposes, updating tests to match new data file

Adding functionality to edit seq meta file, if no command line arguments are given, the help text is printed instead of an error
Commit: r:3935|plus:3935

#### 2015-01-30, 16:01:54 - Adam Rankin
re #955 removing unnecessary port setting call (just setting it to the default again)
Commit: r:3936|plus:3936

#### 2015-01-30, 17:22:40 - Adam Rankin
Hi Bartlomiej,

Sorry I completely missed the conversation amidst the commit messages. Dr. Terry Peters has a research agreement with Philips that allows streaming of the ultrasound data. As Andras mentioned, you will have to sort out an agreement with them to receive access.

Adam

#### 2015-01-30, 18:02:45 - Adam Rankin
re #955 commited actual test of 3D data from saved video source
Commit: r:3937|plus:3937

#### 2015-01-30, 18:09:24 - Adam Rankin
re #955 added further details to the 3D data test
Commit: r:3938|plus:3938

#### 2015-02-02, 16:38:59 - Adam Rankin
re #955 adding some details to the philips 3d probe test
Commit: r:3940|plus:3940

#### 2015-02-02, 22:06:27 - Adam Rankin
re #955 adding slice selector widget system to fCal to visualize all slices of a 3D volume

existing bug found when a volume is too small in x and y dimensions, rendering is messed up
Commit: r:3944|plus:3944

#### 2015-02-03, 20:42:59 - Adam Rankin
re #955 Merged revision(s) 3924-3944 from trunk/PlusLib:

Merged revision(s)  from trunk/PlusApp:
Commit: r:3945|plus:3945

#### 2015-02-03, 20:46:43 - Adam Rankin
@lassoan I would like to merge into the trunk and close the ticket, could you let me know if you're ok with that

#### 2015-02-03, 21:24:57 - Adam Rankin
re #955 restoring vtk5 compatibility
Commit: r:3947|plus:3947

#### 2015-02-03, 21:26:37 - Adam Rankin
re #955 restoring cleaner code
Commit: r:3948|plus:3948

#### 2015-02-03, 21:32:14 - Adam Rankin
re #955 adding slice selection to perspective visualizer as well
Commit: r:3949|plus:3949

#### 2015-02-03, 21:41:31 - Andras Lasso
vtkVirtualDiscCapture: it is OK to not have m_ but then replace it with this-> (we need something to see if a variable is a class member)

//----------------------------------------------------------------------------
vtkPlusChannel* vtkVirtualMixer::GetChannel() const
{
  return this->OutputChannels[0];
}
=> Check if there are output channels and log error if none and return NULL instead of crashing.

PlusStatus vtkPlusBuffer::SetFrameSize(int x, int y, int z)
=> Log warning if xsize!=0 and ysize!=0 but zsize==0 (users may think that a single-slice image should have 0 z size)

int vtkPlusDevice::RequestData(vtkInformation *vtkNotUsed(request),
                               vtkInformationVector **vtkNotUsed(inputVector),
                               vtkInformationVector *vtkNotUsed(outputVector))
...
data->SetExtent(0,frameSize[0]-1,0,frameSize[1]-1,frameSize[2]-1,0);
(appears at two places)
=> shouldn't it be
data->SetExtent(0,frameSize[0]-1,0,frameSize[1]-1,0,frameSize[2]-1);
instead?


PlusStatus vtkPlusDevice::SetFrameSize(vtkPlusDataSource& aSource, int x, int y, int z)
=> Log warning if xsize!=0 and ysize!=0 but zsize==0 (users may think that a single-slice image should have 0 z size)

PlusStatus PlusVideoFrame::AllocateFrame(vtkImageData* image, const int imageSize[3], PlusCommon::VTKScalarPixelType pixType, int numberOfScalarComponents)
{  
  if ( image != NULL )
  {
    int imageExtents[6] = {0,0,0,0,0,0};
    image->GetExtent(imageExtents);
    if (imageSize[0] == imageExtents[1]-1 &&
      imageSize[1] == imageExtents[3]-1 &&
      imageSize[2] == imageExtents[5]-1 &&
      image->GetScalarType() == pixType &&
=> Should subtract imageExtents[0] [2] and [4] (they should be 0, but anyway)
e.g.,
    if (imageSize[0] == imageExtents[1]-1-imageExtents[0] &&


PlusStatus PlusVideoFrame::GetFlipAxes(US_IMAGE_ORIENTATION usImageOrientation1, US_IMAGE_TYPE usImageType1, US_IMAGE_ORIENTATION usImageOrientation2, FlipInfoType& flipInfo)
// TODO : determine when to zflip
=> I think we should always assume right-handed coordinate system

depth
=> replace with thickness (depth may be confused with bit depth)

#### 2015-02-03, 22:26:17 - Andras Lasso
For image orientation: we need to introduce a third axis. This axis is called 'elevational' direction in ultrasound imaging, so let's call the two axis ascending (A) and descending (D) direction. In a right-handed coordinate system if x=M, y=F, then z=cross(x,y)=A.
So, inside Plus everything would be in MFA coordinate system.

A 3D device can provide B-mode data in these orientations:
MFA = MF
MFD
MNA
MND = MN
UFA
UFD = UF
UNA = UN
UND

You don't need to implement flipping but report an error if flipping would have needed and not done.

When we write a 3D+t file then we should use these 3-letter acronyms. We could use aliases as above (assuming that the system is right-handed if only two letters are provided) but it would be cleaner to always use 3 letters when the data is 3D.

#### 2015-02-03, 22:26:17 - Andras Lasso
CommentContent: changed from "For image orientation: we need to introduce a third axis. This axis is called 'elevational' direction in ultrasound imaging, so let's call the two axis ascending (A) and descending (D) direction. In a right-handed coordinate system if x=M, y=F, then" to "For image orientation: we need to introduce a third axis. This axis is called 'elevational' direction in ultrasound imaging, so let's call the two axis ascending (A) and descending (D) direction. In a right-handed coordinate system if x=M, y=F, then"

#### 2015-02-03, 23:00:46 - Andras Lasso
template<typename ScalarType> PlusStatus PlusVideoFrame::DeepCopyVtkVolumeToItkImage( vtkImageData* inFrame, typename itk::Image< ScalarType, 2 >::Pointer outFrame )
=> log warning if input VTK image is not single-frame

vtkMetaImageSequenceIO
=> When NDims=3 in the image file then use image orientation to decide if it is a 2D+t or a single-frame 3D data set. If image orientation has two letters then it is a 2D+t, if image orientation has 3 letters then it is a 3D volume.


// TODO : does element spacing need to be 4d for ... 3d+t?
=> spacing should be 1, as the unit of the 4th dimension is frame number

Prepend this-> to all member variables (needed because you removed m_ prefix) 

#### 2015-02-03, 23:02:14 - Andras Lasso
I've found no major issues, so you can merge it now and fix the review comments above; or fix everything and then commit. You've done a great job!

#### 2015-02-03, 23:02:14 - Andras Lasso
CommentContent: changed from "I've found no major issues, so you can merge it now and fix the review comments above; or fix everything and then commit." to "I've found no major issues, so you can merge it now and fix the review comments above; or fix everything and then commit. You've done a great job!"

#### 2015-02-05, 18:56:13 - Adam Rankin
re #955 responding to comments in ticket discussion

image orientation is now a 3D enabled orientation

z flip is computed, but not performed (tb implemented)
Commit: r:3950|plus:3950

#### 2015-02-05, 19:22:39 - Adam Rankin
re #955 erroneous calculation for dimensions in vtkMetaImageSequenceIO. correctly determining dimensions by scanning acronym length

fixing Philips test by including correct command line parameters
Commit: r:3951|plus:3951

#### 2015-02-05, 20:11:12 - Adam Rankin
re #955 updating naming to match correct dimension name
Commit: r:3952|plus:3952

#### 2015-02-05, 20:12:14 - Adam Rankin
re #955 Merging 3dsupport branch into trunk

Merged revision(s) 3886-3951 from branches/3dsupport/PlusBuild:
Merged revision(s) 3886-3951 from branches/3dsupport/PlusApp:
Merged revision(s) 3886-3951 from branches/3dsupport/PlusLib:
Commit: r:3953|plus:3953

#### 2015-02-05, 21:58:27 - Andras Lasso
re #955: Added 3D transducer axes description
Commit: r:3959|plus:3959

#### 2015-02-06, 03:56:21 - Adam Rankin
re #955 linux build fixes
Commit: r:3960|plus:3960

#### 2015-02-06, 03:59:44 - Adam Rankin
re #955 missing file commit
Commit: r:3961|plus:3961

#### 2015-02-06, 14:20:45 - Adam Rankin
re #955 merging linux fix from branch
Commit: r:3962|plus:3962

#### 2015-02-09, 15:08:58 - Andras Lasso
re #955: Fixed crash due to default zSize=0

Also made MMF video source more robust (checks buffer size and frame size and returns with error if there is a mismatch instead of crashing)
Commit: r:3964|plus:3964

#### 2015-02-09, 15:09:37 - Andras Lasso
re #955: Fixed build error
Commit: r:3965|plus:3965

#### 2015-02-24, 19:38:23 - Andras Lasso
re #955: Fixed image display update and a warning during saved data replay
Commit: r:4012|plus:4012

#### 2015-02-24, 19:40:22 - Andras Lasso
re #955: Fixed crash due to image size being 3-dimensional now
Commit: r:4013|plus:4013

#### 2015-03-11, 16:46:59 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-03-11, 16:48:34 - Adam Rankin
Need to test 3D flipping and cropping

#### 2015-03-11, 16:48:34 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2015-03-11, 17:24:00 - Andras Lasso
re #955 fixing linux build by using correct call types


Commit: r:4039|plus:4039

#### 2015-03-11, 17:24:19 - Adam Rankin
Hey that was me!

#### 2015-03-11, 18:36:48 - Adam Rankin
re #955 fixing windows build error
Commit: r:4040|plus:4040

#### 2015-03-11, 19:27:37 - Adam Rankin
re #955 updating EditSeqMetaFile CROP function to use new clip coding

fixing PlusVideoFrame::FlipClipImage to check for no flip/transpose and still work
Commit: r:4041|plus:4041

#### 2015-03-11, 19:34:43 - Adam Rankin
re #955 adding flipX and clip test

cleaning up tests file to make it more readable
Commit: r:4042|plus:4042

#### 2015-03-12, 16:01:50 - Adam Rankin
Transpose not working, investigating.

#### 2015-03-12, 18:06:13 - Adam Rankin
re #955 removing crash from transpose operation, correcting axes dimension definition to accomodate axes switching

setting correct orientation for captured data

setting correct range of slices in fCal

increasing severity of output if the PlusServer needs to be killed by the launcher
Commit: r:4045|plus:4045

#### 2015-03-14, 12:07:23 - Andras Lasso
There are a few issues:
* automatic test of 3d data collection fails on all platforms (somewhat differently on Linux)
* if I replay the 3d water tank sequence using PlusServer then it shows up scrambled in Slicer
* if I change the order of dimensions in the 3d water tank sequence (112,48,112,18 to 112,112,48,18) then PlusServer crashes (in clip&flip, due to out of bound nem access)

#### 2015-03-14, 12:07:23 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2015-03-14, 12:27:44 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"

#### 2015-03-28, 17:36:44 - Andras Lasso
@rankin: Is there a chance that you can fix these remaining issues so that we can close this ticket? Thanks!

#### 2015-04-15, 04:41:44 - Andras Lasso
re #955: Fixed warning of incorrectly initialized sim US image size
Commit: r:4101|plus:4101

#### 2015-04-15, 17:11:24 - Adam Rankin
@lassoan re 2nd item, the water tank sequence is fabricated, so it's understandable that it's strange looking. It's a number of 2d slices remade into a 3d volume.

I am investigating the other points.

#### 2015-04-15, 17:11:24 - Adam Rankin
CommentContent: changed from "@lassoan #2, the water tank sequence is fabricated, so it's understandable that it's strange looking. It's a number of 2d slices remade into a 3d volume.

I am investigating the other points." to "@lassoan re 2nd item, the water tank sequence is fabricated, so it's understandable that it's strange looking. It's a number of 2d slices remade into a 3d volume.

I am investigating the other points."

#### 2015-04-15, 17:26:18 - Adam Rankin
re #955 adding text description of log level to PlusServer output
Commit: r:4104|plus:4104

#### 2015-04-15, 20:21:41 - Adam Rankin
re #955 cleaning up PlusServerLauncher output to not send empty lines, adding space in vtkPlusLogger to clean up readability
Commit: r:4105|plus:4105

#### 2015-04-18, 01:11:04 - Andras Lasso
re #955: Fixed crash of PlusServerLauncher when PlusServer exits very quickly
Commit: r:4107|plus:4107

#### 2015-04-18, 13:37:22 - Andras Lasso
re #955: Fixed clipping and flipping (clipping origin Y and Z coordinates were ignored). Clean up difference between input frame size (frame size of the input data, without clipping) and output frame size (frame size of the output, after clipping). Added EnableAutoClip attribute to SonixVideo to automatically clip the image to the ROI.
Commit: r:4108|plus:4108

#### 2015-04-18, 14:51:59 - Andras Lasso
re #955: Fixed build errors
Commit: r:4109|plus:4109

#### 2015-04-23, 17:25:16 - Adam Rankin
re #955 resolving line endings
Commit: r:4113|plus:4113

#### 2015-05-04, 16:57:43 - Adam Rankin
re #955 correcting 3d transpose

updated architecture to support image transposition, not just in-axis flipping

output frame size is now calculated based on input frame size specification

fixing bug in vtkTimestampedCircularBuffer to properly resize a buffer

updated image flipping pipeline to simplify it and only do flip calculation in one spot
Commit: r:4126|plus:4126

#### 2015-05-04, 17:10:31 - Adam Rankin
re #955 cleaning up spaces
Commit: r:4127|plus:4127

#### 2015-05-06, 19:11:40 - Adam Rankin
re #955 missing PlusBuild CMake variables
Commit: r:4129|plus:4129

#### 2015-05-07, 14:21:16 - Adam Rankin
re #955 correctly re-calculating input row increment and output row increment if the image is a double row
Commit: r:4130|plus:4130

#### 2015-05-19, 13:41:30 - Adam Rankin
Moving issues to bottom for easier finding

* automatic test of 3d data collection fails on all platforms (somewhat differently on Linux)
* if I replay the 3d water tank sequence using PlusServer then it shows up scrambled in Slicer
* if I change the order of dimensions in the 3d water tank sequence (112,48,112,18 to 112,112,48,18) then PlusServer crashes (in clip&flip, due to out of bound mem access)

#### 2015-05-19, 13:41:47 - Adam Rankin
re #955 adding config files for biplane calibration
Commit: r:4144|plus:4144

#### 2015-05-23, 01:57:05 - Andras Lasso
@rankin: are the issues listed above (automatic test failures, etc.) still unresolved?

#### 2015-05-25, 14:04:23 - Adam Rankin
I don't think so, I just haven't had time to validate. First point seems to be resolved, second I think is resolved (just be aware that one of the saved 3d datasets is a 2d dataset squished into 3d volumes), and I haven't tested the third one yet.

#### 2015-05-25, 17:51:05 - Adam Rankin
Confirmed does not crash with dimension order swapped.

#### 2015-05-25, 17:56:14 - Adam Rankin
Confirmed 3dTankWallSequence looks nice. Deleting old test data to remove any sources of confusion.

#### 2015-05-25, 17:56:38 - Adam Rankin
re #955 removing old test data and updating test config file to point to more reliable test data
Commit: r:4154|plus:4154

#### 2015-05-25, 17:57:55 - Adam Rankin
And looks like tests are passing. I think this has been resolved. @lassoan I leave it to you to close.

#### 2015-05-25, 17:57:55 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2015-05-25, 19:31:41 - Andras Lasso
Great, thank you!

#### 2015-05-25, 19:31:41 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2015-07-30, 17:30:42 - Andras Lasso
re #955: Simplified clipping parameters definition for 2D images (if only two numbers are provided then the third one is automatically provided)
Commit: r:4231|plus:4231

#### 2016-08-05, 15:19:54 - Andras Lasso
re #955: Fixed crash when requested an image from the US simulator without providing valid transform input
Commit: r:4783|plus:4783


## #956 Allow setting compass correction parameters for PhidgetSpatial
Allow setting CPhidgetSpatial_setCompassCorrectionParameters for PhidgetSpatial compass sensor.

#### 2014-12-19, 21:04:56 - Andras Lasso
test #956: Added CompassCorrectionParameters to PhidgetSpatial device
Commit: r:3903|plus:3903

#### 2014-12-19, 21:04:56 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-14, 01:44:27 - Andras Lasso
status: changed from "Test" to "Fixed"


## #957 Improve breast surgery fixtures design


#### 2015-01-06, 01:33:12 - Tamas Ungi
Re #957: Leave a bit more room for the needle in bag.
Commit: r:3908|plus:3908

#### 2015-01-06, 01:55:56 - Tamas Ungi
Re #957: Added holes to make printer support material wash out faster.
Commit: r:3909|plus:3909

#### 2015-01-06, 17:06:52 - Andras Lasso
re #957: Fixed model catalog build error (NeedleGrabber-SensorBagHolder_1.0.stl file was deleted but still kept in the catalog contents file). Also added dashboard submission scripts to get notification about model catalog build failures.
Commit: r:3910|plus:3910

#### 2015-01-06, 20:17:37 - Tamas Ungi
Re #957: Started working on localization needle model.
Commit: r:3911|plus:3911

#### 2015-01-07, 04:16:54 - Tamas Ungi
Re #957: Started working on needle hub grabber.
Commit: r:3912|plus:3912

#### 2015-01-07, 17:18:19 - Tamas Ungi
Re #957: WIP
Commit: r:3913|plus:3913

#### 2015-01-14, 18:31:58 - Tamas Ungi
Re #957: Deleting model that failed in practice.
Commit: r:3917|plus:3917

#### 2015-01-22, 19:13:31 - Tamas Ungi
Re #957: Adding new SensorHolder designed in SolidWorks.
Commit: r:3919|plus:3919

#### 2015-01-29, 18:13:06 - Tamas Ungi
Re #957: Started working on needle hub grabber in SW.
Commit: r:3934|plus:3934

#### 2015-02-02, 16:36:56 - Tamas Ungi
Re #957: Removing old sensor holder that we don't use anymore.
Commit: r:3939|plus:3939

#### 2015-02-02, 16:41:00 - Tamas Ungi
Re #957: Removing unused parts.
Commit: r:3941|plus:3941

#### 2015-02-02, 16:46:28 - Tamas Ungi
Re #957: Removing unused parts.
Commit: r:3942|plus:3942

#### 2015-02-02, 16:57:25 - Tamas Ungi
Re #957: Fixing compile error.
Commit: r:3943|plus:3943

#### 2015-03-14, 12:21:52 - Andras Lasso
milestone_id: changed from null to "Continuous activities"

#### 2015-04-28, 23:54:01 - Tamas Ungi
Re #957: Added divots for pivot calibration.
Commit: r:4116|plus:4116

#### 2016-05-11, 18:26:14 - Tamas Ungi
Re #957: Adding Bard needle for virtual testing.
Commit: r:4621|plus:4621

#### 2016-07-13, 17:03:31 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Release Plus-Future"


## #958 PLUS_EXECUTABLE _OUTPUT_PATH needs a default for PlusLib
If not using the superbuild for PlusLib, configuration fails with

  CMake Error at src/DataCollection/CMakeLists.txt:870 (FILE):
    file COPY given no DESTINATION

because PLUS_EXECUTABLE_OUTPUT_PATH needs a value.

${PlusLib_BINARY_DIR}/bin is a reasonable default.

#### 2015-01-26, 22:42:33 - Matt McCormick
assigned_to_id: changed from null to "matt.mccormick"

#### 2015-01-27, 05:33:33 - Andras Lasso
Fixed, see commit 3926
https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/3926

Thanks Matt!

#### 2015-01-27, 05:33:33 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-01-27, 05:33:33 - Andras Lasso
CommentContent: changed from "Fixed, see commit 3926
https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/3926" to "Fixed, see commit 3926
https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/3926

Thanks Matt!"


## #959 Enable support for bi-plane functionality for screen capture devices
Configurable bi-plane ROI based image bi-section for screen capture based devices

Configurable XML parameters in imaging device subtag for two ROI elements (4 points enough?)

Captured image can then be dissected using vtk image processing filter (if already exists, great!) to produce two output images

Two output images the put into two output video sources as per usual

Test and confirm openIGTLink sending of two image streams possible & performs well

#### 2015-02-03, 23:10:28 - Andras Lasso
I would suggest to do region extraction and image flip in one step (do flipping while copying pixels from the selected region).

#### 2015-02-03, 23:13:54 - Andras Lasso
Something like this would be nice:

    <Device
      Id='VideoDevice' 
      Type='Epiphan' >
      <DataSources>
        <DataSource Type='Video' Id='VideoLeft' PortUsImageOrientation='MF' ClipRectangleOrigin='100 100' ClipRectangleSize='200 400' />
        <DataSource Type='Video' Id='VideoRight' PortUsImageOrientation='MF' ClipRectangleOrigin='400 100' ClipRectangleSize='200 400'  />
      </DataSources>
      <OutputChannels>
        <OutputChannel Id='VideoStreamLeft' VideoDataSourceId='VideoLeft' />
        <OutputChannel Id='VideoStreamRight' VideoDataSourceId='VideoRight' />
      </OutputChannels>
    </Device>


#### 2015-02-05, 20:16:53 - Adam Rankin
re #959 creating biplane directory
Commit: r:3954|plus:3954

#### 2015-02-05, 20:17:14 - Adam Rankin
re #959 branching PlusBuild
Commit: r:3955|plus:3955

#### 2015-02-05, 20:18:44 - Adam Rankin
re #959 updating external project definition to point to branch specific folders
Commit: r:3956|plus:3956

#### 2015-02-05, 20:19:23 - Adam Rankin
re #959 branching plusapp
Commit: r:3957|plus:3957

#### 2015-02-05, 20:19:51 - Adam Rankin
re #959 branching pluslib
Commit: r:3958|plus:3958

#### 2015-02-08, 16:11:08 - Adam Rankin
re #959 Merging trunk into biplane branch
Merged revision(s)  from trunk/PlusLib:
Merged revision(s)  from trunk/PlusApp:
Merged revision(s)  from trunk/PlusBuild:
Commit: r:3963|plus:3963

#### 2015-02-08, 17:21:11 - Adam Rankin
@lassoan What do you think of a configuration like this:

~~~~
    <Device
      Id='VideoDevice' 
      Type='Epiphan' >
      <Biplane>
        <!-- an example with a 1280x720 Epiphan capture, cut in half -->
        <RegionExtraction ClipRectangleOrigin='0 0' ClipRectangleSize='640 720' DataSourceIdOutput='AxialVideo'/>
        <RegionExtraction ClipRectangleOrigin='640 0' ClipRectangleSize='640 720' DataSourceIdOutput='SagittalVideo'/>
      </Biplane>
      <DataSources>
        <DataSource Type='Video' Id='AxialVideo' PortUsImageOrientation='MF'  />
        <DataSource Type='Video' Id='SagittalVideo' PortUsImageOrientation='MF'  />
      </DataSources>      
      <OutputChannels>
        <OutputChannel Id='LeftVideoStream' VideoDataSourceId='AxialVideo' />
        <OutputChannel Id='RightVideoStream' VideoDataSourceId='SagittalVideo' />
      </OutputChannels>
    </Device>

~~~~

Pros: more explicit, can be dropped into any device (for example, openIGTLink video source) to have the same effect
Cons: need to link DataSourceIdOutput to a valid data source

#### 2015-02-08, 19:01:24 - Andras Lasso
For flexibility, we plan to implement any new image processing operation in separate devices (there is already 'ImageProcessor' base class and one example that extracts bone surface) instead of building it into an existing device. We could add a region extractor device but region extraction is so simple, so frequently needed (already implemented in several devices but still missing from some, see #433), and so linked with reordering (we copy pixels anyway, why not just copy&reorder once and only those pixels that we need) that it makes sense to implement it at the data source level.

Possible implementation:
* store clipping info the same place as orientation (DataSource element)
* pass clipping info along with orientation information to the flipping functions
* iterate through all output channels when copying frames from the device buffer to the circular buffer (such a for loop already implemented in Epiphan device, but it only supports different image orientations and color modes so far, not yet clipping)

#### 2015-02-09, 16:36:11 - Adam Rankin
re #959 Cleaning up Epiphan frame grab, if there were multiple output channels, it would attempt to grab multiple different frames. Limited to one output channel.

Modified DataCollector to properly fail if any device reported an invalid configuration
Commit: r:3966|plus:3966

#### 2015-02-09, 21:10:48 - Andras Lasso
Note that Epiphan has a unique feature: hardware cropping rectangle. Epiphan does not acquire the whole frame but only the region that we ask for; making the acquisition faster. Software clipping rectangles for each imaging plane is independent from this low-level hardware cropping (we need both; in all other imaging devices we only have the software clipping rectangle).

#### 2015-02-09, 21:38:18 - Adam Rankin
re #959 Major refactor, removing direct access to vtkPlusBuffer as a member of vtkPlusDataSource. Public function made protected and passthrough functions added to vtkPlusDataSource.

This is a prelude to modifying vtkPlusDataSource::AddItem to have control over utilizing clipping params defined in the vtkPlusDataSource to support the biplane modifications
Commit: r:3967|plus:3967

#### 2015-02-09, 22:14:11 - Adam Rankin
re #959 missing GetBuffer call causing crash of infinite stack size
Commit: r:3968|plus:3968

#### 2015-02-10, 04:08:46 - Adam Rankin
re #959 modifications to data source -> buffer item addition to support clipping of image during reorientation

adding reading/writing of custom properties to data source XML serialization
Commit: r:3969|plus:3969

#### 2015-02-10, 19:51:12 - Adam Rankin
re #959 further work implementing clip alongside image reorientation

fixed bug where an image was getting reoriented twice

fixed bug where multiple timestamps were getting reported to log when it should have been done only once

simplified AddItem calls by passing to a single function that does work
Commit: r:3971|plus:3971

#### 2015-02-11, 17:07:42 - Adam Rankin
re #959 WIP accounting for clipping info in GetOrientedClippedImage
Commit: r:3972|plus:3972

#### 2015-02-11, 21:12:15 - Adam Rankin
re #959 validating output image size before performing and flipping and clipping

adding KIJ to IJK transpose field to FlipInfoType
Commit: r:3973|plus:3973

#### 2015-02-11, 21:14:29 - Adam Rankin
@lassoan If you have a few minutes, could you review plus:3973 and double check my logic for validating output image size? Also, could you add me as a recipient of emails for the dashboard? I think it's still pointing to my queens email.

#### 2015-02-11, 22:02:30 - Andras Lasso
done, wrote comments in the commit inline

#### 2015-02-12, 18:23:29 - Adam Rankin
re #959 changing tranpose boolean to an enum to support multiple transposes in the future
Commit: r:3979|plus:3979

#### 2015-02-12, 19:59:22 - Adam Rankin
re #959 adding eFlip functionality

correctly setting default of NO_CLIP to data source

sending in vtkImageData* instead of individual parameters to FlipClipImageGeneric to enable more advanced behavior
Commit: r:3981|plus:3981

#### 2015-02-12, 21:35:32 - Adam Rankin
re #959 WIP transpose operation in progress
Commit: r:3983|plus:3983

#### 2015-02-13, 15:08:26 - Adam Rankin
re #959 transpose implemented, untested
Commit: r:3984|plus:3984

#### 2015-02-17, 17:01:54 - Adam Rankin
re #959 WIP further progress in biplane support

clipping implemented when no flipping is required

work on epiphan device to support two data sources with clipping information taken into account
Commit: r:3985|plus:3985

#### 2015-02-17, 18:48:46 - Adam Rankin
re #959 modifying epiphan device to do bi-plane capture
Commit: r:3986|plus:3986

#### 2015-02-17, 19:11:58 - Adam Rankin
re #959 correctly using 0 based indices in flip operation

adding 3d support for 2d flip operations
Commit: r:3987|plus:3987

#### 2015-02-17, 19:16:13 - Adam Rankin
re #959 double column support for 2d flip with 3d images
Commit: r:3988|plus:3988

#### 2015-02-17, 21:34:02 - Adam Rankin
re #959 updating PlusVideoFrame::FlipClipImage to do proper image analysis before submitting to algorithm

adding clip criteria to flip x and flip y code

cleaning up comparison of 0-based extents and 1-based dimensions in code
Commit: r:3989|plus:3989

#### 2015-02-17, 22:17:08 - Adam Rankin
re #959 WIP mistake discovered in flip X

flip x & y completed
Commit: r:3990|plus:3990

#### 2015-02-17, 22:17:36 - Adam Rankin
re #959 removing erroneous PlusServer commit
Commit: r:3991|plus:3991

#### 2015-02-18, 13:23:12 - Adam Rankin
re #959 detected another roadblock for performing clipping in eFlip
Commit: r:3992|plus:3992

#### 2015-02-19, 19:12:37 - Adam Rankin
re #959 major mistake in output pixel calculation fixed, new variables to clean up readability of code

if I never have to look at a pixel ever again... it will be too soon
Commit: r:3993|plus:3993

#### 2015-02-19, 19:13:48 - Adam Rankin
re #959 Corrected erroneous resetting of input pixel to beginning of the data set in eFlip situation
Commit: r:3994|plus:3994

#### 2015-02-19, 19:45:15 - Adam Rankin
re #959 implementing clipping on transpose

now on to testing/debugging
Commit: r:3995|plus:3995

#### 2015-02-19, 21:13:10 - Adam Rankin
re #959 debugging of saved data source with clipping parameters engaged, works! flipping and clipping currently untested 
Commit: r:3996|plus:3996

#### 2015-02-19, 21:48:42 - Adam Rankin
re #959 correctly determining bounds for clipping extents
Commit: r:3997|plus:3997

#### 2015-02-19, 21:55:13 - Adam Rankin
re #959 extracting error prone calculation to single method within PlusCommon
Commit: r:3998|plus:3998

#### 2015-02-19, 22:09:12 - Adam Rankin
re #959 correcting build error, adding clipping validation earlier in the process, todo fallback calculations if requested clip size fails
Commit: r:3999|plus:3999

#### 2015-02-20, 16:47:36 - Adam Rankin
re #959 off-by-one error in vertical flip, does not crash on de-allocate for vFlip, only hFlip
Commit: r:4000|plus:4000

#### 2015-02-20, 16:49:41 - Adam Rankin
re #959 accidental commit of test file
Commit: r:4001|plus:4001

#### 2015-02-20, 18:58:53 - Adam Rankin
Working! Epiphan device now supports bi-plane acquisition.

#### 2015-02-20, 18:58:53 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-02-20, 19:00:04 - Andras Lasso
superb!

#### 2015-02-20, 19:10:41 - Adam Rankin
re #959 adding config file for bi-plane aurora broadcasting
Commit: r:4003|plus:4003

#### 2015-02-20, 19:33:21 - Adam Rankin
re #959 WIP experimental implementation of multi-instance PlusServer
Commit: r:4004|plus:4004

#### 2015-02-20, 20:27:24 - Adam Rankin
re #959 updating server launcher to use new syntax
Commit: r:4005|plus:4005

#### 2015-02-20, 20:33:06 - Adam Rankin
re #959 RightLeftVideo -> RightVideo
Commit: r:4006|plus:4006

#### 2015-02-20, 20:33:48 - Adam Rankin
re #959 ToolReferenceFrame now set
Commit: r:4007|plus:4007

#### 2015-03-11, 16:52:42 - Adam Rankin
Wrong ticket number.

fixed #959 : url:https://www.assembla.com/code/bm1A8eCNSr4l2deJe5cbCb/bnyqsQCNSr4l2deJe5cbCb/commit/4038|plus:4038

#### 2015-03-11, 16:52:42 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-05-25, 17:47:16 - Adam Rankin
re #959 adding sample biplane data
Commit: r:4153|plus:4153

#### 2015-05-29, 13:47:32 - Adam Rankin
re #959 adding test data ie33 and NDI Aurora
Commit: r:4164|plus:4164

#### 2015-06-02, 16:25:20 - Adam Rankin
re #959 Updating biplane configuration file to remove warnings and improve clipping, also repairing broken description in an unrelated config file
Commit: r:4168|plus:4168

#### 2015-06-02, 17:45:14 - Adam Rankin
re #959 adding NDI aurora to config file
Commit: r:4169|plus:4169

#### 2015-06-04, 13:51:15 - Adam Rankin
re #959 Adding in better sample 3D data

Changing sim3d to point to new data

Removing old data
Commit: r:4177|plus:4177

#### 2015-06-29, 17:23:04 - Adam Rankin
re #959 significantly better 3D recorded movie, clearer ultrasound and stylus moving within field of view
Commit: r:4205|plus:4205

#### 2015-06-29, 17:32:25 - Adam Rankin
re #959 overriding invalid tracking transform status for reference sensor
Commit: r:4206|plus:4206

#### 2015-06-29, 18:35:51 - Adam Rankin
re #959 adding 3d playback config file
Commit: r:4207|plus:4207

#### 2015-07-06, 23:15:52 - Adam Rankin
re #959: changing ReplayEnabled to RepeatEnabled
Commit: r:4216|plus:4216

#### 2016-01-11, 18:53:17 - Adam Rankin
re #959 removing saveddatasource single data source output because clipping mechanism means many data sources may be valid
Commit: r:4434|plus:4434

#### 2016-01-11, 22:35:26 - Adam Rankin
re #959 enabling support for clipping of source image into multiple data sources
Commit: r:4435|plus:4435


## #960 Implement ascending/descending flip for 3D probes
Currently only xxA port image orientation is supported. If input is xxD then the image should be flipped around the third axis, but it is not implemented yet.


## #961 Change the StylusTip coordinate system axes definition
Needle shaft should be the Z axis instead of X axis, as using Z axis is much more commonly used in IGT systems.
https://github.com/SlicerIGT/SlicerIGT/issues/6

Also, the definition should be that the Z axis is the needle shaft. The tip to sensor direction is just an approximation in the stylus calibration algorithm (if no spin calibration is performed).

If it's a device that is held in hand in a particular orientation (e.g., buttons are at the top) then x axis points to the right and y axis points up (z axis points towards the user)

#### 2015-02-06, 04:35:44 - Andras Lasso
description: changed from "Needle shaft should be the ..." to "Needle shaft should be the ..."

#### 2015-02-06, 05:21:21 - Andras Lasso
description: changed from "Needle shaft should be the ..." to "Needle shaft should be the ..."

#### 2015-05-27, 20:20:16 - Andras Lasso
re #961: Changed StylusTip coordinate system so that the stylus points towards +Z axis direction
Commit: r:4160|plus:4160

#### 2015-05-28, 15:57:09 - Andras Lasso
re #961: Doc update for stylus coordinate system axis update

Commit: r:4161|plus:4161

#### 2015-05-28, 16:05:51 - Andras Lasso
re #961: Doc update for stylus coordinate system axis update

Commit: r:4162|plus:4162

#### 2015-05-28, 16:06:33 - Andras Lasso
re #961: Doc update for stylus coordinate system axis update

Commit: r:4163|plus:4163

#### 2015-06-02, 21:58:24 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-07-31, 21:34:33 - Andras Lasso
re #961: Fixed SimulatedUltrasound_Scene.mrb to work with latest Slicer trunk
Commit: r:4235|plus:4235


## #962 Frame rendering (capture tab) is incorrect when image data is low resolution
Can reproduce with PlusDeviceSet_fCal_Sim_3d.xml

Capture tab will show a distorted scene.

Also occurs with 2D data, can repro with the attached .mha

#### 2015-02-06, 18:41:38 - Adam Rankin
file:dji5BQRI8r5jGSacwqEsg8


#### 2015-02-06, 18:41:38 - Adam Rankin
Attachment added: "lowres.mha"

#### 2016-06-30, 14:37:37 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"


## #963 Refactor PlusServer to enable broadcast of multiple channels
Biplane support will require broadcasting of two separate video channels, may as well support broadcasting of N channels.

#### 2015-02-08, 19:10:35 - Andras Lasso
For backward compatibility, the simplest implementation, I would just instantiate one vtkPlusOpenIGTLinkServer object for each PlusOpenIGTLinkServer element in the config file. Having a separate vtkPlusOpenIGTLinkServer offers better parallelization as they would use separate sockets, so we could send over large images on one socket and it would not impact getting tracking info or small images with small latency through another socket.

Each server has its own processing thread, so we can start as many of them as needed. We only need to call server->ProcessPendingCommands(); sequentially for each server instance, as command processing is done from the main thread.

#### 2015-02-08, 19:11:59 - Adam Rankin
Fantastic, I like it.

#### 2015-02-08, 19:12:07 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-02-20, 21:05:46 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-03-02, 16:50:54 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-03-02, 16:50:59 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2015-03-11, 16:48:05 - Adam Rankin
Ticket can now be considered fixed as PlusServerLauncher now launches a PlusServer process, removing the potential for different launching behavior.

#### 2015-03-11, 16:48:05 - Adam Rankin
status: changed from "Test" to "Fixed"


## #964 MMF video capture in RGB24 mode has inverted colors
User report:
I am using the Plus for the first time, and when I connected a usb cam and used the configuration file for PlusDeviceSet_Server_MmfColorVideoCapture. In the received image the colors is not correct, the red color is blue (I think it is captured as BRG) and I do not know how to correct that. There is a point I forget to clarify before, when I set the video format to 'YUY2' I can not see the image at all, So I changed it to 'RGB24'. then I get the Image and errors as attached.
the object that looks orange in the picture is blue one. 

#### 2015-02-10, 05:44:30 - Andras Lasso
re #964: Changed RGB/BGR pixel order when getting RGB images from MMF video source
Commit: r:3970|plus:3970

#### 2015-02-10, 05:48:07 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-14, 01:43:36 - Andras Lasso
status: changed from "Test" to "Fixed"


## #965 Improve Plus image buffer management performance
Now that Plus is used for 4D ultrasound, color image, multiple video streams, some profiling and optimization of buffer management is due.

#### 2015-02-12, 01:02:31 - Andras Lasso
re #965: Improved performance of buffer management (reduced number of memory copies, number of mutex locking)
Commit: r:3974|plus:3974

#### 2015-02-12, 01:32:09 - Andras Lasso
re #965: Added missing file to source control
Commit: r:3975|plus:3975

#### 2015-02-12, 01:51:31 - Andras Lasso
re #965: Fixed build error due to case sensitive header file name
Commit: r:3976|plus:3976

#### 2015-02-12, 03:28:31 - Andras Lasso
re #965: Fixed linux build error

Commit: r:3977|plus:3977

#### 2015-02-12, 06:42:31 - Andras Lasso
re #965: Fixed build error due to reorganized header files
Commit: r:3978|plus:3978

#### 2015-02-12, 20:45:22 - Andras Lasso
re #965: Fixed linux build problem (missing include double.h)
Commit: r:3982|plus:3982

#### 2015-03-14, 12:19:22 - Andras Lasso
status: changed from "New" to "Fixed"


## #966 Use orientation information in POSITION OpenIGTLink messages
POSITION messages contain not just position but also orientation. Plus currently only uses the position component. Change Plus to also use the orientation.

See more details here:
https://www.assembla.com/spaces/plus/messages/5066883


#### 2015-03-14, 12:21:15 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2015-03-30, 04:43:44 - Andras Lasso
test #966: Fixed POSITION OpenIGTLink message interpretation (now we use orientation, too)
Commit: r:4077|plus:4077

#### 2015-03-30, 04:43:44 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-30, 04:57:47 - Andras Lasso
test #966: Fixed POSITION OpenIGTLink message interpretation (now we use orientation, too)
Commit: r:4078|plus:4078

#### 2015-04-25, 15:00:55 - Andras Lasso
status: changed from "Test" to "Fixed"


## #967 Resolve duplicity between plusserverlauncher and plusserver executables
Refactor common code into single system to prevent mismatched feature sets

#### 2015-02-20, 21:05:32 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-03-02, 16:47:46 - Adam Rankin
re #967 experimental approach to PlusServerLauncher
Commit: r:4019|plus:4019

#### 2015-03-02, 21:51:17 - Andras Lasso
Originally, PlusServerLauncher was supposed to launch a PlusServer instance but it ended up being much simpler to just run instantiate the server in the same process. However, having the server in a separate process has some advantages, so it's good if you can implement this separate process starting. Advantages include:
* we can open an OpenIGTLink server socket in PlusServerLauncher that allows remote clients to start/stop/restart a server (even sending the config file contents; this would allow us to store the device set config file on the Slicer computer, change the config file from the Slicer computer, etc.), the PlusServerLauncher could be started automatically when Windows starts
* in case of a crash, PlusServerLauncher would still be running so it could report the error, restart the server, etc.
* by having PlusServer in a separate process, we could make sure that all the resources, handles, memory, etc. are completely released when the server is restarted

There is no need to redirect console output to the small error log window for now (you can log still log PlusServerLauncher stuff there), but instead we could add a checkbox to show/hide the console window of the started PlusServer process. It is simpler, and all 4 levels of color highlighting would work (as opposed to just stderr/stdout). Still, keep the code for catching error/warning outputs around, as it might be useful in the future (e.g, if we chose to send error/warning messages to Slicer).


#### 2015-03-03, 20:15:25 - Adam Rankin
test #967 sending of newline allows command to be sent to PlusServer via stdin
Commit: r:4020|plus:4020

#### 2015-03-03, 20:15:25 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-03-03, 20:23:58 - Adam Rankin
re #967 handling WARNING output messages from PlusServer executable
Commit: r:4021|plus:4021

#### 2015-03-03, 20:47:17 - Adam Rankin
re #967 Improving PlusServerLauncher console feedback to differentiate between SERVER messages and launcher messages

Adding optional prefix to logging mechanism
Commit: r:4022|plus:4022

#### 2015-03-03, 20:48:23 - Adam Rankin
re #967 typo in log output
Commit: r:4023|plus:4023

#### 2015-03-03, 20:59:06 - Adam Rankin
re #967 Improved handling of abnormal server exit. Improved logging details when launching and terminating server instances.
Commit: r:4024|plus:4024

#### 2015-03-03, 21:00:38 - Adam Rankin
Ah! I just saw your message Andras.

If you don't mind, I will leave it as is for you to explore. It is working well at the moment, and could be easily extended in the future. It supports 3 color catching of messages as well as an optional prefix for differentiating sources of log messages. It also handles normal and abnormal server exiting.

#### 2015-03-03, 21:01:08 - Adam Rankin
Let me know what you think and we can either integrate it or drop the changes, I don't mind! It was more of an exploratory experiment.

#### 2015-03-03, 21:38:53 - Andras Lasso
Having PlusServer launched as a separate process from PlusServerLauncher has a couple of advantages, so it's good that you've implemented it. Is it ready for testing?

#### 2015-03-04, 02:12:39 - Adam Rankin
Yes, tested on Windows and it seems quite stable. Unsure of disconnect functionality in Linux.

#### 2015-03-04, 19:16:14 - Andras Lasso
re #967: Made PlusServer quit if console window is closed

Qt cannot send SIGINT (ctrl-c) events on Windows, only on Linux/Mac. On Windows it sends WM_CLOSE to all windows of the process instead. (http://doc.qt.io/qt-5/qprocess.html#terminate)
To allow PlusServerLauncher to stop PluServer, we make the PlusServer application quit if if its console receives WM_CLOSE.

Commit: r:4028|plus:4028

#### 2015-03-04, 19:19:35 - Andras Lasso
@rankin Server process launching looks nice and works well except the termination by sending special commands to the process stdin.

I've changed the PlusServer to exit on QProcess:terminate (on linux/mac this generates SIGINT = ctrl-c, which we already observe; on Windows it generates WM_CLOSE that now we observe).

Please remove the command sending/receiving through stdin and simply use QProcess::terminate instead.

#### 2015-03-05, 18:27:06 - Adam Rankin
re #967 WIP merge trunk to branch
Commit: r:4031|plus:4031

#### 2015-03-11, 16:32:32 - Adam Rankin
re #967 trunk merge, fixing automatic tests
Commit: r:4036|plus:4036

#### 2015-03-11, 16:45:34 - Adam Rankin
re #967 removing C-style code and replacing with C++ style
Commit: r:4037|plus:4037

#### 2015-03-11, 16:49:16 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-03-11, 16:51:38 - Adam Rankin
fixed #967 merging branch into trunk
Commit: r:4038|plus:4038

#### 2015-03-11, 20:29:48 - Andras Lasso
re #967: Use > instead of | as log prefix separator to make automatic log parsing easier
Commit: r:4043|plus:4043

#### 2015-03-11, 20:31:09 - Andras Lasso
re #967: Made PlusServer sropping more robust (in release mode on Windows a single terminate request did not stop the server)
Commit: r:4044|plus:4044

#### 2015-03-15, 03:45:51 - Andras Lasso
re #967: Don't log that PlusServer is being stopped if it is stopped already
Commit: r:4053|plus:4053

#### 2015-03-16, 05:32:00 - Andras Lasso
re #967: Show error on PlusServerLauncher GUI if server stops unexpectedly
Commit: r:4058|plus:4058

#### 2015-03-29, 20:15:59 - Andras Lasso
re #967: Fixed logging from PlusServerLauncher (fixed log line breaks)
Commit: r:4070|plus:4070

#### 2015-03-29, 20:18:24 - Andras Lasso
re #967: Fixed logging from PlusServerLauncher (fixed log line breaks)
Commit: r:4071|plus:4071

#### 2015-03-31, 19:22:06 - Andras Lasso
re #967: Log PlusServer IP address in launcher
Commit: r:4080|plus:4080

#### 2015-03-31, 21:16:51 - Andras Lasso
re #967: Log PlusServer IP address in launcher - improve formatting
Commit: r:4082|plus:4082

#### 2015-04-15, 17:05:53 - Adam Rankin
re #967 adding feature for more descriptive text from PlusServerLauncher
Commit: r:4103|plus:4103


## #968 Add generic serial device communication
We would need to be able to send/receive simple commands to serial devices through OpenIGTLink.

#### 2015-02-21, 16:38:24 - Andras Lasso
test #968: Added generic serial device
Commit: r:4008|plus:4008

#### 2015-02-21, 16:38:24 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-02-21, 16:38:45 - Andras Lasso
re #968: Added generic serial device documentation
Commit: r:4009|plus:4009

#### 2015-02-23, 20:29:52 - Andras Lasso
re #968: Use non-overlapped IO for serial communication to make it more robust. With overlapped IO ClearCommError sometimes caused stack corruption.
Commit: r:4010|plus:4010

#### 2015-02-24, 18:25:03 - Andras Lasso
re #968: Encode OpenIGTLink STRING command responses to make sure valid XML string is generated
Commit: r:4011|plus:4011

#### 2015-02-27, 18:41:18 - Andras Lasso
re #968: Fixed random crash caused by trying to log a NULL string when no response was expected from the serial device
Commit: r:4017|plus:4017

#### 2015-03-04, 18:21:59 - Andras Lasso
re #968: Added missing variable intialization
Commit: r:4027|plus:4027

#### 2015-03-16, 00:56:18 - Andras Lasso
re #968: Improved documentation
Commit: r:4057|plus:4057

#### 2015-03-17, 14:46:35 - Andras Lasso
re #968: Improved documentation
Commit: r:4059|plus:4059

#### 2015-03-30, 04:22:19 - Andras Lasso
status: changed from "Test" to "Fixed"


## #969 fCal layout is not optimal on high and low resolution screens
Some parts are clipped

#### 2015-02-27, 21:52:56 - Andras Lasso
test #969: Made fCal layout more flexible
Commit: r:4018|plus:4018

#### 2015-02-27, 21:52:56 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-14, 01:43:07 - Andras Lasso
status: changed from "Test" to "Fixed"


## #970 Allow sending custom strings as OpenIGTLink string messages
Allow sending custom strings as OpenIGTLink string messages. For example, it could be useful for sending additional information for images, such as clipping fan.

#### 2015-03-04, 00:05:26 - Andras Lasso
fixed #970: Custom frame fields can now be streamed using OpenIGTLink STRING messages

Example: vtkSonixPortaVideoSource and PlusDeviceSet_Server_SonixTouch_L14-5_Porta.xml
Commit: r:4025|plus:4025

#### 2015-03-04, 00:05:26 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-03-04, 00:06:28 - Andras Lasso
re #970: Added documentation for new STRING message streaming
Commit: r:4026|plus:4026


## #971 EditSeqMetaFile add transform command should also add transform status
User request: We are using the EditSeqMetaFile to add a transform to a sequence metafile. When we do this, we notice that no associated status is created with the added transform. Is this expected? If so, is there any way to add the transform status?


#### 2015-03-09, 17:40:12 - Andras Lasso
test #971: Add transform status field when adding a transform in EditSeqMetaFile
Commit: r:4034|plus:4034

#### 2015-03-09, 17:40:12 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-09, 17:42:04 - Andras Lasso
@mholden8: Solution is ready. You can either build Plus today or wait for the nightly build result and test it tomorrow morning. Change ticket status to Fixed if it works for you or let me know if something need to be changed. Thanks!

#### 2015-03-10, 16:54:56 - Matthew Holden
Tested and works. Thanks!

#### 2015-03-10, 16:54:56 - Matthew Holden
status: changed from "Test" to "Fixed"


## #972 Allow selection of measurement volume for NDI trackers
NDI supports selection of various types (cube, dome, ...) and sizes of measurement volumes on certain trackers. Allow PLUS to select a volume.

#### 2015-03-13, 20:54:47 - Andras Lasso
test #972: Added MeasurementVolumeNumber parameter to the device set config file to allow measurement volume selection
Commit: r:4047|plus:4047

#### 2015-03-13, 20:54:47 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-13, 20:57:23 - Andras Lasso
re #972: Fixed documentation typo
Commit: r:4048|plus:4048

#### 2015-03-13, 20:58:47 - Andras Lasso
re #972: Fixed documentation typo
Commit: r:4049|plus:4049

#### 2015-03-29, 19:45:13 - Andras Lasso
status: changed from "Test" to "Fixed"


## #973 PlusServer launcher fails if installed in directory that has space in its name
Probably need to put the process name between ''

#### 2015-03-17, 19:38:09 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2015-03-19, 16:35:51 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-03-29, 23:31:47 - Andras Lasso
fixed #973: Fixed PlusServer launcher to support spaces in PlusServer and config file path names

Also made the PlusServerLauncher a windowed application (to not show a console, even temporarily)
Commit: r:4072|plus:4072

#### 2015-03-29, 23:31:47 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-03-29, 23:36:48 - Andras Lasso
fixed #973: Updated PlusServerLauncher documentation
Commit: r:4073|plus:4073

#### 2015-03-30, 03:13:19 - Andras Lasso
fixed #973: Updated PlusServerLauncher error display popups
Commit: r:4074|plus:4074


## #974 PlusServer launcher fails to gracefully stop PlusServer process on WinXPe
PlusServer launcher fails to gracefully stop PlusServer process on WinXPe. The launcher has to kill the process.

#### 2015-03-29, 17:37:33 - Andras Lasso
test #974: Use GetConsoleWindow to get console window HWND
Commit: r:4068|plus:4068

#### 2015-03-29, 17:37:33 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-29, 19:06:48 - Andras Lasso
fixed #974: Fixed PlusServer stopping in PlusServerLauncher on SonixTouch (WinXPe)
Commit: r:4069|plus:4069

#### 2015-03-29, 19:06:48 - Andras Lasso
status: changed from "Test" to "Fixed"


## #975 PortUSImageOrientation is ignored
PortUsImageOrientation is ignored and it causes images acquired with incorrect image orientation.

For example, try changing PortUsImageOrientation inPlusDeviceSet_Server_MmfVideoCapture.xml to 'MF' and 'UF':
...
      <DataSources>
        <DataSource Type='Video' Id='Video' PortUsImageOrientation='MF'  />
      </DataSources>      
...

In fCal (or when streaming data using PlusServer to Slicer), the image should be flipped differently, but they appear the same.

#### 2015-03-17, 19:33:13 - Adam Rankin
test #975 properly setting image orientation in buffer and data source separately (accidentally set to the same value no matter what)
Commit: r:4061|plus:4061

#### 2015-03-17, 19:33:13 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-03-17, 21:06:07 - Andras Lasso
re #975: Renamed vtkPlusDataSource::SetImageOrientation to SetInputImageOrientation to make it more clear that it refers to the input data's orientation only.
Commit: r:4062|plus:4062

#### 2015-03-17, 21:06:18 - Andras Lasso
re #975: Renamed vtkPlusDataSource::SetImageOrientation to SetInputImageOrientation to make it more clear that it refers to the input data's orientation only.
Commit: r:4063|plus:4063

#### 2015-03-19, 16:08:39 - Adam Rankin
re #975 build fix when philips source is enabled
Commit: r:4064|plus:4064

#### 2015-03-30, 03:23:21 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-03-31, 19:19:48 - Andras Lasso
re #975: Fixed SetInput/OutputImageOrientation mismatch in devices

Input: in general it should not be set in the device class, as it is set by the vtkPlusDataSource from PortUsImageOrientation.
Output: it only has to be set if the orientation can be changed dynamically.
Commit: r:4079|plus:4079

#### 2015-03-31, 19:58:20 - Andras Lasso
re #975: Fixed build warning
Commit: r:4081|plus:4081

#### 2015-04-13, 16:33:05 - Andras Lasso
re #975: Updated documentation: added description of ClipRectangleOrigin and ClipRectangleSize attributes in DataSource element
Commit: r:4099|plus:4099

#### 2015-05-11, 20:18:18 - Andras Lasso
re #975: Added ThorLabs and StealthLink sample config files to install package
Commit: r:4132|plus:4132

#### 2015-05-11, 20:18:40 - Andras Lasso
re #975: Added ThorLabs and StealthLink sample config files to install package
Commit: r:4133|plus:4133

#### 2015-05-14, 14:57:31 - Andras Lasso
re #975: Fixed remaining input image dimension problems (caused image acuqisition failures due to frame size mismatch)
Commit: r:4137|plus:4137

#### 2015-07-17, 22:15:25 - Isaiah Norton
re #975: Fix frameSizeInPix struct in BkProFocusCameraLinkSource.

The third element is used in vtkPlusBuffer::AddItem. When this element is uninitialized, the number is garbage and the frame acquisition fails.

Also add vtkMath include.
Commit: r:4218|plus:4218


## #976 Add stream selection to media foundation video source
See the discussion here:
https://www.assembla.com/spaces/plus/messages/5107663


#### 2015-03-20, 13:50:04 - Andras Lasso
re #976: Added CaptureStreamIndex parameter to MMF video source devices

Commit: r:4066|plus:4066

#### 2015-03-20, 13:53:27 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-03-27, 16:47:39 - Andras Lasso
re #976: Added note about framgrabber devices that use a 'crossbar'
Commit: r:4067|plus:4067

#### 2015-03-29, 19:44:49 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-04-08, 23:28:55 - Isaiah Norton
re #976: don't check video subtype in framerate selection.
Commit: r:4085|plus:4085

#### 2015-04-08, 23:34:36 - Isaiah Norton
re #976: Add --stream-index to vtkMmfVideoSourceTest.
Commit: r:4086|plus:4086


## #977 Support volume reconstruction of color images
The volume reconstructor works for color images, but the output is hardcoded to be grayscale. Need to make vtkPasteSliceIntoVolume::ResetOutput.configurable.

See discussion here:
https://www.assembla.com/spaces/plus/messages/4964273#comment_4990023


## #978 ARCHIVE DESTINATION needed in Install section of CMakeLists.txt
I followed this: https://www.assembla.com/spaces/plus/wiki/Windows_Build_Instructions
However I run into errors like this one on VS2012:
CMake Error at src/VolumeReconstruction/CMakeLists.txt:53 (INSTALL):
  install TARGETS given no ARCHIVE DESTINATION for static library target
  'vtkVolumeReconstruction'.

The proposed patch solves the issue.

#### 2015-04-03, 18:17:30 - Dzenan Zukic
file:cWQ4Dw2I0r5k7dacwqjQWU


#### 2015-04-03, 18:17:30 - Dzenan Zukic
Attachment added: "PlusLibArchiveDestination.patch"

#### 2015-04-03, 18:53:12 - Andras Lasso
Thanks for reporting this.

You can build an installation package by running CreatePackage.bat (this is done every night, runs with the current version of the code), so I'm wondering why you have this error.

Which step of the build process failed with the above error?
Have you changed any default build option?

By default  vtkVolumeReconstruction is built as a DLL and therefore it is a 'runtime' target.
If vtkVolumeReconstruction is built as a static library (lib) then it is an 'archive' target but then it should not be installed with the application at all (because it is unnecessary, as it is already linked into the 'runtime' components).

#### 2015-04-03, 19:00:19 - Dzenan Zukic
I have changed some options (enabled modules for devices I want), but I don't remember changing static/dynamic options. After this fix, I am running into some compile and link errors concerning linkage. Maybe I should delete CMake cache and re-build it. I will post an update.

Update: I think I have changed PLUSBUILD_BUILD_SHARED_LIBS to OFF. I am building with default options now.

#### 2015-04-03, 19:00:19 - Dzenan Zukic
CommentContent: changed from "I have changed some options (enabled modules for devices I want), but I don't remember changing static/dynamic options. After this fix, I am running into some compile and link errors concerning linkage. Maybe I should delete CMake cache and re-build it. I" to "I have changed some options (enabled modules for devices I want), but I don't remember changing static/dynamic options. After this fix, I am running into some compile and link errors concerning linkage. Maybe I should delete CMake cache and re-build it. I"

#### 2015-04-03, 22:45:50 - Dzenan Zukic
With default options, it builds successfully.

#### 2015-04-03, 23:17:58 - Andras Lasso
OK, great. I close this issue then. Feel free ro reopen it if you run into any problem.

#### 2015-04-03, 23:17:58 - Andras Lasso
status: changed from "New" to "Invalid"


## #979 Telemed SDK dir rename
What is called Telemed_INCLUDE_DIR in PlusBuild is called DECHOBLASTER_INCLUDE_DIR in PlusLib. The attached patch passed down that CMake variable during superbuild.

#### 2015-04-06, 20:55:39 - Dzenan Zukic
file:bhZZcC3j8r5kWgdmr6bg7m


#### 2015-04-06, 20:55:39 - Dzenan Zukic
Attachment added: "External_PlusLib.cmake.patch"

#### 2015-04-06, 21:53:03 - Andras Lasso
re #979: Fixed type in Telemed include dir handling
Commit: r:4083|plus:4083

#### 2015-04-06, 21:53:03 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-04-06, 22:03:56 - Andras Lasso
re #979: Fixed inconsistent Telemed include dir names
Commit: r:4084|plus:4084

#### 2015-04-06, 22:09:19 - Andras Lasso
Thank you! Committed a somewhat different solution. Please test.

#### 2015-04-06, 22:09:19 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-04-06, 23:01:57 - Dzenan Zukic
I am building it in Release mode now. Once it gets to PlusLib, it will automatically update it. I doubt it will stop building with this change. But instead of hinting with ${TELEMED_SDK_DIR}/include/USGFWSDK/include, you should hint with ${TELEMED_SDK_DIR} or with both.

#### 2015-04-07, 00:44:32 - Andras Lasso
TELEMED_SDK_DIR does not exist, nothing sets it.
FindTelemed.cmake only sets TELEMED_INCLUDE_DIR, which is not used throughout PlusBuild and PlusLib.

#### 2015-04-07, 02:05:52 - Dzenan Zukic
I thought there is only one Telemed path var, TELEMED_INCLUDE_DIR. I meant that, not TELEMED_SDK_DIR.

#### 2015-04-08, 15:10:25 - Dzenan Zukic
The release build was successful.

Additional note for RelWithDebInfo. After copying the DLLs, fCal would start but would not automatically find 'Device set configuration directory'. Release had no problem with that. Once I copied the path from Release to RelWithDebInfo, it stopped producing the error message.

#### 2015-04-09, 12:28:30 - Andras Lasso
The default configuration file directory it's stored in PlusConfig.xml. A default PlusConfig.xml is copied to Debug and Release directories but not to the other two configurations. I've added a note to #980 about it.

#### 2015-04-25, 14:59:38 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2015-05-01, 00:53:14 - Andras Lasso
re #979: Added path hints to find Telemed SDK files in PLTools
Commit: r:4121|plus:4121

#### 2015-05-23, 01:59:14 - Andras Lasso
status: changed from "Test" to "Fixed"


## #980 RelWithDebInfo is a second-class citizen
RelWithDebInfo build mode lacks SEIDrv32.dll and ATC3DG.DLL. These files are present in Debug and Release folders (along with Qt's DLLs and PlusConfig.xml), in spite of me never even building in either of these modes.

#### 2015-04-07, 00:54:30 - Andras Lasso
DLLs are copied to bin/Debug bin/Release directories to avoid the need to use a launcher. This should be done for MinSizeRel and RelWithDebugInfo configurations, too.

As a workaround, you can copy all the DLLs in Release to RelWithDebugInfo.

#### 2015-04-07, 14:45:45 - Andras Lasso
Note for final solution: Copying all Qt DLLs to two additional directories would waste a lot of disk space. Use a custom target/command to copy DLLs to bin. That would allow populating only those directories that the developer actually wants to use.

#### 2015-04-09, 12:25:18 - Andras Lasso
Copy also PlusConfig.xml

#### 2015-05-23, 02:01:59 - Andras Lasso
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-06-30, 14:39:18 - Adam Rankin
@dzenanz is this still a priority for you?

#### 2016-06-30, 20:08:45 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-07-11, 15:19:53 - Dzenan Zukic
No, this is not a priority for me (never was). I was simply submitting it as a bug report.

#### 2016-07-11, 15:22:08 - Adam Rankin
Ok, thanks!

#### 2016-07-11, 15:22:12 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Release Plus-Future"

#### 2017-06-07, 17:56:23 - Dzenan Zukic
@david.kuegler833514 Can this be closed now?


## #981 Building Telemed support properly
To build Plus with support for Telemed's device, I had to make the attached changes.

I assume there will be more work, because fCal is crashing if I try to connect to the device. Should I keep adding patches to this ticket, or start new tickets?

#### 2015-04-08, 21:42:29 - Dzenan Zukic
file:aNJS8u3JGr5iKcdmr6bg7m


#### 2015-04-08, 21:42:29 - Dzenan Zukic
Attachment added: "BuildTelemed.patch"

#### 2015-04-09, 12:02:35 - Andras Lasso
@dzenan.zukic829177:
I would suggest to use #505 until a first working version of vtkTelemedVideoSource is ready.
I've added you write access to the repository, so you can commit Telemed related changes (such as the patch suggested above) directly to the repository. I'll comment on the committed code if I have any suggestion.
There is a simple standalone test for the Telemed interface (vtkTelemedVideoSourceTest), I would suggest to make that work first and then start testing with fCal.

We have just received a Telemed ultrasound yesterday, so we too we'll be able to test the interface.

#### 2015-04-09, 12:02:35 - Andras Lasso
assigned_to_id: changed from null to "dzenan.zukic829177"

#### 2015-04-09, 14:53:31 - Dzenan Zukic
Fixed #981 Telemed now builds properly
Commit: r:4087|plus:4087

#### 2015-04-09, 14:53:31 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2015-04-09, 19:30:46 - Dzenan Zukic
re #981 Frame size is now 3D
Commit: r:4088|plus:4088


## #982 Add support for ThorLabs optical spectrometers
https://www.thorlabs.de/software_pages/ViewSoftwarePage.cfm?Code=OSA


#### 2015-04-10, 20:52:50 - Andras Lasso
re #982: Added support for data collection from ThorLabs optical spectrometers
Commit: r:4089|plus:4089

#### 2015-04-10, 20:54:42 - Andras Lasso
re #982: Added support for data collection from ThorLabs optical spectrometers
Commit: r:4090|plus:4090

#### 2015-04-10, 20:55:48 - Andras Lasso
re #982: Added support for data collection from ThorLabs optical spectrometers
Commit: r:4091|plus:4091

#### 2015-04-11, 17:47:24 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-04-11, 17:55:45 - Andras Lasso
re #982: Improved documentation
Commit: r:4094|plus:4094

#### 2015-04-12, 04:30:51 - Andras Lasso
re #982: Added ThorLabs interface test
Commit: r:4095|plus:4095

#### 2015-04-14, 16:26:10 - Andras Lasso
re #982: Added ThorLabs sample config file to installation package
Commit: r:4100|plus:4100

#### 2015-04-23, 20:52:39 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-05-11, 20:33:28 - Andras Lasso
re #982: Set default image orientation for Thorlabs device
Commit: r:4134|plus:4134


## #983 Example configuration files for Telemed are outdated
Running fCal with default configuration file for Telemed scanner produces the below output in the console window. The other configuration file produces the same errors.

Matthieu Heitz, who committed the original support for Telemed last year says it worked back then. Therefore the reason is almost certainly some changes in PlusLib done since. To get it to compile, for example, frame size needed to be changed from 2D to 3D (the third dimension ==1). vtkTelemedVideoSourceTest is running correctly.


~~~~
Software version: Plus-2.1.2.4088 - Win32
Toolbox changed to Configuration
Device set configuration is read from file: C:\\Dev\\PlusBuild-bin\\PlusLib\\data\\ConfigFiles\\PlusDeviceSet_Server_TelemedVideoCapture.xml
Connect to devices
ListAttachedProbes:
0) C3.5/60/128
TelemedUltrasound::Stop
TelemedUltrasound::Pause
|WARNING|018.939000| No default channel selected, first channel found is now active: VideoStream|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(658)
|ERROR|018.947000| Failed to find fCal configuration!|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(432)
|ERROR|018.952000| Failed to read fCal configuration|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(210)
|ERROR|018.958000| Unable to find Rendering element in XML tree!|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtk3DObjectVisualizer.cxx(353)
|ERROR|018.963000| Unable to configure perspective visualizer.|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtkVisualizationController.cxx(739)
No phantom registration algorithm configuration are found - no phantom will be shown
TelemedUltrasound::Stop
Before return NULL
No frame received by the device
~~~~


#### 2015-04-10, 21:11:51 - Dzenan Zukic
Copying fCal and Rendering elements from _PlusDeviceSet_fCal_BKProstate_Epiphan_NDIPolaris_20130517_102238.xml_ gets rid of the error messages, and replaces them with warnings. However, the server is not started. Here is the log:

~~~~
|INFO|005.696000| No phantom registration algorithm configuration are found - no phantom will be shown|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(549)
|INFO|024.826000| Device set configuration is read from file: C:\\Dev\\PlusBuild-bin\\PlusLib\\data\\ConfigFiles\\PlusDeviceSet_Server_TelemedVideoCapture.xml|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(159)
|INFO|024.836000| Connect to devices|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(169)
|WARNING|026.164000| DefaultSelectedChannelId: TrackedVideoStream is not a valid channel. Selecting first available.|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(682)
|WARNING|026.174000| No default channel selected, first channel found is now active.|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(689)
|INFO|026.499000| No image found in the displayable object list, it will not be displayed!|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtk3DObjectVisualizer.cxx(414)
|WARNING|026.507000| Volume displayable object ID not defined in fCal. Unable to update volume object.|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtk3DObjectVisualizer.cxx(441)
|WARNING|026.516000| No Segmentation element is found in the XML tree!|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtkImageVisualizer.cxx(650)
|WARNING|026.523000| No phantom definition is found in the XML tree!|in C:\\Dev\\PlusBuild-bin\\PlusApp\\CommonWidgets\\vtkImageVisualizer.cxx(855)
|INFO|026.531000| No phantom registration algorithm configuration are found - no phantom will be shown|in C:\\Dev\\PlusBuild-bin\\PlusApp\\fCal\  oolboxes\\ConfigurationToolbox.cxx(549)

~~~~



#### 2015-04-10, 21:39:07 - Andras Lasso
Plus Server requires OpenIGTLinkServer element. See description and example here:
http://perk-software.cs.queensu.ca/plus/doc/nightly/user/ApplicationPlusServer.html#ApplicationPlusServerConfigSettings


#### 2015-04-10, 21:42:56 - Dzenan Zukic
PlusOpenIGTLinkServer node is already in the configuration file. When attempting to connect from Slicer, it results in WAIT status.

#### 2015-04-10, 21:52:15 - Andras Lasso
Make sure PlusServer is let through the firewall. You can try to disable the firewall temporarily to confirm that it causes the connection issue.

#### 2015-04-10, 21:54:08 - Andras Lasso
By the way, the log that you attached is generated by fCal. Run PlusServer or PlusServerLauncher to start an OpenIGTLink server.

#### 2015-04-10, 21:56:40 - Dzenan Zukic
Both the fCal and Slicer are on localhost. Turning the firewall off makes no difference.

Does PlusServer need to be running in addition to fCal?

#### 2015-04-10, 21:56:40 - Dzenan Zukic
CommentContent: changed from "Both the fCal and Slicer are on localhost. Turning the firewall off makes no difference. Does PlusServer needs to be running in addition to fCal?" to "Both the fCal and Slicer are on localhost. Turning the firewall off makes no difference.

Does PlusServer needs to be running in addition to fCal?"

#### 2015-04-10, 21:56:40 - Dzenan Zukic
CommentContent: changed from "Both the fCal and Slicer are on localhost. Turning the firewall off makes no difference.

Does PlusServer needs to be running in addition to fCal?" to "Both the fCal and Slicer are on localhost. Turning the firewall off makes no difference.

Does PlusServer need to be running in addition to fCal?"

#### 2015-04-10, 22:02:57 - Dzenan Zukic
OK, Slicer picks up something now (when running PlusServer with this config file as command-line parameter).

Thanks Andras. I will look into this next week. Have a nice weekend!

#### 2015-04-10, 22:02:57 - Dzenan Zukic
CommentContent: changed from "OK, Slicer picks up something now (when running PlusServer with this config file as command-line parameter)." to "OK, Slicer picks up something now (when running PlusServer with this config file as command-line parameter).

Thanks Andras. I will look into this next week. Have a nice weekend!"

#### 2015-04-10, 22:02:58 - Andras Lasso
fCal is only needed for ultrasound calibration. Use PlusServer for streaming data through OpenIGTLink.

#### 2015-04-10, 22:12:38 - Andras Lasso
PlusServerLauncher has a convenient GUI, you can use that instead of the console app PlusServer.

Follow these steps to see the live image in Slicer:
http://perk-software.cs.queensu.ca/plus/doc/nightly/user/ProcedureStreamingToSlicer.html

#### 2015-04-13, 15:50:09 - Dzenan Zukic
I followed the instructions, but VolumeResliceDriver does not help - I still don't see the ultrasound image in Slicer. All 3 windows (R, Y, G) are all black.

The capturing step in fCal is displaying the ultrasound image now, I guess adding those fCal and Rendering elements to configuration file made a difference.

#### 2015-04-13, 16:18:56 - Andras Lasso
Is the volume histogram (in Volumes module) empty?

#### 2015-04-13, 16:36:26 - Andras Lasso
If you still have problems setting up the data receiving in Slicer then you can write me at lasso@queensu.ca to schedule a google hangout with screen sharing to resolve it.

#### 2015-04-25, 14:59:45 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2015-05-25, 20:34:01 - Andras Lasso
re #983: Removed additional configuration file with sample parameters (it was mostly redundant with the basic configuration file). Paremeters are described in the documentation page.
Commit: r:4156|plus:4156

#### 2015-05-25, 20:34:01 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-05-25, 20:37:16 - Andras Lasso
re #983: Added sample configuration to Telemed packages
Commit: r:4157|plus:4157

#### 2015-05-25, 20:39:05 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-05-29, 15:44:47 - Andras Lasso
re #983: Added sample configuration to Telemed packages
Commit: r:4165|plus:4165


## #984 Add package edition name to package name
The edition name would show up in the installer, install location, and start menu.
This would reduce potential confusion among the many editions.

#### 2015-04-11, 17:12:45 - Andras Lasso
re #984: Added optional PLUSAPP_PACKAGE_EDITION CMake variable to specify package edition (set of supported hardware devices)
Commit: r:4092|plus:4092

#### 2015-04-11, 17:22:33 - Andras Lasso
re #984: Added PLUSAPP_PACKAGE_EDITION option to PlusBuild
Commit: r:4093|plus:4093

#### 2015-04-23, 20:57:38 - Andras Lasso
status: changed from "New" to "Fixed"


## #985 Improve PlusServerLauncher status display
When clicking 'Connect' button in PlusServerLauncher it quickly displays 'Connection successful!' status, while it only successfully started the server. Instead, display 'Server is started' message and query the status of the launched PlusServer and display detailed status (e.g., 'Connecting to devices', 'Connection successful', 'Server is stopped'). As multiple OpenIGTLinkServer can run in a single PlusServer process, status could be displayed for each instance.

It could be also useful to show server log messages in a separate log window to make it more easily accessible, not mixed with the server's logs. Maybe the best would be to put it in a collapsible section at the bottom of the main window.

It could be also useful to show server host name/IP address in the window (currently it is only logged and if there are many log messages then it is difficult to find it).

#### 2015-10-27, 01:48:16 - Adam Rankin
re #985 converting PlusServerLauncher to a .ui style layout to simplify future updates
Commit: r:4380|plus:4380

#### 2015-10-27, 01:48:16 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-10-27, 01:54:18 - Adam Rankin
re #985 missed a variable name change
Commit: r:4381|plus:4381

#### 2015-10-27, 22:08:26 - Adam Rankin
test #985 Reworked log parsing in PlusServerLauncher to be more robust.

PlusServerLauncher now requests max(LOG_LEVEL_INFO, requestedLevel) so that it can always parse necessary info level text. Does not show any log items below requestedLevel to the user, only parses them internally.

Server now parses incoming log messages to behave more intelligently. It analyzes used port output and presents that to the user. It also looks for the key message 'Press Ctrl-C to quit' to indicate that the server is up and running.
Commit: r:4383|plus:4383

#### 2015-10-27, 22:08:26 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-10-27, 22:31:42 - Andras Lasso
Awesome! Instead of ctrl-c it would be nice to log a more specific message and look for that (e.g.: Server status: DataCollection=active, NumberOfConnectedClients=0). It could be used in the future for conveying other information as well (for example number of connected clients). The message could be logged by PlusServer at debug or info level.

#### 2015-10-28, 00:51:54 - Adam Rankin
Definitely, we can make the log parsing as intelligent as we want. It is very easy to add a new check.

It is all handled by ParseContent

https://www.assembla.com/spaces/plus/subversion/commits/4383#ln232

I re-used the text box from the DeviceSetSelectorWidget, but that doesn't have to be the case. With the new .ui file it would be easy to add a new frame/widget for server status info

#### 2015-10-28, 00:56:01 - Adam Rankin
re #985 moving UpdateDescriptionText from signals to regular public function
Commit: r:4384|plus:4384

#### 2015-10-28, 01:10:14 - Adam Rankin
I have not strongly tested what happens when a server fails to launch. I will test that tomorrow with hardware.

#### 2015-10-28, 01:12:22 - Andras Lasso
OK. Failure to start is easy to test without hardware (it tries to connect but it can't find the hardware so it fails).

#### 2015-10-28, 12:21:40 - Adam Rankin
re #985 re-enabling log level combobox after failed server launch
Commit: r:4385|plus:4385

#### 2015-10-28, 16:21:30 - Adam Rankin
re #985 Adding server status output to PlusServer on startup.

Adding parsing of new server status output in launcher.
Commit: r:4386|plus:4386

#### 2015-10-28, 16:26:05 - Adam Rankin
The only thing not complete is a separate log for launcher and server.

#### 2015-10-28, 17:15:21 - Adam Rankin
re #985 adding filter functionality to statusicon message list widget
Commit: r:4387|plus:4387

#### 2015-10-28, 17:21:41 - Adam Rankin
re #985 adding filtering of incoming messages
Commit: r:4388|plus:4388

#### 2015-10-28, 18:40:43 - Adam Rankin
re #985 adding maximize button and removing maximum window size for message list
Commit: r:4389|plus:4389

#### 2015-10-28, 18:50:48 - Adam Rankin
re #985 subwidgets are automatically memory managed when a parent is deleted
Commit: r:4390|plus:4390

#### 2015-10-28, 19:24:35 - Adam Rankin
re #985 adjusting filter input behavior to apply after a short timeout once editing is finished

clear button now clears filter and immediately restores the complete log
Commit: r:4391|plus:4391

#### 2015-10-29, 13:51:51 - Adam Rankin
re #985 attempting fix for linux build
Commit: r:4392|plus:4392

#### 2015-11-08, 01:57:44 - Adam Rankin
I am happy with the changes. If anyone wants further improvements please file a ticket!

#### 2015-11-08, 01:57:44 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-01-14, 22:39:19 - Andras Lasso
re #985: Use a small icon to clear the log message filter instead of using a large 'Clear' button (as the 'Clear' button may be mistaken for clearing the entire log window)
Commit: r:4444|plus:4444

#### 2016-01-14, 22:40:18 - Adam Rankin
Ah thank you for doing this! I noticed this frustration when I did my experiments.

#### 2016-03-28, 13:17:46 - Andras Lasso
re #985: Fixed PlusServerLauncher layout (so that the device selector widget fills the window)
Commit: r:4577|plus:4577


## #986 Broadcast image geometry information in OpenIGTlink STRING messages
Ultrasonix devices (and eventually all US video sources that access to the data) should provide imaging depth, pixel spacing, and transducer origin information through OpenIGTLink STRING messages.

#### 2015-04-22, 18:15:12 - Andras Lasso
test #986: Implemented sending of imaging depth, spacing, transducer origin through OpenIGTLink STRING message for SonixVideo

Enable ImageGeometryOutputEnabled and add STRING message type and add these string names to the DefaultClientInfo:
  <StringNames>
    <String Name='DepthMm' />
    <String Name='PixelSpacingMm' />
    <String Name='TransducerOriginPix' />
  </StringNames>
Commit: r:4111|plus:4111

#### 2015-04-22, 18:15:12 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-04-25, 15:00:31 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-04-27, 13:01:53 - Andras Lasso
re #986: Implemented option of adding ImageToTransducer transform to each frame in vtkSonixVideoSource

If ImageToTransducer attribute is specified in a SonixVideoSource then the transform is saved as a custom transform and can be used for broadcasting or combined with other transforms.
Commit: r:4115|plus:4115

#### 2015-05-15, 02:43:12 - Andras Lasso
re #986: Added sample config files that use probe spatial calibration provided by Ultrasonix
Commit: r:4138|plus:4138

#### 2015-05-15, 02:48:36 - Andras Lasso
re #986: Added sample config files that use probe spatial calibration provided by Ultrasonix
Commit: r:4139|plus:4139

#### 2015-05-15, 02:49:27 - Andras Lasso
re #986: Added description about probe spatial calibration provided by Ultrasonix
Commit: r:4140|plus:4140

#### 2015-05-15, 02:56:04 - Andras Lasso
re #986: Fixed sample config files that use probe spatial calibration provided by Ultrasonix
Commit: r:4141|plus:4141

#### 2015-05-15, 03:11:17 - Andras Lasso
re #986: Added Matlab script for computing TransducerToImage transform from calibration matrix provided by Ultrasonix
Commit: r:4142|plus:4142

#### 2015-05-21, 19:37:25 - Andras Lasso
re #986: Improved Ultrasonix doc page formatting
Commit: r:4148|plus:4148

#### 2015-05-22, 01:52:18 - Andras Lasso
re #986: Fixed auto clipping when PlusServer is started with a different imaging depth as the current depth on the ultrasound system
Commit: r:4150|plus:4150

#### 2015-05-22, 15:05:38 - Andras Lasso
re #986: Improved Ultrasonix doc page formatting
Commit: r:4151|plus:4151

#### 2015-06-06, 17:48:58 - Andras Lasso
re #986: Removed obsolete multi-depth configuration files. Ultrasonix systems can now be used at multiple depths.
Commit: r:4178|plus:4178


## #987 Improve invalid tool state in vtkOpenIGTLinkTracker
If vtkOpenIGTLinkTracker receives TRANSFORM or POSITION messages for a tool for a while it may mean that the tool is out of view, which is a normal situation for optical trackers. However, the vtkOpenIGTLinkTracker considers this an error instead of just setting the tool status to invalid for the time intervals it did not receive updates.

A new operating mode should be added: in that new mode vtkOpenIGTLinkTracker::InternalUpdate would wait for a transform from all the tools, and if it does not get update from a particular tool, it would make its status invalid. This is how most physical trackers work and it would allow getting rid of warning messages that are logged when a tool is out of view.

#### 2015-04-23, 20:56:48 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.2.0"

#### 2015-04-25, 14:56:13 - Andras Lasso
test #987: Fixed vtkOpenIGTLinkTracker tool error reporting

For non-TDATA trackers: in one update now all the tracker tools are read and those that don't receive updates for a while are considered to be invalid (out of view).
Commit: r:4114|plus:4114

#### 2015-04-25, 14:56:13 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-04-25, 14:56:13 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-05-23, 01:59:39 - Andras Lasso
status: changed from "Test" to "Fixed"


## #988 Telemed probes do not respect parameters from configuration file
All parameters are ignored, including image size, frequency, gain etc.

#### 2015-04-30, 20:32:24 - Dzenan Zukic
re: #988 Telemed support: reading dynamic range, gain and power from configuration file.

Telemed's interface for manipulating scan depth and frequency does not work on my computer.
Commit: r:4118|plus:4118

#### 2015-05-23, 02:01:47 - Andras Lasso
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-06-01, 19:34:13 - Andras Lasso
assigned_to_id: changed from "dzenanz" to "lassoan"

#### 2015-06-01, 19:34:20 - Andras Lasso
milestone_id: changed from "Plus-2.3.0" to "Plus-2.2.0"

#### 2015-06-01, 19:36:41 - Andras Lasso
re #988: Replaced old Telemed interface by current one

Several old COM interfaces did not work anymore (setting frequency, depth, etc). Imaging now works (without the need of starting the EchoWave software), but further improvements are needed (add support for setting more parameters, etc).

IDL compiler output (Usgfw2*.*) are added directly. It would be nicer to generate this files using CMake.
Commit: r:4167|plus:4167

#### 2015-06-02, 22:10:56 - Andras Lasso
test #988: Made 5 Telemed imaging parameters configurable through config file (DepthMm, FrequencyMhz, DynRangeDb, GainPercent, PowerPercent)
Commit: r:4170|plus:4170

#### 2015-06-02, 22:10:56 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2015-06-03, 03:57:46 - Andras Lasso
re #988: Added description of FrameSize parameter to Telemed device
Commit: r:4172|plus:4172

#### 2015-06-03, 04:08:16 - Andras Lasso
re #988: Updated version number in the trunk to 2.3
Commit: r:4175|plus:4175

#### 2015-06-05, 04:21:27 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-07-02, 17:05:59 - Dzenan Zukic
Regarding IDL compiler output, the file \\PlusLib\\src\\DataCollection\\CMakeLists.txt already contains the required command (I added it earlier), it just needs to be un-commented:

~~~~
  # ADD_CUSTOM_COMMAND(OUTPUT 
  # Telemed/Usgfw2_h.h
  # Telemed/dlldata.c
  # Telemed/Usgfw2_i.c
  # Telemed/Usgfw2_p.c
    # COMMAND midl.exe /out ./Telemed /header Usgfw2_h.h /no_robust ${TELEMED_INCLUDE_DIR}/Usgfw2.idl
  # )

~~~~

I don't remember any more whether the generated files are identical to the ones provided by Telemed.


## #989 Segmentation ROI size is not always updated
In fCal segmentation dialog when editing the ROI:
* if roi is moved out of the image's valid area then the rectangle moves outside the valid area (the handles don't)
* when the opening bar size is changed then the ROI is actually updated but that does not show up on the GUI

#### 2015-05-02, 04:03:45 - Andras Lasso
re #989: Made segmentation clipping rectangle setting more robust

Also added missing attributes to config files.
Commit: r:4122|plus:4122

#### 2015-05-02, 04:05:32 - Andras Lasso
test #989: Fixed segmentation ROI setting in fCal
Commit: r:4123|plus:4123

#### 2015-05-02, 04:05:32 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-05-23, 01:55:01 - Andras Lasso
status: changed from "Test" to "Fixed"


## #990 Use SolidWorks instead of Solid Edge for CAD


#### 2015-05-02, 23:47:15 - Tamas Ungi
milestone_id: changed from null to "Continuous activities"

#### 2015-05-02, 23:48:33 - Tamas Ungi
Re #990: New candy cane stylus.
Commit: r:4125|plus:4125

#### 2015-05-02, 23:48:33 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2015-05-06, 16:06:22 - Tamas Ungi
Re #990: Adding peg for Polaris reflective balls.
Commit: r:4128|plus:4128

#### 2015-06-08, 22:05:04 - Tamas Ungi
Re #990: WIP leaner needle clip.
Commit: r:4184|plus:4184

#### 2015-06-09, 02:03:59 - Tamas Ungi
Re #990: Needle clip in SW 2015 format. Image added for printer orientation.
Commit: r:4185|plus:4185

#### 2015-06-12, 18:20:49 - Tamas Ungi
Re #990: Clipping part was too weak. Also made the sensor bracket flexible.
Commit: r:4190|plus:4190

#### 2015-06-15, 00:54:20 - Tamas Ungi
Re #990: Micron-Ascension dual tracker fixture.
Commit: r:4193|plus:4193

#### 2015-06-15, 01:28:53 - Tamas Ungi
Re #990: Working on Micron-Ascension dual tracking parts.
Commit: r:4194|plus:4194

#### 2015-09-16, 18:36:56 - Tamas Ungi
Re #990: Additional parts.
Commit: r:4353|plus:4353

#### 2015-09-16, 18:53:56 - Tamas Ungi
Re #990: Updating catalog.
Commit: r:4354|plus:4354

#### 2015-12-02, 19:44:20 - Tamas Ungi
Re #990: Updated NeedleClip, and started orientation marker in SW.
Commit: r:4409|plus:4409

#### 2015-12-03, 20:37:11 - Tamas Ungi
Re #990: Making sensor holder more general. New OrientationLR tool for more tape space and SW format.
Commit: r:4410|plus:4410

#### 2015-12-03, 20:41:54 - Tamas Ungi
Re #990: Removing old needle clip, adding STL for new.
Commit: r:4411|plus:4411

#### 2015-12-04, 03:19:27 - Tamas Ungi
Re #990: Trying to fix catalogue build error.
Commit: r:4412|plus:4412

#### 2015-12-04, 04:38:26 - Andras Lasso
Thanks! It looks good now (http://crunch.cs.queensu.ca/CDash/index.php?project=PlusModelCatalog).

You can build the model catalog on your computer easily, just build plus as usual with this flag enabled in CMake:
PLUSBUILD_BUILD_PLUSMODELCATALOG:BOOL=ON

#### 2015-12-04, 18:40:58 - Tamas Ungi
Re #990: WIP making SW version of cautery tracker, and making it smaller at the same time.
Commit: r:4413|plus:4413

#### 2015-12-05, 02:33:31 - Tamas Ungi
Re #990: Cautery fixture in SW format. Need to test if this new size works.
Commit: r:4414|plus:4414

#### 2015-12-05, 02:55:55 - Tamas Ungi
Re #990: Cautery fixture. Adding files for printing and catalog.
Commit: r:4415|plus:4415

#### 2015-12-09, 06:10:46 - Tamas Ungi
Re #990: Making cautery grabber tighter. NeedleClip easier to clip.
Commit: r:4417|plus:4417

#### 2015-12-16, 03:42:34 - Tamas Ungi
Re #990: Better interface with cautery shape.
Commit: r:4418|plus:4418

#### 2016-01-04, 16:07:50 - Tamas Ungi
Re #990: Cautery grabber tighter. Cautery grabber to sensor holder interface smoother. Needle clip softer and closer to needle.
Commit: r:4420|plus:4420

#### 2016-01-07, 05:53:50 - Tamas Ungi
Re #990: Tighter cautery grabber. More solid clipping part for needle clip.
Commit: r:4424|plus:4424

#### 2016-01-27, 15:33:24 - Tamas Ungi
Re #990: Cautery grabber longer.
Commit: r:4471|plus:4471

#### 2016-01-27, 15:42:32 - Tamas Ungi
Re #990: Shortened stopping bars to match angle with longer lever.
Commit: r:4472|plus:4472

#### 2016-03-01, 03:46:24 - Tamas Ungi
Re #990: Hinged fixture for Telemed L12.
Commit: r:4529|plus:4529

#### 2016-03-08, 05:31:09 - Tamas Ungi
Re #990: Improving rigidity of Telemed fixture.
Commit: r:4562|plus:4562

#### 2016-04-04, 02:35:20 - Tamas Ungi
Re #990: Making clues on needle clip easier to understand.
Commit: r:4582|plus:4582

#### 2016-04-06, 19:32:52 - Tamas Ungi
Re #990: Cautery model added.
Commit: r:4589|plus:4589

#### 2016-05-17, 03:32:49 - Tamas Ungi
Re #990: First version of DuaLok needle hub tracker clip
Commit: r:4632|plus:4632

#### 2016-05-30, 19:49:16 - Tamas Ungi
status: changed from "New" to "Test"

#### 2016-06-28, 15:40:42 - Tamas Ungi
Re #990: Adding micron tracker markers for printing with different colors.
Commit: r:4689|plus:4689

#### 2016-07-01, 15:08:19 - Tamas Ungi
Re #990: Markers in v2015 and with shorter dimensions.
Commit: r:4704|plus:4704

#### 2016-07-13, 17:03:24 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Release Plus-Future"

#### 2016-08-24, 02:38:08 - Tamas Ungi
Re #990: Deleting SW backup files.
Commit: r:4828|plus:4828

#### 2017-01-05, 00:28:12 - Tamas Ungi
Re #990: Adding an optical-EM tracked tool and related files
Commit: r:5008|plus:5008

#### 2017-01-19, 15:52:38 - Tamas Ungi
Re #990: Making the Telemed brace stronger
Commit: r:5033|plus:5033

#### 2017-02-26, 05:12:32 - Tamas Ungi
Re #990: Adding Polaris tracking fixture for old Telemed C5 probe.
Commit: r:5060|plus:5060

#### 2017-06-23, 17:53:02 - Tamas Ungi
Re #990: Adding optical marker.
Commit: r:5101|plus:5101


## #991 Update ITK and VTK
To support more recent compilers (VS2013)

#### 2015-05-08, 19:42:38 - Dzenan Zukic
fixed #991 update to ITK 4.7.2 and VTK 6.2.0
Commit: r:4131|plus:4131

#### 2015-05-08, 19:42:38 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2015-05-08, 19:46:07 - Andras Lasso
Have you tried if everything works as expected? No build and test errors?

#### 2015-05-08, 19:46:07 - Andras Lasso
status: changed from "Fixed" to "Test"

#### 2015-05-23, 01:18:40 - Andras Lasso
No regressions are observed

#### 2015-05-23, 01:18:40 - Andras Lasso
status: changed from "Test" to "Fixed"


## #992 Volume reconstructor crashes when trying to reconstruct very large volumes
It seems that when attempting to reconstruct a volume >2GB then volume reconstructor crashes.

See some more information here:
https://www.assembla.com/spaces/plus/messages/5173223#comment_5173903


#### 2016-06-30, 14:43:12 - Adam Rankin
Any decision or progress here? Is this a will-not-fix?

#### 2016-06-30, 19:30:11 - Andras Lasso
I would say it's low priority. Would be nice to investigate at some point.

#### 2016-06-30, 20:49:41 - Adam Rankin
priority: changed from "Normal (3)" to "Low (4)"

#### 2016-06-30, 20:49:43 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Release Plus-Future"

#### 2016-12-22, 18:07:46 - Dzenan Zukic
And I am hitting this problem again :(
This time around I am more knowledgeable about Plus (and VTK too), so I might be able to fix the problem.

#### 2016-12-22, 18:07:46 - Dzenan Zukic
assigned_to_id: changed from null to "dzenanz"

#### 2016-12-22, 18:07:46 - Dzenan Zukic
status: changed from "New" to "Accepted"

#### 2016-12-22, 18:48:02 - Andras Lasso
It would be nice if you could have a look at this. There is most likely an overflow somewhere due to using 32-bit IDs instead of 64-bit IDs. The fix is probably something like changing all IDs to vtkIdType.

#### 2016-12-22, 19:01:29 - Dzenan Zukic
fixed #992 intermediate result of multiplication was 32-bit.
Commit: r:4992|plus:4992

#### 2016-12-22, 19:01:29 - Dzenan Zukic
status: changed from "Accepted" to "Fixed"

#### 2017-01-11, 18:20:24 - Dzenan Zukic
fixed #992 Resolving crash due to use of 32-bit indices
Commit: r:5019|plus:5019


## #993 vtkICCapturingSource: ClipRectangleOrigin and ClipRectangleSize in DataSource error
Error when setting ClipRectangleOrigin  and ClipRectangleSize in DataSource (vtkICCapturingSource).

#### 2015-05-20, 15:13:08 - Mikael Brudfors
re #993: Fixed setting ClipRectangleOrigin and ClipRectangleSize from DataSource. If used, ClipRectangleSize should be defined as ='x y 1'.
Commit: r:4145|plus:4145

#### 2015-05-20, 15:16:13 - Mikael Brudfors
If ClipRectangleSize != 'x y 1' error in vtkPlusBuffer::CheckFrameFormat. 

Additionally, maybe the deprecated option of setting clipping parameters on the Device level should be removed since this option doesn´t work.

#### 2015-05-20, 15:16:13 - Mikael Brudfors
CommentContent: changed from "If ClipRectangleSize != 'x y 1' error in vtkPlusBuffer::CheckFrameFormat" to "If ClipRectangleSize != 'x y 1' error in vtkPlusBuffer::CheckFrameFormat. 

Additionally, maybe the deprecated option of setting clipping parameters on the Device level should be removed since this option doesn´t work."

#### 2015-05-20, 15:42:45 - Andras Lasso
re #993: Removed clipping from vtkICCapturingSource. Clipping is now implemented in the data source.
Commit: r:4146|plus:4146

#### 2015-05-23, 02:02:55 - Andras Lasso
@mbrudfors Is it working now as expected? Can I close the ticket?

#### 2015-05-23, 02:03:10 - Andras Lasso
milestone_id: changed from null to "Plus-2.2.0"

#### 2015-05-23, 06:40:48 - Mikael Brudfors
I will let you know on Monday, if that is okay, when I have done one more test.

#### 2015-05-23, 12:30:21 - Andras Lasso
Ok, thanks!

#### 2015-05-25, 14:57:53 - Mikael Brudfors
status: changed from "Accepted" to "Fixed"


## #994 Image sent through OpenIGTLink is shifted by half pixel
Example: ImageToTransducer transform matrix in Plus is

    0.087  0  0  -19.401
    0  0.087  0  0
    0  0  0.087  0
    0  0  0  1

But when this transform is embedded in the image, Slicer shows in the Volumes module that the image origin is:

-19.3575mm
0.0435mm
0.0435mm


#### 2015-05-21, 19:35:43 - Andras Lasso
fixed #994: Use exactly the same code for OpenIGTLink image message packing/unpacking as in Slicer's OpenIGTLinkIF module
Commit: r:4147|plus:4147

#### 2015-05-21, 19:35:43 - Andras Lasso
status: changed from "New" to "Fixed"


## #995 Improve recording to disc performance
When acquiring sequences that are several GB long then finalizing the sequence may take several minutes on slower computers.

#### 2015-05-22, 01:13:18 - Andras Lasso
test #995: Implemented fast recording finalization

If recording to mhd the image and header files are renamed instead of copied&deleted.
Changed buffer size used during file appending to improve performance (32KB instead of 1KB).
Simplified sampling rate setting (removed sampling rate member variable, simply use acquisition rate).
Use output directory as temporary directory (so that they most likely stay on the same disk drive, making file move very fast).
Commit: r:4149|plus:4149

#### 2015-05-22, 01:13:18 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-05-23, 01:09:06 - Andras Lasso
Tested on a SonixTablet with Exam 6.1.1 and it worked well. To warnings during recording, finalization of recording as mhd is immediate.

#### 2015-05-23, 01:09:06 - Andras Lasso
status: changed from "Test" to "Fixed"


## #996 Reduce artifacts in reconstruction of multi-sweep volumes
When reconstructing a volume from multiple sweeps, dark stripe artifacts may appear in the image where the sweeps overlap. The problem is that the clipping fan/rectangle may contain very dark pixels (mostly caused by shadowing) in one sweep while the same area may show up bright on the other sweep.

Add PixelRejectionThreshold parameter, which allows rejecting pixels (not pasting into the output volume) that are below the threshold.

#### 2015-05-25, 14:22:22 - Andras Lasso
re #996: Added PixelRejectionThreshold parameter to volume reconstructor

Pixels that have lower brightness value than this threshold value will not be inserted into the volume. If not specified then all pixels in the clipping rectangle/fan will be pasted into the output volume. \\OptionalAtt{ }
Commit: r:4152|plus:4152

#### 2015-05-25, 19:41:15 - Andras Lasso
status: changed from "New" to "Fixed"


## #997 Make Telemed image orientation configurable
Current (hardcoded) orientation is MF, which is incorrect. The correct value would be UN, but even better, it should be configurable. There are also many things to clean up in the Telemed video source and helper classes.

#### 2015-05-29, 16:58:16 - Andras Lasso
fixed #997: Made Telemed image orientation configurable
Commit: r:4166|plus:4166

#### 2015-05-29, 16:58:16 - Andras Lasso
status: changed from "New" to "Fixed"


## #998 Create Plus-2.2 branch


#### 2015-06-03, 04:01:00 - Andras Lasso
re #998: Created stable branch (2.2)
Commit: r:4173|plus:4173

#### 2015-06-03, 04:06:04 - Andras Lasso
re #998: Updated Plus stable version to 2.2
Commit: r:4174|plus:4174

#### 2015-06-05, 04:21:39 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2016-01-16, 15:08:56 - Andras Lasso
re #998: Fixed compatibility issues with recent cmake version
Commit: r:4446|plus:4446


## #999 Remove obsolete configuration files


#### 2015-06-06, 19:49:48 - Andras Lasso
re #999: Removed some old configuration files. Renamed SonixTablet/SonixTouch to Ultrasonix (same config files are valid for all Ultrasonix scanners)
Commit: r:4179|plus:4179

#### 2015-06-06, 19:55:08 - Andras Lasso
re #999: Updated documentation according to changed config file names
Commit: r:4180|plus:4180

#### 2015-06-06, 20:02:20 - Andras Lasso
re #999: Updated installation package according to config file renames
Commit: r:4182|plus:4182

#### 2015-06-06, 20:19:22 - Andras Lasso
status: changed from "New" to "Fixed"


## #1000 Configuration file writing typos
There are configuration file writing typos in volume reconstructor and recording devices.

#### 2015-06-06, 19:57:00 - Andras Lasso
re #1000: Fixed config file writing in vtkVirtualDiscCapture, vtkImageProcessorVideoSource, and vtkVirtualVolumeReconstructor
Commit: r:4181|plus:4181

#### 2015-06-06, 20:19:31 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-06-17, 13:24:22 - Adam Rankin
What an anticlimactic bug for #1000 :(


## #1001 Fix CMake 3 compatibility errors and warnings


#### 2015-06-06, 20:16:55 - Andras Lasso
re #1001: Fixed CMP0053 related error in finding GraphViz
Commit: r:4183|plus:4183

#### 2016-01-18, 21:44:56 - Andras Lasso
This warning stilll has not been resolved:

--
CMake Warning (dev) at C:/Program Files (x86)/CMake/share/cmake-3.4/Modules/ExternalProject.cmake:449 (message):
value '' with no previous keyword in ExternalProject_Add
Call Stack (most recent call first):
C:/Program Files (x86)/CMake/share/cmake-3.4/Modules/ExternalProject.cmake:2381 (_ep_parse_arguments)
External_PlusLib.cmake:204 (ExternalProject_Add)
CMakeLists.txt:483 (INCLUDE)
--

due to '${PLUSBUILD_EXTERNAL_PROJECT_CUSTOM_COMMANDS}' beeing an empty string


#### 2016-01-18, 22:27:01 - Andras Lasso
In https://www.assembla.com/spaces/plus/subversion/commits/4449 - Fixed CMake warning of 'value '' with no previous keyword in ExternalProject_Add'

#### 2016-01-18, 22:27:54 - Andras Lasso
Remining warning is in OpenIGTLink library:

4>CMake Warning (dev) at CMake/OpenIGTLinkCMakeTests.cmake:8 (IF):
4>  Policy CMP0054 is not set: Only interpret if() arguments as variables or
4>  keywords when unquoted.  Run 'cmake --help-policy CMP0054' for policy
4>  details.  Use the cmake_policy command to set the policy and suppress this
4>  warning.
4>  Quoted variables like 'OpenIGTLink_HAVE_GETSOCKNAME_WITH_SOCKLEN_T' will no
4>  longer be dereferenced when the policy is set to NEW.  Since the policy is
4>  not set the OLD behavior will be used.
4>Call Stack (most recent call first):
4>  CMakeLists.txt:193 (INCLUDE)


#### 2016-06-30, 14:45:26 - Adam Rankin
I forget which version I fixed it in but that warning has been resolved.

#### 2016-06-30, 14:45:26 - Adam Rankin
status: changed from "New" to "Fixed"


## #1002 Recording frame rate is low
Reported by Andriy Fedorov (BWH): I have total number of frames 332 and the timestamps go from 568 to 615, which I interpret as 7 fps, while  AcquisitionRate was set to '30'

#### 2015-06-13, 12:13:37 - Andras Lasso
re #1002: fCal uses RequestedFrameRate for deciding what is the maximum possible recording rate. BaseFilename attribute is used by fCal.

Commit: r:4191|plus:4191

#### 2015-06-13, 12:14:01 - Andras Lasso
re #1002: fCal uses RequestedFrameRate for deciding what is the maximum possible recording rate. Only log 'Recording of frames takes too long time' message as warning if the recording starts to lag more than 1sec. BaseFilename attribute is used by fCal. Made canceling of recording faster.

Commit: r:4192|plus:4192

#### 2015-06-13, 12:37:07 - Andras Lasso
Try these settings (in the capture device):


* FrameBufferSize='200' (frames are stored in memory and when the buffer is full the contents is written to disk)
* RequestedFrameRate='30' (maximum 30 frames are recorded per second)
* AcquisitionRate='8' (Plus checks for new frames to write 8 times per second)
* BaseFilename='......mhd' (use a file name with .mhd extension to get rid of the post-processing time of merging the temporary header and pixel data file into a single file)


#### 2015-06-13, 12:37:07 - Andras Lasso
assigned_to_id: changed from "lassoan" to "fedorov"

#### 2015-06-13, 12:37:07 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-11-25, 14:14:28 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1003 Vuzix goggles return hardware error upon connection
Multi-webcam based device returns hardware error code when connecting under MMF device type.

|ERROR|007.336000|SERVER> Source Reader error: c00d3704; in E:\\d\\PlusBuild-bin\\PlusLib\\src\\DataCollection\\MicrosoftMediaFoundation\\vtkMmfVideoSource.cxx(148) | in PlusServerLauncher(0)

Potential explanation found here:
http://stackoverflow.com/questions/30643426/mediafoundation-with-multi-input-device

#### 2015-06-17, 13:41:43 - Adam Rankin
re #1003 adding testing config file
Commit: r:4196|plus:4196

#### 2015-06-17, 13:41:43 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-06-17, 14:33:22 - Andras Lasso
See the user manual for some notes on crossbar usage: http://perk-software.cs.queensu.ca/plus/doc/nightly/user/DeviceMicrosoftMediaFoundation.html

#### 2015-06-17, 14:34:28 - Adam Rankin
Would a crossbar show up as a single device in device manager? I have two USB webcams in device manager.

#### 2015-06-17, 15:15:23 - Andras Lasso
It might be an issue that some initialization steps are allowed to be done only in each process (I'm not sure if there are any steps like this). We might consider allowing one vtkMmfVideoSource class connect to multiple hardware devices (and send the output on multiple channels). It would have the limitation though that currently we use the same acquisition rate for all channels in a device, so in some cases it may not be ideal.

#### 2015-06-17, 15:17:20 - Andras Lasso
My understanding is that a crossbar is for selecting between different input channels. You can only acquire image from one channel at a time. Probably Vuzix does not use a crossbar, as it uses both channels in parallel.

#### 2015-06-17, 15:37:06 - Andras Lasso
It could be interesting to try if you can connect to both hardware devices if you start two PlusServer instances and connect to one device from each.

#### 2015-06-29, 14:57:07 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2016-01-06, 23:27:39 - Adam Rankin
Vuzix is no longer in the spectrum of potentially supported devices. Dropping issue.

#### 2016-01-06, 23:27:39 - Adam Rankin
status: changed from "New" to "Invalid"


## #1004 Add full support for VS2012
This ticket collects all the issues and fixes related to allow Plus to be compiled in VS2012. Right now there does not seem to be any major issues.

#### 2015-06-17, 16:46:49 - Andras Lasso
re #1004: Make sure Plus projects are rebuilt if the top-level project is rebuilt
Commit: r:4197|plus:4197

#### 2016-07-13, 16:53:19 - Adam Rankin
Closing as fixed as PLUS compiles under 2008-2015.

#### 2016-07-13, 16:53:19 - Adam Rankin
status: changed from "New" to "Fixed"


## #1005 Delay-load device-specific DLLs
Some devices rely on various driver DLLs that are installed in system directories. If those DLLs are not installed then none of the Plus application start. Using delayed DLL loading the driver DLLs would not be required unless that specific device is used that requires that DLL.

https://msdn.microsoft.com/en-us/library/151kt790(v=vs.90).aspx

Offending devices:
- Interson US
- Telemed US
- Thorlabs spectrometer
- MicronTracker (on WinXP embedded)

This would mean that a single package could be used on all configurations. Multiple packages would be still needed to cover different SDK versions (Ultrasonix and MicronTracker) and Win32/Win64.


## #1006 Add support for acquiring data from a Microchip MM1750-PICTAIL motion module


#### 2015-06-23, 11:43:51 - Andras Lasso
re #1006: Added support for orientation data acquisition from a Microchip motion module
Commit: r:4198|plus:4198

#### 2015-06-23, 11:44:08 - Andras Lasso
test #1006: Add documentation for Microchip motion module
Commit: r:4199|plus:4199

#### 2015-06-23, 11:44:08 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-06-23, 14:10:40 - Andras Lasso
test #1006: Add example Microchip configuration file
Commit: r:4200|plus:4200

#### 2015-07-07, 02:40:40 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1007 Add support for Capistrano Labs probes.
Support for probes from:

  http://www.capolabs.com/

#### 2015-06-23, 18:00:18 - Matt McCormick
These are single element, mechanically rocked probes.  The drivers need to be obtained from Capistrano Labs, but they agreed that it is fine to write a PLUS interface for them.

#### 2015-06-24, 15:38:19 - Matt McCormick
re #1007: Add FindCapistrano.cmake.

This allows CMake to locate the Capistrano SDK, obtainable from Capistrano Labs.

Commit: r:4201|plus:4201

#### 2015-06-24, 17:47:58 - Matt McCormick
re #1007: Add PLUS_USE_CAPISTRANO_VIDEO option.

Enables support for Capistrano Labs USB probes.

Commit: r:4202|plus:4202

#### 2015-06-24, 17:50:34 - Matt McCormick
re #1007: Fix the search location for USBprobe.dll.

Commit: r:4203|plus:4203

#### 2015-06-24, 20:12:14 - Matt McCormick
re: #1007: Add PlusLib CMake configuration for Capistrano.

Commit: r:4204|plus:4204

#### 2015-07-02, 17:21:25 - Matt McCormick
re: #1007 Add vtkCapistranoVideoSourceTest skeleton.

Commit: r:4208|plus:4208

#### 2015-07-02, 18:02:32 - Matt McCormick
re: #1007 Capistrano read xml configuration file.

Commit: r:4209|plus:4209

#### 2015-07-02, 18:13:48 - Matt McCormick
re: #1007 Capistrano NotifyConfigured().

Commit: r:4210|plus:4210

#### 2015-07-02, 19:54:57 - Matt McCormick
re: #1007: Copy 32bit USBprobe.dll and implement GetSdkVersion.

Commit: r:4211|plus:4211

#### 2015-07-02, 20:40:50 - Matt McCormick
re: #1007 Do not create a default device when using a config input file.

Commit: r:4212|plus:4212

#### 2015-07-02, 20:57:56 - Matt McCormick
re: #1007 CapoLabs attach and detach callback.

These functions are commented out in the distributed header, although they are
documented in the distributed PDF.  We do not really use them except for
logging. Disable for now.

Commit: r:4213|plus:4213

#### 2015-07-02, 21:17:56 - Matt McCormick
re: #1007 Find the CapoLabs usb probe.

Commit: r:4214|plus:4214

#### 2015-07-29, 21:56:59 - Matt McCormick
re: #1007 Some CapoLabs probe initialization.

Commit: r:4230|plus:4230

#### 2015-07-29, 22:04:14 - Andras Lasso
Thanks for your contribution. Please add user documentation to PlusLib\\src\\Documentation\\UserManual\\Device....dox and add it to the index page at PlusApp\\Documentation\\DeviceList.dox.

#### 2015-07-30, 18:18:16 - Matt McCormick
Thanks for the guidance :-).  Starting the documentation in the recommended locations...

#### 2015-07-30, 18:22:18 - Matt McCormick
re: #1007 Add DeviceCapistrano.dox.

Start of the user manual documentation for the Capistrano Labs USB ultrasound
probe.

Commit: r:4232|plus:4232

#### 2015-07-30, 18:23:23 - Matt McCormick
re: #1007 Add link to DeviceCapistrano in documentation.

Commit: r:4233|plus:4233

#### 2015-08-03, 20:30:52 - Matt McCormick
re: #1007 Detect the number of Capistrano probes attached.

Commit: r:4236|plus:4236

#### 2015-08-03, 20:37:06 - Matt McCormick
re: #1007 Set the Capistrano probe sample clock divider.

Commit: r:4237|plus:4237

#### 2015-08-04, 20:47:55 - Matt McCormick
re: #1007 Call bmInitializeDisplay in Capistrano.

Based off the PLUS setup for Interson.

Commit: r:4238|plus:4238

#### 2015-08-11, 18:46:43 - Matt McCormick
re #1007: CapistranoVideoSource InitializeDIB.

Based of Interson version / Capistrano SDK.

Commit: r:4247|plus:4247

#### 2015-09-17, 20:15:14 - Hyun Jae Kang
re #1007: Implement functionalities of Capistrano US Probe
Commit: r:4361|plus:4361

#### 2015-09-17, 20:36:49 - Hyun Jae Kang
re #1007: Update vtkCapistranoVideoSourceTest.cxx and PlusDeviceSet_CapistranoVideoSourceTest.xml
Commit: r:4362|plus:4362

#### 2016-01-08, 14:29:17 - Hyun Jae Kang
re #1007: Added vtkCapistranoVideoSource in the constructor to support the broadcasting of Capistrano Video stream with vtkPlusOpenIGTLinkServer.
Commit: r:4427|plus:4427

#### 2016-01-08, 14:30:38 - Hyun Jae Kang
re #1007: Updated the default image's size and orientation.
Commit: r:4428|plus:4428


## #1008 Allow dynamic change of image clipping rectangle
Allow changing of image clipping rectangle dynamically, without restarting Plus. See this discussion: https://www.assembla.com/spaces/plus/messages/5076633

Implementation notes: Changing the frame buffer size would be problematic for many reasons, including possible out-of-memory errors when allocating memory for larger images, not being able to save frames of different size into metafiles (image size is constant throughout), accessing frames while switching between frame sizes. Therefore, probably we would need to allocate the maximum frame size and provide additional information about the current extent.

#### 2015-06-27, 14:43:17 - Andras Lasso
description: changed from "Allow changing of image cli..." to "Allow changing of image cli..."

#### 2016-06-30, 14:45:54 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-08-15, 19:19:07 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"


## #1009 Enh: Adding check for repeated calls to vtkDataCollector::ReadConfiguration
As per the discussion here
url:https://www.assembla.com/spaces/plus/messages/5242983|https://www.assembla.com/spaces/plus/messages/5242983
adding of a check for repeated calls to ReadConfiguration is requested

#### 2015-07-06, 22:43:11 - Adam Rankin
test #1009: adding repeated ReadConfiguration checks in vtkDataCollector
Commit: r:4215|plus:4215

#### 2015-07-06, 22:43:11 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-07-06, 22:43:22 - Adam Rankin
@lassoan what do you think?

#### 2015-07-07, 03:05:01 - Andras Lasso
This looks good to me (we don't change/improve the current behavior just prevent misuse).

#### 2015-07-07, 22:09:24 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1010 Parent ticket for items related to HoloLens development
Support for any non-specific changes to PLUS relating to external project work (config file changes, CMake infrastructure, etc...)

#### 2015-07-07, 22:10:41 - Adam Rankin
re #1010: Adding stylus tip calibration to configuration file and fixing tabs-&gt;spaces
Commit: r:4217|plus:4217

#### 2015-07-24, 16:31:07 - Adam Rankin
re #1010 updating config file
Commit: r:4222|plus:4222

#### 2015-07-27, 19:46:52 - Adam Rankin
re #1010 updating config files, successful ImageToProbe calibration using new point collection module
Commit: r:4223|plus:4223

#### 2015-08-18, 14:42:48 - Adam Rankin
re #1010 Adding ref to ras calibration related files
Commit: r:4252|plus:4252

#### 2015-08-20, 19:57:17 - Adam Rankin
re #1010 recording of actual phantom procedure, insertion of mitral valve
Commit: r:4275|plus:4275

#### 2015-08-21, 01:23:23 - Adam Rankin
re #1010 adding config file for mitral valve insertion recording
Commit: r:4284|plus:4284

#### 2015-09-01, 18:29:10 - Adam Rankin
re #1010 adding build name passing to pluslib
Commit: r:4318|plus:4318

#### 2015-09-01, 18:38:15 - Adam Rankin
re #1010 adding drive letter determination to plusbuild script to improve flexibility of windows build scripts
Commit: r:4319|plus:4319

#### 2015-09-04, 18:57:17 - Adam Rankin
re #1010 adding buildname to plusapp build
Commit: r:4341|plus:4341

#### 2015-09-04, 20:22:56 - Adam Rankin
re #1010 updating philips documentation page
Commit: r:4342|plus:4342

#### 2015-09-05, 13:43:51 - Adam Rankin
re #1010 preventing infinite callstack seg fault due to improper function naming
Commit: r:4347|plus:4347

#### 2015-09-05, 14:14:37 - Adam Rankin
re #1010 cleanup of Fiducial finder algorithm classes
Commit: r:4348|plus:4348

#### 2015-09-06, 00:58:01 - Andras Lasso
re #1010: Simplified directory change on Windows

Drive letter can be included in cd, just the /d parameter has to be specified.
Commit: r:4349|plus:4349

#### 2015-09-09, 14:14:12 - Adam Rankin
re #1010 trivial commit to test continuous build
Commit: r:4351|plus:4351

#### 2015-10-25, 20:55:37 - Adam Rankin
re #1010 updating config files in robarts directory for mitral valve insertion experiments
Commit: r:4377|plus:4377

#### 2015-10-26, 14:14:18 - Adam Rankin
re #1010 correcting error in configuration file
Commit: r:4379|plus:4379

#### 2015-10-29, 16:24:40 - Adam Rankin
re #1010 correctly restoring toolbox state after reset when channel is changed
Commit: r:4393|plus:4393

#### 2015-12-22, 18:30:36 - Adam Rankin
re #1010 Adding reading/writing support for image-less NRRD files
Commit: r:4419|plus:4419

#### 2016-01-12, 19:24:50 - Adam Rankin
re #1010 config files for robarts experiments
Commit: r:4440|plus:4440

#### 2016-01-29, 15:49:30 - Adam Rankin
re #1010 adding config files
Commit: r:4480|plus:4480

#### 2016-01-29, 15:51:03 - Adam Rankin
re #1010 Merged revision(s) 4464-4480 from trunk/PlusLib:
Merged revision(s)  from trunk/PlusApp:
Merged revision(s)  from trunk/PlusBuild:
Commit: r:4481|plus:4481

#### 2016-02-11, 19:19:53 - Adam Rankin
re #1010 In progress-cleaning up warnings from line finder algorithm classes
Commit: r:4498|plus:4498

#### 2016-02-11, 21:44:23 - Adam Rankin
re #1010 finishing up fid class cleanup to reduce warning count
Commit: r:4499|plus:4499

#### 2016-02-19, 04:11:44 - Adam Rankin
re #1010 Pushing new file copy mechanism
Commit: r:4505|plus:4505

#### 2016-02-19, 04:14:08 - Adam Rankin
re #1010 Merged revision(s) 4505 from branches/rankin-sandbox/PlusBuild:
Pushing new file copy mechanism
........
Commit: r:4506|plus:4506

#### 2016-02-19, 04:23:58 - Adam Rankin
re #1010 Pushing new file copy mechanism
Commit: r:4507|plus:4507

#### 2016-02-19, 04:25:35 - Adam Rankin
re #1010 Merged revision(s) 4507 from branches/rankin-sandbox/PlusBuild:
Pushing new file copy mechanism
........

Commit: r:4508|plus:4508

#### 2016-02-19, 18:21:37 - Adam Rankin
re #1010 Proper variable for the proper project
Commit: r:4509|plus:4509

#### 2016-02-29, 16:36:48 - Adam Rankin
re #1010 extracting pluslib data to separate folder

adding dependency on data if requested
Commit: r:4524|plus:4524

#### 2016-02-29, 16:40:08 - Adam Rankin
re #1010 forwarding pluslib data dir if downloaded
Commit: r:4525|plus:4525

#### 2016-02-29, 16:42:11 - Adam Rankin
re #1010 removing setting of data dir as it is no longer in pluslib subtree
Commit: r:4526|plus:4526

#### 2016-02-29, 17:50:02 - Adam Rankin
re #1010 Adding SVN revision parameter to checkout
Commit: r:4527|plus:4527

#### 2016-03-03, 19:15:46 - Adam Rankin
summary: changed from "Enh: Support ticket for items related to SlicerTAVI" to "Enh: Support ticket for items related to SlicerTAVI/SlicerVASST"

#### 2016-05-09, 15:30:46 - Adam Rankin
re #1010 Adding Ultrasonix + Aurora config file
Commit: r:4617|plus:4617

#### 2016-05-15, 04:47:26 - Adam Rankin
summary: changed from "Enh: Support ticket for items related to SlicerTAVI/SlicerVASST" to "Enh: Support ticket for items related to SlicerTAVI/SlicerVASST/RobartsVTK"

#### 2016-05-15, 04:47:26 - Adam Rankin
description: changed from "Support for any non-specifi..." to "Support for any non-specifi..."

#### 2016-05-15, 04:48:46 - Adam Rankin
re #1010 Improving PLUS export

Adding tools directory outputs (Epiphan, Ascension, etc...) to output proper CMake targets so that downstream projects can correctly detect .lib and .dll files

Renaming PlusHaptics to vtkPlusHaptics
Commit: r:4630|plus:4630

#### 2016-05-20, 18:31:59 - Adam Rankin
re #1010 Adding proper finding of OpenIGTLink targets when FIND_PACKAGE(PlusLib) is called
Commit: r:4633|plus:4633

#### 2016-05-27, 18:20:04 - Adam Rankin
re #1010 Passing prefix path to plusapp to enable qt5 detection
Commit: r:4634|plus:4634

#### 2016-06-06, 16:58:36 - Adam Rankin
re #1010 Adding first channel locating for data collector as well as renamed GetStarted function

Correcting shared target exporting to enable multiple FIND_PACKAGE(PlusLib) calls
Commit: r:4653|plus:4653

#### 2016-06-06, 17:39:13 - Adam Rankin
re #1010 improving plusapp export and setting correct case of variables
Commit: r:4656|plus:4656

#### 2016-06-07, 20:00:45 - Adam Rankin
re #1010 correcting forward class declaration namespace error
Commit: r:4657|plus:4657

#### 2016-06-07, 20:03:46 - Adam Rankin
re #1010 correct fix this time
Commit: r:4658|plus:4658

#### 2016-06-08, 20:46:29 - Adam Rankin
re #1010 Correcting Mac build name generation
Commit: r:4659|plus:4659

#### 2016-06-09, 01:28:47 - Adam Rankin
re #1010 moving to generator independent build scripts

improving script file generation on linux/apple to have execute permissions
Commit: r:4660|plus:4660

#### 2016-06-09, 01:29:14 - Adam Rankin
re #1010 improving script file output generation
Commit: r:4661|plus:4661

#### 2016-06-09, 01:29:45 - Adam Rankin
re #1010 improving script generation
Commit: r:4662|plus:4662

#### 2016-06-09, 03:56:34 - Adam Rankin
re #1010 moving global header configuration until after data collection as necessary variables are defined

Adding include to access cmake defines
Commit: r:4663|plus:4663

#### 2016-06-09, 14:39:17 - Adam Rankin
re #1010 adding first xcode specific generator search to see if it works
Commit: r:4664|plus:4664

#### 2016-06-09, 21:45:06 - Adam Rankin
re #1010 Adding Qt5 only option to enable qt5 build on linux

Commit: r:4665|plus:4665

#### 2016-06-09, 21:45:25 - Adam Rankin
re #1010 only detecting qt5 if requested by cmake


Commit: r:4666|plus:4666

#### 2016-06-10, 16:09:35 - Adam Rankin
re #1010 Adding xcode support, it mimics visual studio construction
Commit: r:4667|plus:4667

#### 2016-06-10, 19:26:29 - Adam Rankin
re #1010 Enabling tests on Mac platform
Commit: r:4668|plus:4668

#### 2016-06-10, 19:26:54 - Adam Rankin
re #1010 Enabling tests on Mac platform
Commit: r:4669|plus:4669

#### 2016-06-10, 19:27:17 - Adam Rankin
re #1010 Enabling tests on Mac platform

Correcting path detection on mac platform
Commit: r:4670|plus:4670

#### 2016-06-13, 14:29:21 - Adam Rankin
re #1010 enabling dynamic maximum sizing of device set combo box
Commit: r:4671|plus:4671

#### 2016-06-16, 18:42:58 - Adam Rankin
re #1010 Fixing device set configuration name
Commit: r:4674|plus:4674

#### 2016-06-22, 14:48:32 - Adam Rankin
re #1010 fixing openigtlink version until we are ready to switch to v3
Commit: r:4675|plus:4675

#### 2016-06-26, 18:26:57 - Adam Rankin
re #1010 improving generated build name to better match reality
Commit: r:4680|plus:4680

#### 2016-07-13, 16:10:41 - Andras Lasso
re #1010: Pass Qt5_DIR to external projects instead of overriding CMAKE_PREFIX_PATH

CMAKE_PREFIX_PATH is a variable that affects all find_... operations. To avoid potential side effects, instead of passing CMAKE_PREFIX_PATH just pass the found QT5..._DIR variables.
Commit: r:4724|plus:4724

#### 2016-07-13, 16:12:08 - Adam Rankin
Hmm, could we discuss this? CMAKE_PREFIX_PATH is the correct way to locate the Qt5 packages. Perhaps we could append the prefix path?

#### 2016-07-13, 16:15:57 - Andras Lasso
You can still use either CMAKE_PREFIX_PATH or Qt5_DIR to specify to PlusBuild where Qt5 is located, but then PlusBuild sends the necessary directories to the external projects (VTK and PlusApp).


#### 2016-07-13, 16:26:32 - Adam Rankin
image:https://s-media-cache-ak0.pinimg.com/564x/1c/66/e6/1c66e646b4492b821fd0f5ac0746a915.jpg

#### 2016-07-13, 16:29:12 - Adam Rankin
image:cBt_sssryr5Qhcdmr6bg7m

#### 2016-07-13, 16:39:30 - Andras Lasso
re #1010: Cleaned up Qt5 finding a bit more

Get QT5..._DIR variables from find_package.
Only pass Qt5WebKitWidgets_DIR if Qt version &lt;5.6.0 (as it is removed in Qt 5.6.0).
Removed unused QT_ROOT_DIR.

Commit: r:4725|plus:4725

#### 2016-07-13, 17:23:15 - Adam Rankin
re #1010 Updating openIGTLink version
Commit: r:4727|plus:4727

#### 2016-07-14, 16:04:37 - Adam Rankin
re #1010 updating openigtlink
Commit: r:4730|plus:4730

#### 2016-07-14, 16:49:55 - Adam Rankin
re #1010 updating linux build script and updating plusapp cmake to 3.3.0
Commit: r:4731|plus:4731

#### 2016-08-12, 20:16:56 - Adam Rankin
re #1010 Adding embedded image transform to tracked frame message

Optimizing message sending and receiving by not creating a factory for each receive

Adjusting timeout to be based in seconds
Commit: r:4796|plus:4796

#### 2016-08-12, 23:08:16 - Adam Rankin
re #1010 Adding the ability to define image streams for OpenIGTLink video sources
Commit: r:4797|plus:4797

#### 2016-08-13, 15:28:42 - Adam Rankin
re #1010 changing behavior to more closely match that of image message embedded transform extraction
Commit: r:4798|plus:4798

#### 2016-09-30, 17:34:48 - Adam Rankin
re #1010 adding ability to specify ultrasonix root directory to arbitrary path
Commit: r:4889|plus:4889

#### 2016-10-10, 20:52:31 - Adam Rankin
re #1010 correcting whitespace
Commit: r:4898|plus:4898

#### 2016-10-10, 21:47:09 - Adam Rankin
re #1010 Adding status message to plus server message receiving as a keep-alive mechanism from the client side
Commit: r:4899|plus:4899

#### 2016-10-11, 00:21:05 - Adam Rankin
re #1010 Adding solution folders for IDEs that support them

Moving tools to tools folder, cleaning up CMake files
Commit: r:4900|plus:4900

#### 2016-10-11, 01:41:32 - Adam Rankin
re #1010 Updating project descriptions to include msprojects when requested via the macro
Commit: r:4901|plus:4901

#### 2016-10-11, 02:01:00 - Adam Rankin
re #1010 Applying formatting to MMF library
Commit: r:4902|plus:4902

#### 2016-10-11, 02:05:30 - Adam Rankin
re #1010 Applying formatting to PlusApp source files

Fixing project name erroneously renamed during Plus rename


Commit: r:4903|plus:4903

#### 2016-10-11, 18:35:49 - Adam Rankin
re #1010 Updating vcproj reference to vcxproj
Commit: r:4905|plus:4905

#### 2016-10-14, 15:37:33 - Adam Rankin
re #1010 adding latest generation to opencv cuda build
Commit: r:4909|plus:4909

#### 2016-11-04, 19:52:43 - Adam Rankin
re #1010 adding hololens config file
Commit: r:4920|plus:4920

#### 2016-11-07, 18:27:35 - Adam Rankin
re #1010  Extracting vtkPlusToolAxesActor to a separate PlusRendering project to reduce dependencies of PlusCommon.
Commit: r:4921|plus:4921

#### 2016-11-07, 19:10:32 - Adam Rankin
re #1010 re-adding missing link dependencies as they were previously implied from vtkPlusCommon
Commit: r:4922|plus:4922

#### 2016-11-08, 01:05:20 - Adam Rankin
re #1010 Installing header files to include directory, adding xml files to share directory
Commit: r:4923|plus:4923

#### 2016-11-09, 00:04:53 - Adam Rankin
re #1010 enabling default TDATARequested set to on from config file
Commit: r:4924|plus:4924

#### 2016-11-09, 00:07:48 - Adam Rankin
re #1010 updating documentation, adding ability to set Resolution for TDATA messages from config file
Commit: r:4925|plus:4925

#### 2016-11-12, 22:23:24 - Adam Rankin
re #1010 Formatting changes, constructor list changes, fixing a bug in plusserver when sending tdata messages (messages now send).
Commit: r:4928|plus:4928

#### 2016-11-14, 22:47:11 - Adam Rankin
re #1010 Adding ability to adjust units of acquired tool poses
Commit: r:4929|plus:4929

#### 2016-11-14, 23:12:38 - Andras Lasso
Please don't add a new feature for this. We already have arbitrary unit support and use it for example for pixel and mm. If you need tool position in meters then just define a transform that converts between Tracker and TrackerMeter (which is a simple diag(1000, 1000, 1000, 1) matrix).

#### 2016-11-14, 23:12:38 - Andras Lasso
CommentContent: changed from "Please don't add a new feature for this. We already have arbitrary unit support and use it for example for pixel and mm. If you need tool position in meters then just define a transform that converts between Tracker and TrackerMeter (which is a simple" to "Please don't add a new feature for this. We already have arbitrary unit support and use it for example for pixel and mm. If you need tool position in meters then just define a transform that converts between Tracker and TrackerMeter (which is a simple"

#### 2016-11-14, 23:24:30 - Adam Rankin
re #1010 reverting change
Commit: r:4930|plus:4930

#### 2016-11-15, 02:25:50 - Adam Rankin
re #1010 Correcting units in configuration file
Commit: r:4932|plus:4932

#### 2016-11-15, 16:15:45 - Adam Rankin
re #1010 removing forgotten include, restoring vs2010 build
Commit: r:4933|plus:4933

#### 2016-11-16, 15:31:42 - Adam Rankin
re #1010 correcting class header to enable vs 2010 build
Commit: r:4934|plus:4934

#### 2016-11-17, 20:05:31 - Andras Lasso
re #1010 removing c++11 based for loop as vs2010 doesn't support it
Commit: r:4935|plus:4935

#### 2016-11-17, 20:33:41 - Adam Rankin
re #1010 initializing mutex before use
Commit: r:4936|plus:4936

#### 2016-11-18, 19:21:18 - Adam Rankin
re #1010 enabling separate timeout settings on IGT link devices
Commit: r:4937|plus:4937

#### 2016-11-18, 19:22:54 - Adam Rankin
re #1010 updating documentation to match
Commit: r:4938|plus:4938

#### 2016-11-27, 15:58:25 - Adam Rankin
re #1010 fixing mac build
Commit: r:4950|plus:4950

#### 2016-12-11, 16:20:20 - Adam Rankin
re #1010 Adding accessor using c++ types

Updating selector UI for description to be minimumExpanding
Commit: r:4963|plus:4963

#### 2016-12-11, 19:58:20 - Adam Rankin
re #1010 Adding accessors to retrieve application configuration file path

Adding UI access via right-click menu to quickly modify app config file

Adding C++11 range-for support to tracked frame list

Adding ability to configure MMF video device by specifying a format index
Commit: r:4964|plus:4964

#### 2016-12-12, 04:14:21 - Adam Rankin
re #1010 Removing usages of ${VTK_LIBRARIES} and ${ITK_LIBRARIES} to reduce unnecessary dependencies
Commit: r:4965|plus:4965

#### 2016-12-12, 04:33:12 - Adam Rankin
re #1010 Missed rendering dependencies
Commit: r:4966|plus:4966

#### 2016-12-12, 05:37:00 - Adam Rankin
re #1010 more missing dependencies, build machine identified them

Making CMake code advanced enough to handle vtkRenderingGL2PS and vtkRenderingGL2PSOpenGL2
Commit: r:4967|plus:4967

#### 2016-12-12, 05:40:16 - Adam Rankin
re #1010 mimicing GL2PS logic for fCal project
Commit: r:4968|plus:4968

#### 2016-12-12, 19:49:50 - Adam Rankin
re #1010 Adding widestring logging
Commit: r:4969|plus:4969

#### 2016-12-12, 20:52:08 - Adam Rankin
re #1010 fixing build when GL2PS target does not exist
Commit: r:4970|plus:4970

#### 2016-12-12, 23:38:17 - Adam Rankin
re #1010 just making sure the build machines got their daily exercise...
Commit: r:4971|plus:4971

#### 2016-12-13, 21:01:11 - Adam Rankin
re #1010 more missing vtk dependency targets restored
Commit: r:4972|plus:4972

#### 2016-12-14, 17:12:47 - Adam Rankin
re #1010 removing vs2008 related configure variables
Commit: r:4973|plus:4973

#### 2016-12-14, 19:52:56 - Adam Rankin
re #1010 another missing vtkInteractionImage dependency
Commit: r:4974|plus:4974

#### 2016-12-14, 21:13:33 - Adam Rankin
re #1010 calculating max pixel value of image and sending it as a field in the ie33 device
Commit: r:4975|plus:4975

#### 2016-12-14, 21:13:53 - Adam Rankin
re #1010 Using latest openigtlink which incorporates IANA enum
Commit: r:4976|plus:4976

#### 2016-12-14, 21:32:08 - Adam Rankin
re #1010 casting to int so numerical value is written to stream
Commit: r:4977|plus:4977

#### 2016-12-16, 17:28:48 - Adam Rankin
summary: changed from "Enh: Support ticket for items related to SlicerTAVI/SlicerVASST/RobartsVTK" to "Enh: Parent ticket for items HoloLens development"

#### 2016-12-16, 17:28:55 - Adam Rankin
Component: changed from "PlusApp-fCal" to "PlusLib"

#### 2016-12-16, 17:29:19 - Adam Rankin
summary: changed from "Enh: Parent ticket for items HoloLens development" to "Parent ticket for items related to HoloLens development"

#### 2016-12-16, 17:29:19 - Adam Rankin
summary: changed from "Enh: Parent ticket for items HoloLens development" to "Parent ticket for items related to HoloLens development"

#### 2016-12-16, 17:30:38 - Adam Rankin
re #1010 correcting build for VS2010, which does not support range-for loops
Commit: r:4979|plus:4979

#### 2016-12-19, 16:28:55 - Adam Rankin
re #1010 readding missing link


Commit: r:4980|plus:4980

#### 2016-12-19, 17:03:13 - Adam Rankin
re #1010 fixing linux build issue due to compiler differences of return type optimization
Commit: r:4981|plus:4981

#### 2016-12-19, 17:05:45 - Adam Rankin
re #1010 cleaning up NDI tracker class


Commit: r:4982|plus:4982

#### 2016-12-19, 17:50:31 - Adam Rankin
re #1010 triggering continuous build
Commit: r:4983|plus:4983

#### 2016-12-20, 14:28:29 - Andras Lasso
re #1010: Fixed comments in build scripts
Commit: r:4984|plus:4984

#### 2016-12-20, 14:29:09 - Andras Lasso
re #1010: Fixed comments in build scripts
Commit: r:4985|plus:4985

#### 2016-12-22, 17:02:26 - Adam Rankin
re #1010 latest phantom configuration
Commit: r:4989|plus:4989

#### 2016-12-22, 17:04:55 - Adam Rankin
re #1010 adding sim-only hololens config files for testing
Commit: r:4990|plus:4990

#### 2016-12-26, 16:43:49 - Adam Rankin
re #1010 updating config file after phantom damage was repaired
Commit: r:4997|plus:4997

#### 2017-01-03, 18:09:42 - Adam Rankin
re #1010 updating mmf video source to use wstring instead of string
Commit: r:5007|plus:5007

#### 2017-01-07, 06:31:31 - Andras Lasso
re #1010: Another missing vtkInteractionImage dependency
Commit: r:5012|plus:5012

#### 2017-01-13, 18:34:51 - Adam Rankin
re #1010 improving device set selector widget behavior when expanding
Commit: r:5023|plus:5023

#### 2017-01-16, 19:56:18 - Adam Rankin
re #1010 removing async feature as not available on supported compilers
Commit: r:5026|plus:5026

#### 2017-01-20, 15:16:44 - Adam Rankin
re #1010 increasing template depth for linux compilers


Commit: r:5034|plus:5034

#### 2017-01-23, 15:10:27 - Adam Rankin
re #1010 Updating config file to match repaired phantom
Commit: r:5038|plus:5038

#### 2017-01-23, 19:26:20 - Adam Rankin
re #1010 Updating all configuration files to match latest pivot calibration results
Commit: r:5039|plus:5039

#### 2017-01-23, 19:36:43 - Adam Rankin
re #1010 restoring removed details
Commit: r:5040|plus:5040

#### 2017-01-23, 21:10:57 - Adam Rankin
re #1010 not sure what I was smoking... but here's to that.
Commit: r:5041|plus:5041

#### 2017-01-26, 16:53:47 - Adam Rankin
re #1010 Adding ROM files for NDI tools

Updating config files to create proper device type
Commit: r:5046|plus:5046

#### 2017-01-31, 19:18:10 - Adam Rankin
re #1010 updating HoloLens phantom configuration with latest pivot calibration
Commit: r:5049|plus:5049

#### 2017-02-01, 02:15:06 - Adam Rankin
re #1010 config file for HoloLens dev
Commit: r:5050|plus:5050

#### 2017-02-01, 15:42:54 - Adam Rankin
re #1010 updating hololens config files
Commit: r:5051|plus:5051

#### 2017-02-06, 22:34:35 - Adam Rankin
re #1010 updating config files for hololens experiments
Commit: r:5053|plus:5053

#### 2017-02-07, 00:56:59 - Adam Rankin
re #1010 adding missing lines
Commit: r:5054|plus:5054

#### 2017-02-07, 15:42:34 - plus.bot
re #1010 Minor CMake change

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ccbe14756387f9b60e6fe44dd021333879280049|plus:ccbe147563

#### 2017-02-10, 03:15:12 - Adam Rankin
re #1010 testing python github api

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/3f23ec6b3da1f51064b4f11f37d32d99b79a9397|plus.2:3f23ec6b3d

#### 2017-02-10, 20:09:05 - Adam Rankin
re #1010 Removing defunct variable

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/ba9a82e2364154feb989d4c35de6750ddf5649fd|plus.3:ba9a82e236

#### 2017-02-18, 04:28:32 - Adam Rankin
re #1010 fixes to OvrVisionPro device. Properly reading/writing vendor tag, processingmode, and other attributes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a61eeeca324b2fbd66b274c53a7a26ad1ef1b390|plus:a61eeeca32

#### 2017-02-18, 21:09:10 - Adam Rankin
re #1010 Upgrading OpenCV to 3.2.0

Re-enabling VTK compilation

Passing in correct paths for archive/library/executables

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/232663e7369145d5a9f242c3ae7f9d8034ece5be|plus.3:232663e736

#### 2017-02-19, 02:07:40 - Adam Rankin
re #1010 updating opencv to 3.2.0, re-enabling VTK support

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/960bbbd7fe0893018a43121432dfe57d4932019b|plus.3:960bbbd7fe

#### 2017-02-19, 02:35:22 - Adam Rankin
re #1010 Adding device parameter documentation for Vendor, making Vendor tag optional (will grab whatever OpenCL device the system provides first)

Source formatting to match VTK (this->)

Setting device acquisition rate to match desired framerate

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bd22ffeb12a64177bc65704dc01881098337e406|plus:bd22ffeb12

#### 2017-02-20, 04:57:38 - Adam Rankin
re #1010 storing member variable for vtksmartpointer of vtkPoints to prevent auto-releases

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/c3d04d2dd4f1b100f931577c5652a6c5202f5bea|plus.2:c3d04d2dd4

#### 2017-02-20, 05:07:45 - Adam Rankin
re #1010 updating hololens config files
Commit: r:5058|plus:5058

#### 2017-02-20, 14:46:57 - Adam Rankin
re #1010 updating find_package version argument to 3.2.0

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/d2b19b4c65d7596c216593bae546802d1b4a5a0c|plus.3:d2b19b4c65

#### 2017-02-24, 05:00:58 - Adam Rankin
re #1010 Setting polling framerate of OvrvisionPro to match requested framerate

Reusing message structure in PlusServer to reduce memory usage

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b9f102b602caff49eaa3f3613d0de9c617d2eab2|plus:b9f102b602

#### 2017-02-25, 04:21:03 - Adam Rankin
re #1010 restoring epiphan + polaris configuration file

Cleaning up HoloLens configuration files

Adding Polaris double stylus capturing
Adding custom rom file
Commit: r:5059|plus:5059

#### 2017-03-06, 01:41:24 - Adam Rankin
re #1010 adding rbegin/rend functions for tracked frame list

adding Size function as an equivalent for GetNumberOfTrackedFrames

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/67bac3a7f85e142641b0f092a4a8f08590256c70|plus:67bac3a7f8

#### 2017-04-03, 19:27:22 - Adam Rankin
re #1010 enabling NDI targets for downstream projects

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a4ff5ecbc23e3053b3ab4f51761fad886d443cf2|plus:a4ff5ecbc2

#### 2017-04-04, 14:18:41 - Adam Rankin
re #1010 Adding optional Intel Performance Primitives support

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/d59deb51f8b4d8c7860b0a9a04f3386dad10d9e5|plus.3:d59deb51f8

#### 2017-04-04, 16:39:10 - Adam Rankin
re #1010 changing framesize to unsigned int from int

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5aaf92038716ae9192182d0ab56484014320654d|plus:5aaf920387

#### 2017-04-04, 19:02:10 - Adam Rankin
re #1010 fixing usage of xml string macro

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/068fcec1d5ef4f8e0f05e7dda35e0d66ff3fcb06|plus:068fcec1d5

#### 2017-04-09, 16:28:28 - Adam Rankin
re #1010 hololens config file updates
Commit: r:5066|plus:5066

#### 2017-04-09, 18:10:51 - Adam Rankin
re #1010 improving PlusServerLauncher display to show actual IP and ports used

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/061d158a31930302b8c94d7dcdc6d0c63ded97ef|plus.2:061d158a31

#### 2017-04-09, 18:11:41 - Adam Rankin
re #1010 updating ovrvision pro related config files
Commit: r:5067|plus:5067

#### 2017-04-09, 19:17:41 - Adam Rankin
re #1010 Changed to not pack a transform if the name is too long, correcting behavior to not send invalid transforms

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c0cb10532151e5f8d476f1f02cb235a8de028d7c|plus:c0cb105321

#### 2017-04-09, 19:23:31 - Adam Rankin
re #1010 Changed to not pack a transform if the name is too long, correcting behavior to not send invalid transforms

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/352222b408eeb1526fff86c01c6b4cdc2ef1abc1|plus:352222b408

#### 2017-04-10, 15:23:51 - Adam Rankin
re #1010 Passing truncated name instead of skipping.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/2a4903df5032bbda5ba3c44532c35b61116160c6|plus:2a4903df50

#### 2017-04-12, 20:33:52 - Adam Rankin
re #1010 updated config file for hololens testing
Commit: r:5068|plus:5068

#### 2017-05-14, 19:34:29 - Adam Rankin
re #1010 fixing NDICAPI install CMake logic to check for both debug and release libraries (Linux testing needed)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5b443514a0b4acebce19e96e822bef765ca2dbdf|plus:5b443514a0

#### 2017-05-14, 19:39:47 - Adam Rankin
re #1010 adding NDICAPI as a dependency of Plus

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/402658c47264f0200bd17f92a39ef189f1ea3a96|plus.3:402658c472

#### 2017-05-14, 22:43:31 - Andras Lasso
re #1010: Fine-tuned ndicapi dependency

NDI common api and oapi are two completely different interfaces, so decoupled them.
If external ndicapi_DIR is provided then don't add a dependency (PlusBuild will not know how to build it).

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/23b18a5b63d1d86473b3f21166937fb5f0c5a224|plus.3:23b18a5b63

#### 2017-05-15, 18:24:17 - Adam Rankin
re #1010 adding HoloLens optical fiducial configuration file
Commit: r:5077|plus:5077

#### 2017-05-18, 14:56:36 - Adam Rankin
re #1010 revision 2 of hololens markers
Commit: r:5080|plus:5080

#### 2017-05-24, 19:30:07 - Adam Rankin
re #1010 Improving MicronTracker find module to create target, addition of install macro to clean up plusdatacollection cmake

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/473d1f91a57303dbacd9f92450ba74a698d89fb3|plus.3:473d1f91a5

#### 2017-05-24, 19:32:50 - Adam Rankin
re #1010 cleaning up PlusDataCollection/CMakeLists.txt to use LIST(APPEND instead of SET(

Updating micron tracker to use new target and install macro

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ff2cdabfdb336fdab0dcdf86ff24247a818658d7|plus:ff2cdabfdb

#### 2017-05-25, 13:48:49 - Adam Rankin
re #1010 sending module path to PlusApp

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/94be67d575f52df5cc89b67a8314607165b913a9|plus.3:94be67d575

#### 2017-05-25, 13:57:55 - Adam Rankin
re #1010 cleaning up PlusDataCollection/CMakeLists.txt to use LIST(APPEND instead of SET(

Updating micron tracker to use new target and install macro

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e2054a6124e842bbdaa8012f88bd0e7a4ba91b2f|plus:e2054a6124

#### 2017-05-25, 13:57:55 - Adam Rankin
re #1010 setting module path before trying to find API

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/76f40540d70478994c6195a1096a7d1ed4dbf4ac|plus:76f40540d7

#### 2017-05-25, 20:08:57 - Adam Rankin
re #1010 more robust Polaris HoloLens configuration
Commit: r:5083|plus:5083

#### 2017-05-26, 02:17:42 - Andras Lasso
Why MicronTracker is a special case and all other SDKs can be managed without manipulating CMAKE_MODULE_PATH?

#### 2017-05-26, 02:27:51 - Adam Rankin
It was a new way to cmake-ifiy imported library targets. I'd like to see if there's a way to attach multiple DLLs to a single target, but so far I can't find it.

#### 2017-05-26, 02:27:51 - Adam Rankin
CommentContent: changed from "It was a new way to cmake-ifiy external targets. I'd like to see if there's a way to attach multiple DLLs to a single target, but so far I can't find it." to "It was a new way to cmake-ifiy imported library targets. I'd like to see if there's a way to attach multiple DLLs to a single target, but so far I can't find it."

#### 2017-05-26, 02:31:44 - Adam Rankin
With this way, all of the logic for finding, using and installing is in the find module.

#### 2017-05-26, 02:36:09 - Andras Lasso
People who use PlusLib only (not use PlusBuild) would have a harder time with the new way. They would need to get those CMake modules and put it in their project, keep in sync with PlusBuild. I would rather spend time with improvements that have clear, significant advantages (then I don't mind if there are slight disadvantages).

#### 2017-05-26, 02:40:44 - Adam Rankin
Hmm, fair enough. Do PlusLib devices work if PlusBuild isn't used? Would people need to manually populate MicronTracker_LIBRARY... etc?

#### 2017-05-26, 02:57:26 - Andras Lasso
Yes, they do, they just need to set the include dirs, library names, etc. according to where these are available in their project (not necessarily in PLTools).

#### 2017-05-26, 02:58:18 - Adam Rankin
Ok makes sense, I will revert it.

#### 2017-05-26, 03:00:09 - Andras Lasso
OK, thank you.

#### 2017-05-26, 23:48:53 - Adam Rankin
re #1010 reverting MicronTracker external library changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/c15d4c54e52f1d7efc910007bb899179146e8875|plus.3:c15d4c54e5

#### 2017-05-26, 23:50:54 - Adam Rankin
re #1010 reverting MicronTracker external library changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/c51ee6c80573222c8c1033bcc8bf5d888b54b026|plus.3:c51ee6c805

#### 2017-05-27, 00:02:21 - Adam Rankin
re #1010 reverting MicronTracker external library changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/36075aa2c21b8cf50e2772c82a031132f8711c96|plus.3:36075aa2c2

#### 2017-05-27, 00:40:00 - Adam Rankin
re #1010 reverting changes to MicronTracker external library

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bd3c190ec37f66422b66cb6b79c11dd618b4c0ce|plus:bd3c190ec3

#### 2017-05-27, 04:50:07 - Adam Rankin
re #1010 resolving non-Windows NDICAPI install issue by dynamically scanning imported configurations and installing RELEASE or NOCONFIG

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/732a67fe5854ab08b65d074e8af6ac6712756ed2|plus:732a67fe58

#### 2017-05-27, 15:22:49 - Adam Rankin
re #1010 repairing Linux install by removing hardcoded build-type

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/153fb759a20ace5d0b6605d1067c4015f8ab85e6|plus:153fb759a2

#### 2017-05-27, 15:24:39 - Adam Rankin
re #1010 VS version message increment

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/cca4183048eb652bc136ac5192e31c87c260b42e|plus.3:cca4183048

#### 2017-05-27, 15:52:55 - Adam Rankin
re #1010 minor CMake formatting changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/940a7d5ae570fb282fc0945c0bd14bd107fa3c8b|plus:940a7d5ae5

#### 2017-05-27, 16:40:00 - Adam Rankin
re #1010 minor CMake formatting changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b1db2c23e726cc4538144434506a827dbfdc3e0f|plus:b1db2c23e7

#### 2017-05-29, 14:35:12 - Adam Rankin
re #1010 latest HoloLens ROM file
Commit: r:5084|plus:5084

#### 2017-05-29, 15:01:49 - Adam Rankin
re #1010 enable sending of invalid transforms if requested by config file for TDATA messages

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/fc46f256b7d2e42288f1a74c1261782ac4846504|plus:fc46f256b7

#### 2017-05-31, 01:35:53 - Adam Rankin
re #1010 adding hololens files
Commit: r:5085|plus:5085

#### 2017-05-31, 15:49:14 - Adam Rankin
re #1010 adding NDI Traxis marker body
Commit: r:5086|plus:5086

#### 2017-05-31, 16:32:06 - Adam Rankin
re #1010 adding second rom file for double TA1D3
Commit: r:5087|plus:5087

#### 2017-05-31, 19:32:30 - Adam Rankin
re #1010 rename file
Commit: r:5088|plus:5088

#### 2017-05-31, 19:32:43 - Adam Rankin
re #1010 oops
Commit: r:5089|plus:5089

#### 2017-07-05, 13:56:06 - Adam Rankin
re #1010 reducing warning spam output when send all transforms is selected and a transform is not available

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ca7473fbde0da2b514895c1e404005d4e26faa7c|plus:ca7473fbde

#### 2017-07-06, 18:30:53 - Adam Rankin
re #1010 adding config file
Commit: r:5104|plus:5104

#### 2017-07-06, 18:32:37 - Adam Rankin
re #1010 missing tool definitions
Commit: r:5105|plus:5105

#### 2017-07-16, 13:38:34 - Anonymous
re #1010 temp allow merge

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/dd0a47071e235760044f8b143613b81c4be48ee2|plus:dd0a47071e

#### 2017-07-16, 13:48:55 - Anonymous
re #1010 temporary change to include new volume query method

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6e4ac5590d0891186330ec0662071567bc60ac0b|plus:6e4ac5590d

#### 2017-07-18, 17:42:54 - Adam Rankin
re #1010 Correcting check for OpenIGTLinkIO (which itself finds OpenIGTLink)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6f1d11ac365d0d04cb32eda58bbf63bb7a060063|plus:6f1d11ac36

#### 2017-07-25, 00:22:34 - Andras Lasso
re #1010: Always build ndicapi

ndicapi library is changing relatively frequently, which breaks the build until a a rebuild is triggered manually.

ndicapi can be built quickly, so overall it is better to force to build it every time (at least for now, when changes are quite frequent).

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/6956a013c704ca80d6ff7b73f2500adb277c3b46|plus.3:6956a013c7

#### 2017-07-27, 19:15:03 - Adam Rankin
re #1010 missing return in WriteConfiguration

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/dbb84f30524ff5dc752c581312363bdb43162c9e|plus:dbb84f3052

#### 2017-08-07, 01:55:35 - Adam Rankin
re #1010 -std=c++11 flag stillllll needed for linux!

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/a11313d5f3bf50b824b5a44625bbd804533a3f0b|plus.3:a11313d5f3

#### 2017-08-07, 02:58:20 - Adam Rankin
re #1010 fix linux build

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/41b0a16462001173382ab0da906e59a7e7319eea|plus:41b0a16462

#### 2017-08-07, 20:07:44 - Adam Rankin
re #1010 adding linux packaging scripts

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/dd7e2bd066b3e2ff14dd6bca1a313bab9e191041|plus.2:dd7e2bd066

#### 2017-08-07, 20:08:54 - Adam Rankin
re #1010 configure with execute flag on linux

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/e0fd55a6eb35265ef2a3a58082d66d56f65641b4|plus.2:e0fd55a6eb

#### 2017-08-07, 20:11:11 - Adam Rankin
re #1010 adding linux packaging scripts

re #1010 configure with execute flag on linux

re #1010 missed another

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/ad5379194047fd1ef5e789504af636baf55d4b2c|plus.2:ad53791940

#### 2017-08-07, 20:36:15 - Adam Rankin
re #1010 finalizing linux package scripts

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/266ab0a57959bc423cd2be78c4a47d8ac73cdd2c|plus.2:266ab0a579

#### 2017-08-07, 21:38:57 - Adam Rankin
re #1010 adding device ID verification and uniqueness within device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/62429a794d3ef2c24b9fe56db90aa29c3d3f91cb|plus:62429a794d

#### 2017-08-09, 14:50:38 - Adam Rankin
re #1010 restoring original ndipolaris config file
Commit: r:5113|plus:5113

#### 2017-08-09, 14:51:45 - Adam Rankin
re #1010 new code worked! forgot to change ToolReferenceFrame
Commit: r:5114|plus:5114

#### 2017-08-09, 15:01:30 - Mark Asselin
@rankin We should really rename this ticket to reflect what it's being used for. (i.e. it's not being used for HoloLens development)

#### 2017-08-09, 15:04:36 - Adam Rankin
True. I've been using it as a crutch.

#### 2017-08-09, 15:04:36 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-08-15, 03:36:08 - Andras Lasso
re #1010: Added sending of raw transforms (relative to tracker) to NDIPolaris config file

It allows performing stylus calibration, tracking of reference marker position, etc.
Commit: r:5116|plus:5116


## #1011 PlusServerLauncher is built when BUILD_TESTING is enabled
As per description here: url:https://www.assembla.com/spaces/plus/messages/5249553|https://www.assembla.com/spaces/plus/messages/5249553



~~~~
When BUILD_TESTING is not enabled, it doesn't build PlusServer, but PlusServerLauncher still tries to start the process, however logging does not tell exactly what could be the issue.
It would be good to notify the user, if the plusServerExecutable file does not exist (in bool PlusServerLauncherMainWindow::startServer), or build PlusServer executable even if BUILD_TESTING is off.

Here is the output from the log using Plus 2.2 branch:
|ERROR|005.483000| Server process error: FailedToStart| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(326)
|ERROR|005.483000| Failed to start server process| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(147)


~~~~



#### 2015-07-24, 16:30:48 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2015-08-31, 14:51:45 - Adam Rankin
@lassoan it seems to me that the correct behavior is that PlusServer should be build regardless of BUILD_TESTING or not.

It seems to me like the Cmake files should be modified to not configure the tests if BUILD_TESTING is disabled.

Thoughts?

#### 2015-08-31, 15:50:45 - Andras Lasso
I agree that executables that don't start with vtk prefix (PlusServer, EditSeqMetafile, etc.) are not test applications, so they should not depend on BUILD_TESTING flag. It might still make sense to add a BUILD_TOOLS ('applications' would be confusing because of PlusApp) option to not build any executables if somebody just needs libraries.

#### 2016-01-18, 22:15:41 - Andras Lasso
re #1011: Fixed CMake warning of 'value '' with no previous keyword in ExternalProject_Add'
Commit: r:4449|plus:4449

#### 2016-01-18, 22:15:41 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-06-30, 14:46:35 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2016-06-30, 14:46:35 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-06-30, 19:17:28 - Adam Rankin
fixed #1011 All non-test applications have been extracted from BUILD_TESTING rules and put under their own PLUSBUILD_BUILD_PlusLib_TOOLS (Default: ON) rule.
Commit: r:4694|plus:4694

#### 2016-06-30, 19:17:28 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2016-06-30, 19:36:37 - Adam Rankin
re #1011 Improving detection of PLUS targets in downstream CMake projects by automatically including necessary include dirs as properties on targets
Commit: r:4695|plus:4695


## #1012 Multi device broadcasting with vtkPlusOpenIGTLinkserver
Device specific data broadcasting would be a great addition to vtkPlusOpenIGTLink interface. 

Requirements: 
- Allow connection to new devices when new PlusCommand request arrived from a client and there is no connection yet (Need access to DataCollector devices, requires new PlusCommand)
- Allow connection from a new client to an already connected device (Requires device specific ClientData list and TransformRepository)

Here is a scenario:
Client1 need data from Device1 Channel1 -> Send request to connect to to Device1 and transfer data from Channel1 
Client2 connected and request data from Device1 Channel1 -> We use the already connected Device1 Channel1 stream 
Client2 connected and request data from Device1 Channel2 -> Maybe define new channel (Channel2) on Device1 if it's possible and start broadcasting
Client3 connected and request data from Device2 Channel1 -> Send request to connect to to Device2 and transfer data from Channel1 
Client1 need data from Device2 Channel1 -> We use the already connected Device2 Channel1 stream 

#### 2015-07-09, 20:02:00 - Andras Lasso
You can create multiple OpenIGTLinkServer elements in the config file, one for each output channel, with different port numbers. So, any client could get any data stream at any time without the need of dynamically changing connections or adding new devices.

We also plan to add a command that allows you to (re)start PlusServer with an arbitrary config file, without any user interaction (#858). It'll be possible to run PlusServerLauncher as background service and whenever a client sends a config file to PlusServerLauncher, it'll start a PlusServer instance with that config file. There'll be command for starting/stopping/restarting a PlusServer instance.

Are these existing/planned features are going to fulfil your needs?

#### 2015-07-09, 21:29:35 - Tamas Heffter
I'm working on a similar design, a windows service running always in the background and waiting for clients to connect. The client can request to start different processes (like fCal) or connect to devices based on configuration command received (xml data sent as a string). I just want to avoid using multiple port numbers and creating new connections for each device connection to simplify the design (so I don't need multiple sockets for each client). Also, with this design, I cannot define the OpenIGTLink server elements in advance, it needs to be dynamic (it might run for very long time). 
#858 might solve my problem, but again, you would have multiple PlusServer instances for each device configs and I'm not sure you can easily handle 2 client with the same device access (like 2 clients want to connect to  the Touch and/or Ascension tracker with their own config files). 

#### 2015-07-10, 01:05:09 - Andras Lasso
One PlusServer instance can already handle any number of output channels. Just specify one OpenIGTLinkServer element in the configuration file. The only thing that is not supported is outputting multiple channels on the same socket (we don't plan to support this because it is more efficient and more robust to have a separate socket for each output channel),

We'll make the PlusServerLauncher able to receive OpenIGTLink commands for starting/stopping PlusServer instances. It's already partially implemented; it's a lightweight process that can start and stop a PlusServer instance manually, just the network interface has to be added. The application can be added to the Windows startup processes and can be started minimized. Running it is a Windows service is a lot of extra hassle (install, uninstall, authentication, deal with limitations due to running without a desktop, etc) without much benefits (actually, I'm bout sure what benefits it would have).

#### 2015-07-10, 01:10:31 - Andras Lasso
By the way, there are services already available that allow you to start a process on a remote computer:
https://social.msdn.microsoft.com/Forums/vstudio/en-US/2b714d4f-92c1-4bd3-8ff1-226a278d129c/start-process-on-remote-machine?forum=csharpgeneral



#### 2015-07-10, 15:12:22 - Tamas Heffter
Thank you Andras, it sounds good. 

#### 2015-07-10, 16:04:13 - Andras Lasso
Is there anything to do with this (apart from implementing #858)? If not, then I would close this ticket.

#### 2015-07-10, 16:10:18 - Tamas Heffter
I think you can just close this ticket, thank you! 

#### 2015-07-10, 16:13:18 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2016-09-13, 21:09:50 - Adam Rankin
re #1012 updating hololens related config file
Commit: r:4862|plus:4862

#### 2016-09-13, 21:09:50 - Adam Rankin
assigned_to_id: changed from null to "rankin"


## #1013 PLUS_USE_POLARIS CMake option name is confusing
PLUS_USE_POLARIS CMake option name is confusing, as the flag controls enabling of NDI Common API support - that is valid for all Polaris and Aurora trackers.
Maybe it should be renamed to PLUS_USE_NDI or PLUS_USE_NDI_CAPI or PLUS_USE_NDI_COMMON_API.

#### 2015-08-31, 14:56:06 - Adam Rankin
@lassoan I don't mind taking care of this. Do you have a preference?

#### 2015-08-31, 14:56:23 - Adam Rankin
I vote PLUS_USE_NDI because users don't need to know what a C api is... only what devices are involved.

#### 2015-08-31, 15:01:35 - Andras Lasso
OK. Use PLUS_USE_NDI and PLUS_USE_NDI_CERTUS names (Certus is not used very often and most people don't know what we mean by common API).

Add a few lines of code to log a CMake warning (that the option is deprecated) and enable PLUS_USE_POLARIS if PLUS_USE_NDI is specified and PLUS_USE_NDI_CERTUS if PLUS_USE_CERTUS is enabled to remain backward compatible. We can remove those in a year.


#### 2016-06-30, 14:47:21 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-06-30, 14:47:21 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-06-30, 16:32:59 - Adam Rankin
fixed #1013 New options have been added PLUS_USE_NDI and PLUS_USE_NDI_CERTUS. Old corresponding variables have a warning associated and are marked as advanced.

Removing last remaining bits of defunct OvrvisionPro hardware.

Cleaning up tessdata prefix variable
Commit: r:4693|plus:4693

#### 2016-06-30, 16:32:59 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #1014 Metafiles generated by vtkMetaImageSequenceIO are not readable by vtk6 vtkmetaio
Parsing fails after lines that are of the format 'XXXXX = W Y Z'
where w, y, z are ints

#### 2015-07-21, 16:45:20 - Adam Rankin
Also fails after before reading compressed data line, testing uncompressed.

#### 2015-07-21, 17:08:06 - Adam Rankin
Scratch that, editor putting in CR instead of CR/LF.

Still failing with XXX = W Y Z

#### 2015-07-21, 17:31:00 - Adam Rankin
Repro steps for posterity.

Build Slicer 24457 (possibly this affects over versions, this is just the one I'm working with)
Build Sequences c67e22bce6ec255159c3a90dbef2bd38fd0df1d6
Add module location paths in settings
Workaround: MetafileImporter widget does not seem to be loading, so in python interactor

import vtkSlicerMetafileImporterModuleLogic
logic = vtkSlicerMetafileImporterModuleLogic.vtkSlicerMetafileImporterLogic()
logic.SetMRMLScene(slicer.mrmlScene)
logic.ReadSequenceMetafile('E:\\\\d\\\\PlusBuild-bin\\\\PlusLib\\\\data\\\  estImages\\\\ie33_NDIAurora_Probe_Stylus_compressed.mha')

#### 2015-07-21, 17:31:00 - Adam Rankin
CommentContent: changed from "Repro steps for posterity.

Build Slicer 24457 (possibly this affects over versions, this is just the one I'm working with)
Build Sequences c67e22bce6ec255159c3a90dbef2bd38fd0df1d6
Add module location paths in settings
Workaround: MetafileImporter" to "Repro steps for posterity.

Build Slicer 24457 (possibly this affects over versions, this is just the one I'm working with)
Build Sequences c67e22bce6ec255159c3a90dbef2bd38fd0df1d6
Add module location paths in settings
Workaround: MetafileImporter"

#### 2015-07-21, 17:53:05 - Adam Rankin
Other fields depend on NDims for their size, but NDims = 4 should not mean CenterOfRotation = 0 0 0 0

#### 2015-07-21, 17:53:05 - Adam Rankin
CommentContent: changed from "NDims = 4 is populated throughout the 'dependson' field for other fields.

Bug is in vtkmetaio not vtkMetaImageSequenceIO" to "NDims = 4 is populated throughout the 'dependson' field for other fields.

in metaObject.cxx:


~~~~
  MET_InitReadField(mF, 'CenterOfRotation', MET_FLOAT_ARRAY, false,
                     nDimsRecordNumber);

~~~~


Bug is in"

#### 2015-07-21, 17:53:05 - Adam Rankin
CommentContent: changed from "NDims = 4 is populated throughout the 'dependson' field for other fields.

in metaObject.cxx:


~~~~
  MET_InitReadField(mF, 'CenterOfRotation', MET_FLOAT_ARRAY, false,
                     nDimsRecordNumber);

~~~~


Bug is in" to "Edit nevermind, still investigating."

#### 2015-07-21, 17:53:05 - Adam Rankin
CommentContent: changed from "Edit nevermind, still investigating." to "Other fields depend on NDims for their size, but NDims = 4 should not mean CenterOfRotation = 0 0 0 0"

#### 2015-07-21, 18:19:00 - Adam Rankin
Not a PLUS bug.

#### 2015-07-21, 18:19:00 - Adam Rankin
status: changed from "New" to "Invalid"

#### 2015-07-22, 12:01:06 - Andras Lasso
MetaIO image multi-dimensional support is very poor. It does not even specify what each image axis mean (spatial, time, other parameter). I think we should use nrrd instead. The same kind if text file header may be used, so it's a small change in Plus. The only complication is the migration from MetaIO to NRRD - we need to support MetaIO for 1-2 years at least and provide conversion facility in Edit Seq Metafile.


## #1015 Use NRRD instead of MetaIO image for file IO
MetaIO image limitations:
* no required patient position field (there are some fields bit itk/vtk readers ignore it, as it is a hint only)
* no specification of coordinate axes types (spatial, time, other parameter)
* flawed high-dimensional data support (if we specify a 4D image then we need to provide origin, orientation in 4D; kind of always assume that all dimensions are spatial)

Advantages of MetaIO would be the storage of meshes, but we've never needed this.

Other potential advantage of MetaIO would have been the smaller MetaIO library, but the quality of the library is not good (overdesigned, yet limited and very slow; that's why we needed to implement the reader/writer from scratch).

#### 2015-08-21, 20:12:15 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-08-21, 20:12:17 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2015-08-21, 20:12:19 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-08-21, 20:12:24 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-08-23, 23:00:03 - Adam Rankin
re #1015 NRRD support on-going. Infrastructure changes to support a single interface for reading and writing sequence files (vtkSequenceIOCommon)

NRRD reading up and running via vtkNrrdSequenceIO. Currently reading nhdr and nrrd is working. Writing is in progress
Commit: r:4287|plus:4287

#### 2015-08-24, 01:01:40 - Andras Lasso
re #1015: Reverted changes introduced in commit 4287 as it introduced regressions

Revert requested by @rankin, he will re-submit the changes later.

Commit: r:4288|plus:4288

#### 2015-08-25, 23:22:13 - Adam Rankin
re #1015 branching trunk for nrrd development
Commit: r:4296|plus:4296

#### 2015-08-25, 23:25:22 - Adam Rankin
re #1015 nrrd support implemented

reading/writing 2d/3d/2d+t/3d+t/greyscale/color/compressed/uncompressed
Commit: r:4297|plus:4297

#### 2015-08-25, 23:26:16 - Adam Rankin
re #1015 modifying plusbuild files to point to branched plusapp and pluslib
Commit: r:4298|plus:4298

#### 2015-08-25, 23:26:31 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2015-08-26, 00:48:57 - Andras Lasso
Very nice! Please also update the documentation (dox files). Thank you!

#### 2015-08-26, 01:35:28 - Adam Rankin
@lassoan I think it's ready for integration. All the tests pass. I added tests for NRRD read/write color and greyscale.

Manual testing of all the other conditions looked good!

#### 2015-08-26, 13:33:07 - Adam Rankin
@lassoan if you do build the branch, sync to 4298

#### 2015-08-26, 14:19:13 - Andras Lasso
@rankin I'll wait with any testing until you say that it's fully working.

#### 2015-08-26, 15:59:07 - Adam Rankin
Well NRRD support is fully working, my stream compressed changes are still experimental.

I just didn't want to create yet another branch on branch to do the development. 4298 is the revision that would be merged back into the trunk

#### 2015-08-31, 15:00:46 - Adam Rankin
fixed #1015 NRRD branch is stable, integrating into trunk
Commit: r:4311|plus:4311

#### 2015-08-31, 15:00:46 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-09-03, 16:15:33 - Andras Lasso
re #1015: Fixed EditSequenceFile documentation (tool renamed)
Commit: r:4336|plus:4336

#### 2015-09-03, 16:17:38 - Andras Lasso
re #1015: Fixed EditSequenceFile documentation (tool renamed)
Commit: r:4337|plus:4337

#### 2015-12-07, 00:43:37 - Andras Lasso
re #1015: Fixed link to Matlab scripts
Commit: r:4416|plus:4416

#### 2016-01-21, 16:04:03 - Andras Lasso
re #1015: Added support for deprecated SequenceMetafile attribute (logs warning to notify the user about the attribute name change). It is important for supporting replay of old recordings and using of existing training materials with latest Plus version.

Also turned off compressed saving by default, as it may impact recording significantly on slower computers.

Renamed boolean attribute values to all uppercase. When config files are written they are normalized to uppercase anyway. We use upppercase for enumerated values everywhere, so it's more consistent. Plus still understands any kind of capitalization for booleans (true, True, TRUE).

Fixed build warnings.
Commit: r:4457|plus:4457


## #1016 Build error when attempting to build Plus as static lib
See details here:
https://www.assembla.com/spaces/plus/messages/5262193#comment_5262273

#### 2015-07-22, 22:01:04 - Andras Lasso
test #1016: Added missing location for .lib files to allow building PlusLib as static library
Commit: r:4221|plus:4221

#### 2015-07-22, 22:01:04 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-07-23, 17:26:53 - naimulkhan
file:acsl16mwar5ATJacwqjQYw


#### 2015-07-23, 17:26:53 - naimulkhan
Attachment added: "Pluserrorlog_Jul23.txt"

#### 2015-07-23, 17:26:56 - naimulkhan
I am getting a few dllimport and linker errors. Log attached.

#### 2015-07-29, 14:23:51 - Andras Lasso
test #1016: Fixed build error when PLusLib is built as static
Commit: r:4227|plus:4227

#### 2015-11-25, 14:10:20 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2016-07-18, 17:32:17 - Dzenan Zukic
file:cs_S74tq0r5Ok2dmr6CpXy


#### 2016-07-18, 17:32:17 - Dzenan Zukic
Attachment added: "Output-Build.txt"

#### 2016-07-18, 17:34:15 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2016-07-18, 17:34:17 - Adam Rankin
status: changed from "Fixed" to "New"

#### 2016-07-18, 17:36:26 - Dzenan Zukic
I am having linking errors with static libraries. Dynamic libraries build OK. There are too many linking errors for me to guess the cause. The build log is attached.

#### 2016-07-18, 17:36:26 - Dzenan Zukic
assigned_to_id: changed from null to "lassoan"

#### 2016-07-18, 17:36:26 - Dzenan Zukic
status: changed from "New" to "Test"

#### 2016-07-18, 17:37:26 - Adam Rankin
assigned_to_id: changed from "lassoan" to null

#### 2016-07-18, 17:49:20 - Andras Lasso
@dzenanz Including 'PlusConfigure.h' as the first include in all .cxx file fixed static builds before:
https://app.assembla.com/spaces/plus/subversion/commits/4227

Could you please check if it solves the problems that you've found now?

#### 2016-07-18, 18:14:03 - Dzenan Zukic
file:bON6TOtrmr5QyIdmr6CpXy


#### 2016-07-18, 18:14:03 - Dzenan Zukic
Attachment added: "Output-Build2.txt"

#### 2016-07-18, 18:14:37 - Dzenan Zukic
There are still errors, the log is attached. I think there are more errors now :)

#### 2016-07-18, 18:14:37 - Dzenan Zukic
CommentContent: changed from "There are still errors, the log is attached." to "There are still errors, the log is attached. I think there are more errors now :)"

#### 2016-07-18, 20:34:19 - Andras Lasso
test #1016: Added missing PlusConfigure.h includes to fix static builds
Commit: r:4746|plus:4746

#### 2016-07-18, 20:34:19 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-07-19, 16:47:45 - Dzenan Zukic
@lassoan This commit fixed it - the static build is now successful. Thanks!

#### 2016-07-19, 16:48:06 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2016-07-19, 20:17:20 - Adam Rankin
re #1016 enabling building of shared libs from plusbuild
Commit: r:4749|plus:4749

#### 2016-07-19, 20:48:29 - Andras Lasso
@rankin We've already had PLUSBUILD_BUILD_SHARED_LIBS option. Do we really need a separate PLUSBUILD_BUILD_PlusLib_SHARED_LIBS option as well?

#### 2016-07-21, 14:30:04 - Adam Rankin
No we don't need it, but I wasn't sure if we wanted separate control for dependencies and PlusLib. I have no attachment to the variable and would be happy to remove it.

#### 2016-07-21, 14:30:04 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2016-07-21, 14:32:49 - Andras Lasso
I would prefer to keep things simpler, so I think it would be better to just keep PLUSBUILD_BUILD_SHARED_LIBS until there is a strong reason to add finer control.

#### 2016-07-21, 14:34:52 - Adam Rankin
fixed #1016 Removing superfluous variable for pluslib building of shared libs
Commit: r:4761|plus:4761

#### 2016-07-21, 14:34:52 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-07-21, 14:37:17 - Andras Lasso
Thanks!


## #1017 Added support for Optimet ConoProbe devices
Added support for acquiring distance measurements using an Optimet ConoProbe device (see http://www.optimet.com/apptire.php).

#### 2015-07-28, 11:55:45 - Mikael Brudfors
re #1017: Added support for Optimet ConoProbe.
Commit: r:4224|plus:4224

#### 2015-07-28, 11:55:45 - Mikael Brudfors
assigned_to_id: changed from null to "mbrudfors"

#### 2015-07-29, 07:37:07 - Mikael Brudfors
I have a question: What would be the easiest way of sending parameters to the vtkOptimetConoProbe device (from e.g. Slicer), in order to adjust parameters of the device during runtime?

#### 2015-07-29, 08:54:39 - Mikael Brudfors
re #1017: Added Total value to DistanceToTrackerTransform as well as Snr in percentage.
Commit: r:4226|plus:4226

#### 2015-07-29, 14:41:56 - Mikael Brudfors
re #1017: Added contributors.
Commit: r:4228|plus:4228

#### 2015-07-29, 14:48:30 - Andras Lasso
THanks for the developments. Please add user documentation to PlusLib\\src\\Documentation\\UserManual\\Device....dox and add it to the index page at PlusApp\\Documentation\\DeviceList.dox.

#### 2015-07-29, 14:48:30 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2015-08-10, 10:05:22 - Mikael Brudfors
re #1017: Added user documentation.
Commit: r:4242|plus:4242

#### 2015-08-11, 13:53:37 - Mikael Brudfors
re #1017: Minor fix related to vtkOptimetConoProbeTracker
Commit: r:4245|plus:4245

#### 2015-08-11, 17:28:10 - Mikael Brudfors
re #1017: Changed the OptimetConoProbe into a Measurer instead of a Tracker in order to be able to use it at the same time as a tracker.
Commit: r:4246|plus:4246

#### 2015-08-11, 17:46:56 - Andras Lasso
> What would be the easiest way of sending parameters to the vtkOptimetConoProbe device (from e.g. Slicer), in order to adjust parameters of the device during runtime?

Add a new vtkPlusCommand class. Command classes in Plus can read/write the command from/to XML (that Plus sends as an OpenIGTLink string message) and can execute an operation and generate response(s). You can start from this command as an example PlusLib\\src\\PlusServer\\vtkPlusStartStopRecordingCommand.

#### 2015-08-11, 17:48:24 - Mikael Brudfors
Thank you! I will have a look at that example.

#### 2015-08-13, 09:09:37 - Mikael Brudfors
re #1017: Moved the OptimetConoProbe device from tracking systems to Other data acquisition and control devices in user documentation. Added a parameter LensOriginPositon and corresponding documentation.
Commit: r:4248|plus:4248

#### 2015-08-13, 16:30:19 - Mikael Brudfors
re #1017: Added further documentation.
Commit: r:4249|plus:4249

#### 2015-08-20, 14:04:38 - Mikael Brudfors
re #1017: Added vtkPlusConoProbeLinkCommand which allows for executing ConoProbe SDK methods (for example showing the Probe Dialog).
Commit: r:4270|plus:4270

#### 2015-08-24, 16:47:30 - Mikael Brudfors
re #1017: FIX: The probe dialog is now running in a separate thread and a simple mutex makes sure that measurements are not acquired while the dialog is open.
Commit: r:4291|plus:4291

#### 2015-08-25, 10:08:44 - Mikael Brudfors
re #1017: Added lens properties as output parameters. Added comments.
Commit: r:4295|plus:4295

#### 2015-08-25, 10:12:00 - Mikael Brudfors
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-08-25, 10:12:07 - Mikael Brudfors
Component: changed from null to "PlusLib"

#### 2015-08-25, 10:12:11 - Mikael Brudfors
Component: changed from "PlusLib" to ""

#### 2015-08-25, 10:13:45 - Mikael Brudfors
Component: changed from null to "PlusLib"

#### 2015-08-25, 10:13:57 - Mikael Brudfors
status: changed from "Accepted" to "Test"

#### 2015-11-25, 14:11:08 - Andras Lasso
@mbrudfors What's the status of this? Can it be closed as fixed?

#### 2015-11-25, 14:23:49 - Mikael Brudfors
status: changed from "Test" to "Fixed"

#### 2015-11-25, 14:27:43 - Mikael Brudfors
@lassoan We have used Plus with the device now for quite a while, w/o any issues: I have closed this ticket as fixed.

#### 2015-11-25, 14:27:43 - Mikael Brudfors
CommentContent: changed from "@lassoan We have used Plus with the device now for quite a while, w/o any issues. I have closed this ticket as fixed." to "@lassoan We have used Plus with the device now for quite a while, w/o any issues: I have closed this ticket as fixed."

#### 2015-11-25, 15:16:50 - Andras Lasso
Thanks!


## #1018 Add support for OptiTrack tracking systems 
Add support for OptiTrack motion capture cameras (see http://www.optitrack.com/).

#### 2015-07-28, 14:04:55 - Mikael Brudfors
re #1018: Added a folder OptiTrack to DataCollection containing the skeleton class vtkOptiTrackTracker. Performed the necessary adjustments in supporting files in order to add vtkOptiTrackTracker to Plus. Also added a FindTrackingTools.cmake and a config-file PlusDeviceSet_Server_OptiTrack.xml.
Commit: r:4225|plus:4225

#### 2015-07-28, 14:04:55 - Mikael Brudfors
assigned_to_id: changed from null to "mbrudfors"

#### 2015-07-29, 14:43:59 - Mikael Brudfors
re #1018: Added contributors.
Commit: r:4229|plus:4229

#### 2015-07-29, 14:49:17 - Andras Lasso
Thanks for the developments. Please add user documentation to PlusLib\\src\\Documentation\\UserManual\\Device....dox and add it to the index page at PlusApp\\Documentation\\DeviceList.dox.

#### 2015-07-29, 14:49:17 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2015-08-10, 10:16:21 - Mikael Brudfors
I have gotten new directives and it seems like we might keep the OptiTrack code to ourselves unfortunately. But, it is not entirely decided yet. Could I keep this ticket open until we have decided or do you want me to remove this from PLUS until we have. Sorry about the fuzz.

#### 2015-11-25, 14:11:49 - Andras Lasso
@mbrudfors What should we do with this?

#### 2015-11-25, 14:12:09 - Andras Lasso
milestone_id: changed from null to "Release Plus-Future"

#### 2015-11-25, 14:39:57 - Mikael Brudfors
@lassoan We have made our OptiTrack control library (called BiiGOptitrack) publically available, but this far, we have used it only in our own experimental Plus build. We will add it to Plus, that is our intention. I am not at the lab in Madrid anymore, but I will ask them and get back to you shortly, if that is okay. 

#### 2015-11-25, 15:16:00 - Andras Lasso
Great, thank you! You can add credits to the Madrid lab in the source file and documentation page to recognize their contribution.

#### 2016-02-29, 18:12:46 - Eugenio Marinetto
assigned_to_id: changed from "mbrudfors" to "nenetto"

#### 2016-02-29, 22:15:11 - Andras Lasso
re #1018: Fixed OptiTrack SDK finder module

It can now find OptiTrack SDK in PLTools and library names are properly passed to PlusLib.
Commit: r:4528|plus:4528

#### 2016-03-01, 09:00:06 - Eugenio Marinetto
re #1018: Add External_BiiGOptitrack.cmake to download Optitrack Wrapper SDK
Commit: r:4530|plus:4530

#### 2016-03-01, 09:01:24 - Eugenio Marinetto
re #1018: Add Support for Optitrack Tracking system.

Now it uses BiiGOptitrack lib at https://github.com/HGGM-LIM/BiiGOptitrack for wrapping the Optitrack SDK according to OpenIGTLink standard
Commit: r:4531|plus:4531

#### 2016-03-01, 13:25:40 - Eugenio Marinetto
re #1018: Add Support for Optitrack Tracking system.

Add Documentation/UserManual/DeviceOptiTrack.dox
Commit: r:4532|plus:4532

#### 2016-03-01, 13:26:13 - Eugenio Marinetto
re #1018: Add Support for Optitrack Tracking system.

change Documentation/DeviceList.dox for Add Optitrack to documentation 
Commit: r:4533|plus:4533

#### 2016-03-03, 19:53:34 - Adam Rankin
Hello @nenetto,

Thank you for your work integrating your library!

I noticed that a config file with some local changes was checked in to the main repository. If you'd like to have local changes persist in the repository, could you add an institution subfolder and make a copy in there?

Specifically the file:
https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/data/ConfigFiles/PlusDeviceSet_Server_OptiTrack.xml

#### 2016-03-03, 20:04:26 - Eugenio Marinetto
I'll take a look tomorrow, but I do not know exactly what you mean with 'institution subfolder'. What do you mean exactly?

#### 2016-03-03, 21:45:23 - Adam Rankin
I meant that, if you have a file that has folders or concepts specific to your experiments, you could create PlusLibData/ConfigFiles/<YourInstitution>/abcd.xml

#### 2016-03-03, 21:45:50 - Adam Rankin
Data will now be found under trunk/PlusLibData instead of trunk/PlusLib/data after I check in some changes soon.


## #1019 Add tool status display widget to PlusServerLauncher
It would be nice if we had the same tool state display widget that is in fCal available in the PlusServerLauncher

#### 2015-07-29, 16:54:49 - Andras Lasso
PlusServerLauncher is not in the same process anymore, it just launches a server, so it's not that easy to implement. It may connect to the server to get tool info, but there could be multiple streams, there are various ways how to indicate invalid tool status (depending on OpenIGTLink message type, SendValidTransformsOnly, etc.), so it would not be very simple.

#### 2015-07-29, 20:16:55 - Adam Rankin
Ah yes, I just went through the code and came to this realization. Nevermind this request, it was a 'nice-to-have' anyways.

#### 2015-07-29, 20:16:55 - Adam Rankin
status: changed from "New" to "Invalid"


## #1020 Make PlusApp compatible with Qt 5
See https://www.assembla.com/spaces/plus/messages/5287023

#### 2015-08-13, 12:37:19 - Andras Lasso
description: changed from "" to "See https://www.assembla.co..."

#### 2015-08-13, 17:44:34 - Andras Lasso
milestone_id: changed from "Release Plus-Future" to "Plus-2.3.0"

#### 2015-08-13, 17:44:41 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2015-08-13, 20:16:12 - Adam Rankin
re #1020 adding check for qt4.8.7 locations
Commit: r:4250|plus:4250

#### 2015-08-14, 18:48:50 - Siavash Khallaghi
Attachment added: "CMakeLists.txt"

#### 2015-08-14, 18:48:50 - Siavash Khallaghi
CommentContent: changed from "file:aAhbsUqRur5yiUdmr6CpXy
" to null

#### 2015-08-14, 18:53:17 - Siavash Khallaghi
file:c40_AoqRur5BTeacwqEsg8


#### 2015-08-14, 18:53:17 - Siavash Khallaghi
Attachment added: "Plus_Patch.zip"

#### 2015-08-14, 19:20:58 - Siavash Khallaghi
I think I have most of the elements of the solution in the attached zip file. All notes are available as comments in their corresponding files. You can find them by searching for # Siavash.

This zip file includes the following files:

1. CMakeLists.txt. This is the top level PlusBuild CMakeLists.txt, i.e. *PlusExperimental-build/CMakeLists.txt*. I only made two minor changes to this file:

1.a Line 77 added, 

~~~~

OPTION(PLUSBUILD_USE_QT5 'Plus uses QT5 instead of QT4' ON)

~~~~

1.b Lines 199-226: Added an if-statement to find Qt5 and Qt4 depending on PLUSBUILD_USE_QT5 switch.

Notes: I am unsure how to properly find Qt5, the path is hard-coded at the moment in line 201. Also, I did not find a similar expression to *QT4_FOUND* for *Qt5*, i.e. *IF(NOT QT5_FOUND)* --> Display error message.

2. External_VTK.cmake: This is the same as *PlusExperimental-build/External_VTK.cmake*. I only made three minor changes to this file:
2.a. Line 35 added, 

~~~~

OPTION(PLUSBUILD_USE_QT5 'Plus uses QT5 instead of QT4' ON)

~~~~

2.b Line 47 and 48, added Qt5 version specific arguments.

~~~~

SET(VTK_VERSION_SPECIFIC_ARGS ${VTK_VERSION_SPECIFIC_ARGS}
    -DCMAKE_PREFIX_PATH:STRING=C:/Qt/5.5.0/qt-5.5.0-x64-msvc2013-rev0/lib/cmake/
    -DVTK_QT_VERSION:STRING=5
    )

~~~~

Notes: I am not sure how to pass PLUSBUILD_USE_QT5 from item 1 to External_VTK.cmake, and I am not sure how to pass CMAKE_PREFIX_PATH properly.

3. PlusLib.patch. Only one minor change, I added a convinience macro, i.e.:

~~~~

#define QT_MAJOR_VERSION @VTK_QT_VERSION@

~~~~

4. PlusApp.patch: (these changes are Qt4 compatible)
4.a Changed *FIND_PACKAGE(Qt)* according to the right version in CMakeLists.txt files.
4.b Changed *#include <QtGui/QApplication>* to *#include <QApplication>*
4.c Changed *QString::fromAscii* to *QString::fromLatin1*
4.d Changed *Qt::WFlags* to *Qt::WindowFlags*

Notes:
4.x I did not manage to set COMPILE_FLAGS '/Zc:wchar_t-' for CommonWidgets in CMake. I had to change it manually in project properties.
4.y fCal does not build in release mode for me. I get the following error:

1>C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V120\\Microsoft.CppCommon.targets(1267,5): warning MSB6002: The command-line for the 'RC' task is too long. Command-lines longer than 32000 characters are likely to fail. Try reducing the length of the command-line by breaking down the call to 'RC' into multiple calls with fewer parameters per call.

My Plus-bin Directory is not that long though: C:/devel/PlusExperimental-Qt5-Final-bin/

#### 2015-08-14, 19:20:58 - Siavash Khallaghi
CommentContent: changed from "I think I have most of the elements of the solution in the attached zip file. All notes are available as comments in their corresponding files. You can find them by searching for # Siavash.

This zip file includes the following files:

1." to "I think I have most of the elements of the solution in the attached zip file. All notes are available as comments in their corresponding files. You can find them by searching for # Siavash.

This zip file includes the following files:

1."

#### 2015-08-14, 19:23:57 - Siavash Khallaghi
Attachment added: "CMakeLists.txt"

#### 2015-08-18, 14:44:59 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-08-18, 18:10:39 - Siavash Khallaghi
Adam, there is a Qt5 specific problem for project deployment. When I deploy my own application, which is developed on top of Plus, and try to run it on the production PC for testing, I get the following error:

_This application failed to start because it could not find or load the Qt platform plugin 'windows'.
Reinstalling the application may fix this problem._

I suspect that you will have the same problem for fCal when you migrate to Qt5. You can solve this problem by adding *qwindows.dll* to the *platforms* directory that is created in your bin directory. In this case, your deployment directory will look like this:

~~~~


/YourAppInstallFolder
  - YourApp.exe
  - any needed Qt DLLs
     -/platforms
        - qwindows.dll

~~~~

See these links for more details:
http://doc.qt.io/qt-5/windows-deployment.html#qt-plugins
http://www.qtcentre.org/threads/56516-Cound-not-find-or-load-qt-platform-plugin-windows-No-working-solution-yet-!?p=253520#post253520

#### 2015-08-18, 18:10:39 - Siavash Khallaghi
CommentContent: changed from "Adam, there is a Qt5 specific problem for project deployment. When I deploy my own application, which is developed on top of Plus, and try to run it on the production PC for testing, I get the following error:

_This application failed to start because" to "Adam, there is a Qt5 specific problem for project deployment. When I deploy my own application, which is developed on top of Plus, and try to run it on the production PC for testing, I get the following error:

_This application failed to start because"

#### 2015-08-18, 20:48:05 - Adam Rankin
re #1020 branching plusbuild with qt5 changes
Commit: r:4253|plus:4253

#### 2015-08-18, 20:49:01 - Adam Rankin
re #1020 oops, wrong path
Commit: r:4254|plus:4254

#### 2015-08-18, 20:49:55 - Adam Rankin
re #1020 branching qt5 plusapp
Commit: r:4255|plus:4255

#### 2015-08-18, 20:50:19 - Adam Rankin
re #1020 qt5 pluslib branch
Commit: r:4256|plus:4256

#### 2015-08-18, 20:51:25 - Adam Rankin
re #1020 pointing branched plusbuild to branched pluslib/plusapp
Commit: r:4257|plus:4257

#### 2015-08-18, 20:54:09 - Adam Rankin
re #1020 cleaning up branch
Commit: r:4258|plus:4258

#### 2015-08-19, 01:20:58 - Adam Rankin
re #1020 making progress

linking errors, some sort of double moc symbol... tbd

qt4 function broken temporarily, have to ifdef the Qt::WFlags
Commit: r:4259|plus:4259

#### 2015-08-19, 17:21:05 - Siavash Khallaghi
Adam, I did not manage to get *SET(CMAKE_AUTOMOC ON)* working for CMake. The documentation is confusing. But you can follow the same set of rules as Qt4, i.e. 

~~~~

QT4_WRAP_CPP( fCal_QT_MOC_Files ${fCal_UI_HDRS} )        
QT4_WRAP_UI( fCal_QT_UI_Headers ${fCal_UI_SRCS} )
QT4_WRAP_CPP( fCal_QT_MOC_UI_Files ${fCal_QT_UI_Headers} )
QT4_ADD_RESOURCES( fCal_QT_RCC_Files ${fCal_QT_Resources} )

~~~~

becomes:

~~~~

QT5_WRAP_CPP( fCal_QT_MOC_Files ${fCal_UI_HDRS} )        
QT5_WRAP_UI( fCal_QT_UI_Headers ${fCal_UI_SRCS} )
QT5_WRAP_CPP( fCal_QT_MOC_UI_Files ${fCal_QT_UI_Headers} )
QT5_ADD_RESOURCES( fCal_QT_RCC_Files ${fCal_QT_Resources} )

~~~~

Also, you can change *Qt::WFlags* to *Qt:WindowFlags*, which works for Qt4.8 as well.

#### 2015-08-20, 15:57:04 - Adam Rankin
re #1020 adding PlusApp/PlusAppConfigure.h.in to define QT_MAJOR_VERSION
Commit: r:4272|plus:4272

#### 2015-08-20, 19:39:39 - Adam Rankin
re #1020 Successfully build PlusApp with Qt5. File copy of DLLs still not working

Qt4 untested
Commit: r:4274|plus:4274

#### 2015-08-20, 20:47:50 - Adam Rankin
re #1020 near-perfect regex that actually works...

Qt5.*[.]dll doesn't work...
Commit: r:4276|plus:4276

#### 2015-08-20, 20:50:17 - Adam Rankin
re #1020 passing correct variable after change
Commit: r:4277|plus:4277

#### 2015-08-20, 22:06:22 - Adam Rankin
re #1020 removing dump code, adding in missing XML request
Commit: r:4278|plus:4278

#### 2015-08-20, 23:07:08 - Adam Rankin
re #1020 working on deploying an install version of plus
Commit: r:4279|plus:4279

#### 2015-08-20, 23:32:04 - Adam Rankin
test #1020 Qt5 and Qt4 build and run successfully, deployment tested with Qt5 for Windows using NSIS installer
Commit: r:4280|plus:4280

#### 2015-08-20, 23:32:04 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2015-08-20, 23:34:11 - Adam Rankin
@lassoan @siavashk @sordas If anyone might be willing to checkout the qt5 branch and building/deploying. I am up and running using qt 5.5.0 and was able to install and run on another windows 7 machine.

@lassoan I will leave this for you to close once it has your seal of approval

#### 2015-08-20, 23:34:11 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2015-08-20, 23:46:37 - Adam Rankin
re #1020 Merged revision(s) 4253-4280 from trunk/PlusLib:

Merged revision(s)  from trunk/PlusApp:

Merged revision(s) 4247-4280 from trunk/PlusBuild:
Commit: r:4281|plus:4281

#### 2015-08-21, 00:36:24 - Siavash Khallaghi
@rankin I will try it out tomorrow and post my results. I think I have claimed my machine on the dashboard.

#### 2015-08-21, 01:18:14 - Adam Rankin
re #1020 Removing unnecessary file from project

Re-adding close button to PlusServerLauncher
Commit: r:4282|plus:4282

#### 2015-08-21, 01:22:52 - Adam Rankin
re #1020 removing cmake reference to removed file
Commit: r:4283|plus:4283

#### 2015-08-21, 03:52:13 - sordas
@rankin, your qt5 branch builds fine with Qt5.2.1 and VS2012, but not yet the package

plus\\PlusApp\\InstallFiles.cmake needs to be modified for the  Qt5 libs:

here's the error:

1>  CPack: Install projects
1>  CPack: - Install project: PlusApp
1>  CMake Error at D:/binX64/plusBuild/PlusApp-bin/cmake_install.cmake:38 (file):
1>    file INSTALL cannot find '//QtCore4.dll'

thank you!



#### 2015-08-21, 14:02:28 - Adam Rankin
Oops, forgot to include the use file ('the old way of doing it') for qt4. I will test packaging qt4 now.

#### 2015-08-21, 14:02:53 - Adam Rankin
re #1020 including use file to populate variables for use in cmake scripts
Commit: r:4285|plus:4285

#### 2015-08-21, 14:57:24 - Adam Rankin
Ok, qt4 packaging is working now.

#### 2015-08-21, 19:31:11 - Siavash Khallaghi
@rankin I can build with *Qt 5.5*. *BuildAndTest.bat* did not return any errors. See http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=38460

#### 2015-08-22, 22:47:50 - Adam Rankin
re #1020 adding in check for qmake before using it
Commit: r:4286|plus:4286

#### 2015-08-24, 14:16:08 - Adam Rankin
@lassoan would it be ok if I go ahead and integrate this branch? I'd like to do it before too much gets committed after it

#### 2015-08-24, 14:30:15 - Andras Lasso
I've tested it with both qt 4 and 5. I got rc.exe errors on vs2012 due to long command-line (with qt4 I get it only for PlusServerLauncher, with qt5 I get it for all qt Plus applications). I have to investigate this and test packaging before integration.

#### 2015-08-24, 16:45:38 - Adam Rankin
fixed #1020 Integrating qt5 branch into trunk
Commit: r:4289|plus:4289

#### 2015-08-24, 16:45:38 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-08-24, 16:46:28 - Adam Rankin
fixed #1020 integrating qt5 branch into trunk
Commit: r:4290|plus:4290


## #1021 Option for MMF video source not available without PlusBuild system
Missing OPTION(PLUS_USE_MMF_VIDEO ... ) in PlusLib/src/DataCollection/CMakeLists.txt

#### 2015-08-15, 22:59:34 - Adam Rankin
fixed #1021 adding mmf option to pluslib CMakeLists.txt directly
Commit: r:4251|plus:4251

#### 2015-08-15, 22:59:34 - Adam Rankin
status: changed from "New" to "Fixed"


## #1022 Allow adding multipe transforms in EditSeqMetafile
if multiple transform names are specified, separated by commas, then add all of them to the output file

#### 2015-08-20, 14:50:49 - Andras Lasso
fixed #1022: Multiple transform names can be added in EditSeqMetaFile at once
Commit: r:4271|plus:4271

#### 2015-08-20, 14:50:49 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2015-08-20, 17:06:12 - Andras Lasso
re #1022: Updated EditSeqMetaFile documentation with multiple transform adding example
Commit: r:4273|plus:4273


## #1023 Move all EM field distortion mapping tool models to model catalog
SlicerIgtAssembla\\EmFieldDist\\models

#### 2016-06-30, 14:47:31 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-08-15, 19:19:10 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"


## #1024 iE33 device does not gracefully handle losing connection, try to improve behavior
See subject

#### 2015-08-27, 20:22:05 - Adam Rankin
re #1024: adding in more parameters to the iE33 device
Commit: r:4308|plus:4308

#### 2015-08-28, 19:26:33 - Adam Rankin
re #1024: adding config files for ie33
Commit: r:4310|plus:4310

#### 2015-08-28, 19:27:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-08-31, 15:43:05 - Adam Rankin
re #1024 fixing bug in parameter name change

adding ie33 only config file
Commit: r:4313|plus:4313

#### 2015-08-31, 15:50:18 - Adam Rankin
re #1024 In progress: debugging info
Commit: r:4314|plus:4314

#### 2015-08-31, 16:25:45 - Adam Rankin
fixed #1024 iE33 now detects timeout and attempts reconnection to device.
Commit: r:4315|plus:4315

#### 2015-08-31, 16:25:45 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2015-08-31, 16:30:36 - Adam Rankin
re #1024 reverting SplitStringIntoTokens modern compiler because it only supported space as the delimiter
Commit: r:4316|plus:4316


## #1025 Review pointsetextractor and update as necessary
See subject

#### 2015-08-24, 17:14:51 - Adam Rankin
Easy fix, config file is not actually necessary. Will remove check momentarily.

#### 2015-08-24, 19:19:56 - Adam Rankin
fixed #1025 config file is not required, so remove check
Commit: r:4292|plus:4292

#### 2015-08-24, 19:19:56 - Adam Rankin
status: changed from "New" to "Fixed"


## #1026 Ultrasonix Porta interface initialization fails using SDK 6.1.1
Porta is needed for acquiring data from motorized probe, but the initialization fails using SDK 6.1.1

#### 2015-08-24, 21:58:28 - Andras Lasso
test #1026: Fixed Porta interface issues for SDK 6.1.1

Also cleaned up configuration parameters. Notable changes:
* Pci and Usm parameters are now required, renamed from PCI and USM.
* Frequency is defined in Hz (not MHz).
* Timeout was not used by Porta.
Commit: r:4293|plus:4293

#### 2015-08-24, 21:58:28 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-08-26, 21:13:00 - Andras Lasso
re #1026: Fixed porta interface crash in release mode with exam 6.1.1
Commit: r:4303|plus:4303

#### 2015-09-01, 20:53:24 - Andras Lasso
fixed #1026: Improved support for motorized probes

* setting up motor resolution/speed and range now works for both SDK 5.x and 6.x

* motor position computation is much more robust (previously the motor position was obtained by counting the frames and incrementing the angle, which  may not be correct if there are skipped frames and also the initial value may be shifted by a couple of frames; now the angle is computed from the stepper motor position information in the frame header)

* probe motor geometry is queried from the probe (previously it had to be set manually in the config file)

* scan conversion parameters are queried from the SDK - this allows computation of all intrinsic calibration parameters and calibrating at one imaging depth and using that at any other depths

Commit: r:4326|plus:4326

#### 2015-09-01, 20:53:24 - Andras Lasso
status: changed from "Test" to "Fixed"

#### 2015-09-01, 21:00:13 - Andras Lasso
re #1026: Report error if the requested output channel in PlusServer does not exist

Previously, if an invalid output channel was specified then Plus just used the first channel that it found, without logging any error.
This could have led to using an incorrect channel due to a type in the channel name.
Commit: r:4328|plus:4328

#### 2015-09-01, 21:08:13 - Andras Lasso
re #1026: Removed commented out code
Commit: r:4329|plus:4329

#### 2015-09-01, 21:09:54 - Andras Lasso
re #1026: Removed commented out code
Commit: r:4331|plus:4331

#### 2015-09-02, 12:20:27 - Andras Lasso
re #1026: Fixed build error with Ultrasonix SDK 5.7
Commit: r:4333|plus:4333

#### 2015-09-02, 17:44:49 - Andras Lasso
re #1026: Added sample Porta config file to package
Commit: r:4334|plus:4334

#### 2015-09-02, 17:47:01 - Andras Lasso
re #1026: Updated sample Porta config file name in documentation
Commit: r:4335|plus:4335

#### 2015-09-04, 04:23:18 - Andras Lasso
re #1026: Added frame index parameter to EditSequenceFile to enable rewriting frame angles

Example:

EditSequenceFile.exe --operation=UPDATE_FRAME_FIELD_VALUE --source-seq-file=%RESULTDIR%\\%FNAME%-trimmed.mha --output-seq-file=%RESULTDIR%\\%FNAME%-trimmed-fixed.mha --updated-field-name='MotorToMotorRotatedTransform' --updated-field-value='{frame-transform}' --frame-transform-start='1  0  0  0  0  0.96569665  0.259672831  0  0  -0.259672831  0.96569665  0  0  0  0  1' --frame-transform-increment='1  0  0  0  0  0.999990878  -0.004271261  0  0  0.004271261  0.999990878  0  0  0  0  1' --frame-transform-index-field-name=FrameNumber

FrameNumber contains the frame IDs that account for skipped frames.
Commit: r:4338|plus:4338


## #1027 Plus build failure if OpenIGTLink support is disabled
See https://www.assembla.com/spaces/plus/messages/5299253

#### 2015-08-25, 05:10:10 - Andras Lasso
test #1027: PlusLib and PlusApp can be built successfully even if Op[nIGTLink support is disabled.
Commit: r:4294|plus:4294

#### 2015-08-25, 05:10:10 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-10-16, 00:11:34 - Andras Lasso
There are some remaining build failures in PlusApp  - see https://www.assembla.com/spaces/plus/messages/5355913

#### 2015-10-16, 00:11:34 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2015-10-16, 14:06:21 - Andras Lasso
test #1027: Disable building PlusServerLauncher and TrackingDataServer if OpenIGTLink is not available (they require OpenIGTLink)
Commit: r:4376|plus:4376

#### 2015-10-16, 14:06:21 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2015-11-25, 14:09:33 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1028 Enable stream writing compressed nrrd files
Investigate if this is possible. If so, do it.

#### 2015-08-26, 01:34:20 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-08-26, 13:32:19 - Adam Rankin
re #1028 first attempt at stream writing compressed data

zlib instability error for streaming
Commit: r:4302|plus:4302

#### 2015-08-27, 13:58:03 - Adam Rankin
test #1028 stream writing compressed to nrrd seems to be working, still need to perform validation tests that all frames are getting written

stream writing compressed for mha is disabled
Commit: r:4304|plus:4304

#### 2015-08-27, 13:58:03 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2015-08-27, 17:04:51 - Adam Rankin
re #1028: Merged revision(s) 4296-4305 from trunk/PlusLib:
Merged revision(s) 4296-4305 from trunk/PlusApp:
Commit: r:4306|plus:4306

#### 2015-08-27, 18:09:57 - Adam Rankin
re #1028 renaming vtkSequenceIOCommon to vtkSequenceIO

Renaming EnableCapturing in vtkVirtualDiscCapture to EnableCapturingAtStart and removing direct setting of EnableCapturing internal variable

Renaming WriteToMetafile to WriteToSequenceFile

Changing several defaults from MHA to NRRD
Commit: r:4307|plus:4307

#### 2015-08-27, 18:22:58 - Adam Rankin
Confirmed successful output. It looks solid!

#### 2015-08-28, 15:48:14 - Adam Rankin
re #1028 Merged revision(s) 4296-4308 from trunk/PlusLib:
Merged revision(s) 4296-4308 from trunk/PlusApp:
Commit: r:4309|plus:4309

#### 2015-08-31, 15:01:17 - Adam Rankin
Fixed. See url:https://www.assembla.com/spaces/plus/subversion/commits/4311|plus:4311.

#### 2015-08-31, 15:01:17 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2015-08-31, 15:32:37 - Adam Rankin
re #1028 writing modern compiler vs older compiler string tokenizing function in PlusCommon
Commit: r:4312|plus:4312

#### 2015-09-07, 18:02:22 - Adam Rankin
re #1028 reverting to uncompressed metaimage instead of compressed nrrd when compressed mha is requested
Commit: r:4350|plus:4350

#### 2015-09-08, 02:07:44 - Andras Lasso
thanks!


## #1029 Allow setting ROM file for wired NDI tracker tools
A broken active (wired) NDI tool may be fixed by setting the ROM from file. Currently Plus ignores the ROM file if a PortName is specified. Change this to allow setting ROM even for wired tools. See details at https://www.assembla.com/spaces/plus/messages/5255553.

#### 2015-08-26, 12:33:13 - Andras Lasso
test #1029: Allow setting ROM file for active NDI tools
Commit: r:4300|plus:4300

#### 2015-08-26, 12:33:13 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-11-25, 14:09:58 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1030 Add .dox files to IDE projects in CMake files
This will enable editing of .dox files directly from within the IDE

#### 2015-08-27, 16:41:50 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-08-27, 16:45:22 - Adam Rankin
fixed #1030 dox files now added to documentation project, which is now always added to solutions

build target is only added if BUILD_DOCUMENTATION is enabled, as per before
Commit: r:4305|plus:4305

#### 2015-08-27, 16:45:22 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #1031 Evaluate my.cdash.org for dashboard
Current dashboard server hardware is getting too old. Investigate the possibility to move to my.cdash.org.

#### 2015-08-31, 18:39:06 - Andras Lasso
test #1031: Updated dashboard server to use my.cdash.org

If there are no issues then we'll keep using this new address.
Commit: r:4317|plus:4317

#### 2015-08-31, 18:39:06 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-09-01, 21:16:20 - Andras Lasso
re #1031: Keep using crunch for dashboard for now

Free my.cdash.org limitiation of 10 builds/day makes it unusable for us.

Commit: r:4332|plus:4332

#### 2015-11-25, 14:13:01 - Andras Lasso
status: changed from "Test" to "Invalid"


## #1032 Disable NRRD build failure with vtk5


#### 2015-09-01, 14:42:49 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-09-01, 15:12:27 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-09-01, 19:12:06 - Adam Rankin
test #1032 fixing vtk5 build

disabling nrrd support on vtk5, outputting warning/error when attempting to write/read nrrd files
Commit: r:4320|plus:4320

#### 2015-09-01, 19:12:06 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2015-09-01, 20:15:40 - Adam Rankin
re #1032 removing NRRD test if VTK &lt;= 5
Commit: r:4322|plus:4322

#### 2015-09-01, 21:09:42 - Adam Rankin
re #1032 fixing vtkDataCollectorTest2 test by not requesting NRRD if vtk &lt;= 5
Commit: r:4330|plus:4330

#### 2015-09-03, 15:06:48 - Adam Rankin
Looks good. Builds are coming back stable.

#### 2015-09-03, 15:06:48 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1033 Add option to build Plus without internet connection
Ultrasonix US machines use Windows XP embedded OS, and IT cut them off from internet. It is still convenient to build Plus there for debugging, but there are build errors due to missing SVN information and there are problems reported due to failed repository updates.

Add PLUSBUILD_OFFLINE_BUILD option to disable repository updates and SVN info retrieval.

#### 2015-09-01, 20:46:17 - Andras Lasso
re #1033: Added PLUSBUILD_OFFLINE_BUILD option to allow builds on computers without internet connection

If PLUSBUILD_OFFLINE_BUILD is specified then dependent project repositories are not downloaded but they are expected to be at the correct location.
The repositories are also not updated on rebuild and SVN revision information is not attempted to be retrieved.
Commit: r:4323|plus:4323

#### 2015-09-01, 20:47:44 - Andras Lasso
re #1033: Only attempt to retrieve SVN revision if not in offline build mode
Commit: r:4324|plus:4324

#### 2015-09-01, 20:48:08 - Andras Lasso
re #1033: Only attempt to retrieve SVN revision if not in offline build mode
Commit: r:4325|plus:4325

#### 2015-09-16, 19:38:48 - Andras Lasso
re #1033: Fixed issue of creating empty external project directories with semicolon at the end of the name

OpenIGTLink-bin;
PlusLib-bin;
PlusModelCatalog-bin; 
etc. directories are not created anymore when PlusBuild is configured
Commit: r:4356|plus:4356

#### 2015-11-25, 14:07:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #1034 Add log level selection for started PlusServer from PlusServerLauncher
See subject. Use fCal ConfigurationToolbox as model.

#### 2015-09-04, 18:10:45 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-09-04, 18:42:42 - Adam Rankin
Fixed #1034 UI added to enable the setting of the launched server's log level
Commit: r:4339|plus:4339

#### 2015-09-04, 18:42:42 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2015-09-04, 18:47:06 - Adam Rankin
Component: changed from "PlusApp" to "PlusApp-PlusServerLauncher"

#### 2015-09-04, 18:55:31 - Adam Rankin
re #1034 fixing build for qt4
Commit: r:4340|plus:4340

#### 2015-09-04, 20:35:11 - Adam Rankin
re #1034 updating initial value of log level to support --verbose passed in from command line
Commit: r:4343|plus:4343

#### 2015-09-04, 21:11:16 - Andras Lasso
Very useful, thank you!

#### 2015-09-05, 00:39:39 - Adam Rankin
re #1034 using vtksys file functions to move files instead of rename as it is broken in  ubuntu 15.04
Commit: r:4345|plus:4345

#### 2015-09-05, 00:45:55 - Adam Rankin
re #1034 adding in handling of input path for temp file creation under linux
Commit: r:4346|plus:4346


## #1035 Add colour doppler support to Porta SDK
PLUS support acquiring color Doppler data (color v/v) using Porta sdk


## #1036 CMake error when configuring current Plus source
Configuring the current Plus superbuild results in a CMake error in External_PlusApp.cmake: 

CMake Error at External_PlusApp.cmake:63 (STRING):
  string end index: 4 is out of range -1 - 3
Call Stack (most recent call first):
  CMakeLists.txt:492 (INCLUDE)

The problem occurs when the substring between character 1 and ${CMAKE_SHARED_LIBRARY_SUFFIX_LENGTH} is trying to be extracted because ${CMAKE_SHARED_LIBRARY_SUFFIX_LENGTH} exceeds the length of the string as a character position. Using ${CMAKE_SHARED_LIBRARY_SUFFIX_LENGTH}-1 instead seems to solve the problem.

My configuration here:

Win7 64 bit
Visual Studio 2010 64 bit
CMake 2.8.12.2




#### 2015-09-16, 19:11:58 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-09-16, 19:11:58 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2015-09-16, 19:12:27 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-09-16, 19:14:09 - Andras Lasso
I'll commit a fix, just a min

#### 2015-09-16, 19:14:09 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2015-09-16, 19:15:36 - Andras Lasso
fixed #1036: Fixed PlusApp configuration error

Use -1 instead of string length to include all chars till the end of the string. Simpler and probably won't cause any issue on any CMake versions. 
Commit: r:4355|plus:4355

#### 2015-09-16, 19:15:36 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #1037 Crash in void vtkPlusConfig::SetProgramDirectory()


#### 2015-09-22, 15:18:05 - Adam Rankin
Unable to replicate, error is likely in users' tool chain.

#### 2015-09-22, 15:18:05 - Adam Rankin
status: changed from "New" to "Invalid"


## #1038 Enable optional selection of vtk 6.3.0


#### 2015-09-22, 17:48:29 - Adam Rankin
fixed #1038 adding option to specify different vtk6 minor versions
Commit: r:4363|plus:4363

#### 2015-09-22, 17:48:29 - Adam Rankin
status: changed from "New" to "Fixed"


## #1039 VTK backward compatibility of vtkForoughiBoneSurfaceProbability.cxx
vtkForoughiBoneSurfaceProbability currently uses vtkImageData::AllocateScalars() with the new VTK 6 signature passing 2 arguments. To allow backward compatibility to older VTK versions a version check would be helpful.
Attached a patch fixing this issue.

#### 2015-09-23, 19:02:49 - AlexanderSeitel
file:cUWszKyIur5zDXdmr6bg7m


#### 2015-09-23, 19:02:49 - AlexanderSeitel
Attachment added: "vtkForoughiBoneSurfaceProbability.cxx.patch"

#### 2015-09-23, 19:10:31 - Adam Rankin
Building and testing now

#### 2015-09-23, 20:09:30 - Adam Rankin
test #1039 automatic tests pass
Commit: r:4364|plus:4364

#### 2015-09-23, 20:09:30 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-09-23, 20:09:30 - Adam Rankin
status: changed from "New" to "Test"

#### 2015-09-23, 20:10:07 - Adam Rankin
@AlexanderSeitel could you verify this fixes your issue and close the issue if satisfied

thanks for providing the patch!

#### 2015-09-23, 20:10:07 - Adam Rankin
assigned_to_id: changed from "rankin" to "AlexanderSeitel"

#### 2015-09-23, 21:09:35 - AlexanderSeitel
Works fine for my configuration (VS2010 64 bit, VTK 5.10 both release and debug). Thanks for integrating that quickly!

#### 2015-09-23, 21:09:35 - AlexanderSeitel
status: changed from "Test" to "Fixed"


## #1040 Wrong definition of FrameSize in vtkForoughiBoneSurfaceProbability
The frame size in the vtkForoughiBoneSurfaceProbability is currently defined as:
    this->FrameSize[0] = inputExtent[1]-inputExtent[0];
    this->FrameSize[1] = inputExtent[3]-inputExtent[2];
Doing so the buffers used for Gaussian, LaplacianOfGaussian, ReflectionNumber, and ShadowValue differ in size from the inputSlicePtr and outputSlicePtr leading to artifacts in the calculation (see attached screenshots).

This can be fixed by correctly defining the FrameSize:
    this->FrameSize[0] = inputExtent[1]-inputExtent[0]+1;
    this->FrameSize[1] = inputExtent[3]-inputExtent[2]+1;

A patch containing this solution is attached as well.

#### 2015-09-26, 00:30:58 - AlexanderSeitel
image:dBvE4Yy-ur5ykvdmr6CpXy


#### 2015-09-26, 00:30:58 - AlexanderSeitel
Attachment added: "BoneEnhancementCorrect.jpg"

#### 2015-09-26, 00:30:58 - AlexanderSeitel
image:dBvHNky-ur5ykvdmr6CpXy


#### 2015-09-26, 00:30:58 - AlexanderSeitel
Attachment added: "BoneEnhancementWrong.jpg"

#### 2015-09-26, 00:30:58 - AlexanderSeitel
file:dBvK1Ay-ur5ykvdmr6CpXy


#### 2015-09-26, 00:30:58 - AlexanderSeitel
Attachment added: "vtkForoughiBoneSurfaceProbability.cxx.patch"

#### 2015-09-26, 02:17:08 - Andras Lasso
test #1040: Fixed iamge size computation in bone surface probability computation filter. Contributed by Alexander Seitel.
Commit: r:4367|plus:4367

#### 2015-09-26, 02:17:08 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2015-09-26, 02:17:08 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-09-26, 02:17:52 - Andras Lasso
Thank you Alex, good catch! Please set the ticket to fixed if it works well.

#### 2015-09-28, 23:24:56 - AlexanderSeitel
Works for my configuration (VS2010 64 bit, VTK 5.10 both release and debug). Thanks for integrating! 

#### 2015-09-28, 23:24:56 - AlexanderSeitel
status: changed from "Test" to "Fixed"


## #1041 Grey border on Telemed ultrasound images
A gray border is visible on both sides of Telemed ultrasound images. Gray value is 85. Width depends on the image aspect ratio (DepthMm parameter).

Probably related to this in TelemedUltrasound.cxx:

    // set background color that surrounds ultrasound image to blue
    tagPALETTEENTRY clr1;
    clr1.peRed    = 0;
    clr1.peGreen  = 0;
    clr1.peBlue    = 255;
    clr1.peFlags  = 0;
    m_mixer_control->put_BkColor(clr1);

/*
    // repaint ultrasound (important if we are in freeze)
    HDC hdc = ::GetDC(m_usg_wnd);
    m_mixer_control->Repaint((LONG)m_usg_wnd,(LONG)hdc);
    ::ReleaseDC(m_usg_wnd,hdc);
*/





#### 2015-09-26, 02:01:39 - Andras Lasso
test #1041: Changed unused image backgound to black for Telemed images
Commit: r:4365|plus:4365

#### 2015-09-26, 02:01:39 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-09-26, 02:10:35 - Andras Lasso
re #1041: Changed Telemed sample config file to use Windows EOL, as Notepad.exe does not show Unix EOL nicely
Commit: r:4366|plus:4366

#### 2015-11-25, 14:13:24 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1042 Test failure on VTK 5
This test fails on VTK 5:
http://crunch.cs.queensu.ca/CDash/viewTest.php?onlyfailed&buildid=40281

Probably due to lack of NRRD support in VTK 5. Either use mha/mhd in this test (we check need read-write in other tests anyway) or add a new test for NRRD that only enabled for VTK 6.


#### 2015-09-26, 19:23:18 - Andras Lasso
Component: changed from null to "PlusLib"

#### 2015-09-26, 19:23:18 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2015-09-26, 19:23:18 - Andras Lasso
milestone_id: changed from null to "Plus-2.3.0"

#### 2015-09-26, 19:23:18 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2015-09-29, 18:07:02 - Andras Lasso
test #1042: Changed PlusServerOpenIGTLinkCommandsTest to use mha files if Plus is built with VTK5

VTK5 does not support NRRD files.

Additional fixes:
* Fixed filename override (path was lost when the filename was changed from nrrd to mha).
* Fixed return filename in start/stop recording command (works well even if the filename is overridden).
* Cleaned up relative path handling (removed relative path handling from vtkSequenceIO level, done at higher levels, for example capture device)

Commit: r:4368|plus:4368

#### 2015-09-29, 18:07:02 - Andras Lasso
status: changed from "New" to "Test"

#### 2015-09-29, 19:26:28 - Adam Rankin
Looks good

#### 2015-09-29, 19:26:28 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1043 PlusServerLauncher parsing of server output is broken


#### 2015-09-29, 18:43:07 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2015-09-29, 18:51:59 - Andras Lasso
It may be just missing html escaping. Do the output appears correctly in the log file? If yes then probably you just need to replace special html characters in the log viewer widget (replace < > by &lt; &gt;). PlusCommon::PrintWithEscapedData may be useful.

#### 2015-09-29, 18:51:59 - Andras Lasso
CommentContent: changed from "It may be just missing html escaping. Do the output appears correctly in the log file? If yes then probably you just need to replace special html characters in the log viewer widget (replace < > by &lt; &gt;)." to "It may be just missing html escaping. Do the output appears correctly in the log file? If yes then probably you just need to replace special html characters in the log viewer widget (replace < > by &lt; &gt;). PlusCommon::PrintWithEscapedData may be"

#### 2015-09-29, 19:27:27 - Adam Rankin
fixed #1043 Improving parsing of lines in Windows and dropping empty log entries.
Commit: r:4369|plus:4369

#### 2015-09-29, 19:27:27 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2015-09-29, 19:33:14 - Adam Rankin
re #1043 removing debug statement causing build failure
Commit: r:4370|plus:4370

#### 2015-09-29, 19:36:23 - Andras Lasso
By the way, don't use QString::toStdString ever. It caues crash quite often, as it's difficult to make sure Qt's STL is exactly the same as the project's STL.


## #1044 Move editor application selection to device set selector widget
It would be nice if the functionality for choosing an editor application is available to both fCal and PlusServerLauncher.

Since they both use the DeviceSetSelectorWidget, we should move the functionality for choosing an editor into a UI mechanism under that.

#### 2015-09-29, 20:24:56 - Adam Rankin
fixed #1044 using context menu on editor button to support both edit and select editor actions

removing edit field from fCal to encourage adoption of new mechanism
Commit: r:4371|plus:4371

#### 2015-09-29, 20:24:56 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2015-09-29, 20:29:04 - Adam Rankin
re #1044 updating edit icon to better indicate that it is a menu action
Commit: r:4372|plus:4372

#### 2015-09-30, 14:30:34 - Andras Lasso
Thanks for working on this. Having a GUI for selecting editor application is very useful. However, the way it is implemented now makes the application more difficult to use.

Editing a config file is needed hundreds of times more than selecting an editor application. We should keep config file editing a single-click operation. It's enough if editor selection is available as a right-click, long-press, etc. action.

Manual editor selection is useful, but you still have to select it after each Plus installation. In addition to this it would be nice to use the default editor if no editor is selected (we could initialize editor application to '' instead of 'notepad.exe'). You can invoke default editor like this:

#include <QDesktopServices>
#include <QUrl> 
...
QDesktopServices::openUrl(QUrl('file:///'+myFileName, QUrl::TolerantMode));

We should have used the default editor in the first place, but we did not know at that time that it is so easy to implement.


#### 2015-09-30, 14:30:34 - Andras Lasso
status: changed from "Fixed" to "Accepted"

#### 2015-10-01, 01:51:39 - Adam Rankin
re #1044 moving select editor mechanism to be driven by right-clicking the configuration button
Commit: r:4374|plus:4374

#### 2015-10-01, 03:59:12 - Adam Rankin
fixed #1044 plus config now looks for most common installation path of notepad++ when no editor is specified (Windows only), falls back to notepad

sets editor to OS specific editors
Commit: r:4375|plus:4375

#### 2015-10-01, 03:59:12 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2015-10-26, 14:13:40 - Adam Rankin
re #1044 fixing crash due to incorrect null check
Commit: r:4378|plus:4378

#### 2015-11-11, 23:15:42 - Andras Lasso
re #1044: Fixed startup failure on Ultrasonix systems

SHGetKnownFolderPath is only available on Windows Vista and newer. It caused application startup failure when trying to run Plus on Ultrasonix systems (XPEmbedded).

Fixed by using an API that is available on WindowsXP.
Commit: r:4397|plus:4397

#### 2015-11-12, 15:58:18 - Andras Lasso
re #1044: Fixed build error on VTK5
Commit: r:4400|plus:4400

#### 2015-12-02, 18:00:19 - Andras Lasso
re #1044: Fixed editor application not starting error (.exe extension was required but by default it was not added)
Commit: r:4407|plus:4407

#### 2015-12-02, 18:02:01 - Andras Lasso
re #1044: Fixed editor application not starting error

Also implemented editor application opening on non-Windows platforms.
Commit: r:4408|plus:4408


## #1045 Selecting editor dialog re-appears multiple times after hitting cancel


#### 2015-10-27, 18:26:18 - Adam Rankin
fixed #1045 moving connect call so it is only ever connected once
Commit: r:4382|plus:4382

#### 2015-10-27, 18:26:18 - Adam Rankin
status: changed from "New" to "Fixed"


## #1046 Enable dynamic enable/disable of compressed capture from PlusRemote calls


#### 2015-11-05, 16:12:32 - Adam Rankin
re #1046 Supporting enable compression flag to be sent with a start capture command
Commit: r:4395|plus:4395

#### 2015-11-05, 21:07:45 - Adam Rankin
re #1046 passing along file compression setting from capture device to IO writer

re-writing command to use string and string parsing instead of boolean to enable workign with slicerigt
Commit: r:4396|plus:4396

#### 2015-11-05, 21:15:32 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2015-11-13, 04:07:42 - Andras Lasso
re #1046: Fixed crash when Start recording command is sent without EnableCompression attribute
Commit: r:4401|plus:4401


## #1047 Writing of frames to disk sometimes fails
Sometimes fwrite fails to write the entire frame in one chunk ('Unable to write entire frame to file' error is logged).

See detailed error report at https://www.assembla.com/spaces/plus/messages/5382743

#### 2015-11-13, 04:10:22 - Andras Lasso
test #1047: Implemented robust fwrite (repeat fwrite until all data is written or no more data can be written)
Commit: r:4402|plus:4402

#### 2015-11-13, 04:10:22 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2015-11-13, 04:13:20 - Andras Lasso
description: changed from "Sometimes fwrite fails to w..." to "Sometimes fwrite fails to w..."

#### 2015-11-25, 14:08:34 - Andras Lasso
The problem was due to running out of disk space.

#### 2015-11-25, 14:08:34 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1048 Add an option to not consider missing frames as error if ultrasound system is frozen
On Ultrasonix systems the operator may freeze the acquisition on the ultrasound and then Plus does not receive any new images. This may be an error in some cases (when the operator is not expected to freeze the images at any time) or a normal scenario. Error should only be logged if freezing is unexpected. See details at: https://www.assembla.com/spaces/plus/messages/5400753

Possible fix: Add an option for vtkSonixVideoSource (ReportFreezeDuringRecordingAsError, 'TRUE' by default) to report/not report errors if freeze is activated during recording. Also, add an option for vtkPlusOpenIGTLinkServer (ReportMissingInputAsError, 'TRUE' by default) to report/not report errors if input is not received. To allow freeze: both reporting would need to be set to FALSE and tracking data should be probably sent through a different channel (one channel would contain only the tracked image data, the other channel would contain all other tracked tools)

#### 2016-06-30, 14:47:43 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-08-15, 19:19:16 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-12-16, 16:48:27 - Adam Rankin
It would be ideal if this system was implemented in the usdevice base class, so that any US device could implement the necessary IsFrozen() query.

#### 2016-12-16, 16:48:27 - Adam Rankin
assigned_to_id: changed from null to null

#### 2017-06-06, 20:56:08 - Andras Lasso
assigned_to_id: changed from null to null


## #1049 PlusServer does not provide any output when a config file contains 0 vtkPlusOpenIGTLinkServer tags
Add an error output and prevent execution of a server executable with no server instances.

#### 2015-11-25, 19:37:27 - Adam Rankin
fixed #1049 adding server instance counting and early exit condition if no servers were present in the configuration file
Commit: r:4405|plus:4405

#### 2015-11-25, 19:37:27 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2015-11-25, 19:40:50 - Adam Rankin
re #1049 This is not the semi-colon you're looking for...
Commit: r:4406|plus:4406


## #1050 Add sending of tracking information as TDATA messages
Applications can receive tracking streams of type TDATA from using STT_TDATA and STP_TDATA for stopping and resuming the transfer.

Enable support for sending TDATA streams, and sending receiving appropriate messages.


~~~~
...
<PlusOpenIGTLinkServer
MaxNumberOfIgtlMessagesToSend='1'
MaxTimeSpentWithProcessingMs='10'
ListeningPort='18944'
OutputChannelId='TrackingStream' >
<DefaultClientInfo>
<MessageTypes>
<Message Type='TDATA' />
...

~~~~


See https://www.assembla.com/spaces/plus/messages/5384343

#### 2015-12-02, 18:31:04 - sordas
file:dyM7a4Msir5yoRacwqjQXA


#### 2015-12-02, 18:31:04 - sordas
Attachment added: "0001-apply_me_first.patch"

#### 2015-12-02, 18:31:14 - sordas
file:dEwoCQMsir5yoMacwqjQYw


#### 2015-12-02, 18:31:14 - sordas
Attachment added: "0002-apply_me_second.patch"

#### 2016-06-16, 16:08:32 - Adam Rankin
description: changed from "See https://www.assembla.co..." to "Applications can receive tr..."

#### 2016-06-29, 00:58:20 - Adam Rankin
re #1050 adding support for TDATA message streaming
Commit: r:4691|plus:4691

#### 2016-06-30, 01:53:36 - Adam Rankin
test #1050 added client reception of tdata messages for testing purposes

added response sending mechanism to plus server to respond to non-command type messages

updating openigtlink hash
Commit: r:4692|plus:4692

#### 2016-06-30, 01:53:36 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-06-30, 14:47:53 - Adam Rankin
assigned_to_id: changed from "lassoan" to "rankin"

#### 2016-06-30, 20:09:13 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1051 Add support for data acquisition from VRPN connection
VRPN (https://github.com/vrpn/vrpn/wiki) supports devices that some users would like to use, such as the PhantomOmni.

#### 2016-07-13, 16:54:39 - Adam Rankin
With the increased popularity of VR/AR devices, I am bumping this up to 2.4

#### 2016-07-13, 16:54:41 - Adam Rankin
milestone_id: changed from "Release Plus-Future" to "Plus-2.4.0"

#### 2016-08-15, 19:19:26 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2017-01-30, 21:58:55 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"


## #1052 Update ImagingControls SDK
Although old drivers still seems to be available (http://www.theimagingsource.com/en_US/support/downloads/details/icwdmv2uprotis/) it would be nice if ImagingControls framegrabbers with latest drivers would work out-of-the-box with Plus. Now users need to use older drivers or build Plus on their own.

#### 2016-06-30, 14:48:11 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.4.0"

#### 2016-08-15, 19:19:30 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"


## #1053 Setting VTK_DIR in PLUS CMake config does not work
Tried setting it to the VTK built by Slicer and the CMake failed. Tried adding version 6.3 to the cmake find_package command and it appeared to work, but when the superbuild was built, it acted like it had no VTK_DIR.

#### 2016-01-03, 15:14:15 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-01-03, 15:27:57 - Adam Rankin
Setting was reset, which is why it had appeared to work. Actual error is:

CMake Error at External_VTK.cmake:4 (FIND_PACKAGE):
  Could not find a configuration file for package 'VTK' that is compatible
  with requested version '6.3.0'.

  The following configuration files were considered but not accepted:

    D:/d/PlusBuild-bin/vtk-bin/VTKConfig.cmake, version: 6.3.0 (64bit)
    D:/d/PlusBuild-bin/vtk-bin/VTKConfig.cmake, version: 6.3.0 (64bit)

Call Stack (most recent call first):
  CMakeLists.txt:325 (INCLUDE)

#### 2016-01-04, 02:02:54 - Adam Rankin
The issue spawned from a 32 vs 64 bit issue

#### 2016-01-04, 02:02:54 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #1054 Add GET_TRANSFORM command to Plus server to support querying of transforms


#### 2016-01-05, 22:20:33 - Adam Rankin
test #1054 Adding new command code
Commit: r:4421|plus:4421

#### 2016-01-05, 22:20:33 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-01-06, 23:21:52 - Adam Rankin
Confirmed working. PlusServer responds appropriately

#### 2016-01-06, 23:21:52 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1055 Fix Nrrd output so that it is loadable in Slicer


#### 2016-01-05, 22:33:23 - Adam Rankin
fixed #1055 minor changes to nrrd output enable loading in Slicer for 2d and 3d time series
Commit: r:4422|plus:4422

#### 2016-01-05, 22:33:23 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-01-16, 17:27:43 - Adam Rankin
re #1055 only processing image header information if there is image data in the file
Commit: r:4447|plus:4447


## #1056 Add TGC support to Ultrasonix interface


#### 2016-01-06, 16:19:03 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-01-06, 18:49:31 - Adam Rankin
test #1056 adding TGC parameter in config file and get/set to ulterius API
Commit: r:4423|plus:4423

#### 2016-01-06, 18:49:31 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-04-19, 18:36:14 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1057 Upgrade PLUS OpenIGTLink to new v3 specification
Observe development here:
https://github.com/IGSIO/OpenIGTLink

Update PLUS to behave on new Command messages, metadata, etc...

#### 2016-01-08, 19:16:17 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-08, 19:16:48 - Adam Rankin
summary: changed from "Upgrade PLUS OpenIGTLink to new v2 specification" to "Upgrade PLUS OpenIGTLink to new v3 specification"

#### 2016-01-08, 19:17:00 - Adam Rankin
New protocol is documented here:
http://openigtlink.org/protocols/v3_proposal.html

#### 2016-01-08, 19:17:33 - Adam Rankin
Discussion is available here:
http://wiki.na-mic.org/Wiki/index.php/2016_Winter_Project_Week/Projects/TrackedUltrasoundStandardization#OpenIGTLink_Revisions

#### 2016-01-12, 19:26:01 - Adam Rankin
re #1057 In progress: converting plus server behavior to handle OpenIGTLink v3 messages
Commit: r:4441|plus:4441

#### 2016-01-12, 22:13:49 - Adam Rankin
re #1057 changing static public member to char* instead of std::string to support easy and safe DLL export
Commit: r:4442|plus:4442

#### 2016-01-14, 20:09:52 - Adam Rankin
re #1057 In progress: partial progress towards implementation of v1/v3 receiving of commands and sending of v3 replies

new idea: if receiving v1 command, reply in v1 syntax
Commit: r:4443|plus:4443

#### 2016-01-15, 03:08:59 - Adam Rankin
re #1057 Significant implementation towards OpenIGTLink v3 support.
Commit: r:4445|plus:4445

#### 2016-01-15, 03:10:14 - Adam Rankin
Once implementation of metadata in OpenIGTLink v3 is implemented, I can implement meta-data related feature sending.

As of now, this is simply PLUS server as it was, but communicating in IGTLv3, and IGTLv2/v1 if it receives commands of that generation.

#### 2016-01-15, 03:10:24 - Adam Rankin
Further work on the specification is needed to continue implementation.

#### 2016-01-16, 21:13:29 - Adam Rankin
re #1057 Significant implementation towards OpenIGTLink v3 support.

Using changes to igtl::MessageFactory to remove direct reference to string message types, instead using RTTI information of the classes produced by the factory. This transfers all ownership of string to message type lookup to OpenIGTLink.
Commit: r:4448|plus:4448

#### 2016-01-19, 01:28:51 - Adam Rankin
re #1057 Updating missed file to new v3 openigtlink
Commit: r:4450|plus:4450

#### 2016-01-19, 01:57:20 - Adam Rankin
re #1057 Pointing branch back to IGSIO openigtlink
Commit: r:4451|plus:4451

#### 2016-01-19, 04:47:40 - Adam Rankin
re #1057 Adding vtkPlusServer lib dependency

Commit: r:4452|plus:4452

#### 2016-01-25, 02:50:42 - Adam Rankin
re #1057 restoring igtl v3 support implementation
Commit: r:4463|plus:4463

#### 2016-01-25, 03:01:23 - Adam Rankin
re #1057 manually merging valid changes from trunk
Commit: r:4464|plus:4464

#### 2016-01-25, 03:02:11 - Adam Rankin
re #1057 manually merging valid changes from trunk
Commit: r:4465|plus:4465

#### 2016-01-25, 03:03:07 - Adam Rankin
re #1057 Merged revision(s) 4438-4465 from trunk/PlusApp:
Commit: r:4466|plus:4466

#### 2016-01-26, 02:28:10 - Adam Rankin
re #1057 missing files
Commit: r:4469|plus:4469

#### 2016-02-29, 16:40:44 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-03-03, 00:19:54 - Adam Rankin
re #1057 fixing bugs related to openigtlink v3 implementation
Commit: r:4535|plus:4535

#### 2016-03-03, 00:20:46 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 20:12:45 - Adam Rankin
re #1057 removing empty data directory
Commit: r:4537|plus:4537

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-03-04, 02:12:06 - Adam Rankin
re #1057 Correcting links to external repositories

Checking for gcc compiler and setting build flags accordingly
Commit: r:4539|plus:4539

#### 2016-03-04, 02:20:14 - Adam Rankin
re #1057 removing std::to_string and replacing with stringstream solution
Commit: r:4540|plus:4540

#### 2016-03-04, 04:54:04 - Adam Rankin
re #1057 only copying files if the target is not an interface library
Commit: r:4541|plus:4541

#### 2016-03-29, 05:53:35 - Andras Lasso
re #1057: Fixed lost outgoing messages

Always only the last transform name was sent, because each new transform message generated from the same frame was overwritten by the next one.
Solution was to clone the created outgoing message for each transform.
Commit: r:4581|plus:4581

#### 2016-05-04, 21:39:44 - Adam Rankin
re #1057 improving plus implementation of openigtlink v3

adding requestID command parameters response passing
Commit: r:4616|plus:4616

#### 2016-05-11, 15:24:13 - Andras Lasso
re #1057: Fixed build error on VS2008

cbegin, cend is not supported
Commit: r:4620|plus:4620

#### 2016-05-11, 20:30:25 - Andras Lasso
re #1057: Fixed build errors in StealthLink interface
Commit: r:4624|plus:4624

#### 2016-06-23, 13:25:58 - Adam Rankin
re #1057 Second major phase of OpenIGTLink v3 version

Meta data, version handshaking, backwards compatibility, factory methods, new message types.
Commit: r:4676|plus:4676

#### 2016-06-23, 13:26:33 - Adam Rankin
description: changed from "Observe development here:
h..." to "Observe development here:
h..."

#### 2016-06-24, 10:06:29 - Adam Rankin
re #1057 correcting build for latest OpenIGTLink

updating openigtlink to fixed SHA
Commit: r:4677|plus:4677

#### 2016-06-25, 10:39:09 - Andras Lasso
re #1057: Fixed build errors on VS2008
Commit: r:4679|plus:4679

#### 2016-06-30, 14:48:47 - Adam Rankin
All tests indicate that v3 is operational, and PLUS implementation is fully backwards compatible.

#### 2016-06-30, 14:48:47 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-12-05, 01:35:18 - Andras Lasso
re #1057: Restored ability to run custom commands in PlusServerRemoteControl

'command' command-line argument input was accidentally removed in rev 4616 (when a similarly named argument was added)
Commit: r:4957|plus:4957


## #1058 Convert SonixVideo source to use new imaging parameters design


#### 2016-01-08, 15:48:09 - Adam Rankin
test #1058 vtkSonixVideoSource rework to use vtkUsImagingParameters class

Also renamed functions to be in line with Interson naming convention
Commit: r:4429|plus:4429

#### 2016-01-08, 15:48:09 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-03-04, 20:34:14 - Adam Rankin
re #1058 removing freedom6s device as .lib is not viable for windows &gt;= xp
Commit: r:4543|plus:4543

#### 2016-03-06, 20:43:47 - Adam Rankin
re #1058 adjusting fPIC for C projects
Commit: r:4555|plus:4555

#### 2016-04-19, 18:31:55 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1059 Repository management
Tasks relating to repository management.

#### 2016-01-11, 18:01:01 - Adam Rankin
Component: changed from null to "Plus"

#### 2016-01-11, 18:02:01 - Adam Rankin
re #1059 Deleting nrrd branch now that it is complete
Commit: r:4430|plus:4430

#### 2016-01-11, 18:02:01 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-11, 18:02:34 - Adam Rankin
re #1059 removing biplane branch now that built-in clipping is integrated
Commit: r:4431|plus:4431

#### 2016-01-11, 18:02:57 - Adam Rankin
re #1059 removing 3dsupport branch now that trunk has shown stable 3d capabilities
Commit: r:4432|plus:4432

#### 2016-01-11, 18:03:13 - Adam Rankin
re #1059 removing qt5 branch
Commit: r:4433|plus:4433

#### 2016-01-11, 18:03:21 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-01-12, 16:15:54 - Adam Rankin
re #1059 updating rankin-sandbox to head of trunk
Commit: r:4436|plus:4436

#### 2016-01-12, 16:15:54 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-12, 16:21:21 - Adam Rankin
re #1059 destroying rankin-sandbox to recreate at head of trunk
Commit: r:4437|plus:4437

#### 2016-01-12, 16:27:38 - Adam Rankin
re #1059 branching sandbox to latest
Commit: r:4438|plus:4438

#### 2016-01-12, 16:28:50 - Adam Rankin
re #1059 updating app and lib to point to branch
Commit: r:4439|plus:4439

#### 2016-03-03, 00:09:56 - Adam Rankin
re #1059 Updating images to match updated export format
Commit: r:4534|plus:4534

#### 2016-03-04, 19:37:48 - Adam Rankin
re #1059 pushing new continuuous build
Commit: r:4542|plus:4542

#### 2016-03-04, 23:54:33 - Adam Rankin
re #1059 sorting out linux build
Commit: r:4544|plus:4544

#### 2016-03-05, 00:16:18 - Adam Rankin
re #1059 sorting out linux build
Commit: r:4545|plus:4545

#### 2016-03-05, 00:55:23 - Adam Rankin
re #1059 sorting out linux build
Commit: r:4546|plus:4546

#### 2016-03-05, 01:35:38 - Adam Rankin
re #1059 enabling VS2008 build
Commit: r:4547|plus:4547

#### 2016-03-05, 06:01:53 - Adam Rankin
re #1059 fixing stealth link command
Commit: r:4548|plus:4548

#### 2016-03-05, 15:37:25 - Adam Rankin
re #1059 fixing vtk5
Commit: r:4549|plus:4549

#### 2016-03-05, 16:04:21 - Adam Rankin
re #1059 enabling c++11/c++0x on linux but disabling for ITK
Commit: r:4550|plus:4550

#### 2016-03-05, 19:14:09 - Adam Rankin
re #1059 fixing linux build

dependent on re-build of openigtlink
Commit: r:4551|plus:4551

#### 2016-03-05, 22:39:13 - Adam Rankin
re #1059 disabling vtk python wrapping and always grabbing latest tessdata
Commit: r:4552|plus:4552

#### 2016-03-06, 17:04:16 - Adam Rankin
re #1059 always grabbing leptonica latest
Commit: r:4553|plus:4553

#### 2016-03-06, 20:18:06 - Adam Rankin
re #1059 sending fPIC to all dependent projects under unix
Commit: r:4554|plus:4554

#### 2016-03-07, 17:06:19 - Adam Rankin
re #1059 improving buildname generation script

TODO: mac buildname

Reducing configure time by only setting tessdata prefix if not set or doesn't match
Commit: r:4559|plus:4559

#### 2016-03-07, 17:45:49 - Adam Rankin
re #1059 improving linux buildname generation
Commit: r:4560|plus:4560

#### 2016-03-07, 17:50:19 - Adam Rankin
re #1059 improving apple buildname generation
Commit: r:4561|plus:4561

#### 2016-04-11, 00:17:18 - Adam Rankin
re #1059 Updating Linux build script to use CMake variables for project locations instead of hardcoded paths

Commit: r:4590|plus:4590

#### 2016-04-11, 00:29:02 - Adam Rankin
re #1059 correcting directory changing for proper build and testing


Commit: r:4591|plus:4591

#### 2016-04-19, 18:48:24 - Adam Rankin
re #1059 moving IO classes to subfolder of PlusCommon and adjusting include dirs as needed
Commit: r:4603|plus:4603

#### 2016-06-03, 15:29:21 - Adam Rankin
re #1059 fixing linux build
Commit: r:4649|plus:4649

#### 2016-11-22, 21:03:51 - Andras Lasso
re #1059 enabling linux build by building ITK with c++11 standard enabled


Commit: r:4941|plus:4941

#### 2016-11-23, 19:55:21 - Adam Rankin
re #1059 checking for interson sdk existence before allowing build level configure to pass
Commit: r:4942|plus:4942

#### 2016-11-24, 17:25:45 - Adam Rankin
re #1059 Fixing build due to missing include file when PlusLib is built statically
Commit: r:4943|plus:4943

#### 2016-11-25, 17:46:07 - Adam Rankin
re #1059 Adding missing devices from device list user manual page
Commit: r:4947|plus:4947

#### 2017-01-26, 19:45:50 - Adam Rankin
re #1059 updating SVN repository with latest from GitHub
Commit: r:5048|plus:5048

#### 2017-01-30, 02:14:21 - Andras Lasso
re #1059: Commit to test repository mirroring

Committed to: plus.build:master
Commit: r:a1856f3323e0f99eed9a49a85bbaa703f76a5d05|plus.build:a1856f3323

#### 2017-01-30, 02:14:20 - Andras Lasso
re #1059: Fixed git command path passing to pluslib and plusapp

Committed to: plus.build:master
Commit: r:3334f999e85fe5c350b9b50594057857faea6086|plus.build:3334f999e8

#### 2017-01-30, 02:18:44 - Andras Lasso
re #1059: Commit to test repository mirroring

Committed to: plus.build:master
Commit: r:43fd4686da8ca937580f75ec944e5d16e27eb966|plus.build:43fd4686da

#### 2017-02-07, 15:50:29 - Adam Rankin
re #1059 updating hooks to accept 'fixed' as ticket action

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/d9ae7261f694b9b9ec947fb83e72485d97ce06ac|plus.2:d9ae7261f6

#### 2017-02-07, 15:51:22 - Adam Rankin
re #1059 updating hooks to accept 'fixed' as ticket action

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/50e18b3ffecde9d874cb442550d02e8e2a48a7af|plus:50e18b3ffe

#### 2017-02-07, 15:56:55 - Adam Rankin
re #1059 Adding executable bit to setupfordevelopment file

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4990fb8d5a2ab3a07e025c53f381b986959da24b|plus:4990fb8d5a

#### 2017-02-07, 15:57:30 - Adam Rankin
re #1059 adding executable bit for SetupForDevelopment.sh script

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/8718efa0fb6209e46a49d3c76a8da189c9af62e7|plus.2:8718efa0fb

#### 2017-02-07, 15:58:04 - Adam Rankin
re #1059 adding executable bit to SetupForDevelopment.sh script

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/aa3cc360e9b9dc09c3c016cd40fb9a6935194c58|plus.3:aa3cc360e9

#### 2017-02-10, 15:08:19 - Adam Rankin
re #1059 Removing debug message form pack script

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/95bb809eaa00d09289e6a474ef0bf08aea964757|plus.2:95bb809eaa

#### 2017-02-10, 19:55:20 - Adam Rankin
re #1059 Encasing git_executable in quotes to enable windows scripts

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5f2a04f2565bd4e91a17bf1441a30d5a04a526c4|plus:5f2a04f256

#### 2017-02-11, 21:52:06 - Adam Rankin
re #1059 testing pull request building

Branch: 1059_pull_request_test
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/14e32c168e2a8aa0b1279e4ecc3eb53ba861df16|plus:14e32c168e

#### 2017-02-12, 00:47:14 - Adam Rankin
re #1059 testing pull request building (#24)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f84e702f79dfc5df158161e9af89a7a2a6f6774f|plus:f84e702f79

#### 2017-02-12, 23:24:20 - Adam Rankin
re #1059 fixing volume reconstruction test
Commit: r:5057|plus:5057

#### 2017-02-13, 23:46:25 - Adam Rankin
re #1059 adding missing plusserver entry to include macro

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3b6fa96b39a38cef855dbce0e9175f37e1819ddd|plus:3b6fa96b39

#### 2017-02-13, 23:48:53 - Adam Rankin
re #1059 Leftover debug output removed

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/a3b4c94558a89513484a7b01d595b4505b5037f5|plus.2:a3b4c94558

#### 2017-02-15, 05:58:43 - Adam Rankin
re #1059 adding missing plusserver entry to include macro

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a5ca60db114083172ecbeb9a8becbb6ce0eebaee|plus:a5ca60db11

#### 2017-02-15, 06:00:27 - Adam Rankin
re #1165 Adding case insensitive string compare function

Fixing vtkPlusStealthLinkTracker string checking

Using PlusCommon::ToString until VS2010 support is dropped

re #1059 adding missing plusserver entry to include macro

re #1163 fixing compile issues on Linux (#28)

re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages (#27)

PlusServer now gracefully handles client disconnects

re #1165 Converting all string accessor to return std::string instead of const &

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/992a12fa7c959d4e016bda9a08d79f06b2187dd1|plus:992a12fa7c

#### 2017-02-16, 16:34:46 - Adam Rankin
re #1059 Use CMake configure to quietly try and copy commit hooks

Branch: 1059_autorun_devsetup
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d7cdeb2104db542e8526b7513eca2dff6ad3d009|plus:d7cdeb2104

#### 2017-02-16, 16:35:20 - Adam Rankin
re #1059 Quietly try and setup developer environment

Branch: 1059_autorun_devsetup
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/0519b3d9a1f1076e8896d2b75f4933cdcea989c9|plus.2:0519b3d9a1

#### 2017-02-16, 16:35:54 - Adam Rankin
re #1059 Quietly try to run developer setup on configure

Branch: 1059_autorun_devsetup
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/6501043bca3f9d4c02844054ad021e85d27acc1e|plus.3:6501043bca

#### 2017-02-16, 16:36:07 - Adam Rankin
Merge pull request #1 from PlusToolkit/1059_autorun_devsetup

re #1059 Quietly try to run developer setup on configure

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/956b354aee6f8597d35997d266cf4529a4ba03ce|plus.3:956b354aee

#### 2017-02-16, 16:36:18 - Adam Rankin
Merge pull request #4 from PlusToolkit/1059_autorun_devsetup

re #1059 Quietly try and setup developer environment

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/298838256572910b85302319009581b24dab3172|plus.2:2988382565

#### 2017-02-16, 16:36:35 - Adam Rankin
re #1059 Use CMake configure to quietly try and copy commit hooks (#31)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/dbf020f6b9e0503ff83146d27c2773e779da50c9|plus:dbf020f6b9

#### 2017-02-20, 16:16:59 - Adam Rankin
re #1059 Detecting git dir instead of hardcoded

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/a338ade9712fd79f767011c0fe87d31de44a95dd|plus.3:a338ade971

#### 2017-02-20, 16:17:34 - Adam Rankin
re #1059 Detecting git dir instead of hardcoded

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/424a895949593a15e595ed2a20e532de442b44d7|plus.2:424a895949

#### 2017-02-20, 16:17:56 - Adam Rankin
re #1059 Detecting git dir instead of hardcoded

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/cacc60c1f9f029e0d96630aa7fe5100d9ec55dee|plus:cacc60c1f9

#### 2017-02-21, 21:25:07 - Adam Rankin
re #1059 Search and replace overzealousness

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f1f4daf1b445f5862391c8e1b9ae91e7474dc079|plus:f1f4daf1b4

#### 2017-02-21, 22:58:13 - Andras Lasso
re #1059: Fixed build error

The project file could not be loaded. 'C' is an unexpected token

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6354196d1ce31ebb7fec768fcc47db6c5541dfeb|plus:6354196d1c

#### 2017-02-23, 23:29:41 - Andras Lasso
re #1059: Fixed build error due to incorrect reference to MicronTrackerInterface library

Fixes this error:

12>  Performing configure step for 'PlusApp'
12>  -- PlusLib use file triggered. In the future, consider linking directly to targets provided by PlusLibTargets.cmake.
12>  -- PlusApp version: 2.5.0
12>  -- Current git hash is 1a35b0da95df51473b69c5adf3ddc0cdf9441ddd
12>  CMake Error at D:/D/PTN-VS2013b/PlusLib-bin/UsePlusLib.cmake:204 (SET_TARGET_PROPERTIES):
12>    set_target_properties Can not find target to add properties to:
12>    vtkPlusMicronTrackerInterface
12>  Call Stack (most recent call first):
12>    CMakeLists.txt:269 (GROUP_PLUSLIB_MS_PROJECTS)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/03b67eba2d7e315e63f64fa89bde3861a01ee197|plus:03b67eba2d

#### 2017-03-03, 04:59:29 - Adam Rankin
re #1059 moving files to win32 specific subfolder
Commit: r:5061|plus:5061

#### 2017-03-03, 05:01:01 - Adam Rankin
re #1059 adding linux file variants


Commit: r:5062|plus:5062

#### 2017-03-04, 00:29:25 - Adam Rankin
re #1059 adding qt autogen include folder

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c86695255c4dbe3bb696ed84e9429c13a7fa695d|plus:c86695255c

#### 2017-03-04, 16:31:07 - Adam Rankin
re #1059 Removing CMake 3.8.0-rc1 artifact

Autogen folders should be included by default, bug is with 3.8.0-rc1

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/733ebe870486e2f08937da3f3c48977ffa2ad9f6|plus:733ebe8704

#### 2017-03-08, 20:32:52 - Adam Rankin
re #1059 Moving to repository for ndicapi

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/421e084a37bdd3eedca4aa9f5456682728df7973|plus.3:421e084a37

#### 2017-03-09, 02:11:50 - Adam Rankin
re #1059 updating ndicapi to pass build type to subproject

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/e128d9712de7b268e72206e56d12ec94f21f6c79|plus.3:e128d9712d

#### 2017-03-09, 02:12:41 - Adam Rankin
re #1059 accesing release config type even on Linux

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bb99fb9fcf99416637e697c571d391aad3038795|plus:bb99fb9fcf

#### 2017-03-09, 02:15:37 - Adam Rankin
re #1059 updating ndicapi to pass build type to subproject

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/f30691355357796298e611ea30bff3d65a0b66ee|plus.3:f306913553

#### 2017-09-11, 20:05:52 - Andras Lasso
re #1059: Moved PlusLibData and PlusModelCatalog to GitHub

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/18c5870c1e395b7ddac0cd9eaa065900994e17d2|plus.3:18c5870c1e


## #1060 When saving config files, only export clipping information if it's valid


#### 2016-01-14, 17:17:05 - Adam Rankin
Invalid ticket, symptom's were produced with an old version of plus

#### 2016-01-14, 17:17:05 - Adam Rankin
status: changed from "New" to "Invalid"


## #1061 Add a new tracker device to support multiple US digital A2 encoders
Add a new tracker device (vtkUSDigitalA2EncodersTracker) to support multiple US digital A2 encoders in vtkDataCollection.

Here is the design goal of the new tracker device:
 1) Communication with multiple encoders (US Digital A2 type) with SEI interface.
 2) Acquire encoder values from multiple connected encoders.
 3) Combine acquired encoder values and generate one representative transformation matrix based on user-defined configuration.

Also add a following test code and configuration XML file.


#### 2016-01-14, 17:43:58 - Hyun Jae Kang
priority: changed from "Normal (3)" to "Low (4)"

#### 2016-01-14, 18:05:19 - Adam Rankin
US digital provides documentation of the protocol, but do they offer an implementation to abstract away the details?

url:http://www.usdigital.com/support/user-guides/sei-absolute-encoder-communications-protocol|protocol link

#### 2016-01-14, 18:05:19 - Adam Rankin
CommentContent: changed from "US digital provides documentation of the protocol, but do they offer an implementation to abstract away the details?

url:http://www.usdigital.com/support/user-guides/sei-absolute-encoder-communications-protocol|ExampleName" to "US digital provides documentation of the protocol, but do they offer an implementation to abstract away the details?

url:http://www.usdigital.com/support/user-guides/sei-absolute-encoder-communications-protocol|protocol link"

#### 2016-01-14, 18:06:41 - Adam Rankin
Found it:

url:http://www.usdigital.com/support/software/sei|software

#### 2016-01-14, 18:08:02 - Adam Rankin
Minor comment, I would recommend a more flexible name since the software API supports the A2, A2K, A2T and HD25A encoders.

Perhaps

vtkUSDigitalEncoderSEITracker

#### 2016-01-14, 18:44:31 - Andras Lasso
Or just vtkUSDigitalEncoderTracker. It can be specified in the documentation what exact protocols and devices it supports.

#### 2016-01-14, 18:46:40 - Hyun Jae Kang
Thank Adam for your comment, 

I think 'vtkUSDigitalEncoderSEITracker ' is good name for the new class. I will change the class name.

Could you give me some information of matrix-operation/transformation-matrix(4x4) operation within PlusLib?

And, I have another question.
Can we change the order of transformation conversion with XML configuration?

For example, there are three transformation matrix T1, T2, T3. 
And then,  Can we generate the following final transformation matrix based on a user-defined XML configuration,?
Case 1) T_out = T1 x T2 x T3
Case 2) T_out = T2 x T1 x T3
Case 3) T_out = T3 X T1 x T2

This class will support multiple encoder and each encoder will provide a movement/rotation according to a specific coordinate. Finally, one representative transformation matrix will be computed with the acquired and calculated multiple sub-transformation.

If possible, I would like to implement the above function with reconfigurable based on a XML configuration.


#### 2016-01-14, 18:54:55 - Adam Rankin
PlusLib uses vtkMatrix4x4 for it's transformation storage.

Depending on the interface of the API, if you poll the devices for data, then look into vtkPlusDevice::InternalUpdate. If the API provides a callback, then InternalUpdate is not needed (unless for other reasons).

To record a transform to a tool data source, look into vtkPlusDevice::ToolTimeStampedUpdate

You can store anything you like in XML. Look into vtkPlusDevice::ReadConfiguration and vtkPlusDevice::WriteConfiguration. A configuration file is typically set up by the user (or the engineer supporting the user) or provided by you, the author!

For helpful examples, look at vtkNDITracker or vtkAscension3DGTrackerBase to learn from!

#### 2016-01-14, 18:55:12 - Adam Rankin
Both of those devices are polling-based acquisition.

#### 2016-01-14, 19:04:12 - Hyun Jae Kang
Thanks for your helpful comments.

#### 2016-01-14, 19:21:55 - Andras Lasso
Transforms are automatically concatenated and inverted as needed. You just have to specify a unique name for each coordinate system you have and then each transform is defined by specifying from what to what coordinate system it transforms. Tracker tools so far use a common coordinate system name, but (AToTracker, BToTracker, etc) but we can change that to be able to specify arbitrary 'To' and 'From' names.

#### 2016-01-14, 19:53:41 - Hyun Jae Kang
Thanks Andras for your helpful comments.

Could you give me some information about which class or code will be good for me to understand about the Transformation-chain. I found the class of 'PlusTransformName'. But, I am still looking for real matrix operation part within PlusLib. 



#### 2016-01-14, 20:13:47 - Adam Rankin
I think what you're looking for is vtkTransformRepository

https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/PlusCommon/vtkTransformRepository.cxx

Basically, a TrackedFrame puts all of its non-persistent transforms (typically from tracker devices) into the repository (which already contains persistent transforms, such as calibrations) and then the repository will then provide any transform you wish so long as it can be computed (by inverting known transforms, chaining transforms together, etc...)

#### 2016-01-14, 20:13:47 - Adam Rankin
CommentContent: changed from "I think what you're looking for is vtkTransformRepository

https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/PlusCommon/vtkTransformRepository.cxx

Basically, a TrackedFrame puts all of its non-persistent transforms (typically" to "I think what you're looking for is vtkTransformRepository

https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/PlusCommon/vtkTransformRepository.cxx

Basically, a TrackedFrame puts all of its non-persistent transforms (typically"

#### 2016-01-14, 20:17:02 - Hyun Jae Kang
Thanks Adam for your quick and valuable comments. 

#### 2016-01-14, 20:17:36 - Adam Rankin
This is not something you will have to manage though. By providing the correct config file syntax (data source for a tool/tools) and using ToolTimeStampedUpdate all of this is managed for you.

#### 2016-01-14, 20:21:17 - Hyun Jae Kang
Thanks,
I will check vtkTransformRepository and the its test code.

#### 2016-02-24, 15:08:29 - Hyun Jae Kang
re #1061: Added the macro of '#cmakedefine PLUS_USE_USDIGITALENCODERS_TRACKER' for a new class of USDigitalEncodersTracking

Commit: r:4511|plus:4511

#### 2016-02-24, 15:10:01 - Hyun Jae Kang
re #1061: Added the class of vtkUSDigitalEncodersTracker for USDigitalEncodersTracking

Commit: r:4512|plus:4512

#### 2016-02-24, 15:11:18 - Hyun Jae Kang
re #1061: Added the option of PLUS_USE_USDIGITALENCODERS_TRACKER for vtkUSDigitalEncodersTracking

Commit: r:4513|plus:4513

#### 2016-02-24, 15:12:30 - Hyun Jae Kang
re #1061: Added the class of vtkUSDigitalEncodersTracking to support multiple USDigital Encoders tracking system

Commit: r:4514|plus:4514

#### 2016-02-24, 15:26:58 - Hyun Jae Kang
re #1061: Redefined the versiontxt to avoid compile error of already defined global variable.

Commit: r:4515|plus:4515

#### 2016-02-24, 15:31:53 - Hyun Jae Kang
re #1061: Added a test code of vtkUSDigitalEncodersTrackerTest.cxx for vtkUSDigitalEncodersTracking

Commit: r:4516|plus:4516

#### 2016-02-25, 20:24:33 - Hyun Jae Kang
re #1061: Added the option of USDigitalEncodersTracker for the vtkUSDigitalEncodersTracker device.
Commit: r:4518|plus:4518

#### 2016-03-10, 18:39:08 - Hyun Jae Kang
re #1061: Added the control functions of US Digital Encoders for a calibration task of USDigitalEncodersTracker.

- PlusStatus SetUSDigitalA2EncodersStrobeMode();
- PlusStatus SetUSDigitalA2EncodersSleep();
- PlusStatus SetUSDigitalA2EncodersWakeup();
- PlusStatus SetUSDigitalA2EncoderOriginWithAddr(long address);
- PlusStatus SetUSDigitalA2EncoderOriginWithSN(long sn);
- PlusStatus SetAllUSDigitalA2EncoderOrigin();
- PlusStatus SetUSDigitalA2EncoderModeWithAddr(long address, long mode);
- PlusStatus SetUSDigitalA2EncoderModeWithSN(long sn, long mode);
- PlusStatus GetUSDigitalA2EncoderModeWithAddr(long address, long* mode);
- PlusStatus GetUSDigitalA2EncoderModeWithSN(long sn, long* mode);
- PlusStatus SetUSDigitalA2EncoderResoultionWithAddr(long address, long res);
- PlusStatus SetUSDigitalA2EncoderResoultionWithSN(long sn, long res);
- PlusStatus GetUSDigitalA2EncoderResoultionWithAddr(long address, long* res);
- PlusStatus GetUSDigitalA2EncoderResoultionWithSN(long sn, long* res);
- PlusStatus SetUSDigitalA2EncoderPositionWithAddr(long address, long pos);
- PlusStatus SetUSDigitalA2EncoderPositionWithSN(long sn, long pos);
- PlusStatus GetUSDigitalA2EncoderPositionWithAddr(long address, long* pos);
- PlusStatus GetUSDigitalA2EncoderPositionWithSN(long sn, long* pos);
- long GetUSDigitalA2EncoderAddressWithSN(long sn);


Commit: r:4563|plus:4563

#### 2016-04-28, 20:31:56 - Hyun Jae Kang
re #1061: Fixed a wrong function call within SetAllUSDigitalA2EncoderOrigin.
- Replace the function call of SetUSDigitalA2EncoderOriginWithSN with   SetUSDigitalA2EncoderOriginWithAddr to reset all connected US digital encoders.
Commit: r:4613|plus:4613

#### 2016-07-13, 17:03:07 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Release Plus-Future"

#### 2016-11-22, 19:54:12 - Dzenan Zukic
re #1061 Adding support for coreXY configuration for US Digital encoders:
http://corexy.com/theory.html
Commit: r:4940|plus:4940

#### 2016-12-26, 17:08:30 - Dzenan Zukic
re #1061 Fixing bug from rev. 4940

The last commit had real code commented-out
and simulated time-base position code active.
Commit: r:4998|plus:4998

#### 2017-07-05, 14:30:47 - Adam Rankin
re #1061 USDigital encoders don't require serial numbers (#62)

* re #1061 USDigital encoders don't require serial numbers

Instead, rely on experimentally determined implicit ordering of encoders: encoder with a lower serial number gets a lower address

* re #1061 reformatting USDigitalEncodersTracking

* re #1061 fixing a couple of old bugs

* re #1061 initialize member variables at declaration

* re #1061 remove redundant comments

* re #1061 remove unnecessary clear calls in the constructor

* re #1061 Remove unused BaudRate parameter

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/71c06c5d66b1434ed4f768ca95d29bb21da66f05|plus:71c06c5d66

#### 2017-07-11, 18:44:39 - Adam Rankin
re #1061 Fixing build on VS2010

Adjusting code to conform to Plus coding conventions

Extracting INVALID_SEI_ADDRESS (-1) validity check to function

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/af8a40ff553d0028fecffb99f4152f863761c8df|plus:af8a40ff55

#### 2017-07-12, 14:04:56 - Andras Lasso
re #1061: Fixed build error on VS2010

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8395e087fb3d677338d30869f050657eb45b50d9|plus:8395e087fb

#### 2017-08-09, 16:41:17 - Dzenan Zukic
re #1061 config file simplification to go along with PR68

https://github.com/PlusToolkit/PlusLib/pull/68
Commit: r:5115|plus:5115

#### 2017-08-15, 20:13:26 - Adam Rankin
re #1061 Supporting multiple coreXY configurations (#68)

* re #1061 Supporting multiple coreXY configurations - internal class cleanup

* re #1061 Supporting multiple coreXY configurations - removing serial numbers

* re #1061 Supporting multiple coreXY configurations - simplifying the class

* re #1061 Supporting multiple coreXY configurations - removing Encoder_ prefix

* re #1061 Supporting multiple coreXY configurations - minor cleanup

* re #1061 Supporting multiple coreXY configurations - substance changes

* re #1061 Supporting multiple coreXY configurations - sequential addresses

* re #1061 Supporting multiple coreXY configurations - reducing duplication

* re #1061 Supporting multiple coreXY configurations - removing persistence and PreTMatrix

* re #1061 Supporting multiple coreXY configurations - per DataSource ToolReferenceFrame

* re #1061 Supporting multiple coreXY configurations - review suggestions

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1e6e9d7a9dfc19c4c182f64d0616462ef41a3a5c|plus:1e6e9d7a9d

#### 2017-09-15, 18:35:39 - Adam Rankin
Use device IDs instead of device addresses (#77)

* re #1061 Supporting non-default addresses of encoders

* re #1061 Fixing spelling

* re #1061 Using deviceID instead of address for direct encoder queries

* re #1061 Renaming functions to indicate switch from addresses to device IDs

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7c794e68673cac4142964022ff15ce840d87f451|plus:7c794e6867

#### 2017-09-15, 18:43:12 - Adam Rankin
re #1061 minor code style (#78)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/9560643fe589cb23475ad2d3cc4b92c8dc3a6d69|plus:9560643fe5


## #1062 Create UI for Edit Sequence File


#### 2016-01-15, 22:53:55 - Andras Lasso
We plan to create a Slicer module for this. Of course, it could be still useful to have a small, standalone application that does simple editing (but it'll be hard to resist the temptation to spend a lot of time with keep adding small features to it).

#### 2016-01-15, 23:35:35 - Adam Rankin
Sounds good, I will transfer my progress to a Slicer module.

#### 2016-02-29, 16:35:40 - Adam Rankin
status: changed from "New" to "Invalid"


## #1063 Add a new interface vtkCapistranoVideoSource for updating US imaging parameters of Capistrano Ultrasound probe in on-line
Add a new interface to vtkCapistranoVideoSource for updating US imaging parameters of Capistrano Ultrasound probe in on-line

-  New US imaging parameters can be get with standard input stream (stdin)  from the console window or string from OpenIGTLink stringMessage.
    - We can add the following new function:
        PlusStatus vtkCapistranoVideoSource::UpdateUSParameters(std::string inputStream)
        {
             // Parsing the inputStream to type of imaging parameter and the associated value
             if (inputStream.find('Depth') !=std::string::npos)
             {
                  // Retrieve a new Depth value from the input Stream
                  this->SetDepth()
                  return PLUS_SUCCESS;
             } 
        }

-  Also, new US imaging parameters can be transferred with a message (?) of OpenIGTLink through TCP/IP network.



#### 2016-01-19, 15:24:05 - Hyun Jae Kang
Hi Andras and Adam,

Do you have any good idea about to update US imaging parameters with OpenIGTLink interface?

And, I am looking for a method to communicate between Slicer and PlusLib (DataCollection) by using OpenIGTLink message?
- How can I establish a bi-directional communication between Slicer and PlusLib? And, what kind of message of OpenIGTLink is available?
- Can I generate a StringMessage of OpenIGTLink in Slicer?

Please let me know.

#### 2016-01-19, 15:26:02 - Adam Rankin
Hi Hyun,

This is a very common use case and is accomplished by PlusServer. There is a convenient interface in the PlusServerLauncher application in the bin directory.

Slicer can then create a connection using the OpenIGTLinkIF module.

I am intrigued by your proposal for changing parameters via std::in. Is this so you can change probe parameters from the console running PlusServer? This is not our typical use case so I am curious as to what sorts of neat stuff you're up to!

#### 2016-01-19, 15:26:38 - Adam Rankin
To manually send strings from Slicer to PlusServer, you can use the PlusRemote module in the SlicerIGT extension. It is very mature and quite useful!

See url:https://github.com/SlicerIGT/SlicerIGT/blob/master/PlusRemote/PlusRemote.py|PlusRemote

#### 2016-01-19, 15:26:38 - Adam Rankin
CommentContent: changed from "To manually send strings from Slicer to PlusServer, you can use the PlusRemote module in the SlicerIGT extension. It is very mature and quite useful!" to "To manually send strings from Slicer to PlusServer, you can use the PlusRemote module in the SlicerIGT extension. It is very mature and quite useful!

See url:https://github.com/SlicerIGT/SlicerIGT/blob/master/PlusRemote/PlusRemote.py|PlusRemote"

#### 2016-01-19, 15:29:22 - Adam Rankin
Also, with regards to the C++ side of things, please check out the vtkUsImagingParameters class. I am trying to refactor all US devices to support this mechanism.

See url:https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/DataCollection/Interson/vtkIntersonVideoSource.h#ln67|Interson device

I hope to refactor all US devices into a common vtkPlusUsDevice that contains this mechanism.

#### 2016-01-19, 15:29:59 - Adam Rankin
This is a very active area for us, please see url:http://igsio.github.io/|IGSIO for a brief description.

#### 2016-01-19, 15:30:10 - Adam Rankin
milestone_id: changed from "Continuous activities" to "Plus-2.3.0"

#### 2016-01-19, 15:31:09 - Adam Rankin
Component: changed from "PlusLib" to "PlusLib-PlusServer"

#### 2016-01-19, 15:51:45 - Hyun Jae Kang
Hi Adam,

Thank you for your quick and very helpful comments.

Right now, we are not using PlusServer, but we modified one test code of vtkCapistranoVideoSource and are using it.
And, we implemented a python function within Slicer to Start/Stop the test code of vtkCapistranoVideoSource by using Python's subprocess module. This is why I need a new function for std::in.

I will check the PlusServer , Interson device and PlusRemote.

Thanks,


#### 2016-01-19, 15:56:04 - Adam Rankin
Hmmm, it might be worth building some expertise with using PlusServer. It is designed to do exactly what you are trying to do, but over OpenIGTLink instead of std::in.

Let me know if I can be of help. I will leave the ticket open to continue this discussion.

#### 2016-01-19, 21:35:59 - Andras Lasso
We plan to send string streams through OpenIGTLink to control ultrasound imaging parameters and get notifications. If you don't want to use OpenIGTLink, it's no problem, but if you want to also use string streams to set parameters then you should use the same string stream.

Our string stream is in XML string, see draft specification here: https://github.com/IGSIO/igsio.github.io

You can easily add your own parameters in addition to the most commonly used standard parameters that we've already defined.


#### 2016-01-19, 21:46:01 - Hyun Jae Kang
Thank Andras for your information.

I will check the web page and the standard parameters that you have already defined.

I have a small question about How I can use or apply the standard parameters.

Thanks,



#### 2016-01-19, 22:19:49 - Adam Rankin
It is a work in progress.

Parameters planned for management:

~~~~
Read-write
Depth
ImagingMode
Probe
Frequency
DynRange
Gain
Power
Zoom
SoundVelocity
TGC
AcquisitionState

Read-only
ClipRectangleOrigin
ClipRectangleSize
FanAnglesDeg
FanOriginPixel
FanRadiusStartPixel
FanRadiusStopPixel
Encoding

~~~~


To accomplish configuring these from std::in, you could do the following:

Send following string (example) to std::in


~~~~
<Device><UsImagingParameters><Parameter name='Depth' value='40'/><Parameter name='Gain' value='68'/></UsImagingParameters></Device>

~~~~


Then, in PlusServer, add std::in handling.
Use

~~~~
vtkSmartPointer<vtkXMLDataElement> inputElement = vtkSmartPointer<vtkXMLDataElement>::Take( vtkXMLUtilities::ReadElementFromString(stringFromStdIn.c_str()) );

~~~~

to convert from string to XML structure.

Then, create a new us imaging parameter via

~~~~
vtkSmartPointer<vtkUsImagingParameters> imgParam = vtkSmartPointer<vtkUsImagingParameters>::New();
imgParam ->ReadConfiguration(inputElement)

~~~~


Then, you'll have to find the device you wish to apply it to.

Get an instance of vtkPlusOpenIGTLinkServer from the variable serverList. Then grab the vtkDataCollector from that server, then request the device from that data collector, then request the channel from that device.
How you identify the server, device and channel is up to you. Perhaps parameters in the XML command?

Once it is implemented, you will be able to call:


~~~~
vtkPlusUsDevice* usDevice = vtkPlusUsDevice::SafeDown(device);
if( usDevice != NULL )
{
  usDevice->SetNewImagingParametersDevice(imgParam);
}

~~~~


However, the class vtkPlusUsDevice is not implemented yet.

#### 2016-01-19, 22:19:49 - Adam Rankin
CommentContent: changed from "It is a work in progress.

Parameters planned for" to "It is a work in progress.

Parameters planned for"

#### 2016-01-19, 22:19:49 - Adam Rankin
CommentContent: changed from "It is a work in progress.

Parameters planned for" to "It is a work in progress.

Parameters planned for"

#### 2016-01-19, 22:24:25 - Adam Rankin
For now, you could do


~~~~

vtkCapistranoVideoSource* usDevice = vtkCapistranoVideoSource::SafeDownCast(device)
if( usDevice != NULL )
{
  usDevice->SetUsImagingParametersDevice(imgParam);
}

~~~~


#### 2016-01-19, 22:38:11 - Hyun Jae Kang
Thanks Adam for you kind and detail guide line.
I will follow your plan. 

Thank you very much.

#### 2016-01-21, 18:07:23 - Hyun Jae Kang
re #1063: Change the type of vtkUsImagingParameters from new to ::New()
Commit: r:4458|plus:4458

#### 2016-01-22, 03:33:17 - Adam Rankin
I have made some progress with the class refactoring.

There are some slight changes that are not quite backwards compatible, it shouldn't be too hard to adapt to any changes, but I'm happy with the implementation at this stage.

See url:https://www.assembla.com/spaces/plus/tickets/1064-refactor-ultrasound-devices-into-common-vtkplususdevice-base-class/details|https://www.assembla.com/spaces/plus/tickets/1064-refactor-ultrasound-devices-into-common-vtkplususdevice-base-class/details

#### 2016-01-22, 13:30:07 - Hyun Jae Kang
Thanks Adam :)

#### 2016-02-09, 20:35:05 - Hyun Jae Kang
re #1063: Add a new interface vtkCapistranoVideoSource to update US imaging parameters of Capistrano Ultrasound probe in on-line

Commit: r:4492|plus:4492

#### 2016-02-10, 02:27:09 - Adam Rankin
Hi Hyun,

Would it be possible for you to send me or Andras the Capistrano SDK?

We would like to integrate the tool into our build server's automated build and test system.

It would stored in a private repository that we maintain specifically for device SDK packages.

#### 2016-02-10, 19:29:53 - Adam Rankin
re #1063 Updating UsImagingParameters class to use a more robust design pattern

Updating Capistrano video source to use imaging parameters class
Commit: r:4495|plus:4495

#### 2016-02-10, 19:30:58 - Adam Rankin
Hi Hyun,

I made some modifications to the Capistrano class and it's possible that I changed something I didn't intend too. Could you test my changes and let me know?

Also, if you are able to provide the Capistrano SDK, we can integrate it into automated testing.

#### 2016-02-10, 19:56:56 - Hyun Jae Kang
Hi Adam, 

Sure, I will test it and let you know the result.
And, I asked Matt about the SDK, I think, he will send the SDK to you.

Thanks,

#### 2016-02-10, 19:59:00 - Adam Rankin
Great, thanks!

#### 2016-02-15, 21:30:24 - Hyun Jae Kang
re #1063: Fix compile errors and run-time errors of setting USImaging parameters

Commit: r:4502|plus:4502

#### 2016-02-15, 21:32:22 - Hyun Jae Kang
re #1063: Update the configuration XML file of vtkCapistranoVideoSource by adding vtkUSImagingParameters
Commit: r:4503|plus:4503

#### 2016-02-15, 21:35:54 - Hyun Jae Kang
Hi Adam, 

Today, I checked the updated source code of vtkCapistranoVideoSource, fixed compile and run-time errors. 
Then, I committed  my modification with the updated configuration file.

Please check.

Thanks,

Hyun Jae

#### 2016-02-15, 21:53:27 - Adam Rankin
Thanks! Really sorry about that.

Looks good to me.

#### 2016-02-24, 15:01:53 - Hyun Jae Kang
re #1063: Fixed compile errors related disabled functions of Capistrano SDK:
(usbSetProbeAttachCallback, usbSetProbeDetachCallback)
Commit: r:4510|plus:4510

#### 2016-03-10, 22:14:00 - Hyun Jae Kang
re #1063: Apply the current timestamp acquired with vtkAccurateTimer::GetSystemTime() at the function of AddItem.
Commit: r:4564|plus:4564

#### 2016-04-28, 20:14:36 - Hyun Jae Kang
re #1063: Fixed the following errors:
error C2653: 'TrackedFrame' : is not a class or namespace name  
error C2065: 'FieldMapType' : undeclared identifier  
error C2146: syntax error   : missing 
Commit: r:4611|plus:4611

#### 2016-04-28, 20:16:01 - Hyun Jae Kang
re #1063: Removed a fixed Image Orientation (US_IMG_ORIENT_NU)
          Image Orientation is updated by a configuration file.
Commit: r:4612|plus:4612

#### 2016-05-02, 21:33:17 - Hyun Jae Kang
re #1063: Updated vtkPlusCapistranoVideoSource class.
- Change the base class from 'vtkPlusDevice' to 'vtkPlusUsDevice' for USImagingParameters.

- Add the functionality for import CurrentPixelSpacingMm from an configuration file.
Commit: r:4615|plus:4615

#### 2016-05-13, 17:39:15 - Hyun Jae Kang
re #1063: Removed a fixed Image Orientation (US_IMG_ORIENT_NU)
          Image Orientation is updated by a configuration file.
Commit: r:4628|plus:4628

#### 2016-05-31, 17:12:03 - Hyun Jae Kang
re #1063: Updated vtkPlusCapistranoVideoSource class.
- Changed the ImageSize from 2D to 3D to support 3D Ultrasound data collection.
Commit: r:4642|plus:4642

#### 2016-06-30, 14:49:51 - Adam Rankin
As this device exists and appears to be working, I am closing this ticket. Further tickets for specific issues should be created.

#### 2016-06-30, 14:49:51 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-03-31, 03:59:28 - Andras Lasso
re #1063 Publicly exposing freeze setter and status

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d933f587a206ffdfc8d109c271fd21311ce93103|plus:d933f587a2

#### 2017-04-07, 17:05:49 - Adam Rankin
re #1063 preventing double freeze or double unfreeze (#38)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bd0b3632d49f2eba48ee6b9c744368782cf70e70|plus:bd0b3632d4


## #1064 Refactor ultrasound devices into common vtkPlusUsDevice base class
In order to cleanly support the new TUS over OpenIGTLink v3, it will be necessary to be able to apply imaging parameter get/set messages to all US devices.

By having a common base class, we can support this mechanism.

#### 2016-01-22, 00:59:54 - Adam Rankin
re #1064 first pass at common base class
Commit: r:4459|plus:4459

#### 2016-01-22, 00:59:54 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-01-22, 15:24:34 - Adam Rankin
re #1064 Infinite loops are fun!
Commit: r:4462|plus:4462

#### 2016-02-29, 16:40:38 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-03-03, 19:58:35 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging trunk into rankin-sandbox
Commit: r:4536|plus:4536

#### 2016-03-03, 22:21:22 - Adam Rankin
test #466 test #869 test #897 test #1057 test #1058 test #1064 Merging personal branch into trunk
Commit: r:4538|plus:4538

#### 2016-04-19, 18:31:51 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1065 Upgrade Ascension driver support to include 64 bit driver package
See url:https://www.assembla.com/spaces/plus/messages/5462473|https://www.assembla.com/spaces/plus/messages/5462473

#### 2016-01-19, 18:50:38 - Adam Rankin
re #1065 Adding revE trakSTAR driver package from NDI
Commit: r:4453|plus:4453

#### 2016-01-19, 18:51:03 - Adam Rankin
re #1065 adding missing files from last commit
Commit: r:4454|plus:4454

#### 2016-01-19, 18:56:42 - Adam Rankin
re #1065 Merging branch into trunk
Commit: r:4455|plus:4455

#### 2016-01-19, 18:59:24 - Adam Rankin
@lassoan Would you or someone in your lab have the opportunity to test the 64 bit version? We do not have a trakSTAR here.

#### 2016-01-19, 18:59:24 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-01-19, 21:59:24 - Adam Rankin
re #1065 Setting CMake variable to on by default on Windows (now that we have full support)
Commit: r:4456|plus:4456

#### 2016-02-29, 16:37:33 - Adam Rankin
@lassoan could I pass this to you to test and/or close?

#### 2016-02-29, 16:38:38 - Andras Lasso
assigned_to_id: changed from "rankin" to "lassoan"

#### 2016-06-30, 14:50:13 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1066 Updating the class of vtkUsImagingParameters
Hi,
 
Currently, I am working on updating ultrasound imaging parameters for Capistrano Lab Probe using an instance of vtkUsImagingParameters.
During the time, I found bug in the function of Set~~~~().

For example, we can see the function of SetIntensity() as following:

//----------------------------------------------------------------------------
PlusStatus vtkUsImagingParameters::SetIntensity(double aIntensity)
{
  double currentValue;
  this->GetIntensity(currentValue);
  if( this->ParameterSet[KEY_INTENSITY] == true && currentValue == aIntensity )
  {
    return PLUS_SUCCESS;
  }

  std::stringstream ss;
  ss.str(this->ParameterValues[KEY_INTENSITY]);
  ss >> aIntensity;

  this->ParameterSet[KEY_INTENSITY] = true;
  return PLUS_SUCCESS;
}

From my experience, the function does not work properly.
So, I changed the code as like:

//----------------------------------------------------------------------------
PlusStatus vtkUsImagingParameters::SetIntensity(double aIntensity)
{
  double currentValue;
  this->GetIntensity(currentValue);
  if( this->ParameterSet[KEY_INTENSITY] == true && currentValue == aIntensity )
  {
    return PLUS_SUCCESS;
  }

  std::stringstream ss;  
  ss << aIntensity;
  this->ParameterValues[KEY_INTENSITY] = ss.str();

  this->ParameterSet[KEY_INTENSITY] = true;
  return PLUS_SUCCESS;
}

After change, the function worked as I expected.
Is this bug? or Is there my mistakes in using the function?

Please review the code. 

If that is bug, I will update the class and commit it.

Thanks,

Hyun Jae


#### 2016-01-21, 18:24:25 - Adam Rankin
No, this is a copy-paste bug. Thank you for catching it.

#### 2016-01-21, 18:25:01 - Adam Rankin
The entire us imaging parameters code is experimental, it is the first phase of a two phase implementation. It is untested.

#### 2016-01-21, 18:25:14 - Adam Rankin
I will work today to make some progress on it.

#### 2016-01-21, 18:26:23 - Hyun Jae Kang
Thank you for your effort and support.

#### 2016-01-21, 18:46:31 - Hyun Jae Kang
Hi Adam, 

When you are working on the class, Could add the items of LutCenter, LutWindow related to Look-up-Table of B-Mode image in the class?

Thanks,

#### 2016-01-21, 19:02:25 - Hyun Jae Kang
Hi Adam, 

I need one more item (Voltage of Transducer).
This value can be an absolute value of Transducer or a percentage value of a Maximum power.

Could you add this item in the class?

Thank you very much. 

#### 2016-01-21, 19:04:54 - Adam Rankin
The class is just a map, feel free to add whatever accessors you like and have them set a value in the map. The parameters listed in the standard will be officially supported, any other devices can utilize their own parameters.

If you think any of these parameters should be included in the standard, could you leave an issue at https://github.com/IGSIO/OpenIGTLink/ and we will happily discuss!

#### 2016-02-25, 20:12:52 - Hyun Jae Kang
re #1066: Clean up the codes and Fixed the bug of GetValue and GetTimeGainCompensation
Commit: r:4517|plus:4517

#### 2016-06-14, 16:04:37 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-06-14, 16:10:36 - Adam Rankin
status: changed from "New" to "Fixed"


## #1067 Saved data player does not take into account PortUsImageOrientation or UltrasoundImageOrientation


#### 2016-01-28, 20:23:13 - Adam Rankin
Nevermind, not sure what happened.

#### 2016-01-28, 20:23:13 - Adam Rankin
status: changed from "New" to "Invalid"


## #1068 Integrate support for Freedom6s haptic device
Device existed in RobartsVTK. Moving, fixing and updating code to PLUS as RobartsVTK now uses PLUS.

#### 2016-02-16, 17:35:19 - Adam Rankin
description: changed from "" to "Device existed in RobartsVT..."

#### 2016-02-16, 19:17:32 - Adam Rankin
fixed #1068 Adding in haptics base under data collection

adding freedom6s haptics device interface and tools API
Commit: r:4504|plus:4504

#### 2016-02-16, 19:17:32 - Adam Rankin
status: changed from "New" to "Fixed"


## #1069 Automatic pause of image recording
It would be nice to allow automatic pause/resume of ultrasound image recording.

Recording could be stopped when a transform status becomes invalid for a certain minimal period of time (e.g., ProbeToTracker becomes invalid for 3 seconds; it would be useful for optical tracking) or when a distance becomes too large (e.g., ProbeToReference or ProbeToNeedle transform translation component becomes larger than 300mm; could be used for EM tracking).

Alternatively, recording could be stopped when image becomes blank. A blank image could be detected as image intensity and variance at a number of predefined positions falling below a threshold value.

See discussion here: https://www.assembla.com/spaces/plus/messages/5497963

#### 2016-02-18, 22:34:18 - Andras Lasso
description: changed from "It would be nice to allow a..." to "It would be nice to allow a..."

#### 2016-02-18, 22:49:16 - Andras Lasso
It probably makes more sense to implement this at application level. It would make manual override of start/stop recording, definition of a region of interest (outside of which recording would be stopped), and changing of filename prefixes easier.

3D visualization of tracked images and tools, volume reconstruction, registration, start/stop recording, etc. are all already freely available in SlicerIGT. Automatic start/stop feature could be implemented by adding 10-20 lines of Python code in PlusRemote module. It would not be even necessary to rebuild Slicer or any of the SlicerIGT modules.

#### 2016-02-18, 22:49:29 - Andras Lasso
description: changed from "It would be nice to allow a..." to "It would be nice to allow a..."


## #1070 Add tool to extract scan lines into a rectangular image
This is a convenience tool for those who experiment with ultrasound image segmentation. If they want to process the scan lines in matlab, they could extract them with this tool.

#### 2016-03-13, 05:10:58 - Tamas Ungi
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-03-13, 05:11:03 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2016-03-13, 05:12:40 - Tamas Ungi
Re #1070: Adding test data. Human ultrasound images, one linear, one curvilinear.
Commit: r:4565|plus:4565

#### 2016-03-13, 05:13:51 - Tamas Ungi
Test #1070: Adding ExtractScanLines program.
Commit: r:4566|plus:4566

#### 2016-03-13, 05:13:51 - Tamas Ungi
status: changed from "New" to "Test"

#### 2016-03-13, 05:58:10 - Tamas Ungi
Re #1070: Fixing command line arguments in test.
Commit: r:4567|plus:4567

#### 2016-03-19, 02:27:14 - Tamas Ungi
Re #1070: Adding scan converter executable to be able to convert back scan line images. Adding documentation.
Commit: r:4568|plus:4568

#### 2016-03-19, 02:27:34 - Tamas Ungi
Re #1070: Adding documentation.
Commit: r:4569|plus:4569

#### 2016-03-19, 06:08:19 - Tamas Ungi
Re #1070: Fixing build for vtk5.
Commit: r:4570|plus:4570

#### 2016-03-22, 01:08:31 - Tamas Ungi
Re #1070: Adding tools to installation package.
Commit: r:4571|plus:4571

#### 2016-04-25, 15:50:53 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1071 Add support for building using VS2013
null

#### 2016-03-25, 00:00:52 - Adam Rankin
I'll pitch in some testing on this side.

One other thing we should include is support for the -std=c++11 flag on linux

#### 2016-03-28, 12:16:55 - Andras Lasso
re #1071: Updated Windows SDK path detection and ImagingControls SDK version to support VS2013
Commit: r:4574|plus:4574

#### 2016-03-28, 12:25:29 - Andras Lasso
re #1071: Updated Windows SDK path detection and ImagingControls SDK version to support VS2013 - PlusLib part
Commit: r:4575|plus:4575

#### 2016-03-28, 12:26:24 - Andras Lasso
re #1071: Fixed VS2013 build error (.str() conversion was missing from a logging macro)
Commit: r:4576|plus:4576

#### 2016-03-28, 12:26:41 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-03-28, 12:41:49 - Andras Lasso
TODO: update windows build instructions for VS2013. Change recommended instructions to use Qt5, as it's difficult to get VS2013-compatible Qt4 installer (need to build it from source).

#### 2016-03-28, 15:09:16 - Andras Lasso
re #1071: Fixed build error
Commit: r:4578|plus:4578

#### 2016-03-28, 18:37:50 - Andras Lasso
re #1071: Fixed build error (use full path for library names is simpler than trying to pass additional library directories and this is what is done for other libs anyway)
Commit: r:4579|plus:4579

#### 2016-03-28, 22:10:13 - Andras Lasso
re #1071: Fixed build error
Commit: r:4580|plus:4580

#### 2016-06-30, 14:49:08 - Adam Rankin
Confirmed working, and also with VS2015

#### 2016-06-30, 14:49:08 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1072 Class and library rename: vtkXYZ becomes vtkPlusXYZ and XYZ becomes plusXYZ
See subject.

Since Plus is starting to be used as a linked-against library, it is important to have unique names. Since we are avoiding namespacing due to python wrapping future-possibility, we must develop a consistent naming scheme for Plus classes.

#### 2016-04-04, 15:12:12 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-04-05, 16:44:00 - Adam Rankin
re #1072 removing sandbox branch
Commit: r:4584|plus:4584

#### 2016-04-05, 16:45:03 - Adam Rankin
re #1072 creating branch for class rename
Commit: r:4585|plus:4585

#### 2016-04-05, 20:31:09 - Adam Rankin
re #1072 Modifications to BiiGOptitrack code to accept external ITK
Commit: r:4587|plus:4587

#### 2016-04-06, 01:37:43 - Adam Rankin
test #1072 class rename completed, build and automated tests successful
Commit: r:4588|plus:4588

#### 2016-04-06, 01:37:43 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-04-12, 20:36:01 - Adam Rankin
re #1072 Merged revision(s) 4585-4591 from trunk/PlusBuild:
Merged revision(s)  from trunk/PlusApp:
Merged revision(s) 4585-4591 from trunk/PlusLib:
Merged revision(s)  from trunk/PlusLibData:
Commit: r:4592|plus:4592

#### 2016-04-12, 20:36:58 - Adam Rankin
re #1072 Merged revision(s) 4585-4591 from trunk/PlusBuild:
Merged revision(s)  from trunk/PlusApp:
Merged revision(s) 4585-4591 from trunk/PlusLib:
Merged revision(s)  from trunk/PlusLibData:
Commit: r:4593|plus:4593

#### 2016-04-13, 01:36:57 - Adam Rankin
test #1072 renaming classes
Commit: r:4594|plus:4594

#### 2016-04-13, 01:37:40 - Adam Rankin
test #1072 renaming classes
Commit: r:4596|plus:4596

#### 2016-04-13, 01:37:40 - Adam Rankin
test #1072 renaming classes
Commit: r:4595|plus:4595

#### 2016-04-13, 02:13:52 - Adam Rankin
test #1072 Fixing missed merge error
Commit: r:4597|plus:4597

#### 2016-04-15, 00:42:34 - Andras Lasso
@rankin We have linker issues in external projects that use Plus the trunk version. The issue is that instead of renaming files, now there are cloned files everywhere! Please remove the new files (one with the short history).

For example:

PlusLib\\src\\DataCollection\\3dConnexionTracking\\vtkPlus3dConnexionTracker.h => new file, with short history, contents should be moved to the old file then this one has to be deleted

PlusLib\\src\\DataCollection\\3dConnexionTracking\\vtk3dConnexionTracker.h  => old file, with long history, need to be renamed and the contents should be replaced with the new file's


#### 2016-04-15, 00:42:34 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2016-04-15, 00:46:51 - Adam Rankin
Ok, I will take care of it.

#### 2016-04-15, 00:47:44 - Andras Lasso
Thank you! Let me know if you need any help.

#### 2016-04-15, 00:52:03 - Adam Rankin
It’s ok, I had done an SVN rename using TortoiseSVN, I’m not sure why it didn’t work.
 
From: Andras Lasso (lassoan) [mailto:plus@alerts.assembla.com]
Sent: Thursday, April 14, 2016 8:48 PM

#### 2016-04-18, 12:51:15 - Adam Rankin
re #1072 Revert to revision 4591, eliminating incorrect merge
Commit: r:4599|plus:4599

#### 2016-04-19, 18:01:52 - Adam Rankin
re #1072 Committing class name changes directly to trunk

Any exported class of the naming convention XYZ or vtkXYZ have been renamed to PlusXYZ or vtkPlusXYZ

Documentation has been updated as well as config files
Commit: r:4600|plus:4600

#### 2016-04-19, 18:08:10 - Adam Rankin
re #1072 Removing defunct Freedom6S device
Commit: r:4601|plus:4601

#### 2016-04-19, 18:25:54 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-04-20, 19:36:19 - Adam Rankin
re #1072 Renaming libraries and parent level folders to adhere to new Plus naming convention
Commit: r:4605|plus:4605

#### 2016-04-24, 14:02:24 - Andras Lasso
re #1072: Fixed build error (INCLUDE_EXTERNAL_MSPROJECT called with incorrect number of parameters)
Commit: r:4607|plus:4607

#### 2016-04-25, 14:37:34 - Andras Lasso
re #1072: Fixed packaging error caused by incorrectly changed file name
Commit: r:4609|plus:4609

#### 2016-05-16, 14:33:22 - Andras Lasso
re #1072: Fixed packaging error caused by undefined PLUSLIB_DATA_DIR
Commit: r:4631|plus:4631

#### 2016-06-06, 16:32:17 - Adam Rankin
re #1072 WIP PlusApp rename first pass
Commit: r:4650|plus:4650

#### 2016-06-06, 16:49:19 - Adam Rankin
re #1072 WIP Finish pass of PlusApp rename
Commit: r:4651|plus:4651

#### 2016-06-06, 16:52:10 - Adam Rankin
re #1072 Renaming CommonWidgets to PlusCommonWidgets for cleaner export
Commit: r:4652|plus:4652

#### 2016-06-06, 16:58:58 - Adam Rankin
re #1072 Fixes when finding renamed PlusCommonWidgets
Commit: r:4654|plus:4654

#### 2016-06-06, 17:36:32 - Adam Rankin
re #1072 missing rename in fCal Qt Resource file
Commit: r:4655|plus:4655

#### 2016-06-14, 16:11:29 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1073 Nightly PLUS cannot connect to Ultrasonix video device
We tried several config files that work with other versions of PLUS, e.g. 4412 works fine. We always get this error message with the nightly build (4582):

040516_125506.209|ERROR|115.022000|SERVER> Unable to continue reading configuration of vtkSonixVideoSource. Generic device configuration reading failed.| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkSonixVideoSource.cxx(577)
040516_125506.210|ERROR|115.023000|SERVER> Failed to read parameters of device: VideoDevice (type: SonixVideo)| in .\\..\\..\\PlusLib\\src\\DataCollection\\vtkDataCollector.cxx(127)
040516_125506.210|ERROR|115.023000|SERVER> Datacollector failed to read configuration| in .\\..\\..\\..\\PlusLib\\src\\PlusServer\  esting\\PlusServer.cxx(118)

A full log file with some attempts to connect to Ultrasonix is attached.

#### 2016-04-05, 17:08:58 - Tamas Ungi
file:awp5_G-1er5BamacwqjQXA


#### 2016-04-05, 17:08:58 - Tamas Ungi
Attachment added: "040516_125311_PlusLog.txt"

#### 2016-04-05, 17:09:51 - Adam Rankin
This has to do with UsImagingParameters. I will work on it today. Sorry.

#### 2016-04-05, 17:09:55 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2016-04-05, 17:09:58 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-04-05, 17:10:00 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2016-04-05, 17:10:03 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-04-05, 18:35:03 - Adam Rankin
test #1073 restoring Sonix functionality by fixing device configuration reading with fallback
Commit: r:4586|plus:4586

#### 2016-04-05, 18:35:03 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-04-05, 18:35:18 - Adam Rankin
@ungi It is working on our Sonix here, could you give yours a try?

#### 2016-04-06, 00:36:44 - Tamas Ungi
Thanks. I will test it tomorrow morning.

#### 2016-04-18, 18:49:05 - Tamas Ungi
Sorry Adam, still the same problem with Ultrasonix connection:

time|level|timeoffset|message|location
041816_143334.216|INFO|000.029000| Software version: Plus-2.3.0.4598 - Win32| in vtkPlusLogger(188)
041816_143335.671|INFO|001.484000|  Software version: Plus-2.3.0.4598 - Win32| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(83)
041816_143335.683|INFO|001.496000| Logging at level 3 to file: D:/PlusPackages/PlusApp-2.3.0.4598-Ultrasonix-6.1-Win32/data/041816_143334_PlusLog.txt| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(84)
041816_143335.704|INFO|001.518000| Supported devices: 
  - 3dConnexion (ver: Plus-2.3.0)
  - Ascension3DG (ver: Plus-2.3.0)
  - AuroraTracker (ver: NDICAPI-3.1)
  - BrachyTracker (ver: Plus-2.3.0)
  - CertusTracker (ver: Optotrak API (Win32 DLL Version) Version 3.01.03)
  - ChRobotics (ver: Plus-2.3.0)
  - Epiphan (ver: Plus-2.3.0)
  - FakeTracker (ver: Plus-2.3.0)
  - GenericSerialDevice (ver: Plus-2.3.0)
  - ICCapturing (ver: The Imaging Source UDSHL-3.4)
  - ImageProcessor (ver: Plus-2.3.0)
  - Microchip (ver: Plus-2.3.0)
  - NoiseVideo (ver: Plus-2.3.0)
  - OpenIGTLinkTracker (ver: OpenIGTLink v1.11.0)
  - OpenIGTLinkVideo (ver: OpenIGTLink v1.11.0)
  - PhidgetSpatial (ver: Plus-2.3.0)
  - PolarisTracker (ver: NDICAPI-3.1)
  - SavedDataSource (ver: Plus-2.3.0)
  - SonixPortaVideo (ver: UltrasonixSDK-6.1.1)
  - SonixVideo (ver: UltrasonixSDK-6.1.1)
  - USDigitalEncodersTracker (ver: Plus-2.3.0)
  - UsSimulator (ver: Plus-2.3.0)
  - VFWVideo (ver: Plus-2.3.0)
  - VirtualBufferedDiscCapture (ver: Plus-2.3.0)
  - VirtualDiscCapture (ver: Plus-2.3.0)
  - VirtualMixer (ver: Plus-2.3.0)
  - VirtualSwitcher (ver: Plus-2.3.0)
  - VirtualVolumeReconstructor (ver: Plus-2.3.0)
| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(88)
041816_143335.715|INFO|001.528000| Server host name: gfich005| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(108)
041816_143335.875|INFO|001.688000| Server IP addresses: 130.15.7.75,  127.0.0.1| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(127)
041816_143447.829|INFO|073.643000| Connect using configuration file: S:\\data\\SlicerIGT\\Scoliosis\\ConfigFiles\\SpineAnest_C5_d100_v01.xml| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(306)
041816_143447.831|INFO|073.644000| Server process command line: 'D:/PlusPackages/PlusApp-2.3.0.4598-Ultrasonix-6.1-Win32/bin/PlusServer.exe' --config-file='S:\\data\\SlicerIGT\\Scoliosis\\ConfigFiles\\SpineAnest_C5_d100_v01.xml' --verbose=3| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(168)
041816_143448.545|INFO|074.358000| Server process started successfully| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(175)
041816_143450.934|INFO|076.748000|SERVER> Software version: Plus-2.3.0.4598 - Win32
041816_143450.934|INFO|076.748000|SERVER> Logging at level 3 (INFO) to file: D:/PlusPackages/PlusApp-2.3.0.4598-Ultrasonix-6.1-Win32/data/041816_143450_PlusLog.txt
041816_143450.934|INFO|076.748000|SERVER> Server status: Reading configuration.
041816_143451.046|INFO|076.860000|SERVER> TrackerDevice: Local time offset: 0ms
041816_143451.046|INFO|076.860000|SERVER> Selected US image orientation: UF
041816_143451.046|INFO|076.860000|SERVER> VideoDevice: Local time offset: 0ms
041816_143451.088|INFO|076.902000|SERVER> Server status: Connecting to devices.
041816_143451.088|ERROR|076.902000|SERVER> VideoDevice: Unable to find data collection element in XML tree!| in .\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(660)
041816_143451.091|ERROR|076.904000|SERVER> Unable to continue configuration of vtkPlusSonixVideoSource. Could not find corresponding element.| in .\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusUsDevice.cxx(57)
041816_143503.509|ERROR|089.323000|SERVER> vtkPlusSonixVideoSource::SetParamValue failed (paramId=b-dynamic range, paramValue=107782000) sendAndWait(): an error was returned by the server| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(686)
041816_143508.138|ERROR|093.952000|SERVER> vtkPlusSonixVideoSource::SetParamValue failed (paramId=b-dynamic range, paramValue=107782000) sendAndWait(): an error was returned by the server| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(686)
041816_143512.572|ERROR|098.386000|SERVER> vtkPlusSonixVideoSource::SetParamValue failed (paramId=b-dynamic range, paramValue=107782000) sendAndWait(): an error was returned by the server| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(686)
041816_143517.233|ERROR|103.047000|SERVER> vtkPlusSonixVideoSource::SetParamValue failed (paramId=b-dynamic range, paramValue=107782000) sendAndWait(): an error was returned by the server| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(686)
041816_143521.671|ERROR|107.485000|SERVER> vtkPlusSonixVideoSource::SetParamValue failed (paramId=b-dynamic range, paramValue=107782000) sendAndWait(): an error was returned by the server| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(686)
041816_143522.246|ERROR|108.060000|SERVER> Failed to connect to sonix video device| in .\\..\\..\\PlusLib\\src\\DataCollection\\SonixVideo\\vtkPlusSonixVideoSource.cxx(394)
041816_143522.248|ERROR|108.061000|SERVER> VideoDevice: Cannot connect to data source, ConnectInternal failed| in .\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDevice.cxx(959)
041816_143522.286|ERROR|108.100000|SERVER> Unable to connect device: VideoDevice.| in .\\..\\..\\PlusLib\\src\\DataCollection\\vtkPlusDataCollector.cxx(306)
041816_143522.286|ERROR|108.100000|SERVER> Datacollector failed to connect to devices| in .\\..\\..\\..\\PlusLib\\src\\PlusServer\  esting\\PlusServer.cxx(133)
041816_143523.555|INFO|109.369000| Server process terminated.| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(433)
041816_143523.556|INFO|109.370000| Disconnect request successful| in ..\\..\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(299)


#### 2016-04-18, 18:49:05 - Tamas Ungi
status: changed from "Test" to "Accepted"

#### 2016-04-18, 18:49:24 - Tamas Ungi
The same config file works with older versions, e.g. 4412.

#### 2016-04-19, 18:25:51 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-04-21, 14:51:48 - Tamas Ungi
It's working now! (Version 4603) Thanks!

#### 2016-04-21, 14:51:48 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1074 TESSDATA env variable isn't correctly set/detected under Linux
Identify and correct issue to enable screen reading under Linux

#### 2016-04-13, 00:21:09 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2016-04-13, 01:34:47 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-04-13, 01:42:19 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-04-13, 01:42:22 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2016-04-13, 14:28:43 - Adam Rankin
re #1074 setting tessdata_prefix env var in linux using .xsessionrc file

Commit: r:4598|plus:4598

#### 2016-04-13, 21:06:57 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-04-19, 18:31:43 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1075 PlusLibConfig is generated in subdirectory instead of parent directory
In order to gently phase to top-level directory generation, create in both PlusLib and PlusLib/src

Eventually, remove generation of PlusLib/src

#### 2016-04-19, 18:31:01 - Adam Rankin
fixed #1075 config, version and targets files are now generated in the top-level directory, existing functionality unchanged until downstream users switch
Commit: r:4602|plus:4602

#### 2016-04-19, 18:31:01 - Adam Rankin
status: changed from "New" to "Fixed"


## #1076 Build name is not correctly formed
Script always chooses x64, regardless of actual build type selected

#### 2016-04-20, 13:31:28 - Adam Rankin
fixed #1076 using build architecture instead of OS architecture
Commit: r:4604|plus:4604

#### 2016-04-20, 13:31:28 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-04-25, 14:18:37 - Andras Lasso
re #1076: Added PLUSBUILD_BUILDNAME_POSTFIX CMake variable that allows adding a custom postfix to automatically generated build names.

For example, it is useful for defining information, such as 'stable' or 'trunk'.
Commit: r:4608|plus:4608

#### 2016-05-11, 19:59:18 - Andras Lasso
re #1076: Fixed build error (CMake configuration error) on WindowsXP embedded (Ultrasonix systems)
Commit: r:4622|plus:4622


## #1077 Capture device does not show up in Slicer (PlusRemote)
When I use the attached config file, I can record data using PlusRemote module in Slicer with PLUS version 4412.
But when I use PLUS version 4603 (today's nightly), PlusRemote does not list the capture device. There are no error messages in PLUS or Slicer, just the CaptureDevice fails to show up.

#### 2016-04-21, 15:05:25 - Tamas Ungi
file:b6lbzub9ir5OkWacwqEsg8


#### 2016-04-21, 15:05:25 - Tamas Ungi
Attachment added: "Spine_C5_d100_v01.xml"

#### 2016-04-21, 16:54:11 - Andras Lasso
assigned_to_id: changed from null to "rankin"

#### 2016-04-21, 16:54:30 - Andras Lasso
@rankin Can you have a look at this? Maybe related to class name changes?

#### 2016-04-21, 18:24:10 - Adam Rankin
Yes, I will investigate.

#### 2016-04-21, 20:45:44 - Adam Rankin
Confirmed it is a consequence of the renaming. Currently the devices are requested by type, to which 'vtk' is prepended and compared against the C++ class name.

@lassoan this solution won't work as there are a number of device IDs whose factory name is not the same construction as the class name. I can issue a temporary fix by prepending 'vtkPlus' instead of just 'vtk', but perhaps the factory should have a function that transforms factory name into c++ class name?

#### 2016-04-21, 20:45:44 - Adam Rankin
CommentContent: changed from "Confirmed it is a consequence of the renaming. Currently the devices are requested by type, to which VTK is prepended and compared against the C++ class name.

@lassoan this solution won't work as there are a number of device IDs whose factory name is not" to "Confirmed it is a consequence of the renaming. Currently the devices are requested by type, to which 'vtk' is prepended and compared against the C++ class name.

@lassoan this solution won't work as there are a number of device IDs whose factory name is"

#### 2016-04-22, 00:10:56 - Andras Lasso
No need for any new mechanism, just make sure it works for capture and reconstructor device by updating vtkPlusRequestIdsCommand::Execute(). In the long term we probably don't want one-to-one mapping between OpenIGTLink constants and internal Plus classes.

#### 2016-04-22, 22:40:45 - Adam Rankin
test #1077 fixing bug introduced by first pass openigtlink v3 pass
Commit: r:4606|plus:4606

#### 2016-04-22, 22:40:45 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-04-25, 15:54:33 - Tamas Ungi
I wanted to test this, but the latest available nightly for dowload seems to be version 4603:
http://perk-software.cs.queensu.ca/plus/packages/nightly/
Are the nightly builds broken?

#### 2016-04-25, 15:56:25 - Andras Lasso
Yes, they are broken. I've fixed the packaging error. If it's urgent I can create an experimental package that you can test today (if not urgent then you can wait for tomorrow's nightly build).

#### 2016-04-25, 17:44:02 - Tamas Ungi
Thanks. Tomorrow is fine.

#### 2016-04-26, 20:45:05 - Adam Rankin
Any luck with testing?

#### 2016-04-27, 01:06:44 - Tamas Ungi
I will test it tomorrow.

#### 2016-04-27, 14:57:39 - Tamas Ungi
With PLUS version 4609 the record button gets activated in PlusRemote (in Slicer), but the capture device selector dropdown menu is empty. Sometimes we have more capture devices (e.g. one that only records tracking, one for tracked images too), so the selector is required.
I tested with the same config file with PLUS version 4412 and the capture device selector gets populated. So something is still missing...

#### 2016-04-27, 14:57:39 - Tamas Ungi
status: changed from "Test" to "Accepted"

#### 2016-04-27, 14:58:30 - Adam Rankin
Investigating

#### 2016-04-27, 16:18:06 - Adam Rankin
test #1077 updated class name checking due to renaming of classes
Commit: r:4610|plus:4610

#### 2016-04-27, 16:18:06 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-04-28, 22:57:29 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-05-12, 18:50:10 - Adam Rankin
Any updates? It is working in our lab, could you confirm yours?

#### 2016-05-13, 04:13:31 - Tamas Ungi
status: changed from "Test" to "Fixed"

#### 2016-05-22, 01:28:34 - Tamas Ungi
file:camGQeh7Wr5RldacwqjQXA


#### 2016-05-22, 01:28:34 - Tamas Ungi
Attachment added: "Telemed-60mm-L12_Ascension.xml"

#### 2016-05-22, 01:30:15 - Adam Rankin
Will fix asap.

#### 2016-05-22, 01:30:44 - Tamas Ungi
Sorry, I just realized with a different hardware that there is still a problem. I ran today's nightly PLUS server (Telemed 32-bit build) with the attached config file.
There are no error or warning messages in PLUS or Slicer, but the capture device does not show up in Slicer.
What I see in Slicer as Capture Device ID: 'Found: 1 parameter.' - not the real capture device ID, and I cannot start recording.

#### 2016-05-22, 01:30:44 - Tamas Ungi
status: changed from "Fixed" to "New"

#### 2016-05-22, 01:30:44 - Tamas Ungi
CommentContent: changed from "Sorry, I just realized with a different hardware that there is still a problem. I ran today's nightly PLUS server (Telemed 32-bit build) with the attached config file.
There are no error or warning messages in PLUS or Slicer, but the capture device does" to "Sorry, I just realized with a different hardware that there is still a problem. I ran today's nightly PLUS server (Telemed 32-bit build) with the attached config file.
There are no error or warning messages in PLUS or Slicer, but the capture device does"

#### 2016-05-22, 01:39:03 - Adam Rankin
I think the error is in SlicerIGT. Checking further...

#### 2016-05-22, 01:43:50 - Tamas Ungi
I found an older PLUS version (4367) for this hardware (Telemed 32-bit). I tried the same config file, and recording through SlicerIGT (PlusRemote module) worked perfectly.
The Slicer version I'm using is 2016-05-04. So unless SlicerIGT needs to be changed for a recent PLUS communication protocol change, as far as I can tell SlicerIGT works.

#### 2016-05-22, 01:43:50 - Tamas Ungi
CommentContent: changed from "I found an older PLUS version (4367) for this hardware (Telemed 32-bit). I tried the same config file, and recording through SlicerIGT (PlusRemote module) worked perfectly." to "I found an older PLUS version (4367) for this hardware (Telemed 32-bit). I tried the same config file, and recording through SlicerIGT (PlusRemote module) worked perfectly.
The Slicer version I'm using is 2016-05-04. So unless SlicerIGT needs to be"

#### 2016-05-22, 01:45:29 - Adam Rankin
Yes, the new PLUS is sending OpenIGTLink v3 messages, and SlicerIGT is receiving them.
 
If SlicerIGT receives a v1 message, it reverts to the old behavior (aka, working).
 
The error is in SlicerIGT v3 message processing (I think, investigating…)
 
From: Tamas Ungi (ungi) [mailto:plus@alerts.assembla.com]
Sent: Saturday, May 21, 2016 9:44 PM

#### 2016-05-22, 01:48:14 - Adam Rankin
Building Slicer and SlicerIGT. I'm on my new machine so it will be a full build.

#### 2016-05-22, 21:24:18 - Adam Rankin
So, Slicer should not be sending v3 messages yet. So I'm not sure how you got a v3 response.

What revisions of Slicer/SlicerIGT was this with? What revision of PLUS?

#### 2016-05-31, 02:34:30 - Adam Rankin
Confirmed. Behavior affects PLUS from download packages only. When built from trunk and run it works as expected.

#### 2016-05-31, 04:39:59 - Adam Rankin
test #1077 able to reproduce behavior, uninitialized variable in release mode causing plusserver to treat clients as v3
Commit: r:4641|plus:4641

#### 2016-05-31, 04:39:59 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-05-31, 19:21:31 - Tamas Ungi
I've just tested v4641 (nightly Release build), and this issue seems fixed now. Thanks.

#### 2016-05-31, 19:21:31 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1078 Enable broadcasting of field data without transform or image data
With the text recognizer device, and possible future haptic (force) devices, there is a need to send tracked frame fields via STRING message.

Currently this is possible, but the fields must be attached to a stream buffer item with an image or transform.

Adding of fields only is required.

#### 2016-04-26, 20:50:28 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-04-26, 20:53:16 - Andras Lasso
We would need timestamped buffer item that can store variable scalar array (for sending ECG or other signal) or string(s) without a transform or image payload. Is this what you mean? What design do you have in mind?


#### 2016-04-26, 20:53:16 - Andras Lasso
status: changed from "Accepted" to "New"

#### 2016-04-26, 20:55:34 - Adam Rankin
Yes, exactly. I have already implemented a solution. I have added a new data source type (and surrounding infrastructure). The config file I am testing with looks like this:


~~~~

    <Device
      Id='TextRecognizerDevice' 
      Type='VirtualTextRecognizer'
      MissingInputGracePeriodSec='1' 
      Language='eng' >
      <DataSources>
        <DataSource Type='FieldData' Id='ScreenFields'/>
      </DataSources>
      <TextFields>
        <Field Channel='TrackedVideoStream' Name='patient-last-name' InputRegionOrigin='260 885' InputRegionSize='82 20' />
        <Field Channel='TrackedVideoStream' Name='tee-temperature' InputRegionOrigin='75 185' InputRegionSize='55 20' />
      </TextFields>
      <InputChannels>
        <InputChannel Id='TrackedVideoStream' />
      </InputChannels>
      <OutputChannels>
        <OutputChannel Id='DataChannel'>
          <DataSource Id='ScreenFields'/>
        </OutputChannel>
      </OutputChannels>
    </Device>

~~~~


It is working very well. I can add customfields to a frame, and plusserver STRING messages will send a field. We can extend it to send multiple fields in a single frame via another message type if we want (or v3 style messages with metadata)

#### 2016-04-26, 21:03:14 - Andras Lasso
> I can add customfields to a frame, and plusserver STRING messages will send a field

Do you use this mechanism for generating a string message from items?
https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/PlusOpenIGTLink/vtkPlusIgtlMessageFactory.cxx#ln268

#### 2016-04-26, 21:05:02 - Andras Lasso
Sending custom fields stored in custom frame fields have been working for a while now, but the custom frame fields had to be attached to an image data.

#### 2016-04-26, 21:07:29 - Andras Lasso
Is field data always string? When you mix it with image or tracking data do you always attach the closest value?

#### 2016-04-26, 23:18:23 - Adam Rankin
Yes to closest value.

Re: custom fields always existing
Yes, I know, this just exposes a mechanism to set custom fields without transform or image data, and to package them into a tracked frame for sending over igtlink

Re: string message
Yes, exactly. The message type STRING in the ClientInfo tag. I am testing this portion now

#### 2016-05-09, 17:02:22 - Adam Rankin
re #1078 fixing bug introduced by us device base class
Commit: r:4618|plus:4618

#### 2016-05-09, 17:05:06 - Adam Rankin
re #1078 fixing bug introduced by us device base class

I wish SVN had an ammend last commit to hide my shame
Commit: r:4619|plus:4619

#### 2016-05-11, 20:03:31 - Andras Lasso
re #1078: Fixed ImageToTransducer transform computation on Ultrasonix systems (regression introduced recently by common US device base class)

Image origin and spacing are now initialized in all 3 dimensions to values that are mostly correct (even if a developer forgets to set the third component of the origin or spacing).
Commit: r:4623|plus:4623

#### 2016-05-12, 19:13:29 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-05-27, 20:19:45 - Adam Rankin
re #1078 correcting logic for calculating image to transducer for US devices
Commit: r:4637|plus:4637

#### 2016-06-14, 16:11:17 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1079 Plus cannot find transform chain by name
I attach a simple config file that works on version 4412. I just discovered that today's version (4610) displays error messages because it cannot find the ImageToReference transform. (4412 can find it)
I attach the PLUS log that contains the error messages.

#### 2016-04-28, 15:57:19 - Tamas Ungi
file:dI6R3KdvKr5PCbdmr6CpXy


#### 2016-04-28, 15:57:19 - Tamas Ungi
Attachment added: "LumbarTutor_Sonix-L14.xml"

#### 2016-04-28, 15:57:19 - Tamas Ungi
file:dI6T1wdvKr5PCbdmr6CpXy


#### 2016-04-28, 15:57:19 - Tamas Ungi
Attachment added: "042816_114046_PlusLog.txt"

#### 2016-04-28, 16:08:35 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-04-28, 16:08:37 - Adam Rankin
Component: changed from null to "PlusLib-PlusServer"

#### 2016-04-28, 16:08:40 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-04-28, 16:08:42 - Adam Rankin
Will investigate.

#### 2016-04-28, 16:35:39 - Andras Lasso
The issue is that ImageToTransducerTransform is not set correctly as a frame field into US image data.

There seems to be an incorrect logic in PlusStatus vtkPlusUsDevice::NotifyConfigured():
if( this->TextRecognizerInputChannelName != NULL )
  {
    if( ImageToTransducerTransform.SetTransformName(this->ImageToTransducerTransformName) != PLUS_SUCCESS )
    {
      LOG_ERROR('Transform name is not properly formatted. It should be of the format <From>ToTransducer.');
      return PLUS_FAIL;
    }
...

this->ImageToTransducerTransform is not set, although this->ImageToTransducerTransformName is not NULL. Please fix this and as a preventive measure, keep either this->ImageToTransducerTransform or this->ImageToTransducerTransformName, but not both.

#### 2016-04-28, 16:37:29 - Andras Lasso
 Reading of ImageToTransducerTransformName from XML is also implemented twice, in vtkPlusSonixVideoSource and vtkPlusUsDevice. Probably it's not needed in vtkPlusSonixVideoSource anymore.

#### 2016-04-28, 19:05:32 - Adam Rankin
This shouldn't be an issue as this code isn't hit. Since this->TextRecognizerInputChannelName is not set, none of the code in the code block is run. I will investigate.

#### 2016-04-28, 20:00:18 - Andras Lasso
if this->TextRecognizerInputChannelName is NULL then conversion from this->ImageToTransducerTransformName to this->ImageToTransducerTransform does not happen. Copy-paste error. But the whole conversion should not be necessary, as it's enough to store the ImageToTransducer transform name in one member variable. I would suggest to just get rid of the this->ImageToTransducerTransform.

#### 2016-04-28, 20:47:47 - Adam Rankin
test #1079 adding virtual to function hieararchy in vtkPlusUsDevice subclass
Commit: r:4614|plus:4614

#### 2016-04-28, 20:47:47 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-05-12, 18:50:22 - Adam Rankin
Any updates?

#### 2016-05-12, 20:56:02 - Andras Lasso
After this https://www.assembla.com/spaces/plus/tickets/1078/details?comment=966238593 it worked for me. I haven't tested on an official package but I think we can close this (and reopen if anybody has problems with this again).

#### 2016-05-12, 20:56:02 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1080 Add support for the Ovrvision Pro stereo camera
Device homepage
http://ovrvision.com/entop/

SDK available at
https://www.dropbox.com/s/42ntl4msq1clh0b/ovrvisionprosdk_windows.zip?dl=0

Open source MIT license

For other operating systems, source is available at:
https://github.com/Wizapply/OvrvisionPro

#### 2016-05-08, 16:42:39 - Adam Rankin
file:dGRrNaftSr5RpdacwqjQXA


#### 2016-05-08, 16:42:39 - Adam Rankin
Attachment added: "ovrvisionprosdk_windows.zip"

#### 2016-05-08, 16:47:45 - Adam Rankin
file:cxjfY4ftWr5P8eacwqjQYw


#### 2016-05-08, 16:47:45 - Adam Rankin
Attachment added: "ovrvisionprosdk_ubuntu_x86_64.zip"

#### 2016-05-08, 16:48:13 - Adam Rankin
CommentContent: changed from "For other operating systems, source is available at:
https://github.com/Wizapply/OvrvisionPro" to null

#### 2016-05-08, 16:48:48 - Adam Rankin
description: changed from "SDK available at
https://ww..." to "Device homepage
http://ovrv..."

#### 2016-05-08, 16:49:40 - Adam Rankin
description: changed from "Device homepage
http://ovrv..." to "Device homepage
http://ovrv..."

#### 2016-05-08, 18:10:10 - Andras Lasso
Looks great! Could you please upload the SDK version that you used to PLTools?

#### 2016-05-08, 18:10:14 - Andras Lasso
Does it provide depth map or surface meshes in real-time?

#### 2016-05-08, 23:55:58 - Adam Rankin
I am currently CMake-ifiying the SDK at 
https://github.com/PLUSToolkit/OvrvisionPro

Once that is done, I will reassess.

#### 2016-05-10, 15:26:43 - Adam Rankin
Dependent libraries have been updated to use proper CMake structure. Tested only on Windows10/VS2012 so far.

See 
https://github.com/PLUSToolkit/aruco

Using OpenCV 3.1.0 from 
https://github.com/Itseez/opencv/tree/3.1.0

#### 2016-05-11, 22:52:21 - Adam Rankin
re #1080 WIP: Adding OvrvisionPro option and external project

PlusLib option still required, device class still required and significant testing
Commit: r:4625|plus:4625

#### 2016-05-12, 02:23:41 - Adam Rankin
re #1080 correcting cmake for aruco external project
Commit: r:4626|plus:4626

#### 2016-05-12, 19:13:21 - Adam Rankin
re #1080 adding field data source and infrastructure allowing sending of only field data

Changing GetTrackedFrame to request a PlusTrackedFrame reference instead of pointer
Commit: r:4627|plus:4627

#### 2016-05-15, 04:46:48 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-05-21, 21:18:01 - Adam Rankin
My opinion would be to reject support for this device. I downloaded their Windows SDK and ran the provided app. It was unable to find the device. It could have been a driver issue, but I'm not sure. This was on Windows 10 and they only support up to 8.1.

The camera worked under linux using v4l2.

I would recommend support for two webcams managed by OpenCV.

#### 2016-05-21, 21:18:01 - Adam Rankin
status: changed from "Accepted" to "Invalid"

#### 2016-09-12, 13:18:42 - Adam Rankin
Re-opening. A student was able to show partial success on Windows 10.

#### 2016-09-12, 13:18:42 - Adam Rankin
status: changed from "Invalid" to "Accepted"

#### 2016-09-12, 13:19:35 - Adam Rankin
re #1080 Re-implementing OvrvisionPro SDK repository with a wrapper instead of a re-write

WIP: Using this SDK to develop a callback/poll based device
Commit: r:4853|plus:4853

#### 2016-09-12, 13:46:59 - Adam Rankin
re #1080 Adding basic doxygen page for Ovrvision device
Commit: r:4854|plus:4854

#### 2016-09-12, 14:01:54 - Adam Rankin
re #1080 WIP: OvrvisionPro

Adding configuration elements to define stereo data sources by name
Commit: r:4855|plus:4855

#### 2016-09-12, 17:40:30 - Adam Rankin
re #1080 Further developments to the OvrvisionPro device. Device implementation at alpha stage complete, when Open function is called, windows USB disconnect sound is made and device does not produce any frames. Open function returns with no errors.
Commit: r:4856|plus:4856

#### 2016-09-12, 18:51:43 - Adam Rankin
milestone_id: changed from "Plus-2.3.0" to "Plus-2.5.0"

#### 2016-09-12, 18:52:46 - Adam Rankin
Flashed device firmware with firmware provided by SDK. Even though their is only one version (v1) this seems to have improved performance considerably. Device now stays connected after open, USB disconnect sound no longer fires, and overall appears to be behaving normally.

Continuing development.

#### 2016-09-12, 20:35:16 - Adam Rankin
re #1080 Adding doxygen details regarding configuration of the OvrvisionPro device

Converting from callback mechanism to polling mechanism for image capture

Adding configuration options for device in accordance with SDK usage (CameraSync, ProcessingMode)

WIP: Converting from BGRA to RGB after capture, not working correctly.
Commit: r:4857|plus:4857

#### 2016-09-13, 01:10:28 - Adam Rankin
re #1080 DirectShow filter ID is unnecessary as the device is referred to by vendor and device ID. Variable can be added back if more than one OvrvisionPro are plugged into the same machine during capture.

Correcting bug in image copy loop.

SDK does not return an error if the requested capture format is not available. No workaround except for patching and submitting a pull request to the SDK itself.
Commit: r:4858|plus:4858

#### 2016-09-13, 13:45:16 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-11-09, 19:37:02 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-11-28, 18:28:26 - Isabella Morgan
assigned_to_id: changed from "rankin" to "isabellamorgan"

#### 2016-11-28, 18:28:26 - Isabella Morgan
status: changed from "Fixed" to "Accepted"

#### 2016-11-28, 18:32:32 - Isabella Morgan
re #1080 Updating PLUS for use with VTK 7.1 and fixing bugs in OvrvisionPro device.

Adding Vendor and Exposure tag.
Commit: r:4951|plus:4951

#### 2016-11-28, 18:40:50 - Adam Rankin
assigned_to_id: changed from "isabellamorgan" to "rankin"

#### 2016-11-28, 18:40:50 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-11-29, 14:14:25 - Andras Lasso
Update to VTK 7.1 caused a lot of build errors. In VTK type of modified time has changed, it is now vtkMTimeType. Please search for all *MTime instances in Plus source code and use vtkMTimeType instead of unsigned long everywhere (also in variables where we store modified time). You could also add the vtkMTimeType typedef in PlusConfigure.h.in for backward compatibility with VTK7.0 and earlier.

#### 2016-11-29, 14:14:25 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2016-11-29, 14:22:06 - Andras Lasso
vtkPlusHapticsDevice.h 
=> vtkGetMacro(LastUpdateTime,double);
=> unsigned long LastUpdateTime;

vtkPlusToolAxesActor.cxx 
=> unsigned long mTime = this->Superclass::GetMTime();
=> unsigned long mTime = this->GetMTime();

vtkPlusVolumeReconstructor.h 
=> unsigned long ReconstructedVolumeUpdatedTime;



#### 2016-11-29, 14:26:20 - Andras Lasso
Probably the build errors are due to missing typedef for VTK 7.0 and earlier. I don't think we need to provide backward VTK compatibility in the trunk at all cost, but it's so simple to add this typedef that it is worth doing it.

From VTKv7\\Common\\Core\\vtkType.h:

Provide this define to facilitate apps that need to support older
versions that do not have vtkMTimeType

#ifndef VTK_HAS_MTIME_TYPE
#if VTK_SIZEOF_LONG == 8
typedef unsigned long vtkMTimeType;
#else
typedef vtkTypeUInt64 vtkMTimeType;
#endif
#endif


#### 2016-11-29, 15:50:58 - Adam Rankin
On it.

#### 2016-11-29, 19:03:55 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-02-20, 14:53:33 - Adam Rankin
re #1080 Implementing OpenCL manipulation of images. Images are only on the CPU for capture, and passing to Plus buffer.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6b3071f36f2ba09d75f7e93030d78069d1919adc|plus:6b3071f36f


## #1081 File path of PixelDataFile for a meta image sequence data (*.mhd)
Hi all, 

When we are saving a meta Image sequence (*.mhd) with the class of vtkPlusMetaImageSequenceIO, the class set the file path of PixelDataFile as an absolute path.

But, this feature create an error when the saved file was tried to open on Linux or Mac OSX machine. 
To support compatibility of a saved *.mhd file on Linux or Mac OSX machine, I think, we need to use only the file name of pixFileName for PixelDataFile (relative path). 

[1] https://www.assembla.com/spaces/plus/subversion/source/HEAD/trunk/PlusLib/src/PlusCommon/IO/vtkPlusMetaImageSequenceIO.cxx#ln1355

#### 2016-05-13, 18:22:13 - Hyun Jae Kang
re #1081: Change the file name of PixelDataFile 

-  Change the file name of PixelDataFile within the function of vtkPlusMetaImageSequenceIO::SetFileName() to save a *.mhd
- Use only the file name of pixFileName for PixelDataFile 
- To support compatibility of a saved *.mhd file on Linux or Mac OSX machine.
  * A saved meta file (*.mhd) with the previous code could not open on Linux and Mac OSX machine.
Commit: r:4629|plus:4629

#### 2016-05-13, 18:26:09 - Adam Rankin
Any changes to meta sequence IO should also be applied to nrrd IO.

That being said, we had chosen absolute file paths on purpose.

Why don't the absolute paths work on linux/osx?

#### 2016-05-13, 18:30:16 - Adam Rankin
Apologies, I misunderstood. I thought this was for the header filename.

I think this fix should be fine!

#### 2016-05-13, 18:34:25 - Adam Rankin
Ah... I know why.

Because the header and data file will be written to two different locations if an absolute path if provided in this->FileName.

The proper fix is to improve the close logic to make sure everything gets written to the correct location on disk.

#### 2016-05-13, 18:35:14 - Adam Rankin
(If the file is of type .mhd)

#### 2016-05-13, 18:40:34 - Hyun Jae Kang
Thank you for your comments  and review.

I would like to share my problem.

Here is the header file of my data (USVolumeData.mhd)

---

ObjectType = Image
NDims = 2
AnatomicalOrientation = RAI
BinaryData = True
BinaryDataByteOrderMSB = False
CenterOfRotation = 0 0
CompressedData = False
DimSize = 700 640
ElementNumberOfChannels = 1
ElementSpacing = 1 1
ElementType = MET_UCHAR
Offset = 0 0
TransformMatrix = 1 0 0 1
UltrasoundImageOrientation = MFA
UltrasoundImageType = BRIGHTNESS
Seq_Frame0000_Timestamp = 15.49799999990501
.....
ElementDataFile = C:/Data/USVolumeData/USVolumeData.raw
------------------

In this case, we cannot access the ElementDataFile with the absolute file path on Linux and Mac OSX. 

To open my data, I change the file path of ElementDataFile to USVolumeData.raw.

This is why I made this patch.




#### 2016-05-13, 18:43:16 - Adam Rankin
Yes I understand the problem. Simply changing the PixelDataFile to relative will break the writing of .mhd to the same folder location if this->FileName is given an absolute path.

if:
this->FileName is /home/arankin/dev/output/somefile.mhd
then the pixel data file will be written to:
home/arankin/dev/PlusLib-bin/bin/Output/somefile.raw

If you change the data file to be relative, you will need to make the final file closure logic more advanced.

#### 2016-05-13, 20:05:33 - Hyun Jae Kang
Thank you for your comment.

After the patch, I tested the saving function on Window machine.

A raw file was located with a *.mhd file at a same location.

As like:

C:/Data/USVolumeData/USVolumeData.mhd
C:/Data/USVolumeData/USVolumeData.raw

#### 2016-05-13, 21:44:23 - Adam Rankin
OK, great!

#### 2016-06-14, 16:04:34 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-06-14, 16:09:33 - Adam Rankin
status: changed from "New" to "Fixed"


## #1082 SendValidTransformsOnly broken
See https://www.assembla.com/spaces/plus/messages/5587933#comment_5588183

#### 2016-05-27, 18:19:26 - Adam Rankin
Confirmed reproducing of behavior. Investigating and fixing.

#### 2016-05-27, 18:35:40 - Adam Rankin
re #1082 moving plusserver and plusserverremotecontrol apps to parent directory and building regardless of BUILD_TESTING setting

tests are still created only if BUILD_TESTING is selected
Commit: r:4635|plus:4635

#### 2016-05-27, 18:48:00 - Adam Rankin
Identified the issue. Some jerkwad at revision 4538 added an error on fail when it should fail gracefully. Fixing and testing.

#### 2016-05-27, 18:50:15 - Adam Rankin
test #1082 Reverting error messages if a transform is reported as invalid. The identity is sent instead.
Commit: r:4636|plus:4636

#### 2016-05-27, 18:50:15 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-05-27, 23:01:43 - Andras Lasso
Thank you Adam for working on this!

#### 2016-05-30, 14:45:59 - Adam Rankin
I confirmed fixed behavior with NDI Aurora.

#### 2016-05-30, 14:45:59 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1083 Add support for Intel RealSense cameras
Implement tracking and sending of surface and optical image in real-time.

#### 2016-05-27, 20:25:46 - Andras Lasso
re #1083: Add Intel RealSense camera support (WIP)
Commit: r:4638|plus:4638

#### 2016-05-27, 20:25:46 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-05-27, 20:26:19 - Andras Lasso
re #1083: Add Intel RealSense camera support (WIP)
Commit: r:4639|plus:4639

#### 2016-05-27, 20:26:31 - Andras Lasso
TODO: Add user manual documentation page

#### 2016-05-28, 00:51:13 - Andras Lasso
re #1083: Fixed build error caused by autocorrect

micron was auto-converted to the greek letter
Commit: r:4640|plus:4640

#### 2016-06-01, 16:42:57 - Andras Lasso
re #1083:Tracking transformation added, slicer tested
Commit: r:4644|plus:4644

#### 2016-06-01, 16:46:41 - Adam Rankin
Completely curious, does the SDK allow for image capture?

#### 2016-06-01, 17:23:01 - Andras Lasso
Yes, it's great, it provides real-time HD optical image stream and depth map. Its SDK has many useful features, including built-in 6-DOF object tracking, which allows us to use the camera as a tool tracker. Accuracy seems to be about the same as MicronTracker, just in a smaller field of view (about 1/4). It's very small, light, just needs a USB port, and costs $130.

#### 2016-06-01, 18:22:40 - Andras Lasso
re #1083: cleaned up code
Commit: r:4645|plus:4645

#### 2016-06-01, 20:13:06 - Andras Lasso
re #1083
Commit: r:4646|plus:4646

#### 2016-06-01, 20:15:17 - Andras Lasso
re #1083
Commit: r:4647|plus:4647

#### 2016-06-02, 15:50:58 - Andras Lasso
re #1083
Commit: r:4648|plus:4648

#### 2016-06-14, 16:04:30 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-06-15, 19:51:11 - Andras Lasso
re #1083: Changed to 2D tracking Option
Commit: r:4673|plus:4673

#### 2016-06-30, 14:52:52 - Adam Rankin
Was the 3d tracking insufficiently accurate?

#### 2016-06-30, 14:53:19 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-07-05, 17:40:21 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-07-27, 15:38:23 - Andras Lasso
re #1083: Made switching between 2d/3d tracking method configurable in config file

Also added user manual page for realsense tracker
Commit: r:4778|plus:4778

#### 2016-07-27, 15:38:45 - Andras Lasso
re #1083: Added user manual page for realsense tracker
Commit: r:4779|plus:4779

#### 2016-07-27, 19:45:06 - Andras Lasso
re #1083: Added example config file and markers for IntelRealSense device
Commit: r:4780|plus:4780


## #1084 Image header update fails
|ERROR|289.505000|SERVER> Cannot update line in image header (the new string 'DimSize = 820 616 140' is longer than the current string 'DimSize = 820 616 ')| in .\\..\\..\\PlusLib\\src\\PlusCommon\\IO\\vtkPlusMetaImageSequenceIO.cxx(1249)

#### 2016-05-31, 19:29:03 - Adam Rankin
test #1084 padding dimsize output even if it isn't time-series data (it may be in the future)
Commit: r:4643|plus:4643

#### 2016-05-31, 19:29:03 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-06-14, 16:10:59 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1085 Enable plus synchronization with external system time based devices by exporting system start time
Currently the system start time is not exported, so the coordination between timestamped frames and external devices cannot be determined.

#### 2016-06-13, 19:28:26 - Adam Rankin
fixed #1085 export system start time when timer is created
Commit: r:4672|plus:4672

#### 2016-06-13, 19:28:26 - Adam Rankin
status: changed from "New" to "Fixed"


## #1086 Polaris tracker doesn't work with nightly plus
The attached config file runs on the latest stable release but not on version 4672. In the attached plus log file only the last error message was generated using the config file.

#### 2016-06-14, 15:12:47 - Grace Underwood
file:bZ3XWwmKir5PhcacwqjQYw


#### 2016-06-14, 15:12:47 - Grace Underwood
Attachment added: "PlusDeviceSet_Server_TelemedVideoCapture.xml"

#### 2016-06-14, 15:12:47 - Grace Underwood
file:bZ3ZqimKir5PhcacwqjQYw


#### 2016-06-14, 15:12:47 - Grace Underwood
Attachment added: "061416_105024_PlusLog.txt"

#### 2016-06-14, 15:13:27 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-06-14, 15:13:31 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2016-06-14, 15:13:33 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-06-14, 15:14:51 - Adam Rankin
@lassoan Is telemed built in the nightly package? If not, shall we add it?

#### 2016-06-14, 15:17:26 - Adam Rankin
This error is suspect:

Device->host communication timeout061416_110428.929|ERROR|844.093000|SERVER> Device->host communication timeout| in .\\..\\..\\PlusLib\\src\\PlusDataCollection\\PolarisTracking\\vtkPlusNDITracker.cxx(250)

Before I dig into code, could you try some of the basics? Power off/power on NDI tracker. Unplug USB/serial and plug back in, restart computer. I know it seems silly but I've had connection issues in the past that were resolved with the all-glorious reboot.

#### 2016-06-14, 15:31:32 - Adam Rankin
status: changed from "New" to "Invalid"


## #1087 Enable build in all Visual Studio versions
After NAMIC Summer Project week, it was clear that VS2015 alongside new versions of Qt provide a wealth of nice features.

This ticket is to keep track of progress towards enabling Qt 5.7.0 build on VS2015.

Side note, qt 5.7.0 + vs2013 currently builds.

VTK5 requires qt4, and will only be supported up to VS2013
VTK6 works with either qt4 or qt5, and will be supported up to VS2013
VS2015 requires VTK7

#### 2016-06-27, 18:08:47 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-06-27, 18:09:06 - Adam Rankin
summary: changed from "Enable build in VS2015" to "Enable build in all Visual Studio versions"

#### 2016-06-27, 18:10:16 - Adam Rankin
description: changed from "After NAMIC Summer Project ..." to "After NAMIC Summer Project ..."

#### 2016-06-27, 18:19:34 - Adam Rankin
re #1087 WIP Adding VTK7 support to enable VS2015 build
Commit: r:4681|plus:4681

#### 2016-06-27, 22:02:24 - Adam Rankin
re #1087 WIP fixing up gzip code for NRRD sequences

fixing check for VTK version
Commit: r:4682|plus:4682

#### 2016-06-27, 22:23:06 - Adam Rankin
re #1087 removing duplicate default on for version, defaulting to 6 for now
Commit: r:4683|plus:4683

#### 2016-06-28, 04:37:54 - Adam Rankin
re #1087 fixing double close crash when reading nrrd files
Commit: r:4684|plus:4684

#### 2016-06-28, 14:47:21 - Adam Rankin
re #1087 Build working on all visual studio platforms

improved nrrd class to use core zlib functions instead of custom override, now works for all vtk versions

updating install script to properly package qt5 related dlls
Commit: r:4685|plus:4685

#### 2016-06-28, 14:49:06 - Adam Rankin
re #1087 improving qt detection sequence to try qt5 first

removing plustoolkit vit fork as slicer has fixes we need
Commit: r:4686|plus:4686

#### 2016-06-28, 15:04:30 - Adam Rankin
re #1087 attempting more generic include for _dup() location
Commit: r:4687|plus:4687

#### 2016-06-28, 15:15:41 - Adam Rankin
re #1087 fixing up type warning to enable build on Mac
Commit: r:4688|plus:4688

#### 2016-06-28, 20:18:31 - Adam Rankin
re #1087 adding MP flags to VTK build
Commit: r:4690|plus:4690

#### 2016-06-30, 14:32:50 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-06-30, 14:50:26 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-06-30, 19:56:15 - Adam Rankin
re #1087 restoring VTK5 protection for nrrd reading/writing
Commit: r:4697|plus:4697


## #1088 Reports of volume reconstruction not behaving properly
See https://app.assembla.com/spaces/plus/messages/5594973#comment_5613403

I was also unable to reconstruct a volume properly, will investigate on Sunday.

#### 2016-07-03, 19:53:59 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-07-03, 20:23:12 - Adam Rankin
volume reconstruction from fCal and offline reconstruction from capture from Slicer are all working as expected.

scout scan then live reconstruction did not yield any results and appears broken. will investigate with hardware tomorrow

#### 2016-07-03, 21:01:35 - reiker
From my testing both, reconstruction from fCal as well as offline reconstruction from capture from Slicer do not work properly.
Only reconstruction I have not tested was scout scan with live reconstruction.

#### 2016-07-03, 21:01:35 - reiker
CommentContent: changed from "From my testing both, reconstruction from fCal as well as offline reconstruction from capture from Slicer do not work properbly.
Only reconstruction I have not tested was scout scan with live reconstruction." to "From my testing both, reconstruction from fCal as well as offline reconstruction from capture from Slicer do not work properly.
Only reconstruction I have not tested was scout scan with live reconstruction."

#### 2016-07-03, 21:08:57 - Adam Rankin
What is sending you your data? Are you feeding PlusServer into PlusServer?

#### 2016-07-03, 21:09:15 - Adam Rankin
file:bL0cSoqwir5QKQdmr6QqzO


#### 2016-07-03, 21:09:15 - Adam Rankin
Attachment added: "PlusDeviceSet_Server_IGTLink.xml"

#### 2016-07-03, 21:10:59 - Adam Rankin
Also, in your config file, you have Image to Tracker for your volume reconstruction, but you have ReferenceToTracker defined in your PlusOpenIGTLinkServer tag. Do you have a reference sensor being used?

#### 2016-07-03, 21:11:51 - Adam Rankin
Do you have a recording of the TRACKEDFRAME source that I can replay?

#### 2016-07-03, 21:58:24 - reiker
Yep, I'm using Plus Server on Machine 1 (capturing US and Tracker data) to feed Plus Server on Machine 2

About the configuration ImageToTracker and ReferenceToTracker: first I used a Reference sensor. As reconstruction did not work, I've tried to use trackerdata without a reference sensor, but it did not help to get reconstruction work properly.

#### 2016-07-03, 22:04:16 - Andras Lasso
@rankin There is no need for hardware for testing: you can use PlusDeviceSet_Server_Sim_NwirePhantom.xml config file to test all volume reconstruction features.

#### 2016-07-03, 22:10:05 - reiker
the requested files can be downloaded here:
https://onedrive.live.com/redir?resid=4648F4C014726CE6!310&authkey=!AMW7GJmZvv2ukfU&ithint=folder%2c

phantom.mha is the source, phantom_reconstructed.mha is the the reconstructed volume
capture.avi is a separate recorded US stream.

hope this helps.

#### 2016-07-03, 23:50:11 - Adam Rankin
Using the config file suggested by Andras I am able to reconstruct a volume offline through Slicer. It has a distinct U-channel shape.

#### 2016-07-03, 23:51:27 - Adam Rankin
Live reconstruction appears to be working as well, and has a snake-like appearance.

#### 2016-07-04, 06:07:41 - reiker
I used offline reconstruction through Slicer and the volume has a snake-like/sine-wave like appearance

Is the config suggested by Andras the one you attached yesterday?

#### 2016-07-04, 14:10:11 - Adam Rankin
No sorry, that is the one original attached to your message. The one Andras suggested is in the repository under PlusLibData/ConfigFiles

#### 2016-07-04, 19:38:07 - Adam Rankin
Based on my experiments, live volume reconstruction appears to be working as intended. If you can provide a concrete set of hardware, configuration file and directions I might be able to reproduce your problem.

#### 2016-07-04, 22:39:48 - emailutsav205789
Here's some example data:
https://www.dropbox.com/sh/ca32nt64nsja784/AACmA0Th5xk4vooGScLDjSwSa?dl=0

Three commands, three different outputs when loaded into slicer. (Each output is in a different location as far as I can tell)

VolumeReconstructor --source-seq-file=FixedRecording-2016-06-29-732.mha --output-frame-file=Issue.mha --config-file=Reconstructissue.xml --image-to-reference-transform=ImageToReference

VolumeReconstructor.exe --source-seq-file=FixedRecording-2016-06-29-732.mha --output-volume-accumulation-file=Issue.mha --config-file=Reconstructissue.xml --image-to-reference-transform=ImageToReference

CreateSliceModels.exe --source-seq-file=FixedRecording-2016-06-29-732.mha --config-file=Reconstructissue.xml --image-to-reference-transform=ImageToReference --output-model-file=out.vtk

#### 2016-07-04, 23:05:43 - emailutsav205789
I have more info:

The output of CreateSliceModels is where it should be
The recon-volume of the Volume Reconstructor needs a transform to rotate it 180 degrees at the end
The individual output frames of the volume reconstructor need to be rotated 180 degrees to get its origin in the right spot, and the 3x3 orientation looks transposed.

#### 2016-07-05, 00:44:15 - Adam Rankin
Thank you for the info! @lassoan does this indicate anything to you?

#### 2016-07-05, 05:39:07 - Andras Lasso
Difference between image and model is due to LPS/RAS coordinate system usage. ITK assumes LPS coordinate system, so when images are imported into Slicer's RAS scene, the volume is transformed by the matrix diag(-1,-1,1,1). Model files are imported without changes.

If you send the reconstructed volume through OpenIGTLink then the volume does not get transformed, so you only see this RAS/LPS difference when you load the volume from file. In that case you need to apply the diagonal transformation matrix:

diag(-1,-1,1,1) = [ -1 0 0 0; 0 -1 0 0; 0 0 1 0; 0 0 0 1]

#### 2016-07-05, 05:51:50 - Andras Lasso
I'm on vacation this week but I can have a look at your recorded data next week and if there is nothing obvious then we can set up a remote troubleshooting session with desktop sharing and webcam.

#### 2016-07-12, 15:30:31 - Adam Rankin
@lassoan would you have time to investigate this?

#### 2016-07-18, 17:37:38 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2016-07-18, 17:37:40 - Adam Rankin
priority: changed from "High (2)" to "Normal (3)"

#### 2016-07-18, 17:37:49 - Adam Rankin
status: changed from "Accepted" to "New"

#### 2016-08-08, 16:51:17 - reiker
Hi Adam!

Are there any news concerning this bug?

I was on vacation the last weeks.

#### 2016-08-08, 16:54:30 - Andras Lasso
We've tested volume reconstruction with Plus using both real and simulated hardware and everything seems to work well. We couldn't reproduce the problems that you have. We need to set up a skype session with screen sharing (and webcam, if you have physical hardware connected) to see what may be wrong. Contact me in email for scheduling the call.

#### 2016-08-08, 17:30:13 - Adam Rankin
I am unable to reproduce the bug, maybe Andras can help you sort out your issue.

#### 2016-08-09, 16:13:14 - reiker
Hi Adam!

Didn't you say that you where also unable to reconstruct a volume properly? I'm a bit confused now...

But I will write Andras an email.

#### 2016-08-15, 17:47:06 - Adam Rankin
I just re-ran a test setup and volume reconstruction seems to be working as expected. Please reach out to Andras to see if he can determine what is happening with your experiments.

#### 2016-08-15, 17:47:06 - Adam Rankin
status: changed from "New" to "Invalid"


## #1089 Bug fixes towards 2.3.0 release
null

#### 2016-07-01, 13:54:55 - Adam Rankin
re #1089 removing defunct include directories
Commit: r:4702|plus:4702

#### 2016-07-01, 14:02:17 - Adam Rankin
re #1089 updating to new openigtlink API calls
Commit: r:4703|plus:4703

#### 2016-07-01, 16:18:13 - Adam Rankin
re #1089 correcting NDI_CERTUS related variable errors
Commit: r:4705|plus:4705

#### 2016-07-01, 16:36:37 - Adam Rankin
re #1089 CMake variable name typos and updating detection for new/old variable transition
Commit: r:4706|plus:4706

#### 2016-07-03, 02:17:25 - Adam Rankin
re #1089 proper detection of NDIOAPI
Commit: r:4707|plus:4707

#### 2016-07-03, 04:01:18 - Adam Rankin
re #1089 enabling vtk5 build
Commit: r:4708|plus:4708

#### 2016-07-03, 14:01:19 - Adam Rankin
re #1089 preventing NRRD tests on old vtk versions that don't support NRRD
Commit: r:4709|plus:4709

#### 2016-07-03, 17:57:45 - Adam Rankin
re #1089 correctly exporting include dir for porta depending on ultrasonix SDK version

enabling mp build for datacollection project
Commit: r:4712|plus:4712

#### 2016-07-03, 18:20:08 - Adam Rankin
re #1089 updating sample NRRD files to match new output format (padded sizes and kinds lines)
Commit: r:4713|plus:4713

#### 2016-07-03, 19:53:31 - Adam Rankin
fixed #1090 re #1089 nrrd generation now correct for slicer

igtl client can now receive and parse RTSTrackingDataMessage responses

nrrds test images updated to match new output format

itk updated to 4.10
Commit: r:4714|plus:4714

#### 2016-07-04, 14:15:00 - Andras Lasso
re #1089: Fixed typos in CMake configuration messages
Commit: r:4715|plus:4715

#### 2016-07-05, 15:08:01 - Adam Rankin
re #1089 updating OpenIGTLink repo version
Commit: r:4716|plus:4716

#### 2016-07-05, 15:09:47 - Adam Rankin
re #1089 updating OpenIGTLink repo version
Commit: r:4717|plus:4717

#### 2016-07-06, 21:18:12 - Adam Rankin
re #1089 correcting clone of tracked frame message
Commit: r:4719|plus:4719

#### 2016-07-10, 12:37:09 - Adam Rankin
re #1089: Fixed build error (rc.exe cannot be spawned due to very long arguments list)
Commit: r:4720|plus:4720

#### 2016-07-11, 17:41:21 - Adam Rankin
re #1089 updating openigtlink to latest
Commit: r:4721|plus:4721

#### 2016-07-11, 18:15:52 - Adam Rankin
re #1089 updating igtlink to latest
Commit: r:4722|plus:4722

#### 2016-07-14, 17:30:44 - Andras Lasso
re #1089: Improved configuration selector layout for Qt5 and HiDPI displays
Commit: r:4732|plus:4732

#### 2016-07-14, 18:34:24 - Adam Rankin
re #1089 removing references to ovrvisionpro
Commit: r:4733|plus:4733

#### 2016-07-18, 12:35:18 - Andras Lasso
re #1089: Updated baseline to account for a minor spatial calibration result difference

Probably due to ITK update, OPEI test failed due to a small difference in rotation component of the ImageToProbe matrix:
TransformImageToProbe rotation difference (compared to baseline) is higher than expected: 1.0102e-005 degree

Updated baseline to avoid reporting this negligible difference as an error.
Commit: r:4738|plus:4738

#### 2016-07-18, 12:35:37 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-07-18, 17:30:40 - Adam Rankin
re #1089 improving detection of tesseract environment variable under unix/apple
Commit: r:4742|plus:4742

#### 2016-07-18, 17:37:55 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2016-07-19, 20:17:57 - Adam Rankin
re #1089 reducing build warnings to manageable levels on Windows
Commit: r:4750|plus:4750

#### 2016-07-20, 00:47:49 - Adam Rankin
re #1089: Fixed ultrasound simulator error

numberOfIterationsToReachMinimumBeamIntensity can be negative, we cannot use unsigned int to store it
Commit: r:4752|plus:4752

#### 2016-07-20, 00:57:33 - Andras Lasso
re #1089: Added DISPLAY=:0 environment variable setting on Linux/Mac tests to prevent X server related test errors (vtkXOpenGLRenderWindow: bad X server connection)

Commit: r:4753|plus:4753

#### 2016-07-20, 00:58:03 - Andras Lasso
re #1089: Added DISPLAY=:0 environment variable setting on Linux/Mac tests to prevent X server related test errors (vtkXOpenGLRenderWindow: bad X server connection)

Commit: r:4754|plus:4754

#### 2016-07-20, 11:35:45 - Andras Lasso
re #1089: Fixed build warning (extra tokens after #else)
Commit: r:4755|plus:4755

#### 2016-07-20, 11:57:39 - Andras Lasso
re #1089: Fixed build warning in ultrasound simulator
Commit: r:4756|plus:4756

#### 2016-07-20, 12:01:47 - Andras Lasso
re #1089: Fixed build

warning: narrowing conversion of ‘((*(frameSize + 8u)) + 4294967295u)’ from ‘unsigned int’ to ‘int’ inside { } [-Wnarrowing] src/PlusDataCollection/vtkPlusDataSource.cxx line 618 
Commit: r:4757|plus:4757

#### 2016-07-20, 12:14:35 - Andras Lasso
re #1089: Fixed build error
Commit: r:4758|plus:4758

#### 2016-07-20, 12:33:36 - Andras Lasso
re #1089: Fixed build warnings


/.../PlusLib/src/PlusCommon/vtkPlusTrackedFrameList.cxx:66:24: warning: comparison of unsigned expression &lt; 0 is always false [-Wtautological-compare]

/.../PlusLib/src/PlusOpenIGTLink/vtkPlusIgtlMessageFactory.cxx:226:178: warning: expression result unused [-Wunused-value]

Commit: r:4759|plus:4759

#### 2016-07-20, 13:09:55 - Andras Lasso
re #1089: Removed forced continuous build (only build when code is changed)
Commit: r:4760|plus:4760

#### 2016-07-21, 14:39:43 - Adam Rankin
re #1089 removing build warnings from vtkPlusMicronTracker and vtkPlusStealthLinkTracker

adding check in data source to prevent invalid values from being cast from unsigned to signed int, removing warning in vtkPlusDataSource
Commit: r:4762|plus:4762

#### 2016-07-21, 16:40:21 - Adam Rankin
re #1089 Adding headers to Xcode projects

Reducing warnings
Commit: r:4763|plus:4763

#### 2016-07-21, 16:55:26 - Adam Rankin
re #1089 fixing build error due to file not built on mac
Commit: r:4764|plus:4764

#### 2016-07-21, 16:57:10 - Adam Rankin
re #1089 reducing build warnings on mac
Commit: r:4765|plus:4765

#### 2016-07-21, 16:58:28 - Adam Rankin
re #1089 fixing build error, missed files in commit
Commit: r:4766|plus:4766

#### 2016-07-21, 17:09:45 - Adam Rankin
re #1089 reducing warnings on mac build
Commit: r:4767|plus:4767

#### 2016-07-21, 17:15:04 - Adam Rankin
re #1089 reducing warnings in mac build
Commit: r:4768|plus:4768

#### 2016-07-21, 18:26:54 - Adam Rankin
re #1089 reducing warning count on mac build
Commit: r:4769|plus:4769

#### 2016-07-21, 18:33:29 - Adam Rankin
re #1089 missing files
Commit: r:4770|plus:4770

#### 2016-07-21, 18:35:32 - Adam Rankin
re #1089 build fix, restoring PlusCommon::ToString for VS2008
Commit: r:4771|plus:4771

#### 2016-07-21, 19:10:29 - Adam Rankin
re #1089 reducing warnings in mac build
Commit: r:4772|plus:4772

#### 2016-07-21, 20:47:12 - Andras Lasso
We can remove VS2008 support after we released the new stable version.

#### 2016-07-21, 20:47:59 - Adam Rankin
I was hoping you'd say that.

#### 2016-07-22, 19:04:10 - Adam Rankin
re #1089 fixing build in vs2010 by not using std::to_string
Commit: r:4773|plus:4773

#### 2016-07-22, 19:23:06 - Adam Rankin
re #1089 missing file from commit, build fix for vs2010
Commit: r:4774|plus:4774

#### 2016-07-25, 14:57:11 - Adam Rankin
re #1089 updating last remnants of NDI name change
Commit: r:4775|plus:4775

#### 2016-07-27, 00:37:23 - Adam Rankin
re #1089 updating to latest openigtlink
Commit: r:4777|plus:4777

#### 2016-08-06, 11:23:18 - Andras Lasso
re #1089: Make data collection setup fail if a device refers to a non-existent input channel
Commit: r:4788|plus:4788

#### 2016-08-06, 12:52:36 - Adam Rankin
re #1089: Fixed VTK5 build error
Commit: r:4791|plus:4791

#### 2016-08-08, 15:30:41 - Adam Rankin
re #1089 Adding NDIOAPI_ROOT_HINT to FindNDIOAPI.cmake script to enable custom location for NDIOAPI installs without setting each field manually
Commit: r:4793|plus:4793

#### 2016-08-15, 15:50:31 - Adam Rankin
re #1089 reducing warning by correcting calculation bug
Commit: r:4800|plus:4800

#### 2016-08-15, 17:10:56 - Andras Lasso
@rankin What do you think about making a stable release from current trunk? The dashboard is clear on Windows and not too bad on Linux/Mac. There are no known blocking @rankin

#### 2016-08-15, 17:14:25 - Adam Rankin
I think it's good, but #1088 makes me nervous. There was a point where I was unable to reconstruct a volume. I will test again.

#### 2016-08-15, 17:43:55 - Andras Lasso
We've tested volume reconstruction several times, both with simulation mode and with real hardware and worked well. Something must be wrong with that configuration. I'll check that with reiker if he sets up a remote access session.

#### 2016-08-15, 17:48:03 - Adam Rankin
Ok, let's do it!

#### 2016-08-15, 17:48:09 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2016-08-17, 02:58:29 - Adam Rankin
re #1089 reverting changes to FindWindowsSDK.cmake
Commit: r:4811|plus:4811

#### 2016-08-23, 10:23:12 - Andras Lasso
re #1089: Remoces pause (infinite wait) from package generation script to not stall autmatic nightly build process in case of a packaging failure
Commit: r:4822|plus:4822

#### 2016-09-03, 14:34:19 - Adam Rankin
re #1089 correcting buildname error
Commit: r:4846|plus:4846

#### 2016-09-16, 17:29:48 - Andras Lasso
re #1089: Fixed build error using VS2013 when Thorlabs device is enabled

There was a SAFESEH not supported linker error, probably due to Thorlabs libraries developed using an earlier VS version.
Commit: r:4875|plus:4875

#### 2016-10-06, 12:31:16 - Andras Lasso
re #1089: Updated nrrd baseline images to new Plus minor version.
Commit: r:4893|plus:4893


## #1090 NRRD writing is corrupting around sizes
null

#### 2016-07-03, 14:52:00 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-07-03, 15:01:01 - Adam Rankin
test #1090 missing space before list entry for xd+t files
Commit: r:4710|plus:4710

#### 2016-07-03, 15:01:01 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-07-03, 16:05:08 - Adam Rankin
test #1090 properly padding the kinds field for dynamic field changes
Commit: r:4711|plus:4711

#### 2016-07-03, 19:53:31 - Adam Rankin
fixed #1090 re #1089 nrrd generation now correct for slicer

igtl client can now receive and parse RTSTrackingDataMessage responses

nrrds test images updated to match new output format

itk updated to 4.10
Commit: r:4714|plus:4714

#### 2016-07-03, 19:53:31 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1091 Reading of headers in sequence IO classes is not very robust to files generated on other platforms
It would be ideal if the reading of header lines from .mha and .nrrd was more robust to the different possibilities of newlines that exist.

#### 2016-08-15, 19:19:35 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-26, 20:47:48 - Adam Rankin
Since the updating of tools to newer compilers/runtimes, this issue has been resolved.

#### 2016-08-26, 20:47:48 - Adam Rankin
status: changed from "New" to "Fixed"


## #1092 Current default VTK version does not build with Qt 5.6
In October last year a url:http://www.vtk.org/Bug/view.php?id=15703|fix was applied to VTK to not use Qt5WebKitWidgets. Older versions of VTK (including current default 6.2) fail to build with Qt 6.3 and newer. Can VTK7 be the default?

#### 2016-07-11, 16:01:15 - Adam Rankin
Yes I noticed this. It was fixed in the Slicer forks of vtk 6.2/6.3.

Edit: that's a lie... it was not fixed. Nevermind me...

However, the whole issue is avoided by making 7 the default. I have been using 7 for some time, and it seems stable. The only thing I haven't verified is on older compiler versions, as I have moved up to VS2015.

#### 2016-07-11, 16:01:15 - Adam Rankin
CommentContent: changed from "Yes I noticed this. It was fixed in the Slicer forks of vtk 6.2/6.3.

However, the whole issue is avoided by making 7 the default. I have been using 7 for some time, and it seems stable. The only thing I haven't verified is on older compiler versions, as" to "Yes I noticed this. It was fixed in the Slicer forks of vtk 6.2/6.3.

Edit: that's a lie... it was not fixed. Nevermind me...

However, the whole issue is avoided by making 7 the default. I have been using 7 for some time, and it seems stable. The only"

#### 2016-07-11, 16:02:57 - Adam Rankin
I agree with making 7 default, what do you think @lassoan

#### 2016-07-11, 16:02:57 - Adam Rankin
CommentContent: changed from "I agree with making 7 default, what do you think @lassoan?" to "I agree with making 7 default, what do you think @lassoan"

#### 2016-07-11, 16:48:04 - Dzenan Zukic
VTK7 works well with VS2013. Most of my things are built using VS2013, since Slicer is not yet compilable using VS2015.

#### 2016-07-11, 17:41:42 - Adam Rankin
milestone_id: changed from null to "Plus-2.4.0"

#### 2016-07-12, 21:07:38 - Andras Lasso
Slicer is using VTK7 now, so Plus should move to VTK7, too. I would do it right after releasing a stable Plus version. Added #1095 to track this.

#### 2016-07-12, 21:07:38 - Andras Lasso
CommentContent: changed from "Slicer is using VTK7 now, so Plus should move to VTK7, too. I would do it right after releasing a stable Plus version." to "Slicer is using VTK7 now, so Plus should move to VTK7, too. I would do it right after releasing a stable Plus version. Added #1095 to track this."

#### 2016-08-15, 19:19:39 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-24, 23:57:48 - Adam Rankin
status: changed from "New" to "Fixed"


## #1093 Build fails due to OpenIGTLink misconfiguration
I guess that ${OpenIGTLink_LIBRARY_TARGETS_FILE} ends up being empty. The error message:

~~~~
11>  Performing configure step for 'PlusApp'
11>  CMake Error at C:/Dev/plus/shared2013/Deps/OpenIGTLink-bin/UseOpenIGTLink.cmake:21 (include):
11>    include called with wrong number of arguments.  include() only takes one
11>    file.
11>  Call Stack (most recent call first):
11>    C:/Dev/plus/shared2013/PlusLib-bin/UsePlusLib.cmake:51 (INCLUDE)
11>    CMakeLists.txt:19 (INCLUDE)

~~~~

The only difference from default configuration is usage of VTK7 instead of 6.2. SVN revision 4722.

#### 2016-07-11, 20:28:14 - Dzenan Zukic
file:d-B7Bor6ur5R86acwqjQXA


#### 2016-07-11, 20:28:14 - Dzenan Zukic
Attachment added: "Output-Build.txt"

#### 2016-07-12, 11:06:22 - Andras Lasso
Can you attach this file so that we can have a look?
C:/Dev/plus/shared2013/Deps/OpenIGTLink-bin/UseOpenIGTLink.cmake

#### 2016-07-12, 13:57:14 - Adam Rankin
Hey all,

I recently pushed some fixes to IGTLink, what SHA are you building against?

#### 2016-07-12, 14:08:24 - Adam Rankin
The problem was that the configure-time download/configure/build of google test was looking for OpenIGTLink before its configuration was exported. This was fixed in a recent commit in OpenIGTLink

#### 2016-07-12, 14:15:13 - Dzenan Zukic
file:amZiPusdSr5P3cdmr6bg7m


#### 2016-07-12, 14:15:13 - Dzenan Zukic
Attachment added: "UseOpenIGTLink.cmake"

#### 2016-07-12, 14:17:23 - Dzenan Zukic
Hi @rankin, C:\\Dev\\plus\\PlusBuild\\External_OpenIGTLink.cmake specifies GIT_TAG 2ee0f6ffe466d36d0c6b993051a2d45545b384ac.

#### 2016-07-12, 14:18:02 - Adam Rankin
Great, is that indeed what has been built? Sometimes external dependencies aren't picked up and rebuilt after an update in CMake + VS

#### 2016-07-12, 14:18:20 - Adam Rankin
I am doing a full build right now with VS2013, and shortly with VS2015 to confirm.

#### 2016-07-12, 14:18:45 - Adam Rankin
VS2013 successfully passed the OpenIGTLink build

#### 2016-07-12, 14:53:31 - Adam Rankin
Confirmed clean build successful on VS2013. VS2015 after a reboot.

#### 2016-07-12, 15:17:43 - Adam Rankin
Confirmed clean build successful on VS2012. I think it's all fixed.

#### 2016-07-12, 15:29:47 - Adam Rankin
Confirmed clean build successful on VS2015, closing as fixed.

#### 2016-07-12, 15:29:47 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-07-12, 15:29:47 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-07-12, 15:33:05 - Dzenan Zukic
The errors I get are with a clean build, after trying different options over the previous few days. Perhaps the difference is related to different Qt version? Mine is C:/Libs/Qt/5.6/msvc2013_64/lib/cmake/Qt5. Also, VS2013 Update 5. I will now try a build with VS2015.

#### 2016-07-12, 15:33:05 - Dzenan Zukic
assigned_to_id: changed from "rankin" to null

#### 2016-07-12, 15:33:05 - Dzenan Zukic
status: changed from "Fixed" to "New"

#### 2016-07-12, 15:41:10 - Adam Rankin
Investigating.

#### 2016-07-12, 16:34:24 - Dzenan Zukic
VS2015 gives me the same error:

~~~~
12>  CMake Error at C:/Dev/plus-2015/Deps/OpenIGTLink-bin/UseOpenIGTLink.cmake:21 (include):
12>    include called with wrong number of arguments.  include() only takes one
12>    file.
12>  Call Stack (most recent call first):
12>    C:/Dev/plus-2015/PlusLib-bin/UsePlusLib.cmake:51 (INCLUDE)
12>    CMakeLists.txt:19 (INCLUDE)
12>
12>
12>  -- PlusApp version: 2.3.0
12>  -- Found Subversion: C:/Program Files/TortoiseSVN/bin/svn.exe (found version '1.9.0')
12>  -- Current revision is 4722

~~~~


#### 2016-07-12, 16:39:46 - Adam Rankin
VS2015 with qt4.8.7 vtk6.2 fails badly, redefinition of snprintf. Too old, won't fix.

VS2015 + VTK 6.2 is the issue. Solution is to use VTK7 (testing 6.3 now)

#### 2016-07-12, 16:39:46 - Adam Rankin
CommentContent: changed from "VS2015 with qt4.8.7 vtk6.2 fails badly, redefinition of snprintf. Too old, won't fix." to "VS2015 with qt4.8.7 vtk6.2 fails badly, redefinition of snprintf. Too old, won't fix.

VS2015 + VTK 6.2 is the issue. Solution is to use VTK7 (testing 6.3 now)"

#### 2016-07-12, 16:48:56 - Adam Rankin
Qt >= 5.6 fails with QWebKit issues on any version of VTK < 7

Solution: VTK 6.2 or VTK 6.3 -> Qt < 5.6
VTK 7 -> Qt >= 5.6

#### 2016-07-12, 18:11:44 - Adam Rankin
VS2013, Qt 5.6.1, VTK7 successful build.

#### 2016-07-12, 18:12:08 - Adam Rankin
VS2015, Qt 5.6.1, VTK 7 successful build.

#### 2016-07-12, 19:54:33 - Dzenan Zukic
I don't know what is different with my computer. My OS is Win7 x64. Now I submitted a fresh build to the dashboard:
http://crunch.cs.queensu.ca/CDash/viewBuildError.php?buildid=53499

#### 2016-07-12, 19:56:28 - Adam Rankin
Is your Qt installed or built?

#### 2016-07-12, 20:07:03 - Dzenan Zukic
Installed, I just updated it today (from 5.6.0 to 5.6.1).

#### 2016-07-12, 20:22:56 - Adam Rankin
The only time I've seen those Qt link errors is when the wrong architecture of Qt was sent in

Aka vs2013 qt install when generating Visual Studio 2015

#### 2016-07-12, 20:56:22 - Dzenan Zukic
There are a lot of errors in that case, here is only 44 errors. And if I try building only VTK, here is what I get (boils down to 6 unresolved externals):

~~~~
1>------ Build started: Project: vtkhdf5, Configuration: Release x64 ------
1>  vtkhdf5.vcxproj -> C:\\Dev\\plus-2015\\bin\elease\\vtkhdf5-7.0.dll
2>------ Build started: Project: vtkGUISupportQt, Configuration: Release x64 ------
3>------ Build started: Project: QVTKWidgetPlugin, Configuration: Release x64 ------
2>     Creating library C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkGUISupportQt-7.0.lib and object C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkGUISupportQt-7.0.exp
2>vtkQtConnection.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QByteArray __cdecl QString::toLatin1(void)const & ' (__imp_?toLatin1@QString@@QEGBA?AVQByteArray@@XZ) referenced in function 'public: void __cdecl vtkQtConnection::Execute(class vtkObject *,unsigned long,void *)' (?Execute@vtkQtConnection@@QEAAXPEAVvtkObject@@KPEAX@Z)
2>vtkQtTableModelAdapter.obj : error LNK2001: unresolved external symbol '__declspec(dllimport) public: class QByteArray __cdecl QString::toLatin1(void)const & ' (__imp_?toLatin1@QString@@QEGBA?AVQByteArray@@XZ)
2>QVTKWidget.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QImage __cdecl QImage::mirrored(bool,bool)const & ' (__imp_?mirrored@QImage@@QEGBA?AV1@_N0@Z) referenced in function 'protected: virtual void __cdecl QVTKWidget::paintEvent(class QPaintEvent *)' (?paintEvent@QVTKWidget@@MEAAXPEAVQPaintEvent@@@Z)
2>QVTKWidget.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QImage __cdecl QImage::rgbSwapped(void)const & ' (__imp_?rgbSwapped@QImage@@QEGBA?AV1@XZ) referenced in function 'protected: virtual void __cdecl QVTKWidget::paintEvent(class QPaintEvent *)' (?paintEvent@QVTKWidget@@MEAAXPEAVQPaintEvent@@@Z)
2>QVTKPaintEngine.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QImage && __cdecl QImage::mirrored(bool,bool)&& ' (__imp_?mirrored@QImage@@QEHAA$$QEAV1@_N0@Z) referenced in function 'public: virtual void __cdecl QVTKPaintEngine::drawPixmap(class QRectF const &,class QPixmap const &,class QRectF const &)' (?drawPixmap@QVTKPaintEngine@@UEAAXAEBVQRectF@@AEBVQPixmap@@0@Z)
2>QVTKPaintEngine.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QImage && __cdecl QImage::rgbSwapped(void)&& ' (__imp_?rgbSwapped@QImage@@QEHAA$$QEAV1@XZ) referenced in function 'public: virtual void __cdecl QVTKPaintEngine::drawPixmap(class QRectF const &,class QPixmap const &,class QRectF const &)' (?drawPixmap@QVTKPaintEngine@@UEAAXAEBVQRectF@@AEBVQPixmap@@0@Z)
2>vtkQtTableModelAdapter.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QString __cdecl QString::trimmed(void)&& ' (__imp_?trimmed@QString@@QEHAA?AV1@XZ) referenced in function 'public: virtual class QVariant __cdecl vtkQtTableModelAdapter::data(class QModelIndex const &,int)const ' (?data@vtkQtTableModelAdapter@@UEBA?AVQVariant@@AEBVQModelIndex@@H@Z)
2>vtkQtTreeModelAdapter.obj : error LNK2001: unresolved external symbol '__declspec(dllimport) public: class QString __cdecl QString::trimmed(void)&& ' (__imp_?trimmed@QString@@QEHAA?AV1@XZ)
2>C:\\Dev\\plus-2015\\bin\elease\\vtkGUISupportQt-7.0.dll : fatal error LNK1120: 6 unresolved externals
4>------ Skipped Build: Project: vtkCompileTools, Configuration: Release x64 ------
4>Project not selected to build for this solution configuration 
5>------ Build started: Project: vtkRenderingQt, Configuration: Release x64 ------
6>------ Build started: Project: vtkViewsQt, Configuration: Release x64 ------
3>     Creating library C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/QVTKWidgetPlugin.lib and object C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/QVTKWidgetPlugin.exp
3>Q4VTKWidgetPlugin.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QString __cdecl QString::toLower(void)&& ' (__imp_?toLower@QString@@QEHAA?AV1@XZ) referenced in function 'public: virtual class QString __cdecl QDesignerCustomWidgetInterface::domXml(void)const ' (?domXml@QDesignerCustomWidgetInterface@@UEBA?AVQString@@XZ)
3>C:\\Dev\\plus-2015\\bin\elease\\QVTKWidgetPlugin.dll : fatal error LNK1120: 1 unresolved externals
5>     Creating library C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkRenderingQt-7.0.lib and object C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkRenderingQt-7.0.exp
6>     Creating library C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkViewsQt-7.0.lib and object C:/Dev/plus-2015/Deps/vtk-bin/lib/Release/vtkViewsQt-7.0.exp
5>vtkQImageToImageSource.obj : error LNK2019: unresolved external symbol '__declspec(dllimport) public: class QImage __cdecl QImage::convertToFormat(enum QImage::Format,class QFlags<enum Qt::ImageConversionFlag>)const & ' (__imp_?convertToFormat@QImage@@QEGBA?AV1@W4Format@1@V?$QFlags@W4ImageConversionFlag@Qt@@@@@Z) referenced in function 'protected: virtual int __cdecl vtkQImageToImageSource::RequestData(class vtkInformation *,class vtkInformationVector * *,class vtkInformationVector *)' (?RequestData@vtkQImageToImageSource@@MEAAHPEAVvtkInformation@@PEAPEAVvtkInformationVector@@PEAV3@@Z)
5>C:\\Dev\\plus-2015\\bin\elease\\vtkRenderingQt-7.0.dll : fatal error LNK1120: 1 unresolved externals
6>  vtkViewsQt.vcxproj -> C:\\Dev\\plus-2015\\bin\elease\\vtkViewsQt-7.0.dll
7>------ Skipped Build: Project: INSTALL, Configuration: Release x64 ------
7>Project not selected to build for this solution configuration 
========== Build: 2 succeeded, 3 failed, 114 up-to-date, 2 skipped ==========

~~~~


#### 2016-07-12, 21:05:26 - Andras Lasso
@rankin Could you please update the build instructions with info on VTK and Qt version compatibility?

#### 2016-07-12, 23:13:45 - Adam Rankin
I can test VS2013 and 2015, would anyone else be able to do 2008, 2010, and 2012? Can we drop support for some versions after 2.3?

#### 2016-07-13, 16:37:33 - Adam Rankin
milestone_id: changed from null to "Plus-2.3.0"

#### 2016-07-13, 16:37:40 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-07-13, 16:37:44 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-07-13, 17:08:22 - Adam Rankin
I'm sorry @dzenanz I am unable to replicate the build issues. I've done multiple builds with all the combinations I can think of (going back to 2012) and it all builds for me. Can you investigate the .lib files your project is pointing to using DependencyWalker or dumpbin /HEADERS?

#### 2016-07-15, 18:22:00 - Dzenan Zukic
I tried with Qt 5.5 and (default) VTK 6.2 and there is the 'Qt5WebKitWidgets' error. Qt 5.2 from official distribution is not pre-compiled for VS2013, so I will try that now - it might take me a while.

#### 2016-07-15, 18:22:00 - Dzenan Zukic
assigned_to_id: changed from "rankin" to null

#### 2016-07-15, 18:22:00 - Dzenan Zukic
status: changed from "Accepted" to "New"

#### 2016-07-15, 18:31:10 - Dzenan Zukic
@rankin The switch-over version for Qt is 5.3, not 5.6. Qt 5.3 stopped including WebKit, and VTK7 had a url:http://www.vtk.org/Bug/view.php?id=15703|patch which fixed the issue.

#### 2016-07-15, 18:41:38 - Adam Rankin
QtWebKit still exists in 5 and is marked as deprecated. It is fully removed in 5.6

http://doc.qt.io/archives/qt-5.5/qtwebkit-index.html
https://en.wikipedia.org/wiki/List_of_Qt_releases

#### 2016-07-15, 18:42:25 - Adam Rankin
You can find many complete Qt builds for common Windows platforms here:
https://sourceforge.net/projects/qt64ng/?source=typ_redirect

#### 2016-07-15, 19:12:12 - Adam Rankin
Confirm successful build with Qt 5.5 and VTK 6.2

#### 2016-07-18, 12:45:20 - Andras Lasso
test #1093: Made Qt Webkit widgets component optional
Commit: r:4739|plus:4739

#### 2016-07-18, 12:45:20 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-07-18, 12:45:20 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-07-18, 13:02:08 - Andras Lasso
re #1093: Force building of dependencies in PlusBuild

Dependencies (ITK, VTK, OpenIGTLink, ...) were not re-built by default when building the top-level PlusBuild solution's ALL_BUILD project. This caused build errors when used libraries were updated (e.g., OpenIGTLink library updated).
Build time (with no changes) increased form about 35 seconds to 60 seconds, which is still tolerable. During development of Plus, it's recommended to open PlusLib and PlusApp solutions in the IDE and build only those.
Commit: r:4740|plus:4740

#### 2016-07-18, 13:53:31 - Dzenan Zukic
@rankin Build with Qt 5.5 and VTK 6.2 did not succeed. Setting Qt5_DIR and friends in to 5.2 in configuration of PlusBuild did not propagate to all the subprojects, and VTK was still pointing to the Qt5 in my path (5.6). When I manually set those paths to 5.2, it then started complaining about Qt5WebKitWidgets. This was with SVN revision 4722.

The default configuration of revision 4740 failed due to Qt5WebKitWidgets. I am now trying 4740 with VTK7.

#### 2016-07-18, 14:27:03 - Dzenan Zukic
The build still fails with the same error

~~~~
11>  At revision 4740.
11>  No patch step for 'PlusApp'
11>  Performing configure step for 'PlusApp'
11>  CMake Error at C:/Dev/plus-2013/Deps/OpenIGTLink-bin/UseOpenIGTLink.cmake:21 (include):
11>    include called with wrong number of arguments.  include() only takes one
11>    file.
11>  Call Stack (most recent call first):
11>    C:/Dev/plus-2013/PlusLib-bin/UsePlusLib.cmake:51 (INCLUDE)
11>    CMakeLists.txt:15 (INCLUDE)

~~~~

OpenIGTLink_LIBRARY_TARGETS_FILE variable is empty. So either UseOpenIGTLink.cmake needs to include OpenIGTLinkConfig.cmake which sets OpenIGTLink_LIBRARY_TARGETS_FILE, or UsePlusLib.cmake needs to do it.

I also noticed that I am using CMake 3.5.2 and not the latest 3.6.0, so I will try with that now. If that fails I will try to create a patch as proposed in the previous paragraph.

#### 2016-07-18, 14:50:58 - Dzenan Zukic
The same error remains with CMake 3.6.0. Working on the patch.

#### 2016-07-18, 15:33:49 - Dzenan Zukic
In trying to create a patch, I realized why only I have this problem. I have a build of OpenIGTLink located in C:/Dev/OpenIGTLink-build/ (unrelated to any Slicer or Plus builds), and FIND_PACKAGE(OpenIGTLink PATHS 'C:/Dev/plus-2013/Deps/OpenIGTLink-bin' NO_DEFAULT_PATH) finds that build instead of C:\\Dev\\plus-2013\\Deps\\OpenIGTLink-bin.

url:https://cmake.org/cmake/help/v2.8.10/cmake.html#command:find_package|Find_Package docs say that PATHS is the last (9th) option searched. The option of setting <package>_DIR worked (it is the 2nd searched option by CMake). I will integrate this into the patch.

#### 2016-07-18, 15:39:44 - Adam Rankin
I will change that from NO_DEFAULT_PATH to NO_MODULE. Could you test to see if that works in your configuration?

#### 2016-07-18, 15:41:00 - Dzenan Zukic
fixed #1093 Avoids finding some other build of OpenIGTLink instead of the one specified in PATHS option
Commit: r:4741|plus:4741

#### 2016-07-18, 15:41:00 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2016-07-18, 15:47:51 - Dzenan Zukic
Just setting NO_MODULE does not work. I guess it is option 5 or 6 from the url:https://cmake.org/cmake/help/v2.8.10/cmake.html#command:find_package|docs which finds the wrong build.

#### 2016-07-18, 15:57:20 - Adam Rankin
Ok, thanks for identifying this. The Use*.cmake file has not seen a lot of attention lately. In another discussion I would like to bring up the possibility of dropping this approach in favor of defining targets in the FIND_PACKAGE(xyz) command.

#### 2016-07-18, 15:58:02 - Adam Rankin
Thank you very much for chasing this down.


## #1094 Dimension reading is incorrect from metafile
Logic for reading MHA is incorrect and results in incorrect reading of single image files

#### 2016-07-12, 18:26:19 - Adam Rankin
There is currently no way to determine if a file is a sequence or a single volume, I propose we add our own custom header tag to differentiate.

IsTimeSequence = TRUE

Slicer and other MHA readers would disregard it and read the file however they would, but Plus generated files can be read more intelligently.

@lassoan thoughts?

#### 2016-07-12, 19:36:02 - Adam Rankin
re #1094 temporary fix to be able to read 2d volumes
Commit: r:4723|plus:4723

#### 2016-07-12, 21:01:58 - Andras Lasso
It's a good idea to add this information. To be a bit more generic and similar to nrrd, I would suggest to add a field that describes the type of each axis, such as 'kinds'.
For time sequence it would be:
kinds = list domain domain
For 3D volume:
kinds = domain domain domain


#### 2016-07-13, 16:37:50 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-07-14, 01:34:50 - Adam Rankin
test #1094 mha reading/writing now behaves like nrrd

the kinds field now identifies domain or list types as spatial or time domains
Commit: r:4728|plus:4728

#### 2016-07-14, 01:34:50 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-07-14, 01:46:52 - Adam Rankin
re #1094 fixing VS2008 build
Commit: r:4729|plus:4729

#### 2016-07-14, 12:28:38 - Andras Lasso
@rankin Thanks for the fix.

Now there are many failed tests due to this warning:
|WARNING|000.005000| Kinds not found in file: C:/D/PlusNightly-bin/PlusLibData/TestImages/USTC_FrameGrabber_ProbeRotationData.mha. Treating the last dimension as time.| in C:\\D\\PlusNightly-bin\\PlusLib\\src\\PlusCommon\\IO\\vtkPlusMetaImageSequenceIO.cxx(204)

Probably Kinds property should be added to the test image files (but changing the log level to debug or warning could be OK, too).
Could you please address this? If not then let me know and I can work on it.

#### 2016-07-14, 14:46:49 - Adam Rankin
Those are fixed, PlusLibData just needs to be updated.

#### 2016-07-14, 14:53:18 - Andras Lasso
OK, thanks!

What about these errors?
http://crunch.cs.queensu.ca/CDash/viewTest.php?onlydelta&buildid=53619


#### 2016-07-14, 15:15:11 - Andras Lasso
It seems that Plus now creates invalid mha files, for example:
CompressedDataSize = 225269              = 0     

Can you have a look?

#### 2016-07-14, 15:29:56 - Adam Rankin
Investigating.

#### 2016-07-14, 16:06:56 - Adam Rankin
Ah, the output is dependent on the input # of spaces... I will fix this.

#### 2016-07-14, 19:03:11 - Adam Rankin
re #1094 erroneous overwriting of lines has been fixed

reading file in binary accounts for different line endings and thus tellg provides correct file position
Commit: r:4735|plus:4735

#### 2016-07-15, 21:31:56 - Adam Rankin
Under certain conditions the newlines are not written out correctly in the pixel data. Investigating.

#### 2016-07-15, 21:31:56 - Adam Rankin
CommentContent: changed from "Under certain conditions the newlines are not written out correctly. Investigating." to "Under certain conditions the newlines are not written out correctly in the pixel data. Investigating."

#### 2016-07-18, 11:38:56 - Andras Lasso
re #1094: Fixed invalid compressed nrrd file writing

gz stream was not opened in binary mode and therefore LF was converted to CRLF in the compressed stream.
Commit: r:4737|plus:4737

#### 2016-07-18, 15:59:29 - Adam Rankin
I have confirmed that the 'b' parameter is ignored.

vtk/ThirdParty/zlib/vtkzlib/gzlib.c

~~~~
case 'b':       /* ignore -- will request binary anyway */
break;

~~~~


I will investigate if this is a platform specific behavior.

#### 2016-07-18, 16:01:47 - Andras Lasso
I've checked it several times and on Windows 10, VS2013 adding 'b' was always necessary and enough.

#### 2016-07-18, 16:03:05 - Adam Rankin
For gzopen or direct calls to fopen/_wopen/etc...?

#### 2016-07-18, 16:04:56 - Andras Lasso
I don't even have gzlib.c in PlusExp-bin\\Deps\\vtk\  hirdParty\\zlib\\vtkzlib

#### 2016-07-18, 16:09:40 - Andras Lasso
I see that 'b' is enforced in VTK7 (latest trunk: https://github.com/Kitware/VTK/blob/master/ThirdParty/zlib/vtkzlib/gzlib.c), so the fix may only be required for VTK<7.

#### 2016-07-18, 16:11:09 - Adam Rankin
Could you step into gzopen and see which file is being called? Perhaps somehow you're using the ITK 3rd party?

#### 2016-07-18, 16:11:52 - Andras Lasso
It would be nice to make the current Plus version support with VTK7 before we create the stable version from it. Would you be able to check if it's easy to do it?
There is some configuration error:
http://crunch.cs.queensu.ca/CDash/viewConfigure.php?buildid=54006


#### 2016-07-18, 16:13:26 - Adam Rankin
In the file you linked to, it still has the same code block:


~~~~
case 'b':       /* ignore -- will request binary anyway */
 break;

~~~~


#### 2016-07-18, 16:13:53 - Adam Rankin
PLUS builds completely with VTK7. I am running it already.

#### 2016-07-18, 16:14:29 - Adam Rankin
Yes, I am investigating that configure issue. It only cropped up two nights ago*.

#### 2016-07-18, 16:14:29 - Adam Rankin
CommentContent: changed from "Yes, I am investigating that configure issue. It only cropped up last night." to "Yes, I am investigating that configure issue. It only cropped two nights ago*."

#### 2016-07-18, 16:14:29 - Adam Rankin
CommentContent: changed from "Yes, I am investigating that configure issue. It only cropped two nights ago*." to "Yes, I am investigating that configure issue. It only cropped up two nights ago*."

#### 2016-07-18, 16:19:12 - Adam Rankin
Manual rebuild of VTK7/Qt5/VS2012 succeeds. It is a build machine configuration issue. Investigating.

#### 2016-07-18, 16:22:30 - Adam Rankin
See http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=54029

#### 2016-07-18, 16:38:56 - Adam Rankin
and http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=54030 (AccuateTimerTest fail due to vm on build machine)

#### 2016-07-18, 16:51:31 - Andras Lasso
It's normal to not have accurate timing on a VM. We could add a CMake option to relax accurate timer tolerance (or remove accurate timer test). Added #1097 to track this issue.

#### 2016-07-18, 16:51:31 - Andras Lasso
CommentContent: changed from "It's normal to not have accurate timing on a VM. We could add a CMake option to relax accurate timer tolerance (or remove accurate timer test)." to "It's normal to not have accurate timing on a VM. We could add a CMake option to relax accurate timer tolerance (or remove accurate timer test). Added #1097 to track this issue."

#### 2016-07-18, 17:03:49 - Andras Lasso
When Plus is built with VTK6, gzopen calls a method in PlusExp-bin\\Deps\\vtk\  hirdParty\\zlib\\vtkzlib\\gzio.c. There is no forcing of binary mode there.

#### 2016-07-18, 17:06:49 - Adam Rankin
Aaaahhhh that's the ticket. Thanks!

#### 2016-07-18, 18:15:07 - Adam Rankin
CommentContent: changed from "Manual inspection of the NrrdSample test output and repo file on Linux are identical. I'm not sure why ctest COMPARE_FILES is failing..." to null

#### 2016-07-18, 20:13:10 - Adam Rankin
re #1094 fseek and lseek do not mix, using strictly lseek to enable correct behavior on all platforms
Commit: r:4745|plus:4745

#### 2016-07-18, 21:01:35 - Adam Rankin
Mac output now only differs by a single byte. Copied file to Windows machine and loaded it into Slicer no problem. I think the byte difference is in the gzip header for something platform specific.

#### 2016-07-18, 21:17:27 - Andras Lasso
Can you upload here the two files with the 1-byte difference?

#### 2016-07-18, 21:22:38 - Adam Rankin
Output from test:

file:da47oAts0r5Qzadmr6bg7m|NrrdSample.nrrd


#### 2016-07-18, 21:22:38 - Adam Rankin
Attachment added: "NrrdSample.nrrd"

#### 2016-07-18, 21:22:38 - Adam Rankin
CommentContent: changed from "file:da47oAts0r5Qzadmr6bg7m
" to "Output from test:

file:da47oAts0r5Qzadmr6bg7m
"

#### 2016-07-18, 21:22:38 - Adam Rankin
CommentContent: changed from "Output from test:

file:da47oAts0r5Qzadmr6bg7m
" to "Output from test:

file:da47oAts0r5Qzadmr6bg7m|NrrdSample.nrrd
"

#### 2016-07-18, 21:22:53 - Adam Rankin
Copied from PlusLibData

file:djO_i4ts0r5O7cacwqjQXA|NrrdSample.nrrd


#### 2016-07-18, 21:22:53 - Adam Rankin
Attachment added: "NrrdSample.nrrd"

#### 2016-07-18, 21:22:53 - Adam Rankin
CommentContent: changed from "file:djO_i4ts0r5O7cacwqjQXA
" to "Copied from PlusLibData

file:djO_i4ts0r5O7cacwqjQXA|NrrdSample.nrrd
"

#### 2016-07-19, 00:21:58 - Andras Lasso
The uncompressed image contents of the two images are the same. There are some flags in the zlib header that might have different default values.

We may upload a different baseline and choose based on platform; or implement an image comparison tool that uncompresses the image and compares that; but we would also need to compare metadata,... feasible, but quite a bit of work.

#### 2016-07-19, 14:09:16 - Adam Rankin
I am happy with the behavior of the system. I am marking this closed.

#### 2016-07-19, 14:09:16 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1095 Update Plus to use VTK7 by default
Slicer uses VTK7 now, so Plus should follow it, too.
Need to release a stable Plus version first.

#### 2016-08-15, 19:19:44 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-24, 23:57:54 - Adam Rankin
status: changed from "New" to "Fixed"


## #1096 Add support for Ascension tracker quality values for up to 8 sensors
When two control units are used, 8 sensors can be connected. Add a quality3 value to be able to get quality values for the last two sensors.

#### 2016-07-15, 21:07:58 - Andras Lasso
test #1096: Added quality3 port to retrieve quality value for up to 9 Ascension sensors
Commit: r:4736|plus:4736

#### 2016-07-15, 21:07:58 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-07-24, 18:48:02 - Andras Lasso
Tested and it works correctly.

#### 2016-07-24, 18:48:02 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1097 Allow suppressing accurate timing test failures on virtual machines
AccuateTimerTest fail due to vm on build machine
http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=54030

It's normal to not have accurate timing on a VM. We should add a CMake option to relax accurate timer tolerance or remove accurate timer test.

#### 2016-07-18, 17:04:42 - Adam Rankin
My opinion is that this test is most important on developer machines, as they are closer to real-world performance than build machines. I would say the test should be ON by default, and build machines should turn it OFF.

#### 2016-07-18, 17:08:09 - Andras Lasso
status: changed from "New" to "Accepted"

#### 2016-07-18, 17:08:14 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-07-18, 17:31:52 - Andras Lasso
Yes, I agree.

Of course it's important to regularly test this option, so there have to be at least some build machines where this option is enabled.

#### 2016-07-18, 17:51:08 - Andras Lasso
re #1097: Added PLUS_TEST_HIGH_ACCURACY_TIMING CMake option to allow suppressing timing accuracy test errors
Commit: r:4743|plus:4743

#### 2016-07-18, 17:53:16 - Andras Lasso
re #1097: Added PLUS_TEST_HIGH_ACCURACY_TIMING CMake option to allow suppressing timing accuracy test errors
Commit: r:4744|plus:4744

#### 2016-07-18, 17:55:46 - Andras Lasso
@rankin On your dashboard computers running on a VM you can now set PLUS_TEST_HIGH_ACCURACY_TIMING=OFF to disable tests (timer accuracy test is still performed, results are reported on the dashboard, but the test always exits with success if PLUS_TEST_HIGH_ACCURACY_TIMING=OFF).

#### 2016-07-18, 17:55:46 - Andras Lasso
assigned_to_id: changed from "lassoan" to "rankin"

#### 2016-07-18, 17:55:46 - Andras Lasso
status: changed from "Accepted" to "Test"

#### 2016-07-18, 17:57:54 - Adam Rankin
CommentContent: changed from "Is this pluslib only? Is there an option in plusbuild?" to null

#### 2016-07-18, 17:58:48 - Adam Rankin
CommentContent: changed from "Ah, advanced. Thanks!" to null

#### 2016-07-18, 20:39:40 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-07-18, 20:55:01 - Adam Rankin
Flag is not recognized correctly. Test still fails.

#### 2016-07-18, 20:55:01 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2016-07-18, 21:05:41 - Andras Lasso
After you turning off the flag, have you configured, generated, and built the PlusBuild project?

#### 2016-07-18, 21:17:09 - Adam Rankin
Yes. Confirmed by seeing unchecked flag in PlusLib CMake-gui.

#### 2016-07-18, 21:40:49 - Andras Lasso
Is the flag set properly in CMakeCache.txt in PlusBuild and PlusLib levels?

#### 2016-07-18, 21:44:38 - Adam Rankin
Oh now it just passed... let me check.

#### 2016-07-18, 21:46:17 - Adam Rankin
Seems to be fine. Must have been a rebuild fix.

#### 2016-07-18, 21:46:17 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-07-19, 13:55:00 - Andras Lasso
re #1097: Fixed PLUS_TEST_HIGH_ACCURACY_TIMING error reporting test (test still failed due to error message logged and found by regexp)
Commit: r:4748|plus:4748


## #1098 Capistrano support does not work out of the box for a 64 bit build
null

#### 2016-07-19, 13:52:31 - Dzenan Zukic
fixed #1098 Simplifying Capistrano SDK usage
Commit: r:4747|plus:4747

#### 2016-07-19, 13:52:31 - Dzenan Zukic
assigned_to_id: changed from null to "dzenanz"

#### 2016-07-19, 13:52:31 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2017-06-16, 12:36:46 - Andras Lasso
re #1098 Displaying an error message

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/11910aed98a998f0451677603f9c9fefbc74d105|plus.3:11910aed98


## #1099 Implement a device interface for the Quadro SDI capture system
Implementation must allow for in-GPU memory only (local capture use) via function pointer hooks/callbacks

#### 2016-08-15, 19:19:47 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-09-13, 13:36:06 - Adam Rankin
re #1099 resuming work on Nvidia DVP device
Commit: r:4859|plus:4859

#### 2016-09-13, 21:10:46 - Adam Rankin
re #1099 Significant implementation towards NVidiaDVP device

Separating Win32 and Linux implementation

Incorporating NVidia utility code for SDI capture/output
Commit: r:4863|plus:4863

#### 2016-09-14, 15:13:09 - Adam Rankin
re #1099 Correcting error in XML string macro

Implementing configuration reading for NVidiaDVP device
Commit: r:4864|plus:4864

#### 2016-09-14, 15:23:14 - Adam Rankin
re #1099 Removing erroneous setting of OpenGL include dir in CMake

Setting specific include for NVidiaDVP GL related files in a configurable file

Adding copyright information to NVidia files

Removing unnecessary command line parsing function

Removing warnings
Commit: r:4865|plus:4865

#### 2016-09-14, 19:32:36 - Adam Rankin
re #1099 improving opencv detection
Commit: r:4871|plus:4871

#### 2016-09-14, 20:10:42 - Adam Rankin
re #1099 Adding source groups for data collection for cleaner file viewing
Commit: r:4872|plus:4872

#### 2016-09-14, 22:39:31 - Adam Rankin
re #1099 changing functions to adhere to coding convention

removing reference to message boxes
Commit: r:4873|plus:4873

#### 2016-09-14, 23:04:51 - Adam Rankin
re #1099 removing redundant init calls

correcting device query call


Commit: r:4874|plus:4874

#### 2016-09-17, 21:02:25 - Adam Rankin
re #1099 Using OpenCV to handle image color conversions for OvrvisionPro

Correcting capture bug where color was not properly requested
Commit: r:4876|plus:4876

#### 2016-09-17, 23:31:28 - Andras Lasso
Did opencv become a Plus dependency? Or is opencv part of the ovrvision SDK?

#### 2016-09-17, 23:44:24 - Adam Rankin
Opencv is required for the ovr pro. It is only enabled for that device.

#### 2016-09-18, 18:43:37 - Adam Rankin
re #1099 Adding cuda_generation option to PlusBuild OpenCV configuration to reduce build time if desired
Commit: r:4877|plus:4877

#### 2016-09-19, 00:19:45 - Adam Rankin
re #1099 reducing warnings in Plus build
Commit: r:4878|plus:4878

#### 2016-09-19, 01:34:17 - Adam Rankin
re #1099 moving typedefs to common code section
Commit: r:4879|plus:4879

#### 2016-09-19, 01:47:22 - Adam Rankin
re #1099 reducing warnings
Commit: r:4880|plus:4880

#### 2016-09-19, 02:13:23 - Adam Rankin
re #1099 another pass at reducing warnings
Commit: r:4881|plus:4881

#### 2016-09-19, 11:16:10 - Andras Lasso
Thanks for working on this. Note that there are build errors now.

#### 2016-09-19, 13:58:13 - Adam Rankin
re #1099 guess at build error fix
Commit: r:4882|plus:4882

#### 2016-09-19, 16:40:36 - Adam Rankin
re #1099 further possible build fixes

Adding auto-ITK includes if Plus is found until ITK updates its cmake target property output
Commit: r:4883|plus:4883

#### 2016-09-19, 16:49:15 - Adam Rankin
re #1099 Adding auto-VTK includes if Plus is found until VTK updates its cmake target property output
Commit: r:4884|plus:4884

#### 2016-09-19, 17:02:22 - Adam Rankin
re #1099 Correcting dependency finding and include dir when using PlusLib

Generating PlusConfigure.h in root binary dir as well
Commit: r:4885|plus:4885

#### 2017-01-03, 15:44:09 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"

#### 2017-01-03, 15:44:11 - Adam Rankin
priority: changed from "Normal (3)" to "Low (4)"

#### 2017-01-03, 15:44:18 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #1100 Environment variable in tesseract system are not properly picked up on OSX
Currently it is stored in .xsessionrc, which may not be used by OSX.

Identify a mechanism which works under OSX and implement

#### 2016-07-19, 14:13:33 - Adam Rankin
priority: changed from "Low (4)" to "Normal (3)"

#### 2016-08-15, 19:19:51 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-26, 20:48:09 - Adam Rankin
priority: changed from "Normal (3)" to "Lowest (5)"

#### 2016-08-26, 20:48:19 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"

#### 2016-12-16, 17:36:58 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #1101 Allow access to Capistrano transducer wobble rate
 Specifically, this function is provided in the Capistrano USB transducer SDK through the USBProbe.dll, function usbSetProbeSpeed(value). Companion getter is usbProbeSpeed(void). Right now the Capistrano SDK is being accessed through the vtkPlusCapistranoVideoSource, which needs to be updated to have access to that function.

#### 2016-07-25, 15:11:00 - Adam Rankin
milestone_id: changed from null to "Plus-2.4.0"

#### 2016-07-25, 15:11:55 - Dzenan Zukic
test #1101 Allowing access to Capistrano transducer wobble rate
Commit: r:4776|plus:4776

#### 2016-07-25, 15:11:55 - Dzenan Zukic
status: changed from "New" to "Test"

#### 2016-08-03, 16:58:16 - Dzenan Zukic
The person testing this reported for the wobble rate '... the range was actually from 129Hz to 9Hz in increasing speed, ...'. Setting the speed through Plus works.

#### 2016-08-03, 16:58:16 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2017-02-07, 23:53:39 - Adam Rankin
Adding new configurable parameters for Capistrano (#10)

* re #1148 forgotten merge rename

* re #1101 adding support for 6 parameters

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7f8ee8aac11a563bcb1c3f3afd86156b3b5136f9|plus:7f8ee8aac1


## #1102 Make send/receive timeout configurable
When working with the HoloLens emulator, the 500ms send timeout causes premature disconnects.

By making the timeouts configurable, many situations can be handled.

#### 2016-08-04, 23:48:36 - Andras Lasso
That's funny, we had completely different issue and we had the same conclusion that this timeout has to be configurable in config file. We have a partial implementation. Are you working on this now?

#### 2016-08-04, 23:49:01 - Adam Rankin
No I was just going to get started on it tonight. If you want to send me your in progress I can finish it up.

#### 2016-08-05, 15:17:54 - Andras Lasso
test #1102: Made socket receive timeout configurable
Commit: r:4782|plus:4782

#### 2016-08-05, 15:17:54 - Andras Lasso
status: changed from "New" to "Test"

#### 2016-08-05, 15:20:12 - Adam Rankin
Ah, my changes affect PlusServer, and not the client.

#### 2016-08-05, 17:51:20 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2016-08-05, 19:44:22 - Adam Rankin
test #1102 configurable send/receive timeout in server
Commit: r:4786|plus:4786

#### 2016-08-05, 19:44:22 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-08-05, 20:59:07 - Andras Lasso
Thank you, it looks good, just a few small comments:
* In config files we always specify time in sec. I would recommend to use seconds here, too.
* Add unit to the end of the variable, e.g., DefaultClientSendTimeoutSec.
* Update user manual (dox files) with the new attributes.

#### 2016-08-05, 20:59:07 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2016-08-13, 18:36:37 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-08-13, 18:44:49 - Adam Rankin
re #1102 Missing documentation regarding new behavior of variables
Commit: r:4799|plus:4799

#### 2016-08-15, 17:13:11 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1103 Create printable marker for Telemed MC10


#### 2016-08-05, 17:41:11 - Eden Bibic
milestone_id: changed from null to "Plus-2.4.0"

#### 2016-08-05, 17:41:14 - Eden Bibic
assigned_to_id: changed from null to "EdenBibic"

#### 2016-08-05, 17:41:31 - Eden Bibic
status: changed from "New" to "Accepted"

#### 2016-08-05, 17:59:41 - Eden Bibic
re #1103: Version one of the MC10 Telemed probe holder with Polaris tracker.  SLDPRT and STL files committed, ready for testing/feedback.
Commit: r:4784|plus:4784

#### 2016-08-05, 18:04:05 - Eden Bibic
status: changed from "Accepted" to "Test"

#### 2016-08-05, 18:17:05 - Eden Bibic
re #1103: Changed file names and added a photo of the assembly for reference.
Commit: r:4785|plus:4785

#### 2016-08-15, 19:19:54 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-19, 14:14:24 - Eden Bibic
re #1103: Fixed missing parts error in the assembly.
Commit: r:4817|plus:4817

#### 2016-08-23, 14:58:19 - Eden Bibic
re #1103: Fixed missing part (Parent part) error in the assembly.
Commit: r:4824|plus:4824

#### 2016-08-29, 15:40:07 - Eden Bibic
re #1103: Located missing part(PARENTPART) within the MarkedSide part instead of in the whole assembly--not getting the part location error anymore for the MarkedSide part or the assembly.
Commit: r:4845|plus:4845

#### 2016-11-10, 04:10:42 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1104 Create a needle clip with EM sensor holder (parallel design)


#### 2016-08-08, 20:26:13 - Eden Bibic
milestone_id: changed from null to "Plus-2.4.0"

#### 2016-08-08, 20:26:20 - Eden Bibic
assigned_to_id: changed from null to "EdenBibic"

#### 2016-08-09, 12:55:14 - Eden Bibic
status: changed from "New" to "Accepted"

#### 2016-08-09, 12:56:02 - Eden Bibic
re #1104: Basic design for the needle clip.  Might make the clip shorter so the sensor is closer to the needle.
Commit: r:4794|plus:4794

#### 2016-08-15, 19:20:04 - Adam Rankin
milestone_id: changed from "Plus-2.4.0" to "Plus-2.5.0"

#### 2016-08-17, 13:27:04 - Eden Bibic
re #1104: Shortened the clip so that the sensor is closer to the needle.  Not sure if it is the ideal length yet.
Commit: r:4812|plus:4812

#### 2016-11-10, 04:10:50 - Tamas Ungi
assigned_to_id: changed from "EdenBibic" to "ungi"

#### 2016-11-10, 04:16:13 - Tamas Ungi
Test #1104: Added lure lock with sensor holder. Probably can only be printed with high-end printers.
Commit: r:4926|plus:4926

#### 2016-11-10, 04:16:13 - Tamas Ungi
status: changed from "Accepted" to "Test"

#### 2016-11-18, 20:05:59 - Tamas Ungi
Re #1104: Added holes to wash out support material. Rounded some edges.
Commit: r:4939|plus:4939

#### 2017-03-25, 00:39:11 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1105 Create 2.3.0 Release
null

#### 2016-08-15, 18:08:32 - Adam Rankin
status: changed from "New" to "Invalid"


## #1106 Add support for NVidia DVP device
Add support for following device
url:http://www.nvidia.com/object/product_quadro_sdi_capture_us.html|http://www.nvidia.com/object/product_quadro_sdi_capture_us.html

For now, add the ability to access opengl textures in video memory, with optional copying into CPU space for adding to a data source.

#### 2016-08-16, 13:34:35 - Adam Rankin
re #1106 Adding DVP 1.7.0 library

Adding basic skeleton for DVP device

Adding ImageOrientation to tracked frame message
Commit: r:4804|plus:4804

#### 2016-08-16, 13:43:52 - Adam Rankin
re #1106 missing commit for DVP in plusbuild repo
Commit: r:4807|plus:4807

#### 2016-08-16, 16:25:05 - Adam Rankin
re #1106 Adding FindQuadroSDI.cmake to use Quadro SDI install
Commit: r:4810|plus:4810

#### 2016-08-17, 15:40:30 - Adam Rankin
re #1106 passing windows directories as string in order to send multiple entries

this enables multiple SDKs under the same major root to be used
Commit: r:4813|plus:4813

#### 2016-08-23, 15:03:12 - Adam Rankin
status: changed from "New" to "Invalid"


## #1107 Plus crashes image sequence without UltrasoundImageOrientation field is read
Plus crashes image sequence without UltrasoundImageOrientation field is read. Plus should log an error and return instead.

#### 2016-08-18, 22:09:02 - Andras Lasso
fixed #1107: No crash if image sequence without UltrasoundImageOrientation field is loaded
Commit: r:4816|plus:4816

#### 2016-08-18, 22:09:02 - Andras Lasso
status: changed from "New" to "Fixed"


## #1108 Create PLUS device to enhance spinal ultrasound images and detect bone surfaces
null

#### 2016-08-23, 13:56:58 - Ben Church
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-08-23, 13:58:10 - Ben Church
re #1108 Added vtkPlusTransverseProcessEnhancer device which currently just performs a vtkImageGaussianSmooth on the input ultrasound image. Added config file for this device and modified vtkPlusImageProcessorVideoSource.cxx to recognize it.
Commit: r:4823|plus:4823

#### 2016-08-25, 16:48:40 - Ben Church
re #1108: Added threshold operation to image processing pipeline. Image processor now reads more parameters from config file, making experimentation faster.
Commit: r:4831|plus:4831

#### 2016-08-26, 20:40:23 - Adam Rankin
re #1108 Updating code to adhere to coding conventions. Fixing bugs relating to NULL checks. Implementing complete WriteConfiguration function.

Updating last of the PlusCommon::Trim usages
Commit: r:4834|plus:4834

#### 2016-09-08, 18:41:34 - Ben Church
re #1108: Implemented Sobel edge detection plus a function to extract and combine its two-component output. I will next investigate pre-existing filters for component combination, island removal, and conforming to coding conventions.
Commit: r:4848|plus:4848

#### 2016-09-09, 16:29:59 - Adam Rankin
re #1108 Reducing Mac build warnings

Updating code to adhere to coding conventions

Updating WriteConfiguration to output all stored values

Updating config file name to match convention
Commit: r:4850|plus:4850

#### 2016-09-09, 16:32:03 - Adam Rankin
re #1108 Fixing linux build error
Commit: r:4851|plus:4851

#### 2016-09-14, 17:51:28 - Ben Church
re #1108: Implemented another thresholder to binarize image so that vtkIslandRemoval2D works.
Commit: r:4867|plus:4867

#### 2016-09-14, 18:12:32 - Ben Church
re #1108: Reverted since my last commit (or some attempt at conflict resolution) deleted NVidiaDVP files.
Commit: r:4868|plus:4868

#### 2016-09-14, 18:24:08 - Ben Church
re #1108: Second commit attempt - Implemented another thresholder to binarize image so that vtkIslandRemoval2D works.
Commit: r:4869|plus:4869

#### 2016-09-14, 19:10:40 - Ben Church
re #1108: Implemented 'ImageConjunction' to retrieve pixel values from before image was binarized.
Commit: r:4870|plus:4870

#### 2016-09-22, 01:24:27 - Ben Church
re #1108: Implemented image erosion and dilation as separate processes
Commit: r:4886|plus:4886

#### 2016-10-05, 20:13:02 - Adam Rankin
re #1108 linux and mac build warning fixes
Commit: r:4890|plus:4890

#### 2016-10-06, 11:03:29 - Andras Lasso
re #1108: Fixed build errors
Commit: r:4892|plus:4892

#### 2017-05-19, 18:12:48 - Csaba Pinter
assigned_to_id: changed from "benchurch" to "15bt1"

#### 2017-05-31, 14:44:44 - Andras Lasso
re #1108: Added option to EditSequenceFile to mix multiple sequence files

Mixing means that the multiple sequences are merged into one.
Timestamps, video, and all fields are taken from the first sequence and all other fields are copied from other sequences.
No interpolation is performed: fields from the frame that has the closest timestamp will be used.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6fc41a9fa8835527c630182c838276c744d2c989|plus:6fc41a9fa8

#### 2017-05-31, 15:09:24 - Andras Lasso
re #1108: Fixed EditSequenceFile mix test

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d8a0d7dea9fab19de20007dee0b626358330a026|plus:d8a0d7dea9

#### 2017-09-06, 23:46:13 - Adam Rankin
Scoliosis transverse process enhancer (#72)

* re #1108 added basic input, output, and image processing functionality to vtkPlusTransverseProcessEnhancerTest
Modified existing program vtkPlusTransverseProcessEnhancerTest so that it may better test and get outputs from vtkPlusTransverseProcessEnhancer.
command line arguments may be in the following format:
vtkPlusTransverseProcessEnhancerTest.exe --output-config-file=ConfigFile.xml --input-seq-file=BoneUltrasound_L14.mha --output-seq-file=BoneUltrasound_L14_OUT_TEST.mha

Larger additions to vtkPlusTransverseProcessEnhancerTest include:
-more descriptive error messages.
-support for output as a shadow image file, a lines image file, and processed lines image file.

Also changed vtkPlusTransverseProcessEnhancer.cxx so that it better reads and writes information in config files, as a result of this, vtkPlusTransverseProcessEnhancer.h also had to be modified.
vtkPlusTransverseProcessEnhancer.h was not changed in any other way.

* re #1108 Added ways to get various outputs, including various intermediate output images, and an output config file for recording what inputs were used
Added an optional argument to vtkPlusTransverseProcessEnhancerTest to allow for testing vtkPlusTransverseProcessEnhancer's WriteConfiguration() method. Using this argument will cause a config file to be created. This new config file will be filled with the settings that are being used during the current run of the test program. This new config file is intended to be identical to the inputted config file.

Added or expanded on optional arguments for various intermediate outputs, such as:
--output-lines-image-file
--output-intermediate-image-file
--output-shadow-image-file
--output-processedlines-image-file

Rewrote vtkPlusTransverseProcessEnhancer.cxx's WriteConfiguration() using XML_WRITE macros
Added error checking to alternate output files in vtkPlusTransverseProcessEnhancer.cxx

vtkPlusTransverseProcessEnhancer.h was changed to allow for the changes mentioned above.

* re #1108 Added support for intermediate images to be saved throughout different points in the code.

Removed some command line arguments from vtkPlusTransverseProcessEnhancerTest and added the bool argument: --save-intermediate-images which makes the program save various intermediate images before and after steps of the filters. These intermediate images are saved in the same location as where the output file goes, and their file name is: output image file name + _ + an incrementing index + special postfix + .mha ex: BoneUltrasound_L14_TEST_2Lines.mha

In code, the intermediate images are being stored in a dictionary where _ + an incrementing index + special postfix is the key

* re #1108 Finalized ability to save intermediate images in vtkPlusTransverseProcessEnhancer
Ability to save intermediate images while running vtkPlusTransverseProcessEnhancerTest.cxx hes been presumably finished.
Intermediate images are now saved to the local Output folder in a directory named IntermediateImageFiles, then in a sub-directory based on the file's postfex

The programs used to save intermediate images in variables, this has been changed so that it saves them in a map. The reason for this was to simply things, and also to allow for easier future modifications if more intermediate frames are needed.

* re #1108 Changed output so intermediate files are not in different folders

In the previous commit, intermediate images were stored in different folders based on what filter they were associated with. This has been reverted.
Also gave the intermediate and output image files more descriptive names.

* re #1108 Made the ability to read config files more flexible and reliable

Previously, reading config files relied upon <Processor ... > being the first element of the input xml file. This has been changed to allow for <Processor ... > to be anywhere in the config file.

Changed variable name of DilationKernelRadiusPixel to DilationKernelSize so that it remained consistent with other xml files.

* re #1108 Cleaned up codes to make them more readable

-Added comments from Ben
-Removed the code that was commented out
-Moved initialization of <vtkSmartPointer>'s so they are initialized in the constructor
-Removed intermediate images that were redundant
-Changed various variable/function names to be more clear

* re #1108 Fixed a bug the caused intermediate images to be stored in the input file's directory

Intermediate images are now stored in the same directory as where the output file will be saved

* re #1108 Will now always use all fitters unless told otherwise

When processing frames in vtkPlusTransverseProcessEnhancer, all filters will be used unless the the inputted config file says otherwise

* re #1108 Added method to remove images that precede shadow images. Also cleaned up code.

-Added comments from Ben
-Modified some of the default values so that they produce a more accurate result if the user does not input their value.
-Changed variable names to make them more consistent or clear.
-Moved a section of code that processed image extents to its own method.

* re #1108 Removed a TODO that was already implemented

In the last push, a TODO was implemented, but the TODO comment itself was not removed. This has been fixed.

* re #1108 Added pipeline functionality and a check to see if bones start off camera

Changed the way some filters gained their input, so that the code behaves more like a pipeline

Added a step that eliminates bone areas that are located too close to the edge of the camera.
Added a way to determine where each bone area begins and ends.

* re #1108 Fully connected the pipeline. This update doesn't fully work.

Added IslandRemover, ImageEroder, and ImageDialator steps to the pipeline, though they currently only update to a blank image.

Also moved the steps where preceding bone images, and bone images that are off camera are removed. They now happen after the ImageDialator step so as to not interfere with the pipeline.

* re #1108 Fixed issues with the pipeline, and added a check that compares Bone areas to the areas beside them.

In the last commit, the pipeline was fragmented and did not work properly. This issue has since been fixed.
There is also a new function that checks the amount of shadow found in a bone area and compares it to the amount of bone in the areas around it. If the areas surrounding the bone have more shadow, then the area is no longer considered to be a potential bone area.
Also changed the search algorithm so it is more accurate, but recursive.

* re #1108 Added Threshold check based on a column's Standard Deviation

In this commit, the threshold filter was replaced with a check that compared a pixel's value to the standard deviation of the pixels in it's column. If this pixel's value is lower, it is removed.

-Added Documentation
-Cleaned up code
-Fixed minor issue whereby the image was not being returned to the fan image

* re #1108 Changed the search method to be non-recursive, cleaned up code

Replaced the method that was used to find bone areas with one that is non-recursive and faster.
Also moved some code around so that it made more sense.

* re #1108 Bone area search is now based on slope. Added a second island removal step.

The location of bone areas is now determined when pre-bone images are removed, and saved in a class variable for faster, easier access in future. The start and end of bone areas is now determined based on their relative slope to the pixels around them, rather then if they are connected.
Note: the previous way to find bone areas is still in the code, it is just not accessible.

Another island removal step was added after the erosion step to remove smaller islands.

The step for comparing a bone area to the areas next to it was made more flexible, to accommodate large bone areas close it the edge of the screen

* re #1108 added a method to segment bone areas based on their slope

Added in a method that looks at various slopes of each potential bone area. If a slope is too steep, it is divided into a separate bone area.
Also remove the second Island Removal step that was added in the last commit.
Cleaned up code, added comments

* re #1108 Cleaned up code, removed slope comparison method

-Removed the method that compared a bone area's pixels to see the slope it made with the pixels around it.
-Changed variable names to be more clear.
-Added TODO's marking all magic numbers
-Keeps a better log of bone areas to make the code more efficient
-Added comments

* re #1108 Cleaned up code

-Removed old threshold filter
-Removed FillShadowValues and ProcessLinesImage methods
-Added comments
-Fixed style issues
-Made changes to loops for efficiency

* re #1108 added basic input, output, and image processing functionality to vtkPlusTransverseProcessEnhancerTest
Modified existing program vtkPlusTransverseProcessEnhancerTest so that it may better test and get outputs from vtkPlusTransverseProcessEnhancer.
command line arguments may be in the following format:
vtkPlusTransverseProcessEnhancerTest.exe --output-config-file=ConfigFile.xml --input-seq-file=BoneUltrasound_L14.mha --output-seq-file=BoneUltrasound_L14_OUT_TEST.mha

Larger additions to vtkPlusTransverseProcessEnhancerTest include:
-more descriptive error messages.
-support for output as a shadow image file, a lines image file, and processed lines image file.

Also changed vtkPlusTransverseProcessEnhancer.cxx so that it better reads and writes information in config files, as a result of this, vtkPlusTransverseProcessEnhancer.h also had to be modified.
vtkPlusTransverseProcessEnhancer.h was not changed in any other way.

* re #1108 Added ways to get various outputs, including various intermediate output images, and an output config file for recording what inputs were used
Added an optional argument to vtkPlusTransverseProcessEnhancerTest to allow for testing vtkPlusTransverseProcessEnhancer's WriteConfiguration() method. Using this argument will cause a config file to be created. This new config file will be filled with the settings that are being used during the current run of the test program. This new config file is intended to be identical to the inputted config file.

Added or expanded on optional arguments for various intermediate outputs, such as:
--output-lines-image-file
--output-intermediate-image-file
--output-shadow-image-file
--output-processedlines-image-file

Rewrote vtkPlusTransverseProcessEnhancer.cxx's WriteConfiguration() using XML_WRITE macros
Added error checking to alternate output files in vtkPlusTransverseProcessEnhancer.cxx

vtkPlusTransverseProcessEnhancer.h was changed to allow for the changes mentioned above.

* re #1108 Added support for intermediate images to be saved throughout different points in the code.

Removed some command line arguments from vtkPlusTransverseProcessEnhancerTest and added the bool argument: --save-intermediate-images which makes the program save various intermediate images before and after steps of the filters. These intermediate images are saved in the same location as where the output file goes, and their file name is: output image file name + _ + an incrementing index + special postfix + .mha ex: BoneUltrasound_L14_TEST_2Lines.mha

In code, the intermediate images are being stored in a dictionary where _ + an incrementing index + special postfix is the key

* re #1108 Finalized ability to save intermediate images in vtkPlusTransverseProcessEnhancer
Ability to save intermediate images while running vtkPlusTransverseProcessEnhancerTest.cxx hes been presumably finished.
Intermediate images are now saved to the local Output folder in a directory named IntermediateImageFiles, then in a sub-directory based on the file's postfex

The programs used to save intermediate images in variables, this has been changed so that it saves them in a map. The reason for this was to simply things, and also to allow for easier future modifications if more intermediate frames are needed.

* re #1108 Changed output so intermediate files are not in different folders

In the previous commit, intermediate images were stored in different folders based on what filter they were associated with. This has been reverted.
Also gave the intermediate and output image files more descriptive names.

* re #1108 Made the ability to read config files more flexible and reliable

Previously, reading config files relied upon <Processor ... > being the first element of the input xml file. This has been changed to allow for <Processor ... > to be anywhere in the config file.

Changed variable name of DilationKernelRadiusPixel to DilationKernelSize so that it remained consistent with other xml files.

* re #1108 Cleaned up codes to make them more readable

-Added comments from Ben
-Removed the code that was commented out
-Moved initialization of <vtkSmartPointer>'s so they are initialized in the constructor
-Removed intermediate images that were redundant
-Changed various variable/function names to be more clear

* re #1108 Fixed a bug the caused intermediate images to be stored in the input file's directory

Intermediate images are now stored in the same directory as where the output file will be saved

* re #1108 Will now always use all fitters unless told otherwise

When processing frames in vtkPlusTransverseProcessEnhancer, all filters will be used unless the the inputted config file says otherwise

* re #1108 Added method to remove images that precede shadow images. Also cleaned up code.

-Added comments from Ben
-Modified some of the default values so that they produce a more accurate result if the user does not input their value.
-Changed variable names to make them more consistent or clear.
-Moved a section of code that processed image extents to its own method.

* re #1108 Removed a TODO that was already implemented

In the last push, a TODO was implemented, but the TODO comment itself was not removed. This has been fixed.

* re #1108 Added pipeline functionality and a check to see if bones start off camera

Changed the way some filters gained their input, so that the code behaves more like a pipeline

Added a step that eliminates bone areas that are located too close to the edge of the camera.
Added a way to determine where each bone area begins and ends.

* re #1108 Fully connected the pipeline. This update doesn't fully work.

Added IslandRemover, ImageEroder, and ImageDialator steps to the pipeline, though they currently only update to a blank image.

Also moved the steps where preceding bone images, and bone images that are off camera are removed. They now happen after the ImageDialator step so as to not interfere with the pipeline.

* re #1108 Fixed issues with the pipeline, and added a check that compares Bone areas to the areas beside them.

In the last commit, the pipeline was fragmented and did not work properly. This issue has since been fixed.
There is also a new function that checks the amount of shadow found in a bone area and compares it to the amount of bone in the areas around it. If the areas surrounding the bone have more shadow, then the area is no longer considered to be a potential bone area.
Also changed the search algorithm so it is more accurate, but recursive.

* re #1108 Added Threshold check based on a column's Standard Deviation

In this commit, the threshold filter was replaced with a check that compared a pixel's value to the standard deviation of the pixels in it's column. If this pixel's value is lower, it is removed.

-Added Documentation
-Cleaned up code
-Fixed minor issue whereby the image was not being returned to the fan image

* re #1108 Changed the search method to be non-recursive, cleaned up code

Replaced the method that was used to find bone areas with one that is non-recursive and faster.
Also moved some code around so that it made more sense.

* re #1108 Bone area search is now based on slope. Added a second island removal step.

The location of bone areas is now determined when pre-bone images are removed, and saved in a class variable for faster, easier access in future. The start and end of bone areas is now determined based on their relative slope to the pixels around them, rather then if they are connected.
Note: the previous way to find bone areas is still in the code, it is just not accessible.

Another island removal step was added after the erosion step to remove smaller islands.

The step for comparing a bone area to the areas next to it was made more flexible, to accommodate large bone areas close it the edge of the screen

* re #1108 added a method to segment bone areas based on their slope

Added in a method that looks at various slopes of each potential bone area. If a slope is too steep, it is divided into a separate bone area.
Also remove the second Island Removal step that was added in the last commit.
Cleaned up code, added comments

* re #1108 Cleaned up code, removed slope comparison method

-Removed the method that compared a bone area's pixels to see the slope it made with the pixels around it.
-Changed variable names to be more clear.
-Added TODO's marking all magic numbers
-Keeps a better log of bone areas to make the code more efficient
-Added comments

* re #1108 Cleaned up code

-Removed old threshold filter
-Removed FillShadowValues and ProcessLinesImage methods
-Added comments
-Fixed style issues
-Made changes to loops for efficiency

* re #1108 Removed ability to skip filters, added comments

Based on parameters from the xml file, some filters could be turned on or off to better test them. This has been removed. Code was also cleaned up.

* re #1108 Saving intermediate images made more efficient

Prior to entering the AddIntermediateImage method, there is now a check to see if intermediate images should be saved.

* re #1108 Improved comments

Fixed spelling errors and made comments more clear

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/142d2d217e75103ec8a98ae9ad8955a8c6c30cc1|plus:142d2d217e

#### 2017-09-11, 18:50:57 - Anonymous
re #1108: Fixed build error in EnhanceUsTrpSequence command-line tool

Testing will be needed

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6468f65deb5f3dd2331cbb7666c990a049248c00|plus:6468f65deb


## #1109 testesteste
teststestetstest

#### 2016-08-23, 14:13:51 - Adam Rankin
status: changed from "New" to "Invalid"


## #1110 Plus server disconnects from HoloLens client unexpectedly
Investigate reason.

Server is sending tracked frame messages.

#### 2016-08-23, 19:42:08 - Adam Rankin
re #1110 correcting int to double in DelayBetweenRetryAttemptsSec

Adding configurable NumberOfRetryAttempts and DelayBetweenRetryAttemptsSec
Commit: r:4827|plus:4827

#### 2016-11-09, 19:38:44 - Adam Rankin
Further testing indicates it may be due to bandwidth issues on the network.

Possible solutions include image compression, or more tolerant network behavior.

For my immediate issue, I am buying a router that supports 802.11ac.

#### 2016-11-14, 22:35:38 - Adam Rankin
Adjustment of socket settings via config file solved problem.

#### 2016-11-14, 22:35:38 - Adam Rankin
status: changed from "New" to "Fixed"


## #1111 fCal breaks in vtkPlus3DObjectVisualizer.cxx
fCal compiles but breaks in the constructor of vtkPlus3DObjectVisualizer. I fixed this problem and created a patch. The last modifications were done with the revision 4842 by rankin.



#### 2016-09-08, 22:13:54 - Maeliss Jallais
Attachment added: "r4847-vtkPlus3DObjectVisualizer.patch"

#### 2016-09-08, 22:13:54 - Maeliss Jallais
CommentContent: changed from "file:ch5QWmDHer5PXfacwqjQXA
" to null

#### 2016-09-08, 22:16:55 - Maeliss Jallais
file:dZQVPcDHer5QXydmr6bg7m


#### 2016-09-08, 22:16:55 - Maeliss Jallais
Attachment added: "r4847-vtkPlus3DObjectVisualizer.patch"

#### 2016-09-08, 22:25:49 - Maeliss Jallais
Attachment added: "r4847-vtkPlus3DObjectVisualizer.patch"

#### 2016-09-08, 22:29:18 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-09-08, 22:29:19 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-09-08, 22:29:45 - Adam Rankin
Could you provide details about the crash? I will reproduce it as well.

#### 2016-09-09, 01:23:46 - Adam Rankin
test #1111 Correct usage of smart pointer for member variables and regular pointer for references
Commit: r:4849|plus:4849

#### 2016-09-09, 01:23:46 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-09-09, 01:24:27 - Adam Rankin
assigned_to_id: changed from "rankin" to "maeliss.jallais"

#### 2016-09-09, 20:30:46 - Maeliss Jallais
This fixed the bug ! Thanks ! However I think that it is not useful to declare the methods in the vtkPlus3DObjectVisualizer.h with SmartPointers as arguments. You can use simple pointers in the declaration even if afterwards you are going to use vtkSmartPointers.

#### 2016-09-09, 21:52:25 - Adam Rankin
re #1111 reducing smart pointer usage for interface functions
Commit: r:4852|plus:4852

#### 2016-09-11, 13:32:29 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1112 fCal crash on SonixTouch
fCal crash due to insufficient graphics card capabilities on the SonixTouch.

In ..\\..\\..\\vtk\endering\\OpenGL2\\vtkOpenGLRenderWindow.cxx, line 545|vtkWin32OpenGLRenderWindow (03771DE8): GL version 2.1 with the gpu_shader4 extension is not supported by your graphics driver but is required for the new OpenGL rendering backend. Please update your OpenGL driver. If you are using Mesa please make sure you have version 10.6.5 or later and make sure your driver in Mesa supports OpenGL 3.2.

#### 2016-09-13, 17:38:27 - ilkerh
image:dGTL_eEDGr5Pxcdmr6bg7m


#### 2016-09-13, 17:38:27 - ilkerh
Attachment added: "error-new5.png"

#### 2016-09-13, 17:38:27 - ilkerh
image:dGTNS6EDGr5Pxcdmr6bg7m


#### 2016-09-13, 17:38:27 - ilkerh
Attachment added: "error-new4.png"

#### 2016-09-13, 17:48:46 - Andras Lasso
Thanks for reporting this. Please send the Plus log file so that we can investigate the issue (it should be in c:\\Users\\...\\PlusApp-...-Win32\\data\\..._PlusLog.txt).

#### 2016-09-13, 17:58:33 - ilkerh
file:cVLd3sEDSr5PqSdmr6bg7m


#### 2016-09-13, 17:58:33 - ilkerh
Attachment added: "091316_124123_PlusLog.txt"

#### 2016-09-13, 17:58:48 - ilkerh
please find attached.

#### 2016-09-13, 18:13:58 - Adam Rankin
Component: changed from null to "PlusApp-fCal"

#### 2016-09-13, 18:14:01 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-09-13, 18:14:03 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2016-09-13, 18:15:48 - Andras Lasso
Thanks, this is very helpful. We'll to disable OpenGL2 rendering backend and create a new package.

#### 2016-09-13, 18:16:35 - Adam Rankin
summary: changed from "fcal crushed after connection" to "fCal crash on SonixTouch"

#### 2016-09-13, 18:17:02 - Adam Rankin
description: changed from "Hi;
We were previously succ..." to "fCal crash due to insuffici..."

#### 2016-09-13, 18:49:26 - ilkerh
So should I update  OpenGL driver or wait for the new package? 

#### 2016-09-13, 18:55:14 - Adam Rankin
It is a hardware issue, the video card on the SonixTouch is not usable with the new OpenGL2 backend of VTK7. Andras will generate a package that is built with the OpenGL backend.

#### 2016-09-13, 19:48:24 - Andras Lasso
Please use this package:
http://perk-software.cs.queensu.ca/plus/packages/experimental/PlusApp-2.3.0.4859-Ultrasonix-6.1-Win32-opengl1.exe


#### 2016-09-13, 19:53:54 - Andras Lasso
re #1112: Change default VTK randering backend to OpenGL

OpenGL2 rendering backend has compatibility issues (does not work on Ultrasonix systems, does not work through Windows Remote Desktop, etc) and we don't need any features of the OpenGL2 VTK rendering backend.

OpenGL2 can be optionally enabled by setting PLUSBUILD_VTK_RENDERING_BACKEND variable to OpenGL2.
Commit: r:4860|plus:4860

#### 2016-09-13, 19:53:54 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2016-09-13, 20:03:08 - Andras Lasso
re #1112: Change default VTK rendering backend to OpenGL

OpenGL2 rendering backend has compatibility issues (does not work on Ultrasonix systems, does not work through Windows Remote Desktop, etc) and we don't need any features of the OpenGL2 VTK rendering backend.

OpenGL2 can be optionally enabled by setting PLUSBUILD_VTK_RENDERING_BACKEND variable to OpenGL2.
Commit: r:4861|plus:4861

#### 2016-09-14, 01:15:27 - ilkerh
This worked. Thank you all for the quick response.

#### 2016-09-14, 15:06:17 - Adam Rankin
status: changed from "New" to "Fixed"


## #1113 PlusBuild cannot be configured if not checked out
Steps to reproduce:
1. From assembla website choose Download of Trunk/PlusBuild
2. Attempt to configure with CMake

#### 2016-09-26, 15:13:45 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-09-26, 15:13:48 - Adam Rankin
Component: changed from null to "PlusBuild"

#### 2016-09-26, 15:13:51 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-09-26, 15:59:52 - Adam Rankin
test #1113

Running WC_INFO, detecting errors. Preventing future configures from reporting the same error.
Commit: r:4887|plus:4887

#### 2016-09-26, 15:59:52 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-09-26, 16:00:16 - Adam Rankin
assigned_to_id: changed from "rankin" to "isabellamorgan"

#### 2016-09-26, 16:04:11 - Andras Lasso
Note that we already have PLUSBUILD_OFFLINE_BUILD flag that allows Plus to be built without internet connection.

#### 2016-09-26, 16:06:34 - Adam Rankin
I see that, but in this case, I still want the superbuild to check out the dependencies, it's just that PlusBuild itself is not a working copy.

#### 2016-09-26, 16:15:55 - Andras Lasso
I think we should not encourage this use case but if you have a good reason to do so then explain in comments and add a check like this:
IF( EXISTS ${CMAKE_SOURCE_DIR}/.svn/ )
  ...
ENDIF()
(see https://cmake.org/pipermail/cmake/2010-April/036361.html)

A minor comment: always use positive variable names. Instead of PLUSBUILD_NOT_WORKING_COPY choose something like PLUSBUILD_SVN_WORKING_COPY. Otherwise you may end up writing funny things like this: NOT PLUSBUILD_NOT_WORKING_COPY.

Thanks!

#### 2016-09-26, 16:15:55 - Andras Lasso
assigned_to_id: changed from "isabellamorgan" to "rankin"

#### 2016-09-26, 16:15:55 - Andras Lasso
status: changed from "Test" to "Accepted"

#### 2016-09-26, 16:15:55 - Andras Lasso
CommentContent: changed from "I think we should not encourage this use case but if you have a good reason to do so then explain in comments and add a check like this:
IF( EXISTS ${CMAKE_SOURCE_DIR}/.svn/ )
  ...
ENDIF()
(see https://cmake.org/pipermail/cmake/2010-April/036361.html)

A" to "I think we should not encourage this use case but if you have a good reason to do so then explain in comments and add a check like this:
IF( EXISTS ${CMAKE_SOURCE_DIR}/.svn/ )
  ...
ENDIF()
(see https://cmake.org/pipermail/cmake/2010-April/036361.html)

A"

#### 2016-09-26, 16:21:14 - Adam Rankin
test #1113 using .svn folder as flag for working copy present
Commit: r:4888|plus:4888

#### 2016-09-26, 16:21:14 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-09-26, 16:21:40 - Adam Rankin
assigned_to_id: changed from "rankin" to "isabellamorgan"

#### 2016-09-26, 16:25:20 - Andras Lasso
@rankin It looks good, thank you!

#### 2016-10-05, 20:12:39 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1114 Add visual feedback to temporal calibration line finding
I was inspired by vtkPlusTranverseProcessEnhancer's DrawLine and decided to extract it to PlusCommon.

This ticket is to track progress using that to identify the line found by the temporal calibration in the image coordinate system.

#### 2016-10-06, 19:57:49 - Adam Rankin
fixed #1114 line actor added to image visualizer to show line segmentation
Commit: r:4894|plus:4894

#### 2016-10-06, 19:57:49 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2016-10-07, 13:16:16 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2016-10-07, 13:44:42 - Adam Rankin
test #1114 removing Visual Studio only code
Commit: r:4895|plus:4895

#### 2016-10-07, 13:44:42 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-10-07, 19:49:07 - Andras Lasso
re #1114: Fixed build error
Commit: r:4896|plus:4896

#### 2016-10-07, 19:53:28 - Andras Lasso
Thank you Adam, this works very nicely!

Would it be easy to show the line while in the temporal calibration tab (and not just during data collection)? Seeing the line helps in finding good imaging settings, scanning position, etc. but now I have to keep clicking on starting the calibration. It's a minor thing, so if it is not very easy to implement then don't worry about it.

#### 2016-10-07, 20:52:42 - Adam Rankin
Do you mean show it before starting the calibration? Currently it only operates in the temporal calibration tab

#### 2016-10-07, 20:57:30 - Andras Lasso
Showing it all the time while we are on the temporal calibration tab. Currently it is only shown if you click Start.

#### 2016-10-07, 20:58:21 - Adam Rankin
Easy peasy, will do.

#### 2016-10-07, 20:58:21 - Adam Rankin
status: changed from "Test" to "Accepted"

#### 2016-10-07, 22:57:09 - Adam Rankin
re #1114 continuously segmenting line if a video channel is active in the temporal calibration toolbox
Commit: r:4897|plus:4897

#### 2016-10-07, 23:07:01 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-10-27, 13:32:34 - Adam Rankin
I am happy with the result. @lassoan if you want any changes re-open the ticket.

#### 2016-10-27, 13:32:34 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-10-27, 14:41:28 - Andras Lasso
Yes, it works great, thank you!


## #1115 PlusServerLauncher crashes if logging at debug level when starting PlusServer
Reported by Norman and I also experienced this.

#### 2016-10-05, 17:37:09 - Andras Lasso
Issue Type: changed from "Enhancement" to "Bug"

#### 2016-10-05, 20:11:11 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-10-05, 20:11:16 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2016-10-05, 20:11:18 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-10-05, 20:13:26 - Adam Rankin
Component: changed from "PlusLib" to "PlusApp-PlusServerLauncher"

#### 2016-10-05, 20:43:35 - Adam Rankin
test #1115 Improving the logic for parsing incoming log messages from plusserver instance
Commit: r:4891|plus:4891

#### 2016-10-05, 20:43:35 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-10-05, 20:43:47 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2016-10-22, 21:11:25 - Andras Lasso
Confirmed that the crash is fixed now. Thank you Adam!

#### 2016-10-22, 21:11:25 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1116 Enable rotation of Epiphan stream
As per discussion from url:https://app.assembla.com/spaces/plus/messages/5677283|this message, rotation of the incoming Epiphan stream is desired.

#### 2016-10-15, 22:42:51 - Adam Rankin
re #1116 Adding interface targets to PlusLib for convenient access to interface library headers
Commit: r:4910|plus:4910

#### 2016-10-15, 22:42:51 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-10-15, 23:24:27 - Adam Rankin
test #1116 Adding rotation and scaling parametsrs to the Epiphan capture device
Commit: r:4911|plus:4911

#### 2016-10-15, 23:24:27 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-10-15, 23:35:21 - Adam Rankin
re #1116 Cleaned up header file, removed useless if statement
Commit: r:4912|plus:4912

#### 2016-11-14, 22:35:17 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2017-01-30, 21:59:17 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"


## #1117 PLUS does not build against reference OpenIGTLink build
See subject.

PLUS should build against url:https://github.com/openigtlink/OpenIGTLink|https://github.com/openigtlink/OpenIGTLink

#### 2016-10-24, 15:55:43 - Adam Rankin
Since openigtlink master is not v3 compliant, I am adding a check in the CMake external_openigtlink to check for v3 compatibility.

#### 2016-10-24, 16:20:36 - Adam Rankin
fixed #1117 Preventing successful CMake with an invalid build of OpenIGTLink
Commit: r:4915|plus:4915

#### 2016-10-24, 16:20:36 - Adam Rankin
status: changed from "New" to "Fixed"


## #1118 Add the option to save plots from temporal calibration in fCal
Button or right-click option should do.

#### 2016-10-27, 13:45:12 - Adam Rankin
description: changed from null to "Button or right-click optio..."

#### 2016-10-27, 13:45:20 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-10-27, 15:14:28 - Adam Rankin
re #1118 Adding button in temporal calibration plots window to save the plots to .png

Updating method of defining c++11 features by using CMAKE_CXX_STANDARD

Minor formatting fixes

Updating ToolStateDisplayWidget resizing to use requested size hint, adding delay to give qt a chance to resolve widget adding
Commit: r:4917|plus:4917

#### 2016-10-27, 15:14:53 - Adam Rankin
status: changed from "New" to "Fixed"


## #1119 Review install of PLUS is fully functional
As per message, instigate a review of PLUS install.

https://app.assembla.com/spaces/plus/messages/5692383

#### 2016-11-01, 15:12:47 - Andras Lasso
Using a pre-built Plus library will only be successful if the application is built with the exactly same compiler and build settings as Plus. It is only feasible on the same computer or in a computer lab where all computer is set up from the same disk image. I'm not sure how frequent this use case is, but if it does not add much complexity to the build/install scripts then it's fine to add this.

It's important to exclude developer files from PlusApplication packages (the packages that we create now that users install). PlusApplication packages should not even contain .h and .lib files to minimize the package size.

#### 2016-12-16, 16:47:35 - Adam Rankin
milestone_id: changed from "Plus-2.5.0" to "Release Plus-Future"

#### 2016-12-16, 16:47:35 - Adam Rankin
assigned_to_id: changed from "rankin" to null


## #1120 Make Telemed brace design thicker
The current version cracked at the hinge

#### 2016-11-10, 04:20:25 - Tamas Ungi
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-11-10, 04:20:28 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2016-11-10, 04:20:32 - Tamas Ungi
status: changed from "New" to "Accepted"

#### 2016-11-10, 04:21:07 - Tamas Ungi
Re #1120: Made the walls and the hinge thicker.
Commit: r:4927|plus:4927

#### 2016-11-10, 04:21:14 - Tamas Ungi
status: changed from "Accepted" to "Test"

#### 2017-03-25, 00:39:42 - Tamas Ungi
status: changed from "Test" to "Fixed"


## #1121 Interson probe fcal error
We are trying to compile the packages for using interson probes with the Claron Trackers. We have installed all the required software on a 64bit local PC but were unable to run the fcal software. We are getting an error code 0xc0150002. 
Help would be appreciated


#### 2016-11-14, 18:04:26 - Adam Rankin
Are you familiar with DependencyWalker? Could you use it to identify any missing DLLs?

#### 2016-11-14, 18:36:32 - ilkerh
Thanks for the quick reply. I have not used that before. However, I will install it (http://www.dependencywalker.com/) and will get back to you.


#### 2016-11-28, 14:17:46 - ilkerh
Looks like this library file is missing: WDAPI1010.dll
Also if we install the ' Plus Application 2.4.0.4926(Win64) the fcal software starts without any error but that version does not have a interson probe configuration file. Hope this helps to figureout what is missing. If it is easier we can also allow remote access to that computer. 


#### 2016-11-28, 14:35:47 - Andras Lasso
WDAPI1010.dll is part of the driver package for older Interson probes (that Plus installers support out-of-the box). Does Interson's own software work on that computer?
* If yes, then it means that you have the newer type of Interson probes. You need to get the SDK from Interson and build Plus yourself, with PLUS_USE_INTERSONSDKCXX_VIDEO enabled.
* If not, then install Interson drivers and application.

#### 2016-11-28, 15:07:44 - ilkerh
Interson works on the PC. If we have to build PLUS are there any specific instruction we can follow?


#### 2016-11-28, 16:17:31 - Andras Lasso
Just the usual - https://app.assembla.com/spaces/plus/wiki/Windows_Build_Instructions

#### 2016-12-16, 16:47:13 - Adam Rankin
Closing this ticket. If you have any further issues, please feel free to open another.

#### 2016-12-16, 16:47:13 - Adam Rankin
assigned_to_id: changed from null to null

#### 2016-12-16, 16:47:13 - Adam Rankin
status: changed from "New" to "Invalid"


## #1122 Interson probe fcal error
We are trying to compile the packages for using interson probes with the Claron Trackers. We have installed all the required software on a 64bit local PC but were unable to run the fcal software. We are getting an error code 0xc0150002. 

#### 2016-11-14, 18:26:36 - Adam Rankin
status: changed from "New" to "Invalid"


## #1123 Make transforms sent via tracked frame configurable
Must be backwards compatible.

#### 2016-11-15, 00:54:04 - Adam Rankin
As it stands, the TRACKEDFRAME message only sends whichever custom frame fields currently exist in the tracked frame, however I would like it to be configurable to send a user-defined list of transforms.

#### 2016-11-15, 01:16:04 - Adam Rankin
re #1123 Enabling the user to configure via config file or client info message which transforms to be sent

User can set elements of the TransformNames configuration element, this list defines the transforms packaged into the tracked frame
Commit: r:4931|plus:4931

#### 2016-11-15, 01:16:41 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-11-15, 15:40:31 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1124 Captured sequences sometimes saved as 2D images
About 20% of the cases header of captured sequences are corrupted (partly 2D partly 3D). For example:

ObjectType = Image
NDims = 2
AnatomicalOrientation = RAI
BinaryData = True
BinaryDataByteOrderMSB = False
CenterOfRotation = 0 0
CompressedData = False
DimSize = 512 512                    130
ElementNumberOfChannels = 1
ElementSpacing = 1 1
ElementType = MET_UCHAR
Kinds = domain domain               list
Offset = 0 0
TransformMatrix = 1 0 0 1
UltrasoundImageOrientation = MFA
UltrasoundImageType = BRIGHTNESS

The problem is that the logic that decides if a file should be time sequence or not checks the number of tracked frames at the first write. At that time there may be just one frame in the tracked frame list but later more frames are acquired.

Proposed solution: By default metaimage/nrrd writers should create time sequences, so unless there is a specific need to create single-frame data, the dimensions should always include a time dimension.

#### 2016-11-25, 18:49:39 - Andras Lasso
fixed #1124: Fixed issue of vtkVirtualDiscCapture creating images with inconsistent dimensionality information in the header
Commit: r:4949|plus:4949

#### 2016-11-25, 18:49:39 - Andras Lasso
status: changed from "Accepted" to "Fixed"

#### 2016-12-16, 17:10:32 - Andras Lasso
re #1124: Fixed issue of vtkVirtualDiscCapture creating images with inconsistent dimensionality information in the header (fix backported to stable branch)
Commit: r:4978|plus:4978


## #1125 Enable build of PLUS with VTK 7.1
Must be backwards compatible to 7.0

#### 2016-11-29, 16:36:31 - Adam Rankin
Update to VTK 7.1 caused a lot of build errors. In VTK type of modified time has changed, it is now vtkMTimeType. Please search for all *MTime instances in Plus source code and use vtkMTimeType instead of unsigned long everywhere (also in variables where we store modified time). You could also add the vtkMTimeType typedef in PlusConfigure.h.in for backward compatibility with VTK7.0 and earlier.

vtkPlusHapticsDevice.h
=> vtkGetMacro(LastUpdateTime,double);
=> unsigned long LastUpdateTime;

vtkPlusToolAxesActor.cxx
=> unsigned long mTime = this->Superclass::GetMTime();
=> unsigned long mTime = this->GetMTime();

vtkPlusVolumeReconstructor.h
=> unsigned long ReconstructedVolumeUpdatedTime;

Probably the build errors are due to missing typedef for VTK 7.0 and earlier. I don't think we need to provide backward VTK compatibility in the trunk at all cost, but it's so simple to add this typedef that it is worth doing it.

From VTKv7\\Common\\Core\\vtkType.h:

Provide this define to facilitate apps that need to support older
versions that do not have vtkMTimeType

#ifndef VTK_HAS_MTIME_TYPE
#if VTK_SIZEOF_LONG == 8
typedef unsigned long vtkMTimeType;
#else
typedef vtkTypeUInt64 vtkMTimeType;
#endif
#endif

#### 2016-11-29, 16:51:20 - Adam Rankin
re #1125 restoring build by adding MTime type define and adding necessary includes to class using MTime type
Commit: r:4952|plus:4952

#### 2016-11-29, 17:03:18 - Adam Rankin
re #1125 removing defunct Freedom6S device (API doesn't work on any modern OS)

Updating remaining references to modified time to use new typedef
Commit: r:4953|plus:4953

#### 2016-11-29, 17:03:34 - Adam Rankin
Testing other build configurations.

#### 2016-11-29, 17:03:34 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-11-29, 19:03:32 - Adam Rankin
re #1125 updating default version of VTK from 7.0 to 7.1
Commit: r:4954|plus:4954

#### 2016-11-29, 19:03:38 - Adam Rankin
Confirmed successful builds.

#### 2016-11-29, 19:03:38 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1126 Linux build failing due to C++11 compiler issues
ITK currently fails with CMAKE_CXX_STANDARD.

#### 2016-12-02, 21:42:10 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-12-02, 21:42:56 - Adam Rankin
Build succeeds with conventional -std=c++11 added to CMAKE_CXX_FLAGS. Will revert until older setups are phased out and CMAKE_CXX_STANDARD works reliably.

#### 2016-12-02, 21:43:22 - Adam Rankin
test #1126 using -std=c++11 for ITK build to enable older linux builds
Commit: r:4955|plus:4955

#### 2016-12-02, 21:43:22 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-12-03, 16:34:32 - Adam Rankin
ITK build passed. Now building entire project.

#### 2016-12-03, 17:34:12 - Adam Rankin
All sorted.

#### 2016-12-03, 17:34:12 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2016-12-03, 17:59:35 - Andras Lasso
Great, thank you!

#### 2016-12-03, 18:01:57 - Andras Lasso
Do you know why are those PlusApp build errors on Linux  - http://crunch.cs.queensu.ca/CDash/viewBuildError.php?buildid=61340 ?



## #1127 Create Ascension style adapter for Aurora EM tracking fixture


#### 2016-12-05, 19:15:26 - Zac Baum
re: #1127 V1.0 of the Ascension style holder for Aurora EM tracking fixtures.
Commit: r:4959|plus:4959

#### 2016-12-16, 16:46:38 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-06-01, 14:54:30 - Zac Baum
status: changed from "Accepted" to "Fixed"


## #1128 Allow VS 2012 as acceptable build platform
Confirm successful build, then re-enable.

#### 2016-12-20, 17:05:37 - Adam Rankin
fixed #1128 vs2012 now produces a warning, but allows build to succeed
Commit: r:4987|plus:4987

#### 2016-12-20, 17:05:37 - Adam Rankin
status: changed from "New" to "Fixed"


## #1129 Documentation build hangs
Removal of VS2008 related variable broke documentation build.

https://app.assembla.com/spaces/plus/subversion/commits/4973

Remove all references to msdev

#### 2016-12-20, 16:55:31 - Adam Rankin
fixed #1129 removing all references to msdev, enabling documentation build to succeed
Commit: r:4986|plus:4986

#### 2016-12-20, 16:55:31 - Adam Rankin
status: changed from "New" to "Fixed"


## #1130 MMF video source not receiving samples
Examine recent history of changes for suspect reason.

#### 2016-12-21, 18:04:50 - Adam Rankin
test #1130 reverting recent changes to mmf video source, confirmed working locally, running automated tests
Commit: r:4988|plus:4988

#### 2016-12-21, 18:04:50 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-12-21, 18:22:21 - Adam Rankin
Confirmed working, automated tests pass and 2x independent local tests succeded

#### 2016-12-21, 18:22:21 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1131 OpenIGTLink_DIR is not passed properly to PlusApp
Whenever I use PlusBuild to build a clean version of Plus, PlusApp picks up _C:/Dev/OpenIGTLink-build_ (some build of OpenIGTLink) instead of the one in Deps folder, e.g. _C:/Dev/plus/bin64-vs2015/Deps/OpenIGTLink-bin_. *OpenIGTLink_DIR* is set to correct location in PlusLib subproject.

The workaround is to edit CMake cache of PlusApp-bin folder and set correct path.

#### 2016-12-22, 18:51:45 - Adam Rankin
test #1131 Cleaning up PlusLib downstream CMake files (config, use) by properly settings OpenIGTLink_DIR before calling find package
Commit: r:4991|plus:4991

#### 2016-12-22, 18:51:45 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-12-22, 18:51:45 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-12-22, 18:52:11 - Adam Rankin
Sync & configure PlusLib, build PlusApp, let me know if it works!

#### 2016-12-22, 22:42:40 - Dzenan Zukic
That seems to have cured it. I now have another, probably unrelated build error:

5>------ Build started: Project: PlusServerLauncher, Configuration: Release x64 ------
5>C:\\Program Files (x86)\\MSBuild\\Microsoft.Cpp\\v4.0\\V140\\Microsoft.CppCommon.targets(1407,5): warning MSB6002: The command-line for the 'RC' task is too long. Command-lines longer than 32000 characters are likely to fail. Try reducing the length of the command-line by breaking down the call to 'RC' into multiple calls with fewer parameters per call.

#### 2016-12-22, 22:49:31 - Andras Lasso
Since ITK and VTK modularization introduced, build command-line lengths increased dramatically - hitting OS limits. The simplest workaround is to build all applications that use ITK and VTK in a very short parent directory (C:\\D\\PlusExp works for me).

#### 2016-12-23, 14:17:56 - Dzenan Zukic
In shorter build path it worked.

#### 2016-12-23, 14:17:56 - Dzenan Zukic
status: changed from "Test" to "Fixed"


## #1132 VolumeReconstructor does not properly calculate the extent.
https://app.assembla.com/spaces/plus/messages/5724793

#### 2016-12-22, 22:08:14 - Dzenan Zukic
fixed #1132 Do not let the last frame fall out of volume
Commit: r:4993|plus:4993

#### 2016-12-22, 22:08:14 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2017-02-05, 01:10:39 - Adam Rankin
re #1132 updating volume reconstructor test data to match updated extent calculation
Commit: r:5052|plus:5052


## #1133 Command line tools crash with --help option [static libraries]
When command line tools such as VolumeReconstructor or EditSequenceFile are invoked with --help option, they crash in PlusLib\\src\\PlusCommon\\vtkPlusRecursiveCriticalSection.cxx, line 73. That is being invoked from ~vtkPlusConfigCleanup(), \\PlusLib\\src\\PlusCommon\\vtkPlusConfig.cxx, line 45. This only happens with static libraries, it does not happen with shared libraries.



#### 2016-12-23, 15:35:44 - Adam Rankin
priority: changed from "Lowest (5)" to "Normal (3)"

#### 2016-12-23, 15:35:46 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-12-23, 15:35:48 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2016-12-23, 15:35:52 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2016-12-23, 16:59:58 - Adam Rankin
(Obviously) confirmed. Investigating.

#### 2016-12-23, 17:29:31 - Adam Rankin
test #1133 Correcting order of static destruction and added a comment describing the situation

Information from http://stackoverflow.com/questions/469597/destruction-order-of-static-objects-in-c
Commit: r:4994|plus:4994

#### 2016-12-23, 17:29:31 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2016-12-23, 17:29:47 - Adam Rankin
Confirmed working on my local copy, going to test with shared libraries now.

#### 2016-12-23, 17:55:59 - Andras Lasso
Great, thank you Adam!

#### 2016-12-23, 18:27:23 - Dzenan Zukic
This fixes it, thanks!

#### 2016-12-23, 18:27:23 - Dzenan Zukic
status: changed from "Test" to "Fixed"


## #1134 Reduce build warnings on Mac platform
See subject

#### 2016-12-25, 20:40:02 - Adam Rankin
re #1134 Adding VTK_OVERRIDE to PrintSelf function declarations
Commit: r:4995|plus:4995

#### 2016-12-26, 03:44:14 - Adam Rankin
re #1134 correcting mac/linux build script file generation


Commit: r:4996|plus:4996

#### 2017-01-04, 01:11:12 - Adam Rankin
status: changed from "New" to "Fixed"


## #1135 Support uncompressed writing in VolumeReconstructor
For some inputs, compressing the output image can take as much time as doing the volume reconstruction itself. Add _--disable-compression_ flag, and respect it.

#### 2016-12-27, 19:02:12 - Dzenan Zukic
fixed #1135 Support uncompressed writing
Commit: r:5000|plus:5000

#### 2016-12-27, 19:02:12 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2016-12-27, 19:04:40 - Dzenan Zukic
Commit 5000! Do I get an award? :) @rankin @lassoan 

#### 2016-12-28, 23:08:43 - Andras Lasso
Congratulations, you've won a golden chalice! For your convenience, you can download the 3D model from url:http://www.turbosquid.com/3d-models/3ds-max-golden-chalice-royal/521188|here and print it in gold url:http://www.shapeways.com/materials/gold|here. The 3D model is provided you for free and you only have to cover the cost of 3D printing.

#### 2016-12-28, 23:08:43 - Andras Lasso
CommentContent: changed from "Congratulations, you've won a golden chalice! For your convenience, you can download the 3D model from url:http://www.turbosquid.com/3d-models/3ds-max-golden-chalice-royal/521188|here and print the model in gold" to "Congratulations, you've won a golden chalice! For your convenience, you can download the 3D model from url:http://www.turbosquid.com/3d-models/3ds-max-golden-chalice-royal/521188|here and print it in gold"

#### 2016-12-28, 23:14:26 - Dzenan Zukic
Thanks Andras for a good laugh!


## #1136 Move PlusApp/CommonWidget from PlusApp to PlusLib
CommonWidgets are re-used in downstream projects, they should be available in PlusLib.

Adds Qt dependency, but only necessary for those wishing to build Qt based apps (default off).

#### 2016-12-29, 14:48:59 - Adam Rankin
Classes specific to fCal should be moved into fCal project/folder

#### 2016-12-29, 21:03:01 - Adam Rankin
test #1136 Moved classes specific to fCal to fcal project

Moved re-usable classes to PlusLib, renamed to proper QXyz convention

Minor cleanup to widget layouts
Commit: r:5002|plus:5002

#### 2016-12-29, 21:03:01 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2016-12-29, 21:03:01 - Adam Rankin
status: changed from "New" to "Test"

#### 2016-12-29, 21:03:47 - Adam Rankin
re #1136 Missing files due to TortoiseSVN wierdness
Commit: r:5003|plus:5003

#### 2016-12-30, 14:46:29 - Andras Lasso
Thanks for the developments. It looks good except:
* build errors on the factory
* confusing Qt class naming - should QCustomAction be QPlusCustomAction instead? In most libraries library name prefixes are lowercase (vtkSomething, pqSomething, ctkSomething, ...). Shouldn't we use qPlus... prefix instead?
* vtkPlus... classes in PlusWidgets: I think they should not be part of the Plus library API. I would not spend any time with implementing a new framework for VTK scene visualization - I would always recommend developers to build on existing platforms (Slicer, MITK, CustusX, ...). I wouldn't like to distract our and Plus-using developers attention with these classes - even if it seems that with a little bit of work these classes could be made useful in general for 'simple' applications, this approach is not good (most applications get increasingly complex and this simplistic few classes would not be a good enough foundation; so developers would need to do a painful switch to a better framework then).

#### 2016-12-30, 15:31:40 - Adam Rankin
re #1136 Correcting dead link to old qrc file
Commit: r:5004|plus:5004

#### 2016-12-30, 15:40:59 - Adam Rankin
re #1136 renaming class to more accurate description
Commit: r:5005|plus:5005

#### 2016-12-30, 16:50:56 - Adam Rankin
Clean build passed, will check on dashboards tomorrow morning.

Renamed the class to be more descriptive. With regards to prefix, Qt classes are all prefixed Q (QWidget, QLabel, etc...) and subclasses should be named as such.

There are no vtk classes in PlusWidgets, those were all moved -- ooohhh hey, clean checkout showed the error. Those shouldn't be there. Removing now.

#### 2016-12-30, 17:18:00 - Adam Rankin
re #1136 removing incorrectly committed files
Commit: r:5006|plus:5006

#### 2017-01-04, 00:53:09 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1137 Volume reconstructor has problems with negative image scaling
Invoking VolumeReconstructor with these parameters _--source-seq-file=UF1.mhd --output-volume-file=UF1.mha --config-file=Config1.xml --image-to-reference-transform=ImageToReference_ produces very strange results. Results are even more mysterious if *NumberOfThreads* >1.

I suspect it has something to do with negative scaling factor in _ImageToUSImage_ matrix. Here is a reconstruction result overlaid with some older settings (ultrasound orientation UN instead of UF, no clipping regions, positive scaling and no Y translation in the _ImageToUSImage_ matrix).

If you can't fix this, can you point me to the right places in code?

file:cV_2O60TCr5OkoacwqjQXA|UF1.mhd
file:c14T0U0TCr5Ooldmr6QqzO|UF1.raw
file:c4AIlW0TCr5Ooldmr6QqzO|Config1.xml
image:bP4rhM0TKr5QeFdmr6CpXy|Screenshot 2017-01-04 18.54.53.png


#### 2017-01-05, 00:35:53 - Andras Lasso
Probably the issue is that the volume reconstructor expects the image coordinate system to be right-handed. ImageToUSImage matrix has a negative determinant, so it essentially turns the volume inside out. Change the image header in the metaimage file (xN<->xF) and Plus will automatically flip the image into the correct orientation right after it reads it from the file.

#### 2017-01-05, 00:35:53 - Andras Lasso
status: changed from "New" to "Test"

#### 2017-01-05, 01:05:43 - Dzenan Zukic
Even with _UltrasoundImageOrientation_ switched from *MFA* to *UF* the result is still the same.
file:c-rBJi0Uir5OoAdmr6bg7m|UF1.mhd


#### 2017-01-05, 01:19:01 - Andras Lasso
If original value was xFy then set it to xNy (and of course use a transform with positive determinant).

#### 2017-01-05, 01:19:01 - Andras Lasso
CommentContent: changed from "If original value was xFy then set it to xNy" to "If original value was xFy then set it to xNy (and of course use a transform with positive determinant)."

#### 2017-01-05, 01:23:34 - Dzenan Zukic
I tried setting MNA too. This produces an error in PlusLib\\src\\PlusCommon\\PlusVideoFrame.cxx line 989 (Image orientation conversion is not supported between MNA and MF). I will a different matrix too.

#### 2017-01-05, 01:28:29 - Dzenan Zukic
Totally positive matrix did not help either.
file:a11juu0Uyr5QrpacwqjQYw|UF1.mhd
file:a1134E0Uyr5QTQdmr6bg7m|Config1.xml


#### 2017-01-05, 01:31:34 - Andras Lasso
> Image orientation conversion is not supported between MNA and MF

For 2D images the orientation can be defined by two letters. I assumed that the third letter is ignored, but apparently it is checked. So, you have to use MN then.


#### 2017-01-05, 01:33:39 - Andras Lasso
> Totally positive matrix did not help either.

What do you mean? It must have solved the inside-out-turned-fan. What error remained?

You still have to use correct image orientation to get a correctly reconstructed volume.

#### 2017-01-05, 01:35:30 - Dzenan Zukic
One combination of parameters and result
file:ag07Q-0UCr5PNcacwqEsg8|Config1.xml
file:ag3Cqa0UCr5RpcacwqjQYw|UF1.mhd
image:aYg3EI0UCr5Rm1dmr6bg7m|Screenshot 2017-01-04 20.34.05.png


#### 2017-01-05, 01:36:55 - Dzenan Zukic
Another combination
image:bGo3-M0UCr5QiGdmr6QqzO|Screenshot 2017-01-04 20.35.49.png
file:bLw5YQ0UCr5Pu9acwqjQYw|Config1.xml
file:bLFWm-0UCr5Puydmr6bg7m|UF1.mha


#### 2017-01-05, 01:37:42 - Dzenan Zukic
The problem is not image orientation, but some unwanted clipping region placed kind of randomly.

#### 2017-01-05, 02:27:14 - Andras Lasso
Can you post an input file sample? (at least a single frame)

#### 2017-01-05, 02:30:15 - Andras Lasso
Have you checked slice positions using CrateSliceModels? Can you post the resulting STL file?

#### 2017-01-05, 02:31:54 - Andras Lasso
Have you checked clipping region using DrawClipRegion?
http://perk-software.cs.queensu.ca/plus/doc/nightly/user/ApplicationDrawClipRegion.html

#### 2017-01-05, 02:56:59 - Andras Lasso
You may also try setting optimization to PARTIAL or NONE.

#### 2017-01-05, 15:39:15 - Dzenan Zukic
I posted the raw file in the original ticket description (it contains 4 slices).
file:dhuuyG01Sr5PFcacwqEsg8|UF1.mhd
file:dhumRS01Sr5RFcdmr6CpXy|Config1.xml

In the screenshot is the resulting .vtk file. The position is different from the reconstructed volume.
image:ar1fOy01Or5R5HacwqjQXA|Screenshot 2017-01-05 10.15.55.png
file:aNzaR001Or5PCfdmr6QqzO|UF1.vtk

Clip regions are correct (this is what I want them to be in relations to the ultrasound slice):
image:c9girm01Wr5ObLacwqjQXA|UF1clip.png

With partial optimizations, the result is very similar to full optimization. With optimization set to none, the program crashes in _PlusLib\\src\\PlusVolumeReconstruction\\vtkPlusPasteSliceIntoVolumeHelperUnoptimized.h_ line 329 (Access violation reading location).


#### 2017-01-05, 21:28:47 - Andras Lasso
re #1137: Fixed crash in volume reconstructor when PixelRejectionThreshold was specified and Optimization was set to 'NONE'
Commit: r:5009|plus:5009

#### 2017-01-05, 21:28:47 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-01-05, 22:13:44 - Andras Lasso
re #1137: Fixed clipping fan computation in optimized (partial or full) volume reconstruction mode

Middle section rejection (that blanks out clipping fan's concave center section) computation did not work correctly outside the frame's rectangle.
Commit: r:5010|plus:5010

#### 2017-01-05, 22:19:21 - Andras Lasso
I've found and fixed two bugs.
1. Crash in pixel-rejection in non-optimized mode was due to copy-paste error in an untested branch (we only use non-optimized mode for debugging, so it is not very well tested)
2. Incorrect clipping fan computation in optimized mode occurred due to the somewhat unusual probe geometry (fan centerpoint being very far out of the image)

I think now the behavior should be correct, but let us know if you still find unexpected results.

#### 2017-01-06, 00:05:42 - Dzenan Zukic
Thanks a lot Andras!

#### 2017-01-06, 00:05:42 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2017-01-06, 04:35:51 - Andras Lasso
re #1137: Merged volume reconstructor fan clipping and PixelRejectionThreshold fixes from trunk

r5010
re #1137: Fixed clipping fan computation in optimized (partial or full) volume reconstruction mode
---------------------
r5009
re #1137: Fixed crash in volume reconstructor when PixelRejectionThreshold was specified and Optimization was set to 'NONE'
---------------------

Commit: r:5011|plus:5011


## #1138 Add request model by name command
null

#### 2017-01-10, 18:50:37 - Adam Rankin
test #1138 Adding handling of GET_POLYDATA message
Commit: r:5015|plus:5015

#### 2017-01-10, 18:50:37 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-07-16, 14:03:08 - Adam Rankin
re #1138 converting from GET_POLYDATA v2 style query to Plus style command query

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/054fe2148defded4a8c24f01817477f14def32a2|plus:054fe2148d

#### 2017-07-16, 14:05:40 - Adam Rankin
re #1213 adding first pass implementation of RTSP video device

currently crashes when trying to write frame to buffer (deep in vtkImageData deepcopy) so more investigation needed

temporary change to include new volume query method

re #1138 converting from GET_POLYDATA v2 style query to Plus style command query

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/56dd24bcca14982ff1aacaf07a8a9904372f8ad8|plus:56dd24bcca

#### 2017-08-10, 23:42:08 - Adam Rankin
re #1138 improving Plus command response to also properly populate metadata fields relating to command responses

fixing minor bugs in command response values being hardcoded

renaming vtkPlusCommandCommandResponse to vtkPlusCommandRTSCommandResponse for clarity about classes intended purpose (send RTS_COMMAND back to client)

Branch: plusserver_command_metadata
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/240d8d7a910c78356dc27873dfdea71072a79784|plus:240d8d7a91

#### 2017-08-29, 16:14:30 - Adam Rankin
re #1138 improving Plus command response to also properly populate metadata fields relating to command responses (#70)

fixing minor bugs in command response values being hardcoded

renaming vtkPlusCommandCommandResponse to vtkPlusCommandRTSCommandResponse for clarity about classes intended purpose (send RTS_COMMAND back to client)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f0c906415a8d897e910eddd084fc2e7af4b7a87f|plus:f0c906415a


## #1139 Add ability to request hardware source(s) of PlusServer broadcast channel
Client applications need to know which hardware devices produced the data available on any given channel.

#### 2017-01-10, 22:11:49 - Adam Rankin
test #1139 adding additional request ID commands to enable more detailed querying of devices
Commit: r:5018|plus:5018

#### 2017-01-10, 22:11:49 - Adam Rankin
status: changed from "New" to "Test"


## #1140 Build problems
OpenIGTLinkIO must be enabled in PlusBuild, otherwise PlusLib can't be configured:

~~~~
CMake Error at src/CMakeLists.txt:26 (FIND_PACKAGE):
  Could not find a package configuration file provided by 'OpenIGTLinkIO'
  with any of the following names:

    OpenIGTLinkIOConfig.cmake
    openigtlinkio-config.cmake

  Add the installation prefix of 'OpenIGTLinkIO' to CMAKE_PREFIX_PATH or set
  'OpenIGTLinkIO_DIR' to a directory containing one of the above files.  If
  'OpenIGTLinkIO' provides a separate development package or SDK, be sure it
  has been installed.
~~~~


When it is turned on I run into this issue:

~~~~
CMake Error at src/Utilities/MfVideoCaptureLibrary/CMakeLists.txt:46 (MESSAGE):
  Library not found in Windows SDK: Evr
~~~~
 But this might be related to my compiler setup (installed VS2017RC then uninstalled it). Manually changing WINDOWS_SDK_LIBRARY_DIRS and WINDOWS_SDK_INCLUDE_DIRS from *C:/Program Files (x86)/Windows Kits/10/lib/10.0.10240.0/ucrt/x64* to *C:/Program Files (x86)/Windows Kits/8.1/Lib/winv6.3/um/x64* solves this.

#### 2017-01-11, 18:50:57 - Dzenan Zukic
Component: changed from null to "PlusBuild"

#### 2017-01-11, 18:51:05 - Dzenan Zukic
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-01-11, 18:58:18 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-01-11, 18:58:22 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-01-11, 19:20:20 - Dzenan Zukic
I forgot to mention that Evr lib is probably due to enabling MicrosoftMediaFoundation.

#### 2017-01-11, 19:41:32 - Adam Rankin
test #1140 Updating CMake to use CMAKE_RUNTIME_OUTPUT_DIRECTORY and modern configuration variables

Refactoring CMake to automatically use OpenIGTLinkIO when OpenIGTLink is selected
Commit: r:5020|plus:5020

#### 2017-01-11, 19:41:32 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-01-11, 23:34:03 - Dzenan Zukic
I guess I don't have a full version of Win 10 SDK installed, hence the MMF problem. But OpenIGTLinkIO has been fixed.

#### 2017-01-11, 23:34:03 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2017-01-12, 01:02:49 - Dzenan Zukic
I was too quick to close this. The include directories for OpenIGTLinkIO are not set up at all:

~~~~
3>C:\\Dev\\plus\\bin64-2015\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(40): fatal error C1083: Cannot open include file: 'igtlPolyDataConverter.h': No such file or directory
10>LINK : fatal error LNK1104: cannot open file 'igtlioConverter.lib'

~~~~


#### 2017-01-12, 01:02:49 - Dzenan Zukic
status: changed from "Fixed" to "Accepted"

#### 2017-01-13, 16:43:04 - Dzenan Zukic
Fixed #1140 including OpenIGTLinkIO directories
Commit: r:5021|plus:5021

#### 2017-01-13, 16:43:04 - Dzenan Zukic
status: changed from "Accepted" to "Fixed"

#### 2017-01-13, 16:47:13 - Andras Lasso
Thank you!

#### 2017-01-13, 18:08:41 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2017-01-13, 18:34:26 - Adam Rankin
fixed #1140 using openigtlinkIO directly in config file

devs must update openigtlinkio to latest
Commit: r:5022|plus:5022

#### 2017-01-13, 18:34:26 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-01-21, 11:31:05 - Andras Lasso
re #1140: Fixed test runtime errors

Tests failed to start because of missing device driver dlls. The problem was that these libraries
were not copied into binary directory because PLUS_EXECUTABLE_OUTPUT_PATH was invalid.

Fixed logic of setting PLUS_EXECUTABLE_OUTPUT_PATH.
Commit: r:5035|plus:5035


## #1141 PlusServer does not utilize new command message header
The command name is sent in the command header for COMMAND igt messages. The attribute is no longer needed in the XML.

Old STRING messages will still need to send the command name in the XML.

#### 2017-01-12, 01:21:29 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2017-04-10, 17:55:53 - Adam Rankin
Ticket is sort of non-actionable. No real reason to remove the command name from the XML. It is currently sent as both XML and command header.

#### 2017-04-10, 17:55:53 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-04-10, 17:55:56 - Adam Rankin
status: changed from "New" to "Invalid"


## #1142 Enable on-demand creation of capture device from given channelId
Add the ability for the startstop recording command to create a capture device on demand and link it to the requested channel.

#### 2017-01-16, 16:38:52 - Adam Rankin
test #1142 When a ChannelId attribute is specified in a Start/Stop recording command, a capture device for that channel is either found or created
Commit: r:5024|plus:5024

#### 2017-01-16, 16:38:52 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-01-16, 16:49:22 - Adam Rankin
re #1142 code cleanup
Commit: r:5025|plus:5025

#### 2017-01-16, 17:02:57 - Andras Lasso
A fundamental concept in Plus is that the pipeline is static. It makes code more robust and simpler.

For example, if there is no recording device I would prefer to return with an error instead of creating a new device. You don't want to create a new device if the user accidentally did not set a recording device or set a wrong ID. It's too easy to lose track of what devices are there. Also, if there are multiple clients and it becomes too easy to create multiple capture devices that take too much resources and the whole server breaks down.

#### 2017-01-16, 17:16:52 - Adam Rankin
If there is no device, then the server must be shut down and restarted with a new configuration file. This is not reasonable when the user simply wants to record a channel.

The code intelligently scans existing capture devices to see if one already suits the requested channel. No extra resources are created compared to a static pipeline that was correctly configured. The main difference between this code and before, is that users do not need to know about capture devices, all they need to know is that they can record what they're seeing.

If the user sets a wrong ID or wrong recording device, then nothing is created. A device is only created if they request to record a specific channel and there does not exist a recording device for that channel.

There is already a multi-client issue, as any client can control a pre-existing capture device as easily as they can control a dynamically created device.

This code is the equivalent of defining a capture device for every single output channel in every single config file ever created. Which is effectively what should be done in every config file to prevent users from not being able to record their procedures.

#### 2017-01-16, 18:49:31 - Andras Lasso
> This code is the equivalent of defining a capture device for every single output channel in every single config file ever created.

We already do this and it's really simple. All devices are consistently listed, there is no question about what devices exist, what parameters are used for recording, etc.

There is no multi-client issue with one capture device: multiple clients can control the same recording device.

You already spent time with implementing this mechanism and I agree that it is unlikely that devices are created unintentionally, but please next time discuss if you plan to make changes that impact the statically defined and verified device list.

#### 2017-04-10, 12:25:18 - Andras Lasso
re #1142: Added VirtualDiscCapture alias for VirtualCapture device to make Plus compatible with existing config files

If deprecated name is used then a warning is logged.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4807279db0467d2e0fa029e4336c1261031fb63e|plus:4807279db0


## #1143 Enabling MMF causes CMake configure error
This is a bug introduced recently. FindWindowsSDK no longer works correctly.

~~~~
CMake Error at src/Utilities/MfVideoCaptureLibrary/CMakeLists.txt:46 (MESSAGE):
  Library not found in Windows SDK: Evr

~~~~

This has been happening to me for a few days, and now a second person is experiencing this.

#### 2017-01-16, 18:57:30 - Adam Rankin
Which windows sdks do you have installed?

#### 2017-01-16, 18:57:40 - Adam Rankin
What OS version? What visual studio version?

#### 2017-01-16, 20:43:13 - Dzenan Zukic
Win7 x64, VS2015.

Judging by existence of folders in _C:\\Program Files (x86)\\Windows Kits_ I have following WinSDKs:
8.0, 8.1, 10 (versions 10.0.10150.0 and 10.0.10240.0).

Judging by existence of folders in _C:\\Program Files (x86)\\Microsoft SDKs\\Windows_ I have following WinSDKs:
v7.0A, v7.1A, v8.0, v8.0A, v8.1, v8.1A, v10.0A.

But file *evr.lib* exists only in following versions: v7.1A, 8.0 and 8.1.

#### 2017-01-16, 20:45:12 - Dzenan Zukic
When using Configure in PlusBuild, I get the following output in the CMake log:

~~~~
FindWindowsSDK: Detected Visual Studio 2012 or newer, not using the _xp toolset variant: including SDK versions that drop XP support in search!
Checking if the latest Windows SDK is compatible (C:/Program Files (x86)/Windows Kits/10)
Checking if the latest Windows SDK is compatible -- yes

~~~~

And this version does not have *evr.lib* and other libraries required by MMF.

#### 2017-01-16, 21:14:31 - Adam Rankin
I wonder if we can make the find script more robust to incompatible installs.

That being said, is it possible that your installs are atypical?

For example, I have the following files
'C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.10240.0\\um\\x86\\evr.lib'
'C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.10240.0\\um\\x64\\evr.lib'
etc...

Are these files not present?

#### 2017-01-16, 21:25:43 - Adam Rankin
re #1143 making windows SDK test more strict to prevent partial installs from passing test
Commit: r:5027|plus:5027

#### 2017-01-16, 21:25:43 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-01-16, 21:26:27 - Adam Rankin
Could you grab the latest PlusBuild and reconfigure the superbuild project?

#### 2017-01-16, 21:51:54 - Dzenan Zukic
The folder _C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.10240.0_ only has subfolder *ucrt*. I tried installing SDK 10.0.14393.33, but that fails, as well as installation of WinSDK as part of Visual Studio. I read somewhere that some version of WinSDK is incompatible with some version of Visual Studio.

Anyway, I will try the updated build system.

#### 2017-01-16, 22:05:11 - Dzenan Zukic
Even with the newest commit, the same SDK is found. This is true even if I replace _mfuuid.lib_ by _evr.lib_ in _TestWindowsSDK.cmake_. Very weird.

#### 2017-01-16, 22:41:54 - Dzenan Zukic
The reason for the error is that TestWindowsSDK is not finding/using the absolute path to those libraries (evr.lib etc), but MfVideoCaptureLibrary is. With the relevant part of *PlusLib\\src\\Utilities\\MfVideoCaptureLibrary\\CMakeLists.txt* modified like this:

~~~~
SET (MfVideoCaptureLibraryLibNames
  Evr
  Mf
  Mfplat
  Shlwapi
  Mfreadwrite
  mfuuid
  Strmiids
  )
# set(MfVideoCaptureLibrary_LIBS)
# foreach(_lib ${MfVideoCaptureLibraryLibNames})
  # set(_libVarName '${_lib}Lib')
  # set('${_libVarName}' '${_lib}-NOTFOUND')
  # FIND_LIBRARY ('${_libVarName}' NAMES '${_lib}' PATHS ${WINDOWS_SDK_LIBRARY_DIRS} NO_DEFAULT_PATH)
  # if ('${${_libVarName}}' STREQUAL '${_libVarName}-NOTFOUND')
    # MESSAGE(FATAL_ERROR 'Library not found in Windows SDK: ${_lib}')
  # endif()
  # LIST(APPEND MfVideoCaptureLibrary_LIBS '${${_libVarName}}')
# endforeach()
set(MfVideoCaptureLibrary_LIBS ${MfVideoCaptureLibraryLibNames})

~~~~

the project configures and builds successfully.

@rankin Do you want to use this style or make TestWindowsSDK use the same style as MfVideoCaptureLibrary?

#### 2017-01-17, 23:20:39 - Dzenan Zukic
test #1143 missing subdir
Commit: r:5028|plus:5028

#### 2017-01-17, 23:20:39 - Dzenan Zukic
status: changed from "New" to "Test"

#### 2017-01-17, 23:22:10 - Adam Rankin
I'll investigate.

#### 2017-01-18, 03:02:45 - Adam Rankin
test #1143 relying on MSVC linking rules to locate suitable MMF libraries
Commit: r:5031|plus:5031

#### 2017-01-18, 03:03:09 - Adam Rankin
Good call @dzenanz, MMF now matches TestWindowsSDK.cmake

#### 2017-01-18, 23:13:05 - Dzenan Zukic
Builds now! Thanks!

#### 2017-01-18, 23:13:05 - Dzenan Zukic
status: changed from "Test" to "Fixed"


## #1144 32-bit build problems
Building in 32-bit mode with Interson and Capistrano enabled produces the below build errors. This was done after updating from a working build of Plus.

I can notice a few obvious problems: ToolStateDisplayWidgetTest always uses x64 thus causing conflicts with 32-bit Qt. vtkImageViewer class is no longer available to data collection tests, probably due to superbuild configuration of VTK. And latest cleanup of vtkPlusVirtualDiscCapture was not entirely thorough.


~~~~
Error  630  error LNK1112: module machine type 'x64' conflicts with target machine type 'X86' [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusWidgets\  esting\  oolStateDisplayWidgetTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\Qt5Cored.lib(Qt5Cored.dll)
Error  631  error LNK2019: unresolved external symbol 'public: static class vtkImageViewer * __cdecl vtkImageViewer::New(void)' (?New@vtkImageViewer@@SAPAV1@XZ) referenced in function 'public: static class vtkSmartPointer<class vtkImageViewer> __cdecl vtkSmartPointer<class vtkImageViewer>::New(void)' (?New@?$vtkSmartPointer@VvtkImageViewer@@@@SA?AV1@XZ) [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkCapistranoVideoSourceTest.obj
Error  632  error LNK2019: unresolved external symbol 'public: void __thiscall vtkImageViewer::SetupInteractor(class vtkRenderWindowInteractor *)' (?SetupInteractor@vtkImageViewer@@QAEXPAVvtkRenderWindowInteractor@@@Z) referenced in function _main [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkCapistranoVideoSourceTest.obj
Error  633  error LNK1120: 2 unresolved externals [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\bin\\Debug\\vtkCapistranoVideoSourceTest.exe  1
Error  634  error LNK2019: unresolved external symbol 'public: static class vtkImageViewer * __cdecl vtkImageViewer::New(void)' (?New@vtkImageViewer@@SAPAV1@XZ) referenced in function 'public: static class vtkSmartPointer<class vtkImageViewer> __cdecl vtkSmartPointer<class vtkImageViewer>::New(void)' (?New@?$vtkSmartPointer@VvtkImageViewer@@@@SA?AV1@XZ) [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkIntersonSDKCxxVideoSourceTest.obj
Error  635  error LNK2019: unresolved external symbol 'public: void __thiscall vtkImageViewer::SetupInteractor(class vtkRenderWindowInteractor *)' (?SetupInteractor@vtkImageViewer@@QAEXPAVvtkRenderWindowInteractor@@@Z) referenced in function _main [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkIntersonSDKCxxVideoSourceTest.obj
Error  636  error LNK1120: 2 unresolved externals [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\bin\\Debug\\vtkIntersonSDKCxxVideoSourceTest.exe  1
Error  638  error LNK1112: module machine type 'x64' conflicts with target machine type 'X86' [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusWidgets\  esting\  oolStateDisplayWidgetTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\Qt5Cored.lib(Qt5Cored.dll)
Error  639  error LNK2019: unresolved external symbol 'public: static class vtkImageViewer * __cdecl vtkImageViewer::New(void)' (?New@vtkImageViewer@@SAPAV1@XZ) referenced in function 'public: static class vtkSmartPointer<class vtkImageViewer> __cdecl vtkSmartPointer<class vtkImageViewer>::New(void)' (?New@?$vtkSmartPointer@VvtkImageViewer@@@@SA?AV1@XZ) [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkCapistranoVideoSourceTest.obj
Error  640  error LNK2019: unresolved external symbol 'public: void __thiscall vtkImageViewer::SetupInteractor(class vtkRenderWindowInteractor *)' (?SetupInteractor@vtkImageViewer@@QAEXPAVvtkRenderWindowInteractor@@@Z) referenced in function _main [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkCapistranoVideoSourceTest.obj
Error  641  error LNK1120: 2 unresolved externals [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkCapistranoVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\bin\\Debug\\vtkCapistranoVideoSourceTest.exe
Error  642  error LNK2019: unresolved external symbol 'public: static class vtkImageViewer * __cdecl vtkImageViewer::New(void)' (?New@vtkImageViewer@@SAPAV1@XZ) referenced in function 'public: static class vtkSmartPointer<class vtkImageViewer> __cdecl vtkSmartPointer<class vtkImageViewer>::New(void)' (?New@?$vtkSmartPointer@VvtkImageViewer@@@@SA?AV1@XZ) [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkIntersonSDKCxxVideoSourceTest.obj
Error  643  error LNK2019: unresolved external symbol 'public: void __thiscall vtkImageViewer::SetupInteractor(class vtkRenderWindowInteractor *)' (?SetupInteractor@vtkImageViewer@@QAEXPAVvtkRenderWindowInteractor@@@Z) referenced in function _main [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\vtkIntersonSDKCxxVideoSourceTest.obj
Error  644  error LNK1120: 2 unresolved externals [C:\\Dev\\plus\\bin32-2013-new\\PlusLib-bin\\src\\PlusDataCollection\  esting\\vtkIntersonSDKCxxVideoSourceTest.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\bin\\Debug\\vtkIntersonSDKCxxVideoSourceTest.exe
Error  646  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\fCalMainWindow.cxx  23
Error  647  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  c:\\dev\\plus\\bin32-2013-new\\plusapp\\fcal\\PlusCaptureControlWidget.h  15
Error  648  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\PlusCaptureControlWidget.h  15
Error  650  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  c:\\dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\PlusCaptureControlWidget.h  15
Error  653  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\fCalMainWindow.cxx  23
Error  654  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  c:\\dev\\plus\\bin32-2013-new\\plusapp\\fcal\\PlusCaptureControlWidget.h  15
Error  655  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  C:\\Dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\PlusCaptureControlWidget.h  15
Error  656  error C1083: Cannot open include file: 'vtkPlusVirtualDiscCapture.h': No such file or directory [C:\\Dev\\plus\\bin32-2013-new\\PlusApp-bin\\fCal\\fCal.vcxproj]  c:\\dev\\plus\\bin32-2013-new\\PlusApp\\fCal\\PlusCaptureControlWidget.h  15


~~~~


#### 2017-01-18, 00:14:58 - Dzenan Zukic
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-01-18, 00:15:08 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-01-18, 00:15:13 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2017-01-18, 00:15:15 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-01-18, 00:20:43 - Andras Lasso
Thanks for reporting these issues. We had to rush in some changes on the trunk recently before/during the project week and we are in the process of fixing these. The stable branch is quite recent and there should be no such issues (and we backported important fixes), so if these instabilities are too frustrating then you may consider to switch (but hopefully it will be just a transient and all build errors will be fixed very soon).

Most errors are captured by the dashboard (we have 32-bit and 64-bit builds using multiple compilers), so we are aware of those. Unfortunately we don't have Capistrano SDK, so we cannot add nightly tests with that. @dzenanz It would be great if you could add a nightly build with that device enabled.

#### 2017-01-18, 00:31:24 - Adam Rankin
re #1144 Cleaning up references to DiscCapture
Commit: r:5029|plus:5029

#### 2017-01-18, 00:31:46 - Dzenan Zukic
@lassoan That explains a lot :)
I was wondering what is going on.

#### 2017-01-18, 00:31:46 - Dzenan Zukic
CommentContent: changed from "That explains a lot :)
I was wondering what is going on." to "@lassoan That explains a lot :)
I was wondering what is going on."

#### 2017-01-18, 02:01:25 - Adam Rankin
re #1144 Adding missing VTK dependences for capistrano/intersonsdkcxx tests
Commit: r:5030|plus:5030

#### 2017-01-18, 02:06:31 - Adam Rankin
Ok, I think I've sorted everything but the ToolStateDisplayWidgetTest. I can't identify anything in the CMake that would force it to be 64 bit. Could it be a leftover from a previous build?

#### 2017-01-18, 19:36:43 - Adam Rankin
re #1144 Fixing tests related to erroneous code for line drawing
Commit: r:5032|plus:5032

#### 2017-01-18, 21:39:50 - Dzenan Zukic
Thanks Adam!

#### 2017-01-18, 21:39:59 - Dzenan Zukic
status: changed from "New" to "Fixed"


## #1145 fCal spatial calibration error due to invalid ProbeToTracker transform
In fCal spatial calibration step, this error is logged:
'Spatial calibration in fCal failed when to Transform path not found from Probe to Tracker coordinate system'
when tracker device ToolReferenceFrame was not set to 'Tracker'.

See details at https://app.assembla.com/spaces/plus/messages/5741413

#### 2017-01-23, 06:18:19 - Andras Lasso
re #1145: Removed DEFAULT_TRACKER_REFERENCE_FRAME_NAME

DEFAULT_TRACKER_REFERENCE_FRAME_NAME is not used, but by default the tracking device ID is used as
tracker reference frame name, if ToolReferenceFrame attribute is not specified for the device in the configuration file.
Commit: r:5036|plus:5036

#### 2017-01-23, 06:20:23 - Andras Lasso
test #1145: Check validity of ProbeToReference transform instead of ProbeToTracker when discarding frames that are not suitable for calibration.
Commit: r:5037|plus:5037

#### 2017-01-23, 06:20:23 - Andras Lasso
status: changed from "Accepted" to "Test"


## #1146 vtkPlusUSDigitalEncodersTracker no longer works
Some recent changes to PlusLib have broken this tracker type. Configuration file PlusDeviceSet_Server_MmfUSDigitalEncodersTracker_coreXY.xml was a working example some time ago. Now the transform is not updated any more.

My collaborator reports 'If I change the PortName parameter in the Plus XML configuration file from 'CoreXY' to 'XAxis', the 'ReferenceToUSImage' transform updates in the Slicelet with encoder movement.'

I added the coreXY functionality to that class, and chose _PortName_ as an indicator that it is a url:http://corexy.com/theory.html|coreXY combination of two motors, and not just a regular compounding of stages (and thus transforms). But I suppose some recent changes were modifying DataSource IDs and port names which broke this class.

#### 2017-01-23, 16:58:25 - Adam Rankin
The configuration for that device has some odd redundancies. The from and to fields in the data source tags should not be there. The transformation name is defined as {ID}to{ToolReferenceFrame}.

There is also the persistent flag, indicating persistent transforms. These should be in the <CoordinateDefinitions> section which makes it available to the top level transform repository in the data collector.

The above issue likely stems from the inconsistencies with this device and the general design of devices. 

@lassoan Do you have the time/availability to refactor the device?

#### 2017-01-23, 20:47:57 - Andras Lasso
@dzenanz, could you please move all constant transforms to the top-level <CoordinateDefinitions> element and see if things work then? If not, then I can have a look, but need step-by-step instructions for reproducing the problem on my computer.

#### 2017-01-23, 22:39:03 - jperdomo
The issue was in the following lines in url:http://perk-software.cs.queensu.ca/plus/doc/nightly/dev/vtkPlusUSDigitalEncodersTracker_8cxx_source.html#l00385|vtkPlusUSDigitalEncodersTracker, where the encoder position is being saved incorrectly as the output of ::A2GetPosition:


~~~~
Encoder_Value = ::A2GetPosition(encoders.Encoder_Addr, &Encoder_Value);

~~~~


#### 2017-01-23, 22:39:03 - jperdomo
CommentContent: changed from "The issue was in the following lines in url:http://perk-software.cs.queensu.ca/plus/doc/nightly/dev/vtkPlusUSDigitalEncodersTracker_8cxx_source.html#l00385|vtkPlusUSDigitalEncodersTracker, where the encoder position is being saved incorrectly as the" to "The issue was in the following lines in url:http://perk-software.cs.queensu.ca/plus/doc/nightly/dev/vtkPlusUSDigitalEncodersTracker_8cxx_source.html#l00385|vtkPlusUSDigitalEncodersTracker, where the encoder position is being saved incorrectly as the"

#### 2017-01-23, 22:40:53 - Dzenan Zukic
test #1146 return value from A2GetPosition is an error code
Commit: r:5042|plus:5042

#### 2017-01-23, 22:40:53 - Dzenan Zukic
assigned_to_id: changed from null to "dzenanz"

#### 2017-01-23, 22:40:53 - Dzenan Zukic
status: changed from "New" to "Test"

#### 2017-01-23, 22:42:31 - Dzenan Zukic
@jperdomo Test the new commit and close the ticket (set status to fixed) if it works correctly.

#### 2017-01-23, 22:43:57 - Dzenan Zukic
@lassoan @rankin We are really puzzled by how this could have worked before.

#### 2017-01-23, 22:58:50 - jperdomo
status: changed from "Test" to "Fixed"

#### 2017-01-23, 23:01:33 - Dzenan Zukic
test #1146 simplifying configuration file
Commit: r:5043|plus:5043

#### 2017-01-23, 23:01:33 - Dzenan Zukic
status: changed from "Fixed" to "Test"

#### 2017-01-23, 23:03:14 - Dzenan Zukic
@jperdomo Can you test this config file with a web cam? Start PlusServer with this config file, connect to the server using Slicer and check that the image is moving together with the motors.

#### 2017-01-24, 01:39:25 - Adam Rankin
No idea myself, this wasn't a device we developed.

#### 2017-01-26, 18:34:42 - Dzenan Zukic
status: changed from "Test" to "Fixed"

#### 2017-07-27, 14:09:23 - Adam Rankin
Improvements to Serial device and US Digital encoders (#65)

* fixes #1209 allow non CR/LF terminated responses

* re #1211 Adding support for RTS and DTR signal control

* re #1146 transforms now follow standard naming {ID}to{ToolReferenceFrame}

* re #1211 minor code review

* re #1211 merging Clear RTS/DTR functions into Set with parameter

* re #1209 adding an option for acceptance of response

* re #1209 updating documentation

* re #1209 Adam's review suggestions

* re #1146 Adam's review suggestions

* re #1146 Device Id is a fallback for ToolReferenceFrame

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/982dd86bd54c1bb91e6891b57004c54f36c10c15|plus:982dd86bd5


## #1147 Allow registration of device types dynamically to device factory
See discussion url:https://app.assembla.com/spaces/plus/messages/5743123#comment_5743403|here.

Opted for solution 2, with the default factory created.

#### 2017-01-24, 19:45:14 - Adam Rankin
test #1147 added ability to dynamically add devices types to the device factory

Added an instance of the factory to the datacollector class with accessors
Commit: r:5044|plus:5044

#### 2017-01-24, 19:45:14 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-01-24, 19:49:49 - Andras Lasso
Perfect, thank you!

#### 2017-01-24, 19:50:26 - Adam Rankin
description: changed from "See discussion url:https:..." to "See discussion url:https:..."

#### 2017-01-25, 21:22:26 - david.kuegler833514
Thanks for tackling this.

I would have prefered the 'static registry' (https://app.assembla.com/spaces/plus/messages/5743123) approach because:
- automatically takes care of all instances
- compatiblilty was really 'safe'
- devices have to be registered 'after' factory creation
- the object does not have to be passed and to me the information (devicetyperegsitry) always was 'global' information, so why go out of your way to make it into an object.

But I guess I can live with this approach. :)

#### 2017-01-30, 21:58:11 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1148 Importance mask compounding mode
Enable smooth blending of tracked frames in volume reconstructor by introducing a new compounding mode: *importance mask*. _ImportanceMaskFilename_ provides a file with same dimensions as tracked frame, and each pixel in the importance mask gives a weight for compounding. Compare this with *Mean* compounding mode in which each pixel is given weight of 256 (ACCUMULATION_MULTIPLIER).

If *ImportanceMask* is constructed in such a way that pixels near the edges of the frame have low weight, and those in the middle of the frame have progressively higher weight, the result will be smooth blending in the overlapping regions. A simple way to construct such an ImportanceMask is to construct a distance field on the clipping region which can be obtained from DrawClipRegion tool.

This approach is far more efficient that computing distance field from clip region for each frame. It is also somewhat more flexible, allowing other weights to be applied to a frame besides distance field.

Frame:image:bjRsIA4Zqr5OoHacwqjQXA|Frame.png

Clip region:image:bGpwOw4Zqr5OK9dmr6bg7m|clip.png

Clip region binary mask:image:aq3bXm4Zqr5Qhddmr6CpXy|clipRegion.png

Distance-field importance mask:image:bVZh5E4Zqr5OK9dmr6bg7m|clipMask.png


#### 2017-01-25, 23:05:10 - Dzenan Zukic
description: changed from "Enable smooth blending of t..." to "Enable smooth blending of t..."

#### 2017-01-26, 01:31:32 - Dzenan Zukic
I just put my current code in a url:https://app.assembla.com/spaces/plus/subversion/source/HEAD/branches/dzenan-sandbox/src/PlusVolumeReconstruction|branch

I currently have a bug for nearest neighbor in full and partial versions (see screenshots). This bug does not occur for mean compounding mode (which I copied and modified). I can't figure out what's different. If somebody could take a look, I would appreciate it. @rankin @lassoan @thomasvaughan @ungi @jperdomo 

Finally, how to do code review on Assembla? How to start a merge requests?

No optimization: image:ag1cYu42yr5Ppddmr6CpXy|ScreenshotNone.png

Partial/full optimization: image:ahhVNw42yr5Qu5dmr6bg7m|ScreenshotPartial.png


#### 2017-01-26, 17:55:16 - Dzenan Zukic
Using single thread produces even worse results in the buggy cases:
image:csKK-s4_ar5OoUacwqEsg8|SingleThreadedPartialNN.png


#### 2017-01-26, 18:06:04 - Dzenan Zukic
test #1148 fixing bug in full and partial optimization nearest neighbor

Commit: r:5047|plus:5047

#### 2017-01-26, 18:06:04 - Dzenan Zukic
status: changed from "New" to "Test"

#### 2017-01-26, 18:17:15 - Dzenan Zukic
This is now ready for code review. Is there some formal process for it?

Should I add some automated tests for it? If yes, should I also test partial optimization (which does not suffer from fixed-point overflows) and/or nearest neighbor which has visible gaps in the reconstruction (when spacing of the reconstructed volume is close to spacing of input frames)?

@rankin @lassoan @thomasvaughan @ungi

#### 2017-01-26, 18:19:39 - Adam Rankin
Pull request on GitHub would be my preferred process. There are already volume reconstructor tests that are currently broken. If you are able to identify and fix the tests, that would be great.

#### 2017-01-26, 18:33:04 - Dzenan Zukic
I can't find Plus on GitHub.

#### 2017-01-26, 18:38:25 - Andras Lasso
https://github.com/PlusToolkit

#### 2017-01-26, 19:04:43 - Dzenan Zukic
url:https://github.com/PlusToolkit/PlusLib/pull/1|PR1 created. I will make additional commits to it for updating docs and adding a test (once the actual code has been OK-ed).


#### 2017-02-02, 01:00:26 - Dzenan Zukic
Second try is url:https://github.com/PlusToolkit/PlusLib/pull/6|PR6.

#### 2017-02-07, 21:59:23 - Adam Rankin
Adding importance mask Compounding mode

* fixed #1148  Adding importance mask Compounding mode

Separated increments of input and importance mask
Supports case of input being non-scalar (e.g. RGB)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0131f6f9c5312c54acf5d99495d27cf34d1c8515|plus:0131f6f9c5

#### 2017-02-07, 21:59:23 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-02-07, 23:53:39 - Adam Rankin
Adding new configurable parameters for Capistrano (#10)

* re #1148 forgotten merge rename

* re #1101 adding support for 6 parameters

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7f8ee8aac11a563bcb1c3f3afd86156b3b5136f9|plus:7f8ee8aac1

#### 2017-02-09, 01:18:54 - Adam Rankin
re #1148 linking to necessary ITK dependency

Cleaning up code

Branch: 1148_itk_dependency
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d8c8e081b6ff2deebf0dd73e5acc39e02c7878e4|plus:d8c8e081b6

#### 2017-02-09, 01:19:54 - Adam Rankin
re #1148 linking to necessary ITK dependency (#12)

Cleaning up code

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5f95e21520c508247cde29e2ab06a759e33392c1|plus:5f95e21520

#### 2017-02-09, 14:39:18 - Adam Rankin
re #1148 replacing ITK reader with vtkPNGReader for reading importance mask (#13)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d6a24d4c674c084bbede7459e7cdf2fc05864570|plus:d6a24d4c67

#### 2017-02-09, 14:49:59 - Andras Lasso
Thank you guys!

#### 2017-02-09, 19:31:47 - Adam Rankin
Fixing couple of bugs related to overflow in VolumeReconstructor (#14)

* re #1148 fixing reversed weights in overflow

* re #1148 fixing overflow in fixed point arithmetic

* re #1148 replacing fractions 1/256 and 255/256 by named constants

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3c0272895635c4adfa061ea24a81938c0ae0ea69|plus:3c02728956

#### 2017-02-09, 21:42:18 - Andras Lasso
re #1148: Fixed volume reconstruction without specified importance mask

Added checks for importance mask validity (same extent as input, unsigned char, single component).
Importance mask image is not created (pointer is NULL) if no mask is specified.
Option in XML file was renamed to IMPORTANCE_MASK (from IMPORTANCMASK).

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e48c054b8655b009fb02bef91add3d7d1d86cec8|plus:e48c054b86

#### 2017-02-09, 21:43:57 - Andras Lasso
@dzenanz Please double-check if importance mask based VR is correct in vtkTrilinearInterpolation in PlusLib\\src\\PlusVolumeReconstruction\\vtkPlusPasteSliceIntoVolumeHelperCommon.h. If importance pointer is correctly computed and it works well for single-component and multi-component input/output.



#### 2017-02-10, 00:15:02 - Dzenan Zukic
re #1148 adding test data for importance mask mode
Commit: r:5055|plus:5055

#### 2017-02-10, 03:27:41 - Andras Lasso
re #1148: Adding tests and fixing bugs in importance mask mode

* re #1148 removing duplication from test specifications

boilerplate code is moved to a function, which is then called several times

* re #1148 fixing a bug introduced by Andras's refactoring

* re #1148 importance mask pointer does not need incrementing

* re #1148 additional bug fix

* re #1148 adding tests for importance mask mode

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/147b9c33b7081d2696a8b809a273b054dc11c96d|plus:147b9c33b7

#### 2017-02-11, 02:16:52 - Adam Rankin
re #1148 updating volume reconstructed test data to new spec
Commit: r:5056|plus:5056


## #1149 Update the BK scanner interface
- Make PlusServer compile with BK scanner interface
- Get doppler video, allow streaming of color video to make this work 
- Get ultrasound sector information from the scanner
- Send ultrasound sector information with OpenIGTLinkIO

I have forked PlusLib on https://github.com/SINTEFMedtek/PlusLib 

#### 2017-01-27, 15:24:34 - Adam Rankin
Hi Ole!

When did you fork the pluslib repo? The reason I ask is I had to destroy and recreate it to proprely import the branches.

If you did it a while ago, you'll have to re-clone the repo, and copy over the files (excluding .git folder) from the old clone to the new clone.

Apologies!

#### 2017-01-27, 15:25:27 - Adam Rankin
I see it was 4 hours ago, that should be fine!

#### 2017-01-30, 21:57:25 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-01-31, 08:06:55 - Ole Vegard Solberg
status: changed from "New" to "Accepted"

#### 2017-05-12, 10:27:38 - Ole Vegard Solberg
@rankin and @lassoan : I'm considering replacing Grabbielib with an interface using Qt to simplify the code and make it multi platform. Is it ok to use Qt5:Network library instead of Grabbielib?

#### 2017-05-12, 10:27:38 - Ole Vegard Solberg
CommentContent: changed from "@rankin and @lassoan : I'm considering replacing Grabbielib with an interface using Qt to simplify the code and make it multi platform. Is it ok at Qt5:Network instead of Grabbielib?" to "@rankin and @lassoan : I'm considering replacing Grabbielib with an interface using Qt to simplify the code and make it multi platform. Is it ok to use Qt5:Network library instead of Grabbielib?"

#### 2017-05-12, 11:40:02 - Andras Lasso
PlusLib does not use Qt (other than having some common widgets defined there for convenience, but that's an optional component), so this would not be feasible. Several users not use Qt at all, so we should not add this dependency to any device. You should be able to use VTK or OpenIGTLink OS-independent socket classes.


#### 2017-05-12, 12:37:34 - Andras Lasso
I fully agree with replacing GrabbieLib, as it is overcomplicated (it seemed, it was intended to do much more, but probably they did not have enough time) and really messy.

#### 2017-05-12, 12:58:53 - Ole Vegard Solberg
Ok, I will probably use OpenIGTLink classes instead then.

#### 2017-05-12, 13:03:32 - Andras Lasso
OK. I think OpenIGTLink sockets have been extracted from VTK a couple of years ago, and Device classes already depend on VTK (but not on OpenIGTLink) so it might be easier to use vtkSocket classes, but it's up to you.

#### 2017-05-24, 09:26:22 - Ole Vegard Solberg
I ended up using vtkClientSocket, and my version of the BK interface now runs on OSX. However, it don't work on my Windows build: It seems VTK fails in creating sockets (vtkSocket.cxx line 145).

#### 2017-05-24, 12:48:04 - Andras Lasso
Is the code available on your fork? I could test it on my computer, too.

#### 2017-05-25, 07:25:40 - Ole Vegard Solberg
Yes everything is pushed to my fork. I'm working on the branch: us-sector-info.
You don't need any scanner to test this particular bug, as it fails when asking for a socket.
Just comment out #define OFFLINE_TESTING at the top of vtkPlusBkProFocusOemVideoSource.cxx.
You have to set ScannerAddress and OemPort in PlusDeviceSet_Server_BkProFocusOem.xml, as I don't use the IniFile.ini file:
    <Device 
      Id='VideoDevice'
      Type='BkProFocusOem'
      ScannerAddress='10.1.1.100'
      OemPort='7915'
      ContinuousStreamingEnabled='true'
      ColorEnabled='true'
      AcquisitionRate='20' >
      ...
    </Device>

#### 2017-05-25, 07:25:40 - Ole Vegard Solberg
CommentContent: changed from "Yes everything is pushed to my fork. I'm working on the branch: us-sector-info.
You don't need any scanner to test this particular bug, as it fails when asking for a socket.
Just comment out #define OFFLINE_TESTING at the top of" to "Yes everything is pushed to my fork. I'm working on the branch: us-sector-info.
You don't need any scanner to test this particular bug, as it fails when asking for a socket.
Just comment out #define OFFLINE_TESTING at the top of"


## #1150 Use of old stdint.h files creates compiler errors
In GrabbieLib there are two old stdint.h files ( pltools/trunk/BK/ProFocus/GrabbieLib-1.1.0/AcquisitionLibrary/stdint.h and pltools/trunk/BK/ProFocus/GrabbieLib-1.1.0/ParametersLibrary/stdint.h ).
These file don't follow the C++11 standard and (sometimes) cause build errors when enabling PLUS_USE_BKPROFOCUS_VIDEO, like:
C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\include\atio(111): error C2065: 'INTMAX_MAX': undeclared identifier [C:\\dev\\PlusB-bin\\PlusApp-bin\\fCal\\fCal.vcxproj] [C:\\dev\\PlusB-bin\\PlusApp.vcxproj]
(see also: http://crunch.cs.queensu.ca/CDash/viewBuildError.php?buildid=64446)

I suggest we just delete the stdint.h files if there isn't a good reason they were added in the first place?


#### 2017-01-30, 14:26:12 - Andras Lasso
Yes, I completely agree, remove them. You should be able to commit your changes into PLTools.

#### 2017-01-30, 14:29:11 - Adam Rankin
Thanks for finding this. We are looking into a BK device so your timing is poetic!

#### 2017-01-30, 21:57:17 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-01-31, 08:06:14 - Ole Vegard Solberg
status: changed from "New" to "Fixed"


## #1151 Add an option to send transforms in column major format
Request an XML tag level configuration parameter to toggle sending of transform matrices in row major or column major format.

#### 2017-01-31, 02:14:26 - Andras Lasso
I don't see why would Plus need to know how applications want to store transforms. We just send the transforms according to OpenIGTLink specification and the client can do whatever it needs.
Why not just convert the transform in the client?

#### 2017-01-31, 02:18:47 - Adam Rankin
Ah, I didn't see that it was hard-coded to row-major in the spec. Ignore this.

#### 2017-01-31, 02:18:47 - Adam Rankin
status: changed from "New" to "Invalid"


## #1152 INSTALL target does not create computer-independent cmake files
This issue has previously been addressed in a patch for svn, now adapted for my git repository. It was partially implemented in '* re #1010 Installing header files to include directory, adding xml files to share directory' ff (72303f4 ff.).

c.f. https://app.assembla.com/spaces/plus/messages/5692383

I should also be pointed out, that the commit introduces install path variables to the cmake to make install path handling easier (CMakeLists.txt) as well as installs some of the Testing/Utilities Targets.

One example from src/PlusCalibration/CMakeLists.txt:

target_include_directories(vtkPlusCalibration PUBLIC ${PlusCalibration_INCLUDE_DIRS} )

This adds the absolute paths in ${PlusCalibration_INCLUDE_DIRS} to the target, which later on will be exported as computer dependent absolute path to the 'installed' Targets file.

#### 2017-01-31, 12:03:06 - david.kuegler833514
sorry, my FF had a very dumb message and I double-posted.

#### 2017-01-31, 14:09:45 - Andras Lasso
status: changed from "New" to "Invalid"


## #1153 INSTALL target does not create computer-independent cmake files
This issue has previously been addressed in a patch for svn, now adapted for my git repository. It was partially implemented in '* re #1010 Installing header files to include directory, adding xml files to share directory' ff (72303f4 ff.).

c.f. https://app.assembla.com/spaces/plus/messages/5692383

I should also be pointed out, that the commit introduces install path variables to the cmake to make install path handling easier (CMakeLists.txt) as well as installs some of the Testing/Utilities Targets.

One example from src/PlusCalibration/CMakeLists.txt:

target_include_directories(vtkPlusCalibration PUBLIC ${PlusCalibration_INCLUDE_DIRS} )

This adds the absolute paths in ${PlusCalibration_INCLUDE_DIRS} to the target, which later on will be exported as computer dependent absolute path to the 'installed' Targets file.

#### 2017-01-31, 13:51:04 - Andras Lasso
status: changed from "New" to "Invalid"

#### 2017-01-31, 14:01:46 - david.kuegler833514
@lassoan I do not quite get, why the Ticket was changed to 'Invalid'. The usage of absolute paths in the 'install interface' breaks the ability to copy the files and folders from one computer to another. And the addition of this feature does not 'break' anything else, it just makes the install target more consistent.

#### 2017-01-31, 14:01:46 - david.kuegler833514
CommentContent: changed from "@lassoan I do not quite get, why the Ticket was changed to 'Invalid'. The usage of absolute paths in the 'install interface' breaks the ability to copy the files and folders form one computer to another. And the addition of this feature does not 'break'" to "@lassoan I do not quite get, why the Ticket was changed to 'Invalid'. The usage of absolute paths in the 'install interface' breaks the ability to copy the files and folders from one computer to another. And the addition of this feature does not 'break'"

#### 2017-01-31, 14:04:26 - Andras Lasso
it's a duplicate of #1152

#### 2017-01-31, 14:05:13 - Andras Lasso
your contribution is appreciated, we just don't need two identical tickets to track it

#### 2017-01-31, 14:07:25 - david.kuegler833514
Sorry, fair enough. I intended for #1152 be removed in favour of #1153.
This is why I marked #1152 a duplicate of this issue. Unfortunately I used #1153 in the pull request.

#### 2017-01-31, 14:09:37 - Andras Lasso
status: changed from "Invalid" to "New"

#### 2017-02-18, 21:37:45 - Adam Rankin
Fix cmake install target to have machine independent target files (#1)

test #1153 See https://app.assembla.com/spaces/plus/messages/5692383.

Added ARCHIVE variable
Added variable and implemented into install commands
Add ARCHIVE variable to top-level-CMakeLists.txt file
Using vtk-style config file instead of if-clause
If OpeniGTLinkIO is statically linked into plus, do not add OpenIGTLinkIO to Config file
Declare OpenIGTLinkIOpPrivate library
Avoid multiple paths to ITK and VTK
Config.cmake: version in find_package, install PlusServer

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/693f209dceb56aca5f40e4df2c3cf59a4a5e836b|plus:693f209dce

#### 2017-02-18, 21:37:45 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-02-19, 02:35:22 - Adam Rankin
re #1153 Fixing some missing items in pull request

All projects now properly exporting and installing targets

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5f9582a1cafee17b51d4b07d6efcd755c99021d8|plus:5f9582a1ca

#### 2017-02-19, 02:35:22 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-02-20, 14:51:51 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-02-20, 16:17:34 - Adam Rankin
re #1153 Adding OvrvisionPro and OpenCV to package (if ovr is enabled)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/cbcf81006101de3dc697554201342aafa98bacaf|plus.2:cbcf810061


## #1154 TRACKEDFRAME message sending invalid transforms as valid
See subject.

To reproduce:

Send a transform that doesn't exist.

~~~~
      <TransformNames>
        <Transform Name='StylusToReference'/>
        <Transform Name='StylusTipToStylus'/>
        ...

~~~~


And observe the sent transforms

#### 2017-02-01, 02:19:57 - Adam Rankin
description: changed from "See subject." to "See subject.

To reproduce:..."

#### 2017-02-01, 16:02:47 - Adam Rankin
transformRepository->GetTransform(*nameIter, matrix, &isValid) not changing isValid when transform path not found

#### 2017-02-01, 16:09:58 - Adam Rankin
status: changed from "New" to "Fixed"


## #1155 SetupForDevelopment.sh does not work on Windows
I want to re-create the pull request for #1148, so I checked out the git repo from url:https://github.com/PlusToolkit/PlusLib/|GitHub and executed this in GitBash:

~~~~
Dzenan@Xeonator MINGW64 /c/Dev/PlusGit/PlusLib (master)
$ ./Utilities/SetupForDevelopment.sh
fatal: not in a git directory
fatal: not in a git directory
Your commits will have the following author:

  Dženan Zukić <dzenan.zukic@kitware.com>

Is the author name and email address above correct? [Y/n]
cp: cannot stat 'hooks/commit-msg': No such file or directory
fatal: not in a git directory

Dzenan@Xeonator MINGW64 /c/Dev/PlusGit/PlusLib (master)
$ pwd
/c/Dev/PlusGit/PlusLib

Dzenan@Xeonator MINGW64 /c/Dev/PlusGit/PlusLib (master)
$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean

~~~~

Running SetupForDevelopment.sh in ITK repository through GitBash works for me.

#### 2017-02-02, 00:41:55 - Adam Rankin
Yes, the script assumes you ran it from the directory or double-clicked it. I will update the script to detect running from the root dir.

#### 2017-02-02, 00:41:58 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-02-02, 01:02:50 - Adam Rankin
Should work, could you test?

#### 2017-02-02, 01:02:50 - Adam Rankin
assigned_to_id: changed from "rankin" to "dzenanz"

#### 2017-02-02, 01:02:50 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-02-09, 18:12:34 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1156 Crash in vtkDataCollector2Test


#### 2017-02-06, 15:01:09 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-02-09, 01:17:59 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1157 PlusLib documentation is not fully generated
Help files for tools are not outputted to correct folder

#### 2017-02-07, 02:48:22 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-02-07, 14:06:23 - Andras Lasso
Thank you, it works well now!


## #1158 PlusApp build fails under linux
template depth is insufficient

#### 2017-02-07, 15:48:37 - Adam Rankin
Merge pull request #2 from PlusToolkit/1158_plusapp_template_depth

fixes #1158 Increasing template depth to 5000

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/a3daf3565a8957322051a6d56a3e800d3ac6c078|plus.2:a3daf3565a

#### 2017-02-07, 15:48:37 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-02-07, 15:48:37 - Adam Rankin
fixes #1158 Increasing template depth to 5000

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/17d87b8f37ac2f41cc931aa98f8f33e1f5d7f603|plus.2:17d87b8f37


## #1159 VolumeReconstructor ignores OutputExtent and OutputOrigin
SetOutputExtentFromFrameList is called regardless of whether OutputExtent and OutputOrigin were specified in the configuration file. If this call is skipped manually during debugging, this error occurs:

~~~~
|ERROR|012.849000| OptimizedInsertSlice: input ScalarType (3)  must match out ScalarType (11)| in C:\\Dev\\plus\\bin64-2015\\PlusLib\\src\\PlusVolumeReconstruction\\vtkPlusPasteSliceIntoVolume.cxx(422)

~~~~

This prevents setting custom output extent to skip unwanted part of volume from being reconstructed, e.g. for quicker debugging (breakpoints with conditions slow down execution speed excruciatingly).

#### 2017-02-12, 17:55:44 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-02-12, 18:09:54 - Andras Lasso
Can you describe what class you are referring to? We specify custom output origin, spacing, and extent in Plus Remote and it works fine.

#### 2017-05-11, 14:46:02 - Dzenan Zukic
I am talking about volume reconstructor executable, which in turn invokes vtkPlusVolumeReconstructor. VolumeReconstructor.cxx, line 175:

~~~~
if (reconstructor->SetOutputExtentFromFrameList(trackedFrameList, transformRepository, errorDetail) != PLUS_SUCCESS)

~~~~

obliterates *OutputOrigin* and *OutputExtent* settings provided in <VolumeReconstruction> section of the configuration file.

#### 2017-05-11, 14:46:02 - Dzenan Zukic
CommentContent: changed from "I am talking about volume reconstructor executable, which in turn invokes vtkPlusVolumeReconstructor. VolumeReconstructor.cxx, line 175 `if (reconstructor->SetOutputExtentFromFrameList(trackedFrameList, transformRepository, errorDetail) != PLUS_SUCCESS)`" to "I am talking about volume reconstructor executable, which in turn invokes vtkPlusVolumeReconstructor. VolumeReconstructor.cxx, line 175:

~~~~
if (reconstructor->SetOutputExtentFromFrameList(trackedFrameList, transformRepository, errorDetail) !="

#### 2017-05-11, 14:54:40 - Andras Lasso
We usually need the entire volume, but I agree that it could be useful to disable automatic extent setting. If you need this then add a new option:


~~~~
cmdargs.AddArgument('--disable-auto-extent', vtksys::CommandLineArguments::NO_ARGUMENT, &disableAutoExtent, 'Do not compute extent from the input sequence file but use OutputOrigin and OutputExtent specified in the configuration file.');


~~~~
  

#### 2017-05-11, 15:19:27 - Dzenan Zukic
Wouldn't it be more logical to check whether OutputOrigin and OutputExtent are set, and if they are skip calling _SetOutputExtentFromFrameList_ ?

#### 2017-05-11, 15:19:27 - Dzenan Zukic
CommentContent: changed from "Wouldn't it be more logical to check whether OutputOrigin and OutputExtent are set, and if they are skip calling _SetOutputExtentFromFrameList_?" to "Wouldn't it be more logical to check whether OutputOrigin and OutputExtent are set, and if they are skip calling _SetOutputExtentFromFrameList_ ?"

#### 2017-05-11, 16:04:58 - Andras Lasso
Current origin and extent values are saved to XML, so users keep copying those values along with other volume reconstruction parameters. It is very rare that you know origin and extent in advance. So, the values in the config file are most of the time these copy-pasted values, which would not generate meaningful volumes.

For the very rare occasion when a user intentionally sets origin and extent in the XML, the new flag could be used to bypass automatic extent computation.

#### 2017-05-11, 16:04:58 - Andras Lasso
CommentContent: changed from "Current origin and extent values are saved to XML, so users keep copying those values along with other volume reconstruction parameters. It is very rare that you know origin and extent in advance, so the fixed values left in the config file are these" to "Current origin and extent values are saved to XML, so users keep copying those values along with other volume reconstruction parameters. It is very rare that you know origin and extent in advance. So, the values in the config file are most of the time"


## #1160 Package generation does not include OpenIGTLinkIO DLLs
null

#### 2017-02-09, 18:14:07 - Adam Rankin
fixed #1160 Adding openIGTlinkIO target to install list

updating package name to include date

Branch: 1160_openigtlinkio_package
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/dcad21d67b77d33ffb25e4e38a3939ef4a79a41e|plus.2:dcad21d67b

#### 2017-02-09, 18:14:07 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-02-09, 18:14:24 - Adam Rankin
Merge pull request #3 from PlusToolkit/1160_openigtlinkio_package

fixed #1160 Adding openIGTlinkIO target to install list

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/46717d92e5b80c7589697d38632886a16bf8b4a4|plus.2:46717d92e5


## #1161 IGTLink API changed
Update PlusLib to use new meta data type, and correct access to meta data elements.

#### 2017-02-10, 15:37:35 - Adam Rankin
fixes #1161 Using igtl::MessageBase::MetaDataMap type wherever meta data access is performed

Reducing usage of char* in member variables

Branch: igtlink_dependency_fixes
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ae1756c1b18874337fe38881ecffc41a04056b1d|plus:ae1756c1b1

#### 2017-02-10, 15:37:35 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-02-10, 15:38:05 - Adam Rankin
Using igtl::MessageBase::MetaDataMap type wherever meta data access is performed (#16)

fixes #1161 Reducing usage of char* in member variables

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c5861f1c6596f7bd782cbeae5ff2063c61cbc4b8|plus:c5861f1c65


## #1162 OpenGL version error in PlusCalibration tests
See if there's a way to check for version before throwing an error.

#### 2017-02-11, 19:40:18 - Adam Rankin
re #1162 moving rendering dependent classes to vtkPlusRendering

Altering CMake dependencies to match new class layout

Reducing usage of char*, using & instead of *

Branch: 1162_opengl_tests
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/2e1fa19ac3302e98cb1e2379ff5d8a6590757f83|plus:2e1fa19ac3

#### 2017-02-11, 19:56:45 - Andras Lasso
In VTK7.1 by default OpenGL2 rendering backend is used, which requires OpenGL features that are not available when you connect to a remote computer using RDP (Microsoft Remote Desktop). To resolve this, you can use TeamViewer or VNC to connect; or use legacy OpenGL rendering backend (or as you did it, change tests so that they don't use OpenGL or allow disabling parts that require OpenGL).

#### 2017-02-11, 19:58:08 - Andras Lasso
Possibility of checking OpenGL version has come up several times on the VTK mailing list since OpenGL2 (many people suffer from this increased OpenGL version/extensions requirement) but there is no solution yet.

#### 2017-02-11, 19:58:19 - Adam Rankin
That makes sense... they didn't fail overnight (no RDP used for nightly).

#### 2017-02-11, 19:58:32 - Adam Rankin
Will clean up some link warnings and commit anyways, it's a nice cleanup

#### 2017-02-11, 20:04:09 - Adam Rankin
re #1162 moving rendering dependent classes to vtkPlusRendering

Altering CMake dependencies to match new class layout

Reducing usage of char*, using & instead of *

Branch: 1162_opengl_tests
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/fe90828d77175cb9fe9505de62e12453b43e054d|plus:fe90828d77

#### 2017-02-11, 20:55:38 - Adam Rankin
fixed #1162 moving rendering dependent classes to vtkPlusRendering (#17)

Altering CMake dependencies to match new class layout

Reducing usage of char*, using & instead of *

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e26fbaf9697d4651526a27d58bb841d654a3d423|plus:e26fbaf969

#### 2017-02-11, 20:55:38 - Adam Rankin
status: changed from "New" to "Fixed"


## #1163 PlusServer test failing
PlusServer is working, but the test is failing. Identify why.

#### 2017-02-12, 23:42:13 - Adam Rankin
re #1163 Adding separate executable for PlusServer test

Reducing usage of char*, updating accessors to support const-ness

Removing use of inet_ntop to re-enable XP support

Cleaning up disconnection code in IGTLinkDevice

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/fc3dd9ec626d653e063f2e0f3b79ec7c087703a8|plus:fc3dd9ec62

#### 2017-02-12, 23:58:25 - Adam Rankin
re #1163 Adding separate executable for PlusServer test

Reducing usage of char*, updating accessors to support const-ness

Removing use of inet_ntop to re-enable XP support

Cleaning up disconnection code in IGTLinkDevice

Branch: 1163_plusserver_tests
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e4016fe9062fe588210e85c63e96974c24531946|plus:e4016fe906

#### 2017-02-13, 00:04:26 - Adam Rankin
re #1163 Adding separate executable for PlusServer test (#25)

Reducing usage of char*, updating accessors to support const-ness

Removing use of inet_ntop to re-enable XP support

Cleaning up disconnection code in IGTLinkDevice

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7305e24de84304190d7aea27c19382e692e58c64|plus:7305e24de8

#### 2017-02-13, 17:58:42 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-02-13, 17:58:58 - Adam Rankin
Nightlies passing, would like to really robustify the disconnect code in the client.

#### 2017-02-14, 00:30:19 - Adam Rankin
re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages

PlusServer now gracefully handles client disconnects

Branch: 1163_handle_client_disconnect
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/fc6ab505d74f2523b443af8749a8a0bfd884800c|plus:fc6ab505d7

#### 2017-02-15, 05:15:13 - Adam Rankin
re #1163 fixing compile issues on Linux

Branch: 1163_linux_fix
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3f8bd93bbfa1a3fa238a1eb7520682c6b21775c8|plus:3f8bd93bbf

#### 2017-02-15, 05:32:47 - Adam Rankin
re #1163 fixing compile issues on Linux (#28)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c15354794170f7feff5f382f13dcf2d406e3702c|plus:c153547941

#### 2017-02-15, 05:33:02 - Adam Rankin
re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages (#27)

PlusServer now gracefully handles client disconnects

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4d8b3a8fa57377b66788cc0462459bee6be9009e|plus:4d8b3a8fa5

#### 2017-02-15, 05:58:43 - Adam Rankin
re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages (#27)

PlusServer now gracefully handles client disconnects

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e3aff5579dfa0ade162bc9afaa262228b3729bd9|plus:e3aff5579d

#### 2017-02-15, 05:58:43 - Adam Rankin
re #1163 fixing compile issues on Linux (#28)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/428688c9163311786f958e369a3af3b6e9cc3946|plus:428688c916

#### 2017-02-15, 06:00:27 - Adam Rankin
re #1165 Adding case insensitive string compare function

Fixing vtkPlusStealthLinkTracker string checking

Using PlusCommon::ToString until VS2010 support is dropped

re #1059 adding missing plusserver entry to include macro

re #1163 fixing compile issues on Linux (#28)

re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages (#27)

PlusServer now gracefully handles client disconnects

re #1165 Converting all string accessor to return std::string instead of const &

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/992a12fa7c959d4e016bda9a08d79f06b2187dd1|plus:992a12fa7c

#### 2017-02-16, 00:24:23 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1164 Convert const char* to std::string
In general, I support moving from const char* to std::string. However, it has to be done much more carefully than done in the recent code changes.

1. VTK almost everywhere stores empty string as NULL pointer. You can pass a const char* NULL pointer wherever string is accepted and it crashes the application (no problem reported compile-time). I would seriously consider waiting for VTK to make a move from const char* to a string class, because otherwise we have to put a null-pointer check at each place where we get a string from VTK and at some places we may have to convert empty strings to null pointers when setting values in VTK classes. Introducing some new macros may help in this (for example a SAFE_STR macro that converts null pointer to an empty string object).

2. If the move from const char* to a string class will be made then probably that string class won't be a simple std::string but something more sophisticated, that can at least handle character encoding. It may be vtkUnicodeString or some new string class.

3.  If we decide to switch, then we have to change the code everywhere at once, otherwise the chance of casting const char* to string is too high.

4. Returning const string& is not a trivial replacement of returning const char*. Every method that returns it and every method that uses the returned value must be thoroughly reviewed if the behavior is correct (it can go wrong many ways, without any compile-time errors). String should be returned by value, unless exceptional cases where we find measurable performance degradation. Performance impact should be insignificant in most cases, as many std::string implementations use reference counted pointers for the bulk data (so you won't copy lots of memory); also return-value-optimization may alleviate actual object copy. Often returning const std::string& is not feasible, for example when you construct a value locally - it's much cleaner if you can just return a string regardless if there is a corresponding member variable or not (with const char* it's a bit easier because at least you can return pointer to a string literal).

5. Use standard vtkSetMacro/vtkGetMacro with the string class to get/set values or maybe add a new specialized string macro pair vtkGet???StringMacro/vtkSet???StringMacro to perform null-pointer checks, etc.

#### 2017-02-13, 01:17:55 - Andras Lasso
description: changed from "In general, I support movin..." to "In general, I support movin..."

#### 2017-02-13, 01:20:12 - Adam Rankin
vtkSetMacro/vtkGetMacro do not support const getters, we could add that to our own macro.

#### 2017-02-13, 01:22:41 - Andras Lasso
Let's find a reasonable answer to all the 5 points above before making any more code changes.

#### 2017-02-13, 01:24:15 - Andras Lasso
description: changed from "In general, I support movin..." to "In general, I support movin..."

#### 2017-02-13, 21:49:15 - Andras Lasso
description: changed from "In general, I support movin..." to "In general, I support movin..."

#### 2017-02-25, 13:43:14 - Andras Lasso
re #1164: Fixed crash due to setting NULL in std::string

Added vtkSetStdStringMacro and vtkGetStdStringMacro to get/set std::string members. It is robustly handles getting NULL pointer as input (treats it as empty string).
Updated most std::string get/set functions to use these macros.

Added get/set macros for setting variables in non-VTK classes and vtkGetMacroConst to retrieve values when only a const pointer is available to an object.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/52b7cef5457b663a41eb619f4c7be82c44a8d40a|plus:52b7cef545

#### 2017-02-25, 13:43:14 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-04-06, 15:56:03 - Adam Rankin
Closing as fixed as this change seems stable. Individual tickets can be filed for specific issues.

#### 2017-04-06, 15:56:03 - Adam Rankin
status: changed from "New" to "Fixed"


## #1165 std::round not available on VS2010, build failing
null

#### 2017-02-13, 15:43:51 - Andras Lasso
Use PlusMath::Round

#### 2017-02-13, 17:34:56 - Andras Lasso
test #1165 Ensuring build on VS2010

Removing incorrect ROUND macro

Removing all uses of range based for loops

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3fad8c3a7148961b21555af71c341c736d0e62a3|plus:3fad8c3a71

#### 2017-02-13, 17:34:56 - Andras Lasso
status: changed from "New" to "Test"

#### 2017-02-13, 23:34:36 - Adam Rankin
re #1165 Adding case insensitive string compare function

Fixing vtkPlusStealthLinkTracker string checking

Using PlusCommon::ToString until VS2010 support is dropped

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/534bc0737ede3323750efc47b40d6b20c09de57f|plus:534bc0737e

#### 2017-02-15, 05:58:43 - Adam Rankin
re #1165 Converting all string accessor to return std::string instead of const &

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/93161483e16ee8ecdc9caef13f22bd96b35b6163|plus:93161483e1

#### 2017-02-15, 06:00:27 - Adam Rankin
re #1165 Adding case insensitive string compare function

Fixing vtkPlusStealthLinkTracker string checking

Using PlusCommon::ToString until VS2010 support is dropped

re #1059 adding missing plusserver entry to include macro

re #1163 fixing compile issues on Linux (#28)

re #1163 add a small delay when no data received from a client, to prevent 100% CPU while checking for incoming messages (#27)

PlusServer now gracefully handles client disconnects

re #1165 Converting all string accessor to return std::string instead of const &

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/992a12fa7c959d4e016bda9a08d79f06b2187dd1|plus:992a12fa7c

#### 2017-02-15, 06:08:30 - Adam Rankin
re #1165 adding case insensitive compare function

converting all string accessors to return by value instead of const ref

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3b9f89eb879597d5895d6ba405c91290aab2b6f4|plus:3b9f89eb87

#### 2017-02-15, 06:34:59 - Adam Rankin
re #1165 pushing additional changes to PR to trigger build (minor conversion to std::string)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/21da33febb7b936b31714aaab69b973e95e6c72e|plus:21da33febb

#### 2017-02-15, 06:39:25 - Adam Rankin
re #1165 minor change to trigger PR build (header cleanup)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b58070f3104c9c125fc16623cfb055a567367f40|plus:b58070f310

#### 2017-02-15, 06:44:36 - Adam Rankin
re #1165 trigger PR (class member formatting)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e020fdb1b005ac9fcc13a6127eb17ab9c3f89d49|plus:e020fdb1b0

#### 2017-02-15, 15:44:10 - Adam Rankin
re #1165 trigger PR build (anon namespace)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/742e783b674c9adb7c0c02fe1220cb524517e783|plus:742e783b67

#### 2017-02-15, 16:17:47 - Adam Rankin
re #1165 trigger PR (local variable formatting)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/65162c66dc0bd6c1316e8db6454eee0d545b6cb4|plus:65162c66dc

#### 2017-02-15, 18:58:14 - Adam Rankin
re #1165 trigger PR (comment added)

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f996fb113f7c3ec135457795e17e6ea86dbe1a72|plus:f996fb113f

#### 2017-02-15, 19:35:39 - Adam Rankin
re #1165 trigger PR

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e92ac989f0b91d9309ca58c78474a3dfbd6c993f|plus:e92ac989f0

#### 2017-02-15, 19:38:03 - Adam Rankin
re #1165 trigger PR

Branch: 1165_case_insensitive
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e1d623a85658e715f47c89c1b712ce4a3036eed4|plus:e1d623a856

#### 2017-02-15, 20:02:36 - Adam Rankin
Adding case insensitive compare function (#29)

* re #1165 adding case insensitive compare function

converting all string accessors to return by value instead of const ref

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/495eb20ef3abedcdbc9f8a68e1e9fe8d7a01191d|plus:495eb20ef3

#### 2017-02-16, 00:23:56 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-02-16, 02:28:09 - Adam Rankin
re #1165 adding documentation for plusserver field

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/5e709e92cd263537bc79b5fbee8a988554eb7ea0|plus.2:5e709e92cd

#### 2017-02-24, 12:52:58 - Andras Lasso
re #1165: Fixed build errors

Several untested changes were committed in devices that are not built by default (StealthLink, Telemed, ConoProbe).

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d461cb4d632b839ded55750e7153c077ce04b45e|plus:d461cb4d63

#### 2017-02-25, 14:16:10 - Andras Lasso
re #1165: Fixed linux build error

MSVC STL internal header xutility was removed, as it was not needed and caused build error on linux and windows vs14.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/175989dbee33044a111760c40ff7a049790b437e|plus:175989dbee

#### 2017-02-26, 14:39:13 - Andras Lasso
re #1165: Fixed build errors

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5c6bfbdcd6b8f21d943851487efb54d2b94f72a8|plus:5c6bfbdcd6


## #1166 New SonixTouch software (6.1.3) fcal can not connect
image:akz6Pe87qr5R8tacwqEsg8|Untitled.png


#### 2017-02-15, 19:31:13 - Andras Lasso
It seems that image streaming is not enabled. Enable 'SonixLive' checkbox in the Ultrasonix machine's configuration to enable Plus to connect.

#### 2017-02-15, 19:31:13 - Andras Lasso
status: changed from "New" to "Test"

#### 2017-02-15, 20:22:52 - ilkerh
Thanks it works now. :)

#### 2017-02-15, 20:48:37 - Adam Rankin
status: changed from "Test" to "Invalid"

#### 2017-02-15, 20:48:59 - Adam Rankin
Cheers, let us know if you encounter any further roadblocks.


## #1167 New SonixTouch software (6.1.3) fcal can not connect
WE have just installed the new sonixtouch softwar and Fcal application is not able to connect. Error display is attached. image:cpCo_k87qr5Okidmr6bg7m|Untitled.png


#### 2017-02-16, 00:29:48 - Adam Rankin
status: changed from "New" to "Invalid"


## #1168 Make PlusServer keep alive interval configurable
To reduce client side processing of status messages, make the interval configurable.

#### 2017-02-15, 21:28:21 - Adam Rankin
test #1168 Adding configuration parameter for keep alive interval

Branch: 1168_keepalive_interval
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e80381f83f4ad4d0e5c8e6d0e20625ee4ffa9d95|plus:e80381f83f

#### 2017-02-15, 21:28:21 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-02-15, 23:07:08 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-02-15, 23:07:43 - Adam Rankin
test #1168 Adding configuration parameter for keep alive interval (#30)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/11eff7f2b90b53a7eceecdda393ed7a32b85d930|plus:11eff7f2b9

#### 2017-02-15, 23:07:43 - Adam Rankin
status: changed from "Fixed" to "Test"

#### 2017-02-16, 00:24:11 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1169 PlusServer installed from nightly build package does not start
'The program can't start because igtlioLogic.dll is missing from your computer'

#### 2017-02-17, 16:36:26 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-02-17, 18:19:48 - Adam Rankin
Pull request here:
url:https://github.com/IGSIO/OpenIGTLinkIO/pull/23|https://github.com/IGSIO/OpenIGTLinkIO/pull/23
addresses the issue. 

Components were not defined for individual aspects of installed files. Added component definitions to match CPackConfig component definition.

Attached is a package created from the PR OpenIGTLinkIO.
file:cKqgYI9t0r5R8mdmr6CpXy|PlusApp-2.5.0.20170216-Win32.zip


#### 2017-02-17, 18:19:48 - Adam Rankin
assigned_to_id: changed from "rankin" to "lassoan"

#### 2017-02-17, 18:19:48 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2017-02-24, 06:43:28 - Adam Rankin
test #1169 Passing in std string instead of const char*

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/753ab6cb1163296b8d53025a38588e27eca69470|plus.2:753ab6cb11

#### 2017-04-06, 15:54:08 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-04-06, 17:51:58 - Andras Lasso
Yes, it works now. Thank you!


## #1170 Git hooks are not properly established
From url:https://app.assembla.com/spaces/plus/messages/5759743|https://app.assembla.com/spaces/plus/messages/5759743

Git dir should be obtained using 

~~~~
git rev-parse --git-dir

~~~~

instead of assuming .git folder

#### 2017-02-20, 16:14:27 - david.kuegler833514
re #1170 fix the proper deduction of the git directory #32

see pull request number 32

#### 2017-02-20, 16:14:27 - david.kuegler833514
CommentContent: changed from "re #1170 fix the proper deduction of the git directory #32

see pull request" to "re #1170 fix the proper deduction of the git directory #32

see pull request number 32"

#### 2017-02-20, 16:18:12 - Adam Rankin
Oh sorry! I did the same fix! (and fixed another small bug)

#### 2017-02-20, 16:19:16 - Adam Rankin
url:https://github.com/PlusToolkit/PlusLib/commit/cacc60c1f9f029e0d96630aa7fe5100d9ec55dee|https://github.com/PlusToolkit/PlusLib/commit/cacc60c1f9f029e0d96630aa7fe5100d9ec55dee

#### 2017-02-20, 16:19:16 - Adam Rankin
status: changed from "New" to "Fixed"


## #1171 Build fails because of OpenIGTLinkIO changes
Some names and namespaces in OpenIGTLinkIO have been changed

#### 2017-02-21, 14:42:15 - Ole Vegard Solberg
assigned_to_id: changed from null to "OleVegard.Solberg"

#### 2017-02-21, 15:01:43 - Ole Vegard Solberg
I made pull requests for PlusLib and PlusApp trying to fix the failing build. It works for me now, but I don't know if all the problems are fixed yet.

#### 2017-02-21, 16:15:36 - Ole Vegard Solberg
re #1171 Fixed compile errors due to name changes in OpenIGTLinkIO

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/770c0ad3b74ceaed769b5c9f038540743b5fb499|plus.2:770c0ad3b7

#### 2017-02-21, 16:15:36 - Ole Vegard Solberg
re #1171 Fixed another name change in OpenIGTLinkIO

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/31cf1106562e1044a33c262d7a0a247fdb241afc|plus.2:31cf110656

#### 2017-02-21, 16:15:36 - Adam Rankin
Merge pull request #5 from SINTEFMedtek/master

re #1171 Fixed compile errors due to name changes in OpenIGTLinkIO

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/1a35b0da95df51473b69c5adf3ddc0cdf9441ddd|plus.2:1a35b0da95

#### 2017-02-21, 16:16:12 - Adam Rankin
re #1171 Fixed compile errors due to name changes in OpenIGTLinkIO (#33)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0557f35c3da8c28d0402273271275920440fc31c|plus:0557f35c3d

#### 2017-02-22, 09:12:10 - Ole Vegard Solberg
assigned_to_id: changed from "OleVegard.Solberg" to null

#### 2017-02-24, 04:45:14 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2017-02-24, 04:45:14 - Adam Rankin
priority: changed from "Normal (3)" to "High (2)"

#### 2017-02-24, 04:45:14 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-02-24, 04:56:03 - Adam Rankin
status: changed from "New" to "Fixed"


## #1172 Build fails due to missing ImportanceMask.png
Race between downloading of PlusLibData and configuring of PlusLib (if VTK/ITK are re-used).

File should not be copied. Final downloaded location should be referenced in CMake files.

#### 2017-02-24, 06:40:29 - Adam Rankin
test #1172 making importance mask a configurable parameter to executable, and updating tests to pass in the downloaded file location

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/9ccf87f0ca4f0172efb5d7e768426deaec070f60|plus:9ccf87f0ca

#### 2017-02-24, 06:40:29 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-02-24, 06:40:29 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-03-06, 16:40:02 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1173 Commands RequestInputDeviceIds and RequestDeviceChannelIds fails
These commands fails saying there is no Device id.

log examples (line numbers may not be correct due to local changes):
|DEBUG|009.420000| Received header version 2 command RequestInputDeviceIds from client 1, device VideoDevice with UID 1: <Command Name='RequestInputDeviceIds' />| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(778)
|DEBUG|009.431000| QueueCommand respondUsingIGTLCommand: 1 clientId: 1 commandName: RequestInputDeviceIds deviceName: VideoDevice commandString: <Command Name='RequestInputDeviceIds' />| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(241)
|DEBUG|009.444000| vtkPlusCommand::ReadConfiguration| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\Commands\\vtkPlusCommand.cxx(41)
|DEBUG|009.451000| vtkPlusCommand::ReadConfiguration Name: RequestInputDeviceIds| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\Commands\\vtkPlusCommand.cxx(47)
|DEBUG|009.464000| Executing command| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(160)
|ERROR|009.468000| Command execution failed| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(163)
|DEBUG|009.480000| Command response: <Command><Result>false</Result><Error>Device with id:  not found.</Error><Message>Command failed, see error message.</Message></Command>| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(1457)
|DEBUG|009.492000| Send command reply to client 1: VideoDevice| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(576)

|DEBUG|014.447000| Received header version 2 command RequestDeviceChannelIds from client 1, device VideoDevice with UID 1: <Command Name='RequestDeviceChannelIds' />| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(778)
|DEBUG|014.453000| QueueCommand respondUsingIGTLCommand: 1 clientId: 1 commandName: RequestDeviceChannelIds deviceName: VideoDevice commandString: <Command Name='RequestDeviceChannelIds' />| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(241)
|DEBUG|014.461000| vtkPlusCommand::ReadConfiguration| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\Commands\\vtkPlusCommand.cxx(41)
|DEBUG|014.464000| vtkPlusCommand::ReadConfiguration Name: RequestDeviceChannelIds| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\Commands\\vtkPlusCommand.cxx(47)
|DEBUG|014.489000| Executing command| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(160)
|ERROR|014.493000| Command execution failed| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusCommandProcessor.cxx(163)
|DEBUG|014.498000| Command response: <Command><Result>false</Result><Error>Device with id:  not found.</Error><Message>Command failed, see error message.</Message></Command>| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(1457)
|DEBUG|014.507000| Send command reply to client 1: VideoDevice| in C:\\dev\\plus2\\PlusB-bin32\\PlusLib\\src\\PlusServer\\vtkPlusOpenIGTLinkServer.cxx(576)

#### 2017-03-01, 15:21:56 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-03-01, 15:21:58 - Adam Rankin
Component: changed from null to "PlusLib-PlusServer"

#### 2017-03-01, 15:22:00 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-03-01, 15:22:02 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-03-01, 15:22:11 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-03-02, 20:27:39 - Adam Rankin
Hmm, I'm unable to reproduce. Latest SlicerIGT on latest Slicer with latest Plus works as expected. What versions are you testing?

#### 2017-03-06, 16:40:23 - Adam Rankin
@OleVegard.Solberg Any follow-up?

#### 2017-03-08, 12:21:55 - Ole Vegard Solberg
Sorry for the delay. I realise my bug-report was a bit thin, I will try to give some more info:

I'm working on our fork of PlusLib: https://github.com/SINTEFMedtek/PlusLib It is probably a few weeks behind.

On the server I'm using PlusDeviceSet_Server_BkProFocusOem.xml as configuration. I use #define OFFLINE_TESTING in vtkPlusBkProFocusOemVideoSource.cxx

I use OpenIGTLinkIO for the client (our fork: https://github.com/SINTEFMedtek/OpenIGTLinkIO). I'm trying to send a CommandQuery with OpenIGTLinkIO: Session::SendCommandQuery(device_id, command, content), where 
device_id = 'VideoDevice'
command = 'RequestDeviceChannelIds'
content = '<Command Name=\\'RequestDeviceChannelIds\\' />'

I assumed the problem was in plus since, as the debug log shows, it looks like plus don't use the device id from the OpenIGTLink message.
I see now that if I instead put the device id in the message content like this: content='<Command Name=\\'RequestDeviceChannelIds\\' DeviceId=\\'VideoDevice\\' />' I get the answer I'm looking for.
I also see you have listed DeviceId as attribute in the command description :)
I guess the confusion here is that device id is both a part of the OpenIGTLink message and an attribute to the command content. Is this the same device id or are they different?

 

#### 2017-03-08, 14:46:47 - Adam Rankin
Ah yes, sadly they are different. I would be agreeable to changing the attribute tag to PlusDeviceId, @lassoan thoughts?

OpenIGTLink DeviceId is a very multipurpose field, as the original spec was limited in flexibility. I think we use it to send transform names, image embedded transform names, etc...

#### 2017-03-08, 16:19:12 - Andras Lasso
Device ID in OpenIGTLink is kind of a context identifier. Defines the 'topic' for the data transfer. For example, for an OpenITGLink command there could be multiple independent command processors and then device ID would be then used for choosing the command processor.
The 'device' term is used in Plus for data collection classes (derived from vtkPlusDevice). These devices has nothing to do with OpenIGTLink devices.
In Plus code, OpenIGTLink and Plus devices are well separated: only PlusServer and PlusOpenIGTLink are aware of OpenIGTLink protocol; PlusDataCollection library (and the rest of the toolkit) doesn't know about OpenIGTLink at all.

It would be nice to avoid using the same 'device' word for two completely different things. For example, we could replace the 'device' with some other word throughout Plus? It would not be easy to find a suitable word (connection? but that's already used, ..) and not a small task to replace it everywhere.

#### 2017-04-06, 15:55:01 - Adam Rankin
Closing as invalid as no changes are needed. If a discussion on naming is desired, a new ticket should be created.

#### 2017-04-06, 15:55:01 - Adam Rankin
status: changed from "Accepted" to "Invalid"


## #1174 Add support for the Acquiris D310 oscilloscope
Using the MD1 driver, add support for the D310 oscillioscope (single-element transducer project)

MD1 driver is download & install, wrap CMake target for installed lib/include/bin

#### 2017-03-06, 16:44:08 - Adam Rankin
Prereq:
http://www.keysight.com/main/software.jspx?cc=CA&lc=eng&ckey=1184883&nid=-33330.977662&id=1184883

MD1:
http://www.keysight.com/main/software.jspx?ckey=2000051

#### 2017-03-06, 16:44:21 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-03-06, 17:29:24 - Adam Rankin
For D310, install U10xx option in MD1 installer.

#### 2017-03-06, 17:30:07 - Adam Rankin
re #1174 adding FindAgilentMD1.cmake to locate installed SDK

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/555240ecb10653d78175cde5e7c919a44b63a2b8|plus.3:555240ecb1

#### 2017-04-25, 14:15:44 - Golafsoun Ameri
re #1174 Adding agilent scope config file
Commit: r:5070|plus:5070

#### 2017-04-25, 14:22:56 - Adam Rankin
re #1174 Adding Agilent variables and Find module

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/65bd688cc6a9e7de6c4a68bca943cfc44ac63f83|plus.3:65bd688cc6

#### 2017-04-25, 14:26:26 - Anonymous
re #1174 Adding agilent scope tracker class and necessary infrastructure

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/92c26102db62a2e2fef36a1b1591342ccc885b9d|plus:92c26102db

#### 2017-05-10, 16:10:59 - Adam Rankin
re #1174 Adding Agilent sample files
Commit: r:5074|plus:5074

#### 2017-05-10, 16:11:38 - Adam Rankin
re #1192 #1174 Fixing PlusApp build to use new PlusCommon namespaces and functions

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/69fd44dfd899409d9f25b588437f146fd80bd110|plus.2:69fd44dfd8

#### 2017-07-11, 18:44:12 - Adam Rankin
re #1174 Updating configuration file for Agilent device
Commit: r:5106|plus:5106

#### 2017-07-11, 18:44:39 - Adam Rankin
re #1174 cleaning up device class for agilent scope

adding documentation page for agilent device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ae5aab4e8da2cf7eedfe8028295312277dafed68|plus:ae5aab4e8d

#### 2017-07-11, 18:44:58 - Adam Rankin
fixed #1174 adding link to device page for agilent device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/9d6bc338bcfa9c8a1cfe92dc14cca8a32f071ef4|plus.2:9d6bc338bc

#### 2017-07-11, 18:44:58 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-08-10, 17:57:08 - Adam Rankin
re #1174 preventing crash when no peaks are found (#69)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/dcb31b6cb733f57c4082fc2716874c239c039b31|plus:dcb31b6cb7

#### 2017-08-23, 15:45:16 - Golafsoun Ameri
Re #1174
Updating the NDI config file
Commit: r:5120|plus:5120

#### 2017-08-23, 22:11:54 - Adam Rankin
re #1174 restoring example config file and moving derivative to subfolder
Commit: r:5121|plus:5121


## #1175 Implement support for BX message in NDICAPI
BX messages return transform information in binary, reducing serial bandwidth requirements considerably.

Implement support for BX messages.

#### 2017-03-08, 20:34:42 - Adam Rankin
re #1175 using external repository for ndicapi, passed in from PlusBuild

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/970208c3307fb299dbf1531621a6aac008a12871|plus:970208c330

#### 2017-03-09, 00:12:46 - Andras Lasso
Thank you, it's nicer this way. If NDI support is disabled we don't even need to download ndicapi.

#### 2017-04-07, 14:50:59 - Adam Rankin
BX message style doesn't seem to be working for my SCU. Will try to follow up with NDI to see if I've done something wrong in the code.

#### 2017-05-22, 21:01:13 - Adam Rankin
summary: changed from "Performance analysis for NDI common API" to "Implement support for BX message in NDICAPI"

#### 2017-05-22, 21:01:39 - Adam Rankin
description: changed from null to "BX messages return transfor..."

#### 2017-05-22, 21:01:48 - Adam Rankin
file:dDVO46pZer56_cdmr6QqzO|working_bx_log.txt


#### 2017-07-11, 18:44:39 - Adam Rankin
re #1175 BX (and all binary) commands are now properly received over serial in Win32, corrections still need to be made on Linux and Mac.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c422398b4fc76d0425d68cb8bc5fe4b1b181e4cb|plus:c422398b4f

#### 2017-07-11, 18:44:39 - Adam Rankin
re #1175 removing defunct code, adding delay after COMM command

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4223bf8f329cd69e9a373854bd7baa1c4005edd3|plus:4223bf8f32

#### 2017-07-11, 18:45:10 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-07-19, 01:45:05 - Adam Rankin
re #1175 add support for network interface for NDI devices

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6d4abe3d464025ac0d6766d3e1d1855e9eb7d827|plus:6d4abe3d46

#### 2017-07-19, 01:52:54 - Adam Rankin
re #1175 adding NDI Vega configuration file
Commit: r:5110|plus:5110

#### 2017-07-28, 18:33:54 - Adam Rankin
re #1175 enabling support for older Polaris device that does not have the GETINFO command

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ce636d081f1ddfc172c8d09178bce8186c7c9fa2|plus:ce636d081f

#### 2017-08-02, 23:44:45 - Adam Rankin
re #1175 Aurora device cannot report sphere position (#66)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/75c06954747f93cd54c8052d013233b4a7a14e9f|plus:75c0695474

#### 2017-08-04, 01:58:17 - Anonymous
re #1175 Only the mac compiler caught an incorrect parameter passing bug. Corrected to use appropriate function call.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5d7a4d892030b6c3649afff5c21f58ee97bc92af|plus:5d7a4d8920

#### 2017-08-09, 15:04:55 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1176 Create tracking fixture for old Telemed C5 probe


#### 2017-03-25, 00:41:06 - Tamas Ungi
summary: changed from "Create tracking fixture for old Telemed C5 prob" to "Create tracking fixture for old Telemed C5 probe"

#### 2017-03-25, 00:41:12 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2017-03-25, 00:41:16 - Tamas Ungi
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-03-25, 00:42:27 - Tamas Ungi
Re #1176: Adjustments based on print test.
Commit: r:5063|plus:5063

#### 2017-05-09, 15:00:47 - Tamas Ungi
status: changed from "New" to "Fixed"


## #1177 fCal sphere visualization missing
Some jerkwad (me) broke the visualization of points for stylus and phantom collection.

Fix it (me).

#### 2017-03-25, 17:21:57 - Adam Rankin
fixed #1177 external classes were erroneously changing the poly data point member

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/54e63a9974baddd1c19db3f2cd2e2afc59f146a8|plus.2:54e63a9974

#### 2017-03-25, 17:21:57 - Adam Rankin
status: changed from "New" to "Fixed"


## #1178 Segmentation parameter dialog crashes when ROI goes beyond -X limit
Probably a < 0 error. Investigate.

#### 2017-03-25, 20:11:08 - Adam Rankin
fixed #1178 made ROI manipulation in fCal more robust

renamed class to adhere to Qt naming convention

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/6bbd0127fe05205f68b9949b5759e3c3554a85bb|plus.2:6bbd0127fe

#### 2017-03-25, 20:11:08 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-03-26, 12:47:30 - Adam Rankin
re #1178 correcting VS2010 build, no <future> available

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/89686e5c6611549f3547b580babfa634754f7360|plus.2:89686e5c66

#### 2017-03-26, 15:06:08 - Adam Rankin
re #1178 removing warning as spin box value is guaranteed >=0 (due to UI spin box min setting)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/385eade4df37114fc6ba1668faabad4a7fb76fd1|plus.2:385eade4df


## #1179 Serial device does not make captured data available
Enhance with new field data source type to broadcast received text over network

#### 2017-04-03, 19:54:09 - Adam Rankin
Existing design was to use commands to send commands to serial device and wait for reply.

Add optional data source storage so commands can be sent from Arduino to Plus unprompted (and thus broadcast over network).

#### 2017-04-03, 20:06:28 - Adam Rankin
fixed #1179 adding optional storing of received strings over serial into a field data buffer

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/457003e950447a4f44a3004afce95296ad0b23e1|plus:457003e950

#### 2017-04-03, 20:06:28 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-04-03, 20:16:22 - Adam Rankin
re #1179 adding field data source for generic serial device example
Commit: r:5064|plus:5064

#### 2017-04-03, 20:45:30 - Andras Lasso
The config file works but continuously printing 'No data is broadcasted, as no data is available yet' warning.

#### 2017-04-03, 20:48:45 - Andras Lasso
re #1179: Added Slicer python script example for sending commands to a connected Arduino

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d632df2767be971efa2483b02d090a115d333096|plus:d632df2767

#### 2017-04-03, 20:49:23 - Adam Rankin
Hmm, which in this case is correct, as data may never become available. Thoughts? Make the warning disable-able with a flag?

#### 2017-04-03, 20:49:23 - Adam Rankin
status: changed from "Fixed" to "Accepted"

#### 2017-04-03, 22:31:45 - Andras Lasso
We should probably allow plus server to run without an output channel and/or put serial device output into the item buffer (if there device did not provide any output then we can put empty string in the field data).

#### 2017-04-04, 19:37:46 - Adam Rankin
re #1179 Adding configurable option in PlusServer to log warning when no data is available yet

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1e2e3fe3dbd70aa01cfeab6823cd1fab5d9e7c19|plus:1e2e3fe3db

#### 2017-04-04, 19:38:22 - Adam Rankin
re #1179 Adding configurable option in PlusServer to log warning when no data is available yet

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/22cbfd90916d917766959de4d7b66c015348da10|plus.2:22cbfd9091

#### 2017-04-04, 19:38:57 - Adam Rankin
Closing as fixed, log is not spammed. With regards to server without an output channel, that should be in a future ticket.

#### 2017-04-04, 19:38:57 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-04-04, 19:39:44 - Adam Rankin
re #1179 updating example config file
Commit: r:5065|plus:5065

#### 2017-04-05, 01:28:58 - Andras Lasso
Thank you!


## #1180 Add new video source : IntersonArraySDKCxx
The vtkIntersonArraySDKCxxVideoSource is added along with the Tests.

PlusLib support for IntersonArraySDKCxx is enabled with the

PLUS_USE_INTERSONARRAYSDKCXX_VIDEO

CMake configuration variable.

#### 2017-04-07, 14:46:29 - Adam Rankin
What is the difference between the IntersonSDKCxx and IntersonArraySDKCxx? Is it just a probe model? If they use the same underlying SDK, their should only be one device type that supports multiple probes.

#### 2017-04-07, 14:48:28 - Adam Rankin
assigned_to_id: changed from null to "maeliss.jallais"

#### 2017-04-07, 14:48:34 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2017-04-07, 14:48:34 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-04-07, 17:36:00 - Maeliss Jallais
They do not use the same SDK.

#### 2017-04-07, 17:37:51 - Adam Rankin
Ok cool!

Thanks!

#### 2017-04-10, 15:24:50 - Adam Rankin
re #1180: Add new video source : IntersonArraySDKCxx (#37)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8dd56fdde90412faa462e4530536030d162c976b|plus:8dd56fdde9

#### 2017-04-10, 17:50:12 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-04-19, 14:12:20 - Adam Rankin
re #1180: Remove SET not needed in cmake file and set variables as protected (#39)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/63a81f8d0b1527d79fc483269829e276cd4c72f3|plus:63a81f8d0b

#### 2017-05-09, 20:06:30 - Dzenan Zukic
This is not exposed in PlusBuild, like all the other device types.

#### 2017-05-24, 16:58:53 - Adam Rankin
IntersonArraySDK (#48)

* re #1180: Rf decimation does not exist in IntersonArraySDK

* re #1180: Move the initialisation of the scan converter to InternalConnect()

* re #1180: No need to include the IntersonArraySDKCxx_INCLUDE_DIRS

We now use the cmake command 'target_include_directories' in the IntersonArraySDKCxx project.
We therefore no longer require to add IntersonArraySDKCxx_INCLUDE_DIRS manualy to PlusLib.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/52372c309cbddcc471e2099b4a93887ca584c172|plus:52372c309c

#### 2017-05-25, 13:57:55 - Adam Rankin
IntersonArraySDK (#48)

* re #1180: Rf decimation does not exist in IntersonArraySDK

* re #1180: Move the initialisation of the scan converter to InternalConnect()

* re #1180: No need to include the IntersonArraySDKCxx_INCLUDE_DIRS

We now use the cmake command 'target_include_directories' in the IntersonArraySDKCxx project.
We therefore no longer require to add IntersonArraySDKCxx_INCLUDE_DIRS manualy to PlusLib.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/18fc594c9b6c498f8c1b62f192cb838824f4a3c0|plus:18fc594c9b


## #1181 Enable support for System zlib
Enable better integration with Slicer. When Plus is pointed to ITK and VTK from Slicer's build, link error 'cannot open input file 'vtkzlib.lib'' is url:https://app.assembla.com/spaces/plus/messages/5799593|encountered.

In Slicer's superbuild ITK's internal zlib is turned off and Slicer-provided 'system' zlib is used. In VTK internal zlib is not built by default, and in Slicer's superbuild VTK is pointed to Slicer-provided 'system' zlib too.
We therefore need to implement ITK/VTK-like USE_SYSTEM_ZLIB mechanism in Plus. Specifically, use the below CMake defines to enable usage of another zlib build:

~~~~
    -DPLUS_USE_SYSTEM_ZLIB:BOOL=ON
    -DZLIB_INCLUDE_DIR:PATH=...
    -DZLIB_LIBRARY:FILEPATH=...

~~~~


#### 2017-04-27, 13:34:07 - Andras Lasso
fixes #1181 Support building PlusLib as part of Slicer's superbuild

ExternalProject_Add's CMAKE_CACHE_ARGS should have these:
  -DPLUS_USE_SYSTEM_ZLIB:BOOL=ON
  -DZLIB_INCLUDE_DIR:PATH=${ZLIB_INCLUDE_DIR}
  -DZLIB_LIBRARY:FILEPATH=${ZLIB_LIBRARY}
  -DITK_NO_IO_FACTORY_REGISTER_MANAGER:BOOL=ON

PLUS_USE_SYSTEM_ZLIB should be used in cases when ITK's and VTK's internal zlib build has been disabled.

ITK_NO_IO_FACTORY_REGISTER_MANAGER should be used in all the programs and libraries using itk::ImageFileReader and itk::ImageFileWriter classes. This makes sure there is only a single ITK I/O factory manager.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/01c18be33f1b6314f1e6ac074a297c6026e58600|plus:01c18be33f

#### 2017-04-27, 13:34:07 - Andras Lasso
status: changed from "New" to "Fixed"


## #1182 Plus Server Launcher does not recognize .XML (capital) files
The Plus Server Launcher ignores any configuration files that have a '.XML' (note the capitalization) extension. It would be nice if the Plus Server Launcher could recognize these files too.

Here is my workflow that lead to this:
1. I created a new Plus Config file called: PlusDeviceSet_Server_Ascension3DG_HMA.xml.
2. I sent this config file to a colleague using Microsoft Outlook (which automatically capitalized the file extension without notice).
3. The colleague saved the file to his computer and tried to select it in the Plus Server Launcher.
4. The file did not appear in the selector widget as a device set configuration.

Making the extension lower case fixed the problem, and the file became available in the device set configuration widget.

OS: Windows 10, 64-bit
Version: PlusApp-2.5.0.20170409-Win32



#### 2017-04-26, 15:05:00 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-04-26, 15:05:03 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-04-26, 15:05:08 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-05-10, 14:17:01 - Adam Rankin
re #1182 replacing direct string compare with case insensitive compare (#41)

* re #1182 replacing direct string compare with case insensitive compare

* re #1182 keeping case sensitivity for non-Windows OS's

* re #1182 adding XML namespace for XML related functions in PlusCommon

Adding XML helper function to query an attribute value safely

Correcting bug in PlusSpatialModel when setting model file

* re #1182 reducing usage of STRCASECMP and replacing it with PlusCommon::IsEqualInsensitive

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b40d15554fee40eeb5454ec0bae6f2d1dbde38de|plus:b40d15554f

#### 2017-05-10, 15:50:33 - Adam Rankin
re #1182 adding XML namespace for XML related functions in PlusCommon

Adding XML helper function to query an attribute value safely

Correcting bug in PlusSpatialModel when setting model file

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b8215bb4bcb4c87cd0c4f5c839b6ac4865b225a4|plus:b8215bb4bc

#### 2017-05-10, 15:50:33 - Adam Rankin
re #1182 reducing usage of STRCASECMP and replacing it with PlusCommon::IsEqualInsensitive

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c5c7f5788f6787a134e69504375624ef04825575|plus:c5c7f5788f

#### 2017-05-10, 15:50:33 - Adam Rankin
re #1182 replacing direct string compare with case insensitive compare

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1b5098acb322b1d7dd1db7637d7940a44458e3a9|plus:1b5098acb3

#### 2017-05-15, 20:09:39 - Adam Rankin
re #1182 erroneous comparison when checking tool attributes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/676c84566b78a6904c0fa31448561d21fc7812de|plus:676c84566b

#### 2017-05-22, 21:00:52 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-07-16, 13:38:34 - Anonymous
re #1182 replacing direct string compare with case insensitive compare

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0d25f4dc1a640881d37581fdc09cf289a28eaa79|plus:0d25f4dc1a

#### 2017-07-16, 13:38:34 - Anonymous
re #1182 adding XML namespace for XML related functions in PlusCommon

Adding XML helper function to query an attribute value safely

Correcting bug in PlusSpatialModel when setting model file

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0a8973ea8591ad3b556f6cf94b90c1ce87377c9c|plus:0a8973ea85


## #1183 Create clip-on fixture for Telemed ultrasound probes


#### 2017-04-27, 18:18:46 - Tamas Ungi
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-04-27, 18:18:48 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2017-04-27, 18:19:45 - Tamas Ungi
Re #1183: Added initial model
Commit: r:5071|plus:5071

#### 2017-04-27, 18:51:58 - Tamas Ungi
Re #1183: Made brace thicker and tighter
Commit: r:5072|plus:5072

#### 2017-05-15, 00:27:00 - Tamas Ungi
Re #1183: Part added for L12 probe
Commit: r:5075|plus:5075

#### 2017-05-15, 02:24:04 - Tamas Ungi
Re #1183: First version sent for printing
Commit: r:5076|plus:5076

#### 2017-05-16, 01:07:03 - Tamas Ungi
Re #1183: Sensor holder for clip-on probe braces
Commit: r:5078|plus:5078

#### 2017-05-24, 17:21:12 - Tamas Ungi
Re #1183: Made it a bit tighter, and sensor at a better position
Commit: r:5082|plus:5082


## #1184 PlusLib only properly creates installs for Release Configuration
PlusLib should also allow for RelWithDebInfo and Debug installations, if the User wishes to.
Currently all installs are restricted mostly to Release. I think the user can be assumed to know, that the install he produces will be performed with the currently selected build type.
Also (as a feature) build types that provide PDBs should include these, if they are available (this is to make debugging easier).

--> Release build will work unchanged, RelWithDebInfo and Debug are supported.

#### 2017-05-03, 14:34:02 - david.kuegler833514
Created a pull request on github https://github.com/PlusToolkit/PlusLib/pull/42

#### 2017-05-03, 14:34:02 - david.kuegler833514
CommentContent: changed from "Created a pull request on github" to "Created a pull request on github https://github.com/PlusToolkit/PlusLib/pull/42"

#### 2017-05-05, 17:21:27 - Andras Lasso
addresses #1184 Add support for RelWithDebInfo and other Build Types / install pdbs if available

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c7510c10f70cbf0f27731fccdd62e5c1af8106c8|plus:c7510c10f7

#### 2017-05-06, 14:42:11 - Andras Lasso
status: changed from "New" to "Fixed"

#### 2017-05-07, 18:42:05 - Andras Lasso
David, this caused build errors on Linux:
http://crunch.cs.queensu.ca/CDash/viewConfigure.php?buildid=71547

Could you please have a look?

#### 2017-05-07, 18:42:05 - Andras Lasso
assigned_to_id: changed from null to "david.kuegler833514"

#### 2017-05-07, 18:42:05 - Andras Lasso
status: changed from "Fixed" to "New"

#### 2017-05-08, 11:00:54 - david.kuegler833514
Sure. It is a quite obvious issue, that can easily be fixed, since PDB-Files are only available for Visual Studio.

#### 2017-05-08, 11:05:57 - david.kuegler833514
https://github.com/PlusToolkit/PlusLib/pull/45

#### 2017-05-08, 12:45:43 - Andras Lasso
re #1184 pdb files are only available for MSVC, so make this conditional on this prerequisite

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e4cfc2768ce4551430e4693ac529e2216fca26d2|plus:e4cfc2768c

#### 2017-05-08, 13:27:50 - Andras Lasso
Thank you, this fixed the problem.

#### 2017-05-08, 13:27:50 - Andras Lasso
status: changed from "New" to "Fixed"


## #1185 find_package() does not work with Version Numbers
Using Version numbers in the find_package() command does not work

#### 2017-05-03, 17:11:44 - david.kuegler833514
posted a pull request on github
https://github.com/PlusToolkit/PlusLib/pull/43

#### 2017-05-05, 17:24:45 - Andras Lasso
addresses #1185 use write_basic_package_version_file instead of custom Version file

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/71472d364682a37e293f9322f9f0af39b73f2864|plus:71472d3646

#### 2017-05-06, 14:40:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #1186 Review of existing marker tracking toolkits
It has to be BSD-like, mono optical, preferred: use surface scan data.

Interfacing OpenCV or ArUco for tracking:

ArUco: http://www.uco.es/investiga/grupos/ava/node/26
http://docs.opencv.org/3.1.0/d5/dae/tutorial_aruco_detection.html

ARMA: https://sites.google.com/site/georgeevangelidis/arma - license only for academic use
ARToolkit+: obsolete, replaced by stbtracker
Stbtracker: http://studierstube.icg.tugraz.at/handheld_ar/stbtracker.php - not open source!
Vuforia: http://www.ptc.com/news/2016/ptc-brings-vuforia-to-hololens - commercial
Wikitude 3D: supports hololens
ARMedia: www.inglobetechnologies.com - commercial
Princeton: http://tracking.cs.princeton.edu/code.html
Kudan: https://www.kudan.eu/kudan-news/comparison-kudan-vuforia/ - commercial
CurvSurf: http://www.curvsurf.com/ - commercial

ORBSLAM2: https://github.com/raulmur/ORB_SLAM2, markerless tracking using RGBD camera, actively developed - GPLv3


#### 2017-05-04, 14:16:15 - Andras Lasso
assigned_to_id: changed from null to "markasselin"

#### 2017-05-16, 14:32:57 - Adam Rankin
milestone_id: changed from null to "Release Plus-Future"

#### 2017-05-16, 15:13:56 - Andras Lasso
description: changed from "It has to be BSD-like, mono..." to "It has to be BSD-like, mono..."

#### 2017-05-29, 18:47:49 - Mark Asselin
status: changed from "New" to "Accepted"

#### 2017-05-29, 18:47:59 - Mark Asselin
status: changed from "Accepted" to "New"


## #1187 Fix PlusLib include directories for Qt generated headers for CMake 3.8


#### 2017-05-05, 15:37:14 - Mark Asselin
assigned_to_id: changed from null to "markasselin"

#### 2017-05-05, 15:37:14 - Mark Asselin
status: changed from "New" to "Accepted"

#### 2017-05-05, 17:25:58 - Andras Lasso
re #1187 support for VS2017 and Qt5.7

Fix include directory for generated Qt headers under VS2017 Community
and Qt5.7.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0731db4d2405f681673ce8ebb2763bd21e45b536|plus:0731db4d24

#### 2017-05-06, 12:20:47 - Andras Lasso
re #1187: Fixed build error due to nonexistent directory

PlusWidgets_autogen/include dir is only added if VS2017 is used.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b6ea2596a9d91291c0c74cf650c54e374291a7cb|plus:b6ea2596a9

#### 2017-05-06, 12:37:26 - Andras Lasso
This problem may be related to CMake version and not Visual Studio or Qt version: see https://gitlab.kitware.com/cmake/cmake/merge_requests/307.

@markasselin What CMake version do you use?

#### 2017-05-06, 12:37:26 - Andras Lasso
CommentContent: changed from "This problem may be related to CMake version and not Qt: see https://gitlab.kitware.com/cmake/cmake/merge_requests/307.

@markasselin What CMake version do you use?" to "This problem may be related to CMake version and not Visual Studio or Qt version: see https://gitlab.kitware.com/cmake/cmake/merge_requests/307.

@markasselin What CMake version do you use?"

#### 2017-05-06, 13:36:59 - Mark Asselin
@lassoan It appears you are correct about this being related to CMake, I am using version 3.8.1.

#### 2017-05-06, 14:03:00 - Adam Rankin
Yes, I've been through this. It starts with CMake 3.8.0. They changed the way Qt autogen is done.

#### 2017-05-06, 14:03:28 - Adam Rankin
Right now, Plus is locked to 3.7.2 until they fix it.

#### 2017-05-06, 14:04:43 - Adam Rankin
Wiki updated to reflect 3.7.2 dependency

#### 2017-05-06, 14:04:57 - Adam Rankin
@lassoan should we add cmake logic to check for max cmake upper version as well as lower?

#### 2017-05-06, 14:05:22 - Andras Lasso
re #1187: Attempt to fix build error on CMake 3.8

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/89e92813d89acb96dd6d3875a41e6e9c9b910d8c|plus:89e92813d8

#### 2017-05-06, 14:07:20 - Andras Lasso
I think this patch should fix the problem. If not then we should add the CMake upper version check. Has the problem been reported to CMake people? It's 3.8.1 and the problem is still there.

#### 2017-05-06, 14:16:08 - Adam Rankin
No, I'm overwhelmed right now. If you are willing to file the report, that would be great.

Patch looks good. Maybe add a new Plus-future ticket linked to cmake bug report?

#### 2017-05-06, 14:41:54 - Andras Lasso
summary: changed from "Fix PlusLib include directories for Qt generated headers under VS2017 & Qt5.7" to "Fix PlusLib include directories for Qt generated headers for CMake 3.8"

#### 2017-05-07, 13:41:47 - Andras Lasso
re #1187: Fix syntax error when using CMake 3.8

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d78ac83fc8f3a321983f536bf1a10383e271b1a1|plus:d78ac83fc8

#### 2017-05-07, 13:53:45 - Andras Lasso
re #1187: Use LIST(APPEND ...) instead of SET(x ${x} ...)

List append is the recommended method for CMake 2.4 and above: https://cmake.org/Wiki/CMake_Performance_Tips#Use_LIST.28APPEND_....29

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c485d8feb1d512fdba120346c5dd2ce2e201aa0a|plus:c485d8feb1

#### 2017-05-11, 18:17:47 - Andras Lasso
re #1187: Fixed CMake configuration error with CMake 3.6

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/edb947a86c144541635e50a179e9f427e189f21f|plus:edb947a86c

#### 2017-05-12, 17:18:06 - Mark Asselin
status: changed from "Accepted" to "New"

#### 2017-05-12, 17:19:16 - Mark Asselin
assigned_to_id: changed from "markasselin" to null

#### 2017-05-12, 17:30:24 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-05-12, 17:30:24 - Andras Lasso
status: changed from "New" to "Fixed"


## #1188 Make Ascension measurement hemisphere configurable
Posted by Matthew Holden on 2017-05-08 09:59 

I am using the Acension 3DG trakStar for several different projects, and for each setup I use a different hemisphere for the sensors in the Ascension tracker. In particular, for one application I use the FRONT hemisphere for all sensors, and for another application I use the TOP hemisphere for all sensors.

But I find that it is easy to forget to change the hemisphere through the Ascension trakStar utility.

Is there a way to set the hemisphere for the Ascension sensors through the PLUS config file? 

#### 2017-05-08, 15:51:02 - Andras Lasso
test #1188: Added the option of specifying measurement hemisphere for Ascension trackers

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/38e1045f061685ece90d42d035f7ce1854d55a55|plus:38e1045f06

#### 2017-05-08, 15:51:02 - Andras Lasso
status: changed from "New" to "Test"

#### 2017-05-08, 15:52:29 - Andras Lasso
@mholden8 I've implemented a common Hemisphere parameter. I haven't tested it, so please do so and let me know if it works. Add Hemisphere='FRONT' (BACK, LEFT, RIGHT, ...) in the config file to specify the hemisphere. Either build Plus or wait for tomorrow's nightly build.

#### 2017-05-08, 16:27:22 - Matthew Holden
@lassoan Thanks for looking into this so promptly. I will test with tomorrow's nightly build.

#### 2017-05-09, 13:40:30 - Matthew Holden
I tested this morning with the latest nightly. Everything works as expected.

The new default behaviour is FRONT, but previously the default behaviour was to use whatever was set in the trakStar utility. PLUS users who want to use a non-FRONT hemisphere can no longer set it in the trakStar utility, but must set it in the PLUS config file. This behaviour is consistent with the way PLUS treats other parameters for the Ascension tracker.

#### 2017-05-09, 13:40:30 - Matthew Holden
status: changed from "Test" to "Fixed"

#### 2017-05-09, 13:43:21 - Andras Lasso
Thanks for testing!


## #1189 Create printable markers compatible with Medronic Stealth Station


#### 2017-05-09, 15:01:16 - Tamas Ungi
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-09, 15:01:21 - Tamas Ungi
assigned_to_id: changed from null to "ungi"

#### 2017-05-09, 15:01:53 - Tamas Ungi
Re #1189: One tool added.
Commit: r:5073|plus:5073


## #1190 Static build broken
Trying to compile PlusLib with static libraries causes CMake errors at generate step:

~~~~
Configuring PLUS toolkit version 2.5.0.
Detected platform: Win64.
Current git hash is 38e1045f061685ece90d42d035f7ce1854d55a55
Configuring done
CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCommon>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCommon>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCommon>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCommon>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusRendering>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusRendering>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusRendering>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusRendering>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusOpenIGTLink>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusOpenIGTLink>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusOpenIGTLink>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusOpenIGTLink>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusImageProcessing>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusImageProcessing>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusImageProcessing>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusImageProcessing>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusUsSimulator>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusUsSimulator>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusUsSimulator>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusUsSimulator>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusVolumeReconstruction>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusVolumeReconstruction>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusVolumeReconstruction>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusVolumeReconstruction>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusDataCollection>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusDataCollection>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusDataCollection>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusDataCollection>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusHaptics>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusHaptics>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusHaptics>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusHaptics>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCalibration>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCalibration>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCalibration>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusCalibration>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusServer>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusServer>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusServer>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


CMake Error:
  Error evaluating generator expression:

    $<TARGET_PDB_FILE:vtkPlusServer>

  TARGET_PDB_FILE is allowed only for targets with linker created artifacts.


Generating done

~~~~


#### 2017-05-09, 20:06:27 - Andras Lasso
Thanks for reporting it. This is caused by a recent change.

@david.kuegler833514 Could you please have a look?



#### 2017-05-09, 20:06:27 - Andras Lasso
assigned_to_id: changed from null to "david.kuegler833514"

#### 2017-05-09, 20:16:27 - david.kuegler833514
well, that would happen. I will fix it asap.

#### 2017-05-09, 21:13:36 - david.kuegler833514
https://github.com/PlusToolkit/PlusLib/pull/46

#### 2017-05-09, 22:44:15 - Andras Lasso
re #1190 fix trying to install PDB files in a static build

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/567045889b3422333be16926aa5b62eff527c58b|plus:567045889b

#### 2017-05-10, 13:09:36 - Dzenan Zukic
status: changed from "New" to "Fixed"

#### 2017-05-10, 13:10:13 - Dzenan Zukic
Thanks for a prompt reaction!


## #1191 MMF video source does not always select the requested format
Sometimes the actual frame size and frame rate is not the one that was selected in the config file.

See also https://github.com/PlusToolkit/PlusLib/pull/47.


#### 2017-05-10, 03:02:37 - Andras Lasso
re #1191: Fixed MMF video source format selection

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e159518c24d8a581781ca3a02a35a19b1078b458|plus:e159518c24

#### 2017-05-10, 03:02:58 - Andras Lasso
status: changed from "New" to "Test"

#### 2017-05-10, 15:08:29 - Andras Lasso
Tested and it works - https://github.com/PlusToolkit/PlusLib/pull/47#issuecomment-300506927

#### 2017-05-10, 15:08:29 - Andras Lasso
status: changed from "Test" to "Fixed"


## #1192 Adam broke all the things
Bad merge. Bad Adam. Bad bad Adam.

Fixing it.

#### 2017-05-10, 15:30:24 - Csaba Pinter
:)

#### 2017-05-10, 15:50:33 - Adam Rankin
re #1192 repairing PlusLib build

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/058a8431cc602921f889bac48bcc732a627f0a7d|plus:058a8431cc

#### 2017-05-10, 15:50:33 - Adam Rankin
re #1192 Build fixed, tests passing.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/48275736e1d82db86fa97d48e67d0b735e13b16c|plus:48275736e1

#### 2017-05-10, 16:08:33 - Adam Rankin
re #1192 Enabling downstream usage of AgilentMD1 device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6235b549640e4e624135dd098e2b6d65d3b15125|plus:6235b54964

#### 2017-05-10, 16:11:38 - Adam Rankin
re #1192 #1174 Fixing PlusApp build to use new PlusCommon namespaces and functions

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/69fd44dfd899409d9f25b588437f146fd80bd110|plus.2:69fd44dfd8

#### 2017-05-12, 14:21:56 - Andras Lasso
Can this be closed? I think there are no more build errors.

#### 2017-05-12, 18:16:13 - Adam Rankin
status: changed from "New" to "Fixed"

#### 2017-05-12, 18:16:24 - Adam Rankin
Done!


## #1193 Docs missing images
url:http://perk-software.cs.queensu.ca/plus/doc/nightly/dev/UltrasoundImageOrientation.html|This page has broken image links, whereas url:http://perk-software.cs.queensu.ca/plus/doc/nightly/user/UltrasoundImageOrientation.html|this one doesn't. Google search returned the one with broken links.

#### 2017-05-10, 21:38:31 - Dzenan Zukic
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-05-11, 14:47:52 - Dzenan Zukic
Component: changed from null to "Plus"

#### 2017-05-11, 14:47:58 - Dzenan Zukic
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-11, 18:56:34 - Andras Lasso
re #1193: Attempt to fix missing images in API documentation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d1beb3b37dc8971cb5d1b43a798d1c4de6caa06b|plus:d1beb3b37d

#### 2017-05-11, 18:56:34 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-05-12, 14:19:33 - Andras Lasso
re #1193: Fixed unresolved references in documentation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/e8710f873536f00e335e946486f1b63993b0915c|plus.2:e8710f8735

#### 2017-05-12, 14:20:19 - Andras Lasso
re #1193: Fixed documentation issues (unresolved references, missing images, etc)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/299000a03daf1cc668dc438da108b8714eb38047|plus:299000a03d

#### 2017-05-12, 14:23:20 - Andras Lasso
status: changed from "New" to "Fixed"


## #1194 WinProbe support
Add support for WinProbe ultrasound system

#### 2017-05-17, 17:20:15 - Dzenan Zukic
re #1194 Adding initial WinProbe support
Commit: r:5079|plus:5079

#### 2017-05-22, 18:02:03 - Dzenan Zukic
re #1194 WinProbe example configuration with PlusServer
Commit: r:5081|plus:5081

#### 2017-05-22, 18:17:02 - Adam Rankin
re #1194 Adding initial WinProbe support (#51)

* re #1194 Adding initial WinProbe support

* re #1194 fixing the wobbling issue by disabling spatial compounding

* re #1194 'Fixing' working directory for the test

* re #1194 Test working properly

* re #1194 Adding WinProbe to vtkPlusDeviceFactory

* re #1194 Adding WinProbe to PlusConfigure.h.in

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e7d641cf51cb0158919315ff8e9e8e8e04a2b444|plus:e7d641cf51

#### 2017-05-22, 18:17:07 - Adam Rankin
Merge pull request #2 from dzenanz/master

re #1194 Adding initial WinProbe support

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/b4f856a1847b499a1bb4685b23996491ec3f5918|plus.3:b4f856a184

#### 2017-05-22, 18:17:07 - Dzenan Zukic
re #1194 Adding WinProbe support

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/35ffac996570445d1cf4aea3f457c18de6d3091a|plus.3:35ffac9965

#### 2017-06-15, 18:54:37 - Dzenan Zukic
re #1194 Voltage must be between 40 and 85
Commit: r:5096|plus:5096

#### 2017-06-15, 18:55:15 - Dzenan Zukic
re #1194 Voltage must be between 40 and 85
Commit: r:5097|plus:5097

#### 2017-06-21, 21:44:37 - Andras Lasso
re #1194 improving WinProbe support, requires WinProbeSDK-1.2 (extern 'C' interface)

log frame numbers, wrap around time-stamp counter, changing frame size on the fly, compile fix for VS2013 preventing freezing on 32-bits, disabled time-stamp filtering, turned error into a warning for out of order frames

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/73cc37ce8e5c3c457444567aff179a09c4d8736f|plus:73cc37ce8e

#### 2017-06-22, 20:36:04 - Andras Lasso
re #1194 Adding TGC (requires WinProbeSDK-1.3)

Also tests WriteConfiguration
Uses a different config file for the unit test

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/f89f67b3fc870603264c1c298a10b7aac7452bcb|plus:f89f67b3fc

#### 2017-06-22, 21:08:00 - Dzenan Zukic
re #1194 Updating WinProbe config file and removing the unused one
Commit: r:5100|plus:5100

#### 2017-06-22, 21:09:40 - Dzenan Zukic
status: changed from "Accepted" to "Fixed"

#### 2017-07-12, 20:57:21 - Adam Rankin
re #1194 Fixing unfreeze method (#64)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ce600c9c6d90756fb7aa1d7ae82f6d06804b75ee|plus:ce600c9c6d

#### 2017-08-25, 20:04:03 - Dzenan Zukic
re #1194 focal depth setting example
Commit: r:5122|plus:5122

#### 2017-09-10, 21:01:44 - Adam Rankin
re #1194 Supporting focal depth setting. Requires WinProbeSDK-2.0 (#73)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ca3fe620696813c7a223a33bab56249ae2c12ac2|plus:ca3fe62069

#### 2017-09-13, 17:40:01 - Adam Rankin
re #1194 Simplifying code by using existing XML vector methods (#74)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3b117c600ee5bdeb74abbd0670ff604546570555|plus:3b117c600e

#### 2017-09-15, 18:39:07 - Adam Rankin
re #1194 Fixing initialization bug and VS2013 compile error (#76)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/23bb81fe1151d9a1e31f195fb895e799265a9648|plus:23bb81fe11


## #1195 'No command' for Automatic MOC, UIC and RCC for target PlusWidgets
This consistently happens on a laptop with WinProbe ultrasound system. I can't figure out what is wrong. The build log is below. The important error messages are on the first 10 lines or so.


~~~~
1>------ Build started: Project: PlusWidgets_autogen, Configuration: Debug x64 ------
2>------ Build started: Project: ToolStateDisplayWidgetTest_autogen, Configuration: Debug x64 ------
3>------ Skipped Build: Project: RUN_TESTS, Configuration: Debug x64 ------
3>Project not selected to build for this solution configuration 
2>  Building Custom Rule C:/Users/WinProbe/Documents/Plus64WPa/PlusLib/src/PlusWidgets/Testing/CMakeLists.txt
2>  CMake does not need to re-run because C:/Users/WinProbe/Documents/Plus64WPa/PlusLib-bin/src/PlusWidgets/Testing/CMakeFiles/generate.stamp is up-to-date.
2>  Automatic MOC, UIC and RCC for target ToolStateDisplayWidgetTest
1>  Building Custom Rule C:/Users/WinProbe/Documents/Plus64WPa/PlusLib/src/PlusWidgets/CMakeLists.txt
2>  No command
1>  CMake does not need to re-run because C:/Users/WinProbe/Documents/Plus64WPa/PlusLib-bin/src/PlusWidgets/CMakeFiles/generate.stamp is up-to-date.
2>AutoMoc : error : moc process for ToolStateDisplayWidgetTest_autogen/include/ToolStateDisplayWidgetTest.moc failed:
1>  Automatic MOC, UIC and RCC for target PlusWidgets
2>
1>  No command
2>
1>AutoMoc : error : moc process for PlusWidgets_autogen/EWIEGA46WW/moc_QPlusConfigFileSaverDialog.cpp failed:
2>
1>
2>  Generating MOC source ToolStateDisplayWidgetTest_autogen/include/ToolStateDisplayWidgetTest.moc
1>
1>
1>  Generating MOC source PlusWidgets_autogen/EWIEGA46WW/moc_QPlusConfigFileSaverDialog.cpp
4>------ Build started: Project: PlusWidgets, Configuration: Debug x64 ------
5>------ Skipped Build: Project: NightlyMemoryCheck, Configuration: Debug x64 ------
5>Project not selected to build for this solution configuration 
6>------ Skipped Build: Project: Nightly, Configuration: Debug x64 ------
6>Project not selected to build for this solution configuration 
7>------ Skipped Build: Project: Experimental, Configuration: Debug x64 ------
7>Project not selected to build for this solution configuration 
8>------ Skipped Build: Project: Documentation-PlusLib-Editing, Configuration: Debug x64 ------
8>Project not selected to build for this solution configuration 
9>------ Skipped Build: Project: Continuous, Configuration: Debug x64 ------
9>Project not selected to build for this solution configuration 
4>  Microsoft (R) C/C++ Optimizing Compiler Version 19.00.24215.1 for x64
4>  Copyright (C) Microsoft Corporation.  All rights reserved.
4>
4>  cl /c /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets\\PlusWidgets_autogen\\include' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\OpenIGTLink\\Source\\igtlutil /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\OpenIGTLink\\Source /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\OpenIGTLink-bin' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\ITKIOFactoryRegistration' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Video\\IO\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Video\\Filtering\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Video\\Core\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\  estKernel\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
onunit\eview\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\Watersheds\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\Voronoi\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Bridge\\VTK\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\SpatialFunction\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\egistrationMethodsv4\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\egionGrowing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\QuadEdgeMeshFiltering\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\OpenJPEG\\src\\openjpeg /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\OpenJPEG\\src\\openjpeg' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\
euralNetworks\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\Metricsv4\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\Optimizersv4\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\MarkovRandomFieldsClassifiers\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\LevelSetsv4\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\LabelVoting\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\KLMRegionGrowing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageNoise\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageFusion\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\VTK\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\  ransformMatlab\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\  ransformInsightLegacy\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\  ransformHDF5\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\  ransformBase\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\Stimulate\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\Siemens\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\AW\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\PNG\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\PNG\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\PNG\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\
RRD\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\
rrdIO\\src\
rrdIO /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\
rrdIO\\src\
rrdIO' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\
IFTI\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\Meta\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\Mesh\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\MRC\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\LSM\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\  IFF\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\  IFF\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\  IFF\\src\\itktiff' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\  IFF\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\JPEG\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\JPEG\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\JPEG\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\HDF5\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\GIPL\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\GE\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\IPL\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\GDCM\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\CSV\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\BioRad\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\BMP\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\HDF5\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\HDF5\\src /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\GPUThresholding\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\GPUSmoothing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\GPUPDEDeformable\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\GPUCommon\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\GPUImageFilterBase\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\GPUAnisotropicSmoothing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\GPUFiniteDifference\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\GPUCommon\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GIFTI\\src\\gifticlib /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\
IFTI\\src\
ifti\\znzlib /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\
IFTI\\src\
ifti\
iftilib /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\DataStructureAndEncodingDefinition /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\MessageExchangeDefinition /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\InformationObjectDefinition /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\Common /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\DataDictionary /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\MediaStorageAndFileFormat /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\GDCM\\src\\gdcm\\Source\\Common' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\GDCM' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\FEM\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\PDEDeformable\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\FEM\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\egistration\\Common\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\SpatialObjects\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\XML\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\Expat\\src\\expat /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\Expat\\src\\expat' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\Eigen\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\DisplacementField\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\DiffusionTensorImage\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Denoising\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\DeformableMesh\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Deconvolution\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\DICOMParser\\src\\DICOMParser /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\DICOMParser\\src\\DICOMParser' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Convolution\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\FFT\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Colormap\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\Classifiers\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\BioCell\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\BiasCorrection\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\Polynomials\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\AntiAlias\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\LevelSets\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\SignedDistanceFunction\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\Optimizers\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageFeature\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageSources\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageGradient\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Smoothing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageCompare\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\IO\\ImageBase\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\\IO\\ImageBase' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\FastMarching\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\QuadEdgeMesh\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\DistanceMap\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\
arrowBand\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageLabel\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\BinaryMathematicalMorphology\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\MathematicalMorphology\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Segmentation\\ConnectedComponents\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\  hresholding\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageIntensity\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\Path\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageStatistics\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\SpatialObjects\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\MetaIO\\src\\MetaIO\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\MetaIO\\src\\MetaIO\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\ZLIB\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\ZLIB\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\Mesh\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageCompose\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\LabelMap\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\AnisotropicSmoothing\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageGrid\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\ImageFunction\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\  ransform\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\
umerics\\Statistics\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\
etlib' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\ImageAdaptors\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\CurvatureFlow\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Filtering\\ImageFilterBase\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\FiniteDifference\\include /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\\Core\\Common\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\\Core\\Common' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNLInstantiation\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\VNL\\src\\vxl\\core' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\VNL\\src\\vxl\\vcl' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\VNL\\src\\vxl\\v3p\
etlib' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNL\\src\\vxl\\core /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNL\\src\\vxl\\vcl /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNL\\src\\vxl\\v3p\
etlib /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\KWSys\\src' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\KWIML\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\KWIML\\src' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk-bin\\Modules\  hirdParty\\DoubleConversion\\src\\double-conversion' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\DoubleConversion\\src\\double-conversion' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Charts\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Charts\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\Color' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\Color /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\KWIML' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\KWIML /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\KWSys' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\KWSys /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\DataModel' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\DataModel /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\Math' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\Math /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\Misc' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\Misc /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\System' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\System /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\  ransforms' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\  ransforms /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\ExecutionModel' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\ExecutionModel /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\General' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\General /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Common\\ComputationalGeometry' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Common\\ComputationalGeometry /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Infovis\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Infovis\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Extraction' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Extraction /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Statistics' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Statistics /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Fourier' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Fourier /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\alglib' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\alglib /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Context2D' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Context2D /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Geometry' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Geometry /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Sources' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Sources /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\FreeType' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\FreeType /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\freetype' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\freetype /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\zlib' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\zlib /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\DICOMParser' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\DICOMParser /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Domains\\Chemistry' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Domains\\Chemistry /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Legacy' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Legacy /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\XMLParser' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\XMLParser /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\expat' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\expat /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Domains\\ChemistryOpenGL2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Domains\\ChemistryOpenGL2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\OpenGL2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\OpenGL2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Image' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Image /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\MetaIO\\vtkmetaio' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\MetaIO' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\MetaIO /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\jpeg' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\jpeg /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\png' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\png /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\  iff\\vtktiff\\libtiff' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\  iff' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\  iff /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\EncodeString' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\EncodeString /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\glew' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\glew /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\AMR' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\AMR /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\XML' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\XML /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Parallel\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Parallel\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Utilities\\HashSource' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Utilities\\HashSource /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\FlowPaths' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\FlowPaths /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Generic' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Generic /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Hybrid' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Hybrid /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Sources' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Sources /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\HyperTree' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\HyperTree /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Imaging' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Imaging /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\General' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\General /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Modeling' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Modeling /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Parallel' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Parallel /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\ParallelImaging' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\ParallelImaging /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Points' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Points /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Programmable' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Programmable /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\SMP' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\SMP /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Selection' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Selection /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\  exture' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\  exture /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Filters\\Verdict' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Filters\\Verdict /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\verdict' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\verdict /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\GUISupport\\Qt' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\GUISupport\\Qt /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Interaction\\Style' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Interaction\\Style /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\GUISupport\\QtSQL' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\GUISupport\\QtSQL /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\SQL' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\SQL /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\sqlite' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\sqlite /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Geovis\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Geovis\\Core /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Infovis\\Layout' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Infovis\\Layout /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Hybrid' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Hybrid /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Interaction\\Widgets' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Interaction\\Widgets /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Color' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Color /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Annotation' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Annotation /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Volume' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Volume /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Views\\Core' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Views\\Core /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\libproj4\\vtklibproj4 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\libproj4\\vtklibproj4' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\libproj4' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\libproj4 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\AMR' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\AMR /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\hdf5\\vtkhdf5' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\hdf5\\vtkhdf5\\hl\\src /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\hdf5\\vtkhdf5\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\hdf5' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\hdf5 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\EnSight' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\EnSight /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Exodus' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Exodus /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\exodusII' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\exodusII /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\
etcdf\\vtknetcdf\\include /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\
etcdf\\vtknetcdf' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\
etcdf' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\
etcdf /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Export' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Export /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\GL2PSOpenGL2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\GL2PSOpenGL2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\gl2ps' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\gl2ps /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Geometry' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Geometry /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Import' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Import /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Infovis' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Infovis /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\libxml2\\vtklibxml2' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\libxml2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\libxml2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\LSDyna' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\LSDyna /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\MINC' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\MINC /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Movie' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Movie /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\oggtheora' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\oggtheora /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\
etCDF' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\
etCDF /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\PLY' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\PLY /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Parallel' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Parallel /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\  hirdParty\\jsoncpp' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\  hirdParty\\jsoncpp /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\ParallelXML' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\ParallelXML /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\  ecplotTable' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\  ecplotTable /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\IO\\Video' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\IO\\Video /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Math' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Math /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Morphological' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Morphological /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Statistics' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Statistics /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Imaging\\Stencil' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Imaging\\Stencil /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Interaction\\Image' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Interaction\\Image /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\ContextOpenGL2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\ContextOpenGL2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Image' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Image /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\LOD' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\LOD /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Label' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Label /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\Qt' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\Qt /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\endering\\VolumeOpenGL2' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\endering\\VolumeOpenGL2 /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Views\\Context2D' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Views\\Context2D /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Views\\Infovis' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Views\\Infovis /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk-bin\\Views\\Qt' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\vtk\\Views\\Qt /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusWidgets /IC:\\Qt\\5.8\\msvc2015_64\\include /IC:\\Qt\\5.8\\msvc2015_64\\include\\QtXml /IC:\\Qt\\5.8\\msvc2015_64\\include\\QtCore /I'C:\\Qt\\5.8\\msvc2015_64\\.\\mkspecs\\win32-msvc2015' /IC:\\Qt\\5.8\\msvc2015_64\\include\\QtWidgets /IC:\\Qt\\5.8\\msvc2015_64\\include\\QtGui /IC:\\Qt\\5.8\\msvc2015_64\\include\\QtANGLE /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusCalibration' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\PatternLocAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkBrachyStepperPhantomRegistrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkCenterOfRotationCalibAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkLineSegmentationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkPhantomLandmarkRegistrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkPhantomLinearObjectRegistrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkPivotCalibrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkProbeCalibrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkSpacingCalibAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCalibration\\vtkTemporalCalibrationAlgo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNL\\src\\vxl\\core\\vnl\\algo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\itk\\Modules\  hirdParty\\VNL\\src\\vxl\\core\\vnl /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusRendering /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusRendering' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCommon /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusCommon' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusCommon\\IO /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\OpenIGTLink-bin\\Source' /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\Deps\\OpenIGTLink-bin\\Source\\igtlutil' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusDataCollection' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\FakeTracking /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\ImageProcessor /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\SavedDataSource /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\UsSimulatorVideo /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\VirtualDevices /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\ChRobotics /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\MicrochipTracking /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\OpenIGTLink /IC:\\WinProbeSDK /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusDataCollection\\WinProbe /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusUsSimulator /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusUsSimulator' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusOpenIGTLink /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusOpenIGTLink' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusImageProcessing /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusImageProcessing' /IC:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusVolumeReconstruction /I'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusVolumeReconstruction' /Zi /W3 /WX- /Od /Ob0 /D WIN32 /D _WINDOWS /D _MSC_PLATFORM_TOOLSET_v140 /D QT_WIDGETS_LIB /D 'vtkDomainsChemistry_AUTOINIT=1(vtkDomainsChemistryOpenGL2)' /D 'vtkRenderingContext2D_AUTOINIT=1(vtkRenderingContextOpenGL2)' /D 'vtkRenderingCore_INCLUDE=\\'C:/Users/WinProbe/Documents/Plus64WPa/PlusLib-bin/CMakeFiles/vtkRenderingCore_AUTOINIT_vtkInteractionStyle_vtkRenderingFreeType_vtkRenderingOpenGL2.h\\'' /D 'vtkRenderingOpenGL2_AUTOINIT=1(vtkRenderingGL2PSOpenGL2)' /D 'vtkRenderingVolume_AUTOINIT=1(vtkRenderingVolumeOpenGL2)' /D ITK_IO_FACTORY_REGISTER_MANAGER /D QT_XML_LIB /D QT_CORE_LIB /D QT_GUI_LIB /D 'CMAKE_INTDIR=\\'Debug\\'' /D PlusWidgets_EXPORTS /D _WINDLL /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo'PlusWidgets.dir\\Debug\\\\' /Fd'PlusWidgets.dir\\Debug\\vc140.pdb' /Gd /TP /errorReport:prompt   /bigobj C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusWidgets\\QPlusDeviceSetSelectorWidget.cxx C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib\\src\\PlusWidgets\\QPlusConfigFileSaverDialog.cxx 'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets\\PlusWidgets_autogen\\moc_compilation.cpp' 'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets\\PlusWidgets_autogen\\EWIEGA46WW\\qrc_PlusWidgets.cpp'
4>
4>  QPlusDeviceSetSelectorWidget.cxx
4>c:\\users\\winprobe\\documents\\plus64wpa\\pluslib\\src\\pluswidgets\\QPlusDeviceSetSelectorWidget.h(13): fatal error C1083: Cannot open include file: 'ui_QPlusDeviceSetSelectorWidget.h': No such file or directory
4>  QPlusConfigFileSaverDialog.cxx
4>c:\\users\\winprobe\\documents\\plus64wpa\\pluslib\\src\\pluswidgets\\QPlusConfigFileSaverDialog.h(13): fatal error C1083: Cannot open include file: 'ui_QPlusConfigFileSaverDialog.h': No such file or directory
4>  moc_compilation.cpp
4>c1xx : fatal error C1083: Cannot open source file: 'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets\\PlusWidgets_autogen\\moc_compilation.cpp': No such file or directory
4>  qrc_PlusWidgets.cpp
4>c1xx : fatal error C1083: Cannot open source file: 'C:\\Users\\WinProbe\\Documents\\Plus64WPa\\PlusLib-bin\\src\\PlusWidgets\\PlusWidgets_autogen\\EWIEGA46WW\\qrc_PlusWidgets.cpp': No such file or directory
4>  Generating Code...
...
11>------ Skipped Build: Project: INSTALL, Configuration: Debug x64 ------
11>Project not selected to build for this solution configuration 
========== Build: 0 succeeded, 4 failed, 65 up-to-date, 7 skipped ==========

~~~~


#### 2017-05-15, 23:42:49 - Andras Lasso
What CMake, Qt, Visual Studio version do you use?

#### 2017-05-15, 23:43:53 - Adam Rankin
Can you upload your CMakeCache.txt as well?

#### 2017-05-16, 17:15:39 - Dzenan Zukic
file:dss4RaoLOr55Rcdmr6CpXy|CMakeCache.txt
$ qmake --version
QMake version 3.1
Using Qt version 5.8.0 in C:/Qt/5.8/msvc2015_64/lib

Microsoft Visual Studio Express 2015 for Windows Desktop
Version 14.0.25431.01 Update 3
Visual C++ 2015   00325-20000-00000-AA613
(But this was also happening on VS2015 community edition)

CMake 3.8.1

CMakeCache.txt attached.

#### 2017-05-16, 17:17:51 - Andras Lasso
I'm not sure if CMake fully supports Qt-5.8. Try with Qt-5.7.

#### 2017-05-16, 17:30:47 - Dzenan Zukic
Qt 5.8 works great on my other computer. Which is what baffles me.

#### 2017-05-16, 17:41:37 - Andras Lasso
CMake 3.8 has issues, too. You could try with CMake 3.7.

Also, your path is quite long: C:/Users/WinProbe/Documents/Plus64WPa/. There can be random errors in VTK and ITK based projects that use a root path that is longer than about 10 characters.


#### 2017-05-16, 17:49:38 - Dzenan Zukic
Dammit! The long path issue - I forgot about it. I will try a shorter path.

#### 2017-05-17, 16:04:36 - Dzenan Zukic
The long path was the issue :(

Thanks Andras!

#### 2017-05-17, 19:36:15 - Andras Lasso
Actually, this error and the solution has been described in detail in the 'Troubleshooting' section of the Windows build instructions (note added many months ago).

#### 2017-05-30, 15:54:05 - Adam Rankin
status: changed from "New" to "Invalid"


## #1196 Add device that uses ArUco marker tracking library
* Use latest official git
* Upload our hack to https://github.com/PlusToolkit/ArUco
* Send a pull request to official version on SourceForge, see what happens (they merge as is, ignore, implement a nice solution instead, ...)
* Add aruco build to PlusBuild
* Add device vtkPlusOpticalMarkerTracker that uses ArUco library



#### 2017-05-15, 16:42:05 - Andras Lasso
Use vtkPlusIntelRealSenseTracker as an example (clone and modify). vtkPlusImageProcessorVideoSource is an example how to use another device's output as input.

#### 2017-05-15, 18:34:11 - Adam Rankin
Let me know if I can help. I'd like this.

ArUco is in the SVN/git history (not sure which one).

What's your hack?

#### 2017-05-15, 20:03:29 - Andras Lasso
The problem is that .lib and .dll filenames are hardcoded in the official repository, but the actual filenames are different on Linux/Windows. Our hack is to add an if(WIN32)..else()..endif() and hardcode different filenames for Windows and other platforms. I would not spend time with improving the ArUco build system unless there is a high chance that the maintainers would accept those. As a first step, we submit this simple (and ugly solution) and see how they deal with it.

#### 2017-06-07, 00:17:58 - Andras Lasso
re #1196: Functional translational and rotational tracking for multiple markers.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4619c808cc684f825661e6423da7fde209aeca02|plus:4619c808cc

#### 2017-06-07, 00:17:58 - Andras Lasso
re #1196: Initial commit to create OpticalMarkerTracker device.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/88d5386d3bbb3034a333518a3cc49b385459df41|plus:88d5386d3b

#### 2017-06-12, 21:39:51 - Mark Asselin
re #1196: Added example configuration for OpticalMarkerTracker &amp; associated files
Commit: r:5093|plus:5093

#### 2017-06-13, 18:00:28 - Mark Asselin
re #1196: More descriptive DeviceSet name
Commit: r:5094|plus:5094

#### 2017-06-14, 15:32:47 - Mark Asselin
re #1196: Renamed OpticalMarkerTracker tracking types to OPTICAL &amp; OPTICAL_AND_DEPTH
Commit: r:5095|plus:5095

#### 2017-06-16, 12:39:03 - Andras Lasso
re #1196: Added warning for non-standard meter units in calibration

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/668e5186d203aac1a2c55c5381d930911dd4c91c|plus:668e5186d2

#### 2017-06-16, 12:39:03 - Andras Lasso
re #1196: Added Doxygen documentation for OpticalMarkerTracker

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7e3b578baced8877fbebf5011dba55e0d28270f0|plus:7e3b578bac

#### 2017-06-16, 12:39:03 - Andras Lasso
re #1196: Rename tracking types to OPTICAL or OPTICAL_AND_DEPTH

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8a674b0873ed413d9e243b053c2a5a83cc9b4f3b|plus:8a674b0873

#### 2017-06-16, 12:39:35 - Andras Lasso
re #1196: Added aruco util executables to release

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/934ad9f0b7d7c469b3421be40439aade13b082cd|plus.2:934ad9f0b7

#### 2017-06-16, 12:39:35 - Andras Lasso
re #1196: Added documentation for OpticalMarkerTracker & associated files

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/cf4d1933ef777ff1e97ef822ac245411204957b4|plus.2:cf4d1933ef

#### 2017-06-16, 17:46:38 - Andras Lasso
re #1196: Fixed interference between multiple markers

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0ca8288c0e6742c2a39a6a52f190a027d1dd70c4|plus:0ca8288c0e

#### 2017-06-18, 21:48:55 - Mark Asselin
re #1196: Added premade marker sheet and updated config to use those markers
Commit: r:5098|plus:5098

#### 2017-06-19, 14:09:45 - Andras Lasso
re #1196: Improved PlusDeviceSet_Server_OpticalMarkerTracker_Mmf.xml

CaptureDeviceId='0' to make the example work on systems where there is only a single camera.

Commit: r:5099|plus:5099

#### 2017-06-19, 14:10:34 - Andras Lasso
re #1196: Improved OpticalMarkerTracker device documentation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/944e49830e05fadd7f6648565ad5385c853dadcb|plus:944e49830e

#### 2017-06-19, 16:01:30 - Andras Lasso
Works very nicely!

At some point, log messages should be cleaned up. For example, it should not be logged as an error if a marker cannot be found.

#### 2017-06-20, 21:49:36 - Andras Lasso
re #1196: Improved frame throughput using PixelCodec

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6937db207bfe60a7a50c032c8fcc5367eafa5099|plus:6937db207b

#### 2017-06-20, 21:49:36 - Andras Lasso
re #1196: Added examples and marker sheet to dox documentation, removed bgr swap

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5896fa64862ede20a87aaf21f78c143462f910f0|plus:5896fa6486

#### 2017-06-28, 11:12:25 - Andras Lasso
re #1196: Added example 3S Slicer scene that shows all markers on marker sheet
Commit: r:5102|plus:5102

#### 2017-06-28, 11:19:42 - Andras Lasso
re #1196: Moved example 3D Slicer scene to OpticalMarkerTracker directory
Commit: r:5103|plus:5103

#### 2017-06-29, 14:14:17 - Adam Rankin
I feel like the CMake for the aruco device could be more smoothly handled. Would you consider changing the CMake to auto-select dependent options instead of reporting they aren't selected?

For example, if the user selects PLUSBUILD_USE_aruco, then .._USE_OpenCV should auto-self-select
Same with OPTICAL_MARKER -> aruco -> OpenCV

Thoughts?

#### 2017-06-29, 14:14:42 - Adam Rankin
(This would happen during the first configure after the user selected an option)

#### 2017-07-01, 00:49:42 - Andras Lasso
I would be hesitant to automate this, just because very smart people tried to automate this for example in CTK and in Plastimatch build systems, and in both cases the result is a catastrophy. While I agree that a few mouse clicks could be saved by automating the process, developers would lose control and they would often need to resort to trial and error when they configure their project to figure out what they can and they can not do. For example, if you don't want to use a specific dependency then it is really difficult to configure your project if there is an automatic dependency enabling mechanism.

#### 2017-07-13, 15:44:19 - Adam Rankin
re #1196 #1204 Cleaning up PlusBuild CMake to dynamically detect missing dependencies and enable them.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/f5ec8ad52f6f616fb31baba9f74cb80ce427195f|plus.3:f5ec8ad52f

#### 2017-07-13, 16:04:23 - Adam Rankin
re #1196 #1204 Cleaning up PlusBuild CMake to dynamically detect missing dependencies and enable them.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/90d28fb35cd89dd31e10649263ebdcfe1e1a0d24|plus.3:90d28fb35c


## #1197 Enable optional inclusion of data files in Plus install
If developers want to package Plus without sample data files, they must comment out the relevant CMake code.

Include some CMake logic to check for PLUSBUILD_DOWNLOAD_PlusDATA and include files or not depending on its value.

#### 2017-05-15, 21:03:30 - Adam Rankin
re #1197 passing value of data download through to PlusApp

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/c1f2fcf01761b51b901c2a49974a405d525b413a|plus.3:c1f2fcf017

#### 2017-05-15, 21:03:54 - Adam Rankin
re #1197 Only packaging data files if the data download option was selected AND the data dir exists

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/a915069d215964238b49658d2bc2ddd4eb40d0c8|plus.2:a915069d21

#### 2017-05-15, 21:04:09 - Adam Rankin
status: changed from "New" to "Fixed"


## #1198 Create command line tool to process US image sequence mha file 
null

#### 2017-05-16, 14:32:35 - Adam Rankin
Although I'm sure @lassoan is guiding you, just a heads up that EditSequenceFile exists (see PlusLib/Tools/EditSequenceFile).

#### 2017-05-16, 14:32:39 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-16, 15:10:56 - Ben Church
Thanks for the pointer @rankin It looks like we will still have a use for the tool I wrote for vtk image filter operations we are experimenting with, at least for now. There may be some redundancy, or a way to use EditSequenceFile for this, but I'll create a pull request soon with this tool for the others to use, until I can streamline this.

#### 2017-05-16, 18:53:16 - Adam Rankin
re #1198: Added command line tool which takes an mha sequence file as… (#50)

* re #1198: Added command line tool which takes an mha sequence file as input and the image processing pipeline of vtkPlusTransverseProcessEnhancer on it, saving intermediate and output tracked image sequences to mha files.

* re #1198: Added doxygen file for EnhanceUsTrpSequence tool

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8e7d0995c5eea1a1370fea39ea3e2709aafc788d|plus:8e7d0995c5

#### 2017-05-16, 18:59:56 - Ben Church
status: changed from "New" to "Accepted"


## #1199 Add documentation page for ApplicationEnhanceUsTrpSequence to Documentation/Tools.dox
null

#### 2017-05-16, 18:53:19 - Ben Church
re #1199: Added line to create doxygen documentation subpage for ApplicationEnhanceUsTrpSequence (#1198)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/63b4b34b5d993795b8bc0cdd4ddd13c995b12af0|plus.2:63b4b34b5d

#### 2017-05-16, 18:53:19 - Adam Rankin
Merge pull request #7 from BenChurch/master

re #1199: Added line to create doxygen documentation subpage for Appl…

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/00b45ab54c5793805d60aaa64ccebbb4b5148ee3|plus.2:00b45ab54c


## #1200 MmfVideoSource error following 'replacing direct string compare with case insensitive compare'
I have had problems using a Mmf video device following the specific PlusLib commit 'url:https://github.com/PlusToolkit/PlusLib/commit/b40d15554fee40eeb5454ec0bae6f2d1dbde38de#diff-691c67d6e40ad504b8dcdef2cdb43d32|re #1182 replacing direct string compare with case insensitive compare'.  For instance, if I run vtkmmfvideosourcetest.exe with the command-line arguments '--list-video-formats', the list is not generated and a error dialog box opens as shown below:
image:a3Grtmp1Wr54kadmr6CpXy|mmfvideobug.PNG

From the specific commit mentioned above, I reverted the changes made specifically to the url:https://github.com/PlusToolkit/PlusLib/commit/b40d15554fee40eeb5454ec0bae6f2d1dbde38de#diff-691c67d6e40ad504b8dcdef2cdb43d32|vtkPlusMmfVideoSource.cxx file and rebuilt.  I was then able to stream using my mmf video device again and had no problems running the same vtkmmfvideosourcetest that lists the available video formats.

#### 2017-05-23, 02:30:26 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-05-23, 02:30:30 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-23, 02:30:40 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-05-23, 18:47:52 - Adam Rankin
test #1200 Correcting bug in insensitive substring code, adding string functions to PlusCommonTest (#54)

Improving vtkMmfVideoSourceTest to detect a suitable video format if the webcam doesn't support the default of YUY2

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b089a60aada409f651812f3d74c0ccb697545250|plus:b089a60aad

#### 2017-05-23, 18:47:52 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2017-05-23, 18:48:08 - Adam Rankin
assigned_to_id: changed from "rankin" to "jobutler"

#### 2017-05-30, 15:54:26 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1201 Volume reconstruction tests failing
The volume reconstruction tests have been failing since the semi-recent changes to the volume reconstruction algorithms.

It looks like different platforms produce different results.

@lassoan or @dzenanz, since you are the two who are most involved with the volume reconstruction code, could you investigate and fix the test errors? If not, could you disable them and track any future fixes with this ticket?

#### 2017-06-04, 18:33:24 - Andras Lasso
re #1201: Fixed importance mask reading

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/92a05bcaecf8057e8024968336914241d3328977|plus:92a05bcaec

#### 2017-06-04, 18:33:24 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-06-04, 21:41:06 - Andras Lasso
re #1201: Fixed volume reconstruction tests on Windows

Disabled compression and multi-threading to make results reproducible.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5ea3b85292e6a38f5dc3703ecc77631827c7b6ba|plus:5ea3b85292

#### 2017-06-04, 21:44:37 - Andras Lasso
re #1201: Fixed volume reconstruction tests on Windows

Disabled compression and multi-threading to make results reproducible.

Commit: r:5091|plus:5091

#### 2017-06-05, 02:53:13 - Andras Lasso
re #1201: Updated reference test data for linux

Commit: r:5092|plus:5092

#### 2017-06-05, 02:58:02 - Andras Lasso
re #1201: Use platform-specific reference data for Linux

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5e73a905fcc4c668d4f530f2ae9ae2ca88c2a0d6|plus:5e73a905fc

#### 2017-06-05, 03:28:31 - Andras Lasso
re #1201: Fixed build warning on linux

/home/perklab/Devel/PTC/PlusLib-bin/src/PlusConfigure.h: not a directory

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/cdbdd7b8c0caf228e650933f51652231da1d5076|plus:cdbdd7b8c0

#### 2017-06-07, 17:58:40 - Dzenan Zukic
On my Linux box, volume reconstruction tests succeed: http://crunch.cs.queensu.ca/CDash/buildSummary.php?buildid=73604

#### 2017-06-07, 18:00:30 - Adam Rankin
The tests are passing. I will fix up the Roberts machines shortly. Am travelling and still getting used to a new mobile setup.

#### 2017-06-22, 18:47:49 - Dzenan Zukic
@rankin How about fixing this? Sounds easy :)

#### 2017-06-22, 18:53:55 - Adam Rankin
Thanks! 

#### 2017-06-22, 18:53:55 - Adam Rankin
status: changed from "New" to "Fixed"


## #1202 Provide package generation support for dpkg
It would be nice to provide an install package for Linux

If it's simply a few lines of CPack code, add.

#### 2017-05-27, 15:54:28 - Adam Rankin
re #1202 experimental DEB CPack code

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/29bd484017ba587ae79b1402fbfd9f89883111ae|plus.2:29bd484017

#### 2017-05-27, 16:41:00 - Adam Rankin
re #1202 improving logic for Qt library installation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/95966dde675ae14d9bb2341ec8324b0e184494f5|plus.2:95966dde67

#### 2017-05-27, 17:37:44 - Adam Rankin
re #1202 adding Qt platform for linux

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/c40302001cc5b18150b767422db6f0d118268866|plus.2:c40302001c

#### 2017-05-27, 17:39:32 - Adam Rankin
re #1202 standardizing CMake layout for Plus components

Repairing PlusHaptics install script to use correct variables

Cleaning up CMake formatting

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4ae47d8c0a08ccad74e02e9a9b7569f8be34dc90|plus:4ae47d8c0a

#### 2017-05-27, 18:12:45 - Adam Rankin
re #1202 Adding PlusLibInstallLibrary macro which extracts common installation behaviour to a macro. This enables fixes across all targets from a single location.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a61d78a4737897e6f16edcc4fbee1b305466d7d9|plus:a61d78a473

#### 2017-05-27, 18:42:24 - Adam Rankin
re #1202 improving library macro to support Linux packaging as well as Win32

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/7b7927924c7aaca3a45c86c3259f2f104c052bdc|plus:7b7927924c

#### 2017-05-27, 18:49:20 - Adam Rankin
re #1202 how did I miss the biggest component?

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/34f56cb7dff416d42582940e1e594e4c3f087b46|plus:34f56cb7df

#### 2017-05-27, 18:51:14 - Adam Rankin
re #1202 how did I miss the biggest component?

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1e4895c1669496c11fe3901c25f7dd340bb9035c|plus:1e4895c166

#### 2017-05-27, 19:02:56 - Adam Rankin
re #1202 how did I miss the biggest component?

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0a12d8025c5ada694f4b3c9225f018d96098b3a6|plus:0a12d8025c

#### 2017-05-27, 19:13:15 - Adam Rankin
Confirmed the creation of a .deb file which can be easily installed and uninstalled on a linux system!!

#### 2017-05-27, 19:13:15 - Adam Rankin
status: changed from "Accepted" to "Fixed"

#### 2017-05-30, 14:41:07 - Adam Rankin
re #1202 resolving conflict between OvrvisionPro and ArUco

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/3395d51cbdb358fc14c46ff3b2be8b6c0ccf4b79|plus.3:3395d51cbd

#### 2017-05-30, 14:58:57 - Adam Rankin
re #1202 correcting dependency graph when aruco device is selected

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/9d68fd434293065d0537ece4d4b3e915a58cfd83|plus.3:9d68fd4342


## #1203 Add support for Win10 Creators update SDK
Add the windows 10 Creators Update SDK version number (10.0.15063.0) to FindWindowsSDK.cmake.

#### 2017-05-29, 18:46:08 - Mark Asselin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-29, 18:46:23 - Mark Asselin
Component: changed from null to "PlusApp-VolumeReconstructor"

#### 2017-05-29, 18:46:26 - Mark Asselin
Component: changed from "PlusApp-VolumeReconstructor" to "PlusBuild"

#### 2017-05-29, 18:46:32 - Mark Asselin
assigned_to_id: changed from null to "markasselin"

#### 2017-05-29, 18:46:50 - Mark Asselin
status: changed from "New" to "Accepted"

#### 2017-05-29, 18:47:17 - Mark Asselin
status: changed from "Accepted" to "Test"

#### 2017-06-16, 12:38:04 - Andras Lasso
re #1203: Adding Win 10 Creators Update SDK version number.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/fc7adcb0197be314ebe7c8ec4afe72a5ba7314e0|plus.3:fc7adcb019

#### 2017-07-05, 11:59:54 - Mark Asselin
status: changed from "Test" to "Fixed"


## #1204 Build plus with ArUco CMake
To get the build to work, I have to:
-Copy aruco / OpenCV header files from <PlusBin>/PlusLib/src/PlusDataCollection/OpticalMarkerTracking/includes using line 475 of CMakeLists.txt in PlusDataCollection.
-Copy the OpenCV library files into <PlusBin>/bin
-Add aruco2019.lib as an additional linker dependency




#### 2017-05-29, 20:40:03 - Mark Asselin
@lassoan The initial commit that I created the OpticalMarkerTracker device in is under branch OpticalMarkerTracker at: https://github.com/markasselin/PlusLib/tree/OpticalMarkerTracker.  Just in case you want that code for testing.

#### 2017-05-29, 20:40:03 - Mark Asselin
CommentContent: changed from "@lassoan The initial commit that I created the OpticalMarkerTracker device in is under branch OpticalMarkerTracker at: https://github.com/markasselin/PlusLib/tree/OpticalMarkerTracker." to "@lassoan The initial commit that I created the OpticalMarkerTracker device in is under branch OpticalMarkerTracker at: https://github.com/markasselin/PlusLib/tree/OpticalMarkerTracker.  Just in case you want that code for testing."

#### 2017-05-30, 11:38:31 - Mark Asselin
re #1204: Add option to build plus with aruco.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/7922e1f48eaa72fbf8fd996900e3be334c9178c6|plus.3:7922e1f48e

#### 2017-05-30, 11:38:31 - Mark Asselin
assigned_to_id: changed from null to "markasselin"

#### 2017-05-30, 11:38:31 - Andras Lasso
re #1204: Fixed build with OpenCV and ArUco

Pass all required Qt5 components to OpenCV.
Use CMake variables instead of calling systeminfo to determine OS version (systeminfo returns 'ERROR: The object invoked has disconnected from its clients.' on my Win10 PC).
Build OpenCV binaries in Plus bin directory.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/ba38b2e24746961863d5b259947a8a6769437e5a|plus.3:ba38b2e247

#### 2017-05-30, 14:39:42 - Adam Rankin
Conflict when both ArUco and OvrvisionPro are both enabled:

CMake Error at C:/Program Files/CMake/share/cmake-3.8/Modules/ExternalProject.cmake:2506 (add_custom_target):
  add_custom_target cannot create target 'OpenCV' because another target with
  the same name already exists.  The existing target is a custom target
  created in source directory 'C:/d/PlusBuild'.  See documentation for policy
  CMP0002 for more details.
Call Stack (most recent call first):
  SuperBuild/External_OpenCV.cmake:98 (ExternalProject_Add)
  CMakeLists.txt:551 (INCLUDE)

#### 2017-05-30, 14:45:31 - Adam Rankin
Also just a note: due to the poorly done CMake of OvrvisionPro, it includes a build of ArUco as well. One day someone will clean that up and we can use the same build...

#### 2017-05-30, 15:05:28 - Adam Rankin
Oops, see https://github.com/PlusToolkit/PlusBuild/commit/3395d51cbdb358fc14c46ff3b2be8b6c0ccf4b79
and https://github.com/PlusToolkit/PlusBuild/commit/9d68fd434293065d0537ece4d4b3e915a58cfd83

#### 2017-05-30, 15:53:18 - Adam Rankin
Component: changed from null to "PlusBuild"

#### 2017-05-30, 15:53:21 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-05-30, 18:39:45 - Andras Lasso
@rankin Thanks for the review and fixes!

#### 2017-06-06, 20:58:37 - Andras Lasso
re #1204: Fixed build with OpenCV+Aruco

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/8f36951034847981e7b2bdcc9193a446ec6d1198|plus.3:8f36951034

#### 2017-06-07, 00:17:58 - Andras Lasso
re #1204: Fixed build with OpenCV+Aruco

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1c07b30d8844deba2054905d74fd1fb7fe5424e5|plus:1c07b30d88

#### 2017-06-07, 00:17:58 - Andras Lasso
re #1204: Fixed packaging of OpenCV into PlusApp installer

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/2d62f8c2469f2cc498c498939ce87835f525dbd7|plus:2d62f8c246

#### 2017-06-07, 00:18:21 - Andras Lasso
re #1204: Fixed packaging of OpenCV into PlusApp installer

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/1517bb494ddc990f5ae4e4db1fbe493fdb8ab9c5|plus.2:1517bb494d

#### 2017-06-20, 15:03:38 - Andras Lasso
re #1204: Removed unnecesssary copying of aruco dll

It was not necessary and caused build failures when aruco was not built in debug mode.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4d445701b62f85fd4a2cb877866642a28dfeeede|plus:4d445701b6

#### 2017-06-22, 15:38:18 - Andras Lasso
re #1204: Fixed aruco packaging

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bd2165a397a281f7395cc22d93f687e45c545cb4|plus:bd2165a397

#### 2017-06-22, 15:39:40 - Andras Lasso
re #1204: Fixed aruco packaging

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/df7d6f2b244f31166e7d05afefc8ac61e8a918d3|plus.2:df7d6f2b24

#### 2017-06-28, 12:46:18 - Andras Lasso
re #1204: Added OpticalMarkerTracker_Scene.mrb slicer scene to installation package

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/2f102c3171ebec390df9dd155e299cbdf2b27362|plus.2:2f102c3171

#### 2017-06-28, 12:47:27 - Andras Lasso
re #1204: Added OpticalMarkerTracker_Scene.mrb slicer scene to installation package

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6f8d4ab5686bfdc74460209633e10ada73052bd1|plus:6f8d4ab568

#### 2017-06-28, 14:56:24 - Andras Lasso
re #1204: Added aruco executables (calibration, marker printing) to installation package

They supposed to be packaged earlier, too, but the mechanism was silently failing.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/9ddc3edcd9ed0042f437d84af36cb9b2401eec5d|plus.2:9ddc3edcd9

#### 2017-06-28, 15:40:06 - Andras Lasso
re #1204: Fixed code review comments

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/a91db4f1df31e346d54bd011370e73d1bc83c5fa|plus.2:a91db4f1df

#### 2017-07-13, 15:44:19 - Adam Rankin
re #1196 #1204 Cleaning up PlusBuild CMake to dynamically detect missing dependencies and enable them.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/f5ec8ad52f6f616fb31baba9f74cb80ce427195f|plus.3:f5ec8ad52f

#### 2017-07-13, 16:04:23 - Adam Rankin
re #1196 #1204 Cleaning up PlusBuild CMake to dynamically detect missing dependencies and enable them.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/90d28fb35cd89dd31e10649263ebdcfe1e1a0d24|plus.3:90d28fb35c

#### 2017-08-07, 16:53:58 - Adam Rankin
re #1204 Cleaning up implementation of ArUco marker tracking device, moving member variables to vtkInternal

Cleaning up CMake to use new aruco target export

Removing defunct code for parameter switching

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b830efb52faaf9c4716cfe087162ad72ae433319|plus:b830efb52f

#### 2017-08-07, 18:33:22 - Adam Rankin
re #1204 enabling build on Linux

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/94d441ab386a70841b2f551adda3854c34e955fb|plus:94d441ab38

#### 2017-08-07, 18:58:42 - Adam Rankin
re #1204 Fixing install of ArUco targets

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/501b7a824c67e69ee4b65ab4d9a2f393491fdc05|plus.2:501b7a824c

#### 2017-08-07, 19:24:31 - Adam Rankin
re #1204 removing ArUco from PlusApp install to move it to PlusLib

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/5ddb3caaa016eb22ec777a948eb50f9304aa8fbc|plus.2:5ddb3caaa0

#### 2017-08-07, 19:28:39 - Adam Rankin
re #1204 installing aruco files in data collection

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/5a086238ef8fa3b3c2e31a9359b089004e2e9110|plus:5a086238ef

#### 2017-08-07, 19:36:37 - Adam Rankin
re #1204 copy-paste error fix

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/3ba634907209a9143379705a595fb807918f5e83|plus:3ba6349072

#### 2017-08-07, 19:42:28 - Adam Rankin
re #1204 cleaning up downstream project usage of aruco

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/173fa34de5b4ce27163a5108bb49976b629c5240|plus:173fa34de5

#### 2017-08-16, 21:23:21 - Adam Rankin
re #1204 updating optical marker code in preparation for new release

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/959f2e6f6e494b0141f8a35f340b6f234ea645aa|plus:959f2e6f6e

#### 2017-08-22, 15:36:22 - Adam Rankin
re #1204 include aruco in package creation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/d889190fc697c2294e2ec48eb0eb359553eb20ee|plus.2:d889190fc6

#### 2017-08-22, 16:02:38 - Adam Rankin
re #1204 minor cmake formatting changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/aca57c29ac00824f12cc0e6f2138c2c6d73984cd|plus:aca57c29ac

#### 2017-08-24, 03:15:31 - Andras Lasso
re #1204: Added missing OpenMP redistributable to installation package (vcomp120.dll)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/65dfc6e705adcd7070e480ad6d4009136bb4833d|plus.2:65dfc6e705

#### 2017-08-24, 21:53:00 - Andras Lasso
re #1204: Fixed 'Trying to delete object with non-zero reference count' error

vtkInternal class was a VTK object but created/deleted with plain new/delete (VTK objects must be created/deleted using New() and Delete() methods).

Usually vtkInternal is not a vtkObject-based class, so followed that convention and removed the vtkObject parent.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/adf63008292e375d6d8f11c15f972acaebe33b82|plus:adf6300829

#### 2017-09-15, 19:28:15 - Andras Lasso
re #1204: Fixed vtkPlusOpticalMarkerTracker::ReadConfiguration

There were extra ' characters.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/cfc06d8addb0feeb9fd4292a5f73416e55e59362|plus:cfc06d8add


## #1205 Design of optical hooked stylus and marker
null

#### 2017-06-01, 14:50:50 - Zac Baum
re #1205: Added solidworks, STL and printing images for hooked candy cane needle and marker base for Polaris tracked US calibration.
Commit: r:5090|plus:5090

#### 2017-06-01, 14:50:50 - Zac Baum
assigned_to_id: changed from null to "zacbaum"

#### 2017-06-01, 14:52:27 - Zac Baum
status: changed from "New" to "Fixed"


## #1206 Translation mode in fake tracker
FakeTracker should have a translation-only mode. It is not possible to get a proper translation-only transform using just matrix multiplications in <CoordinateDefinitions> section of a config file.

#### 2017-06-13, 17:48:56 - Andras Lasso
re #1206 FakeTrackerMode_SmoothTranslation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b45b34fc75deefd8eea9c528b4a30b0cf9340c15|plus:b45b34fc75

#### 2017-06-13, 17:56:58 - Dzenan Zukic
status: changed from "Accepted" to "Fixed"


## #1207 Last used config file is not saved in PlusServerLauncher
null

#### 2017-06-16, 16:39:24 - Andras Lasso
re #1207: Removed dysfunctional device config file name saving from PlusServerLauncherMainWindow

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/12730a73ceca70bba5ff4c584e50f6c717381a0c|plus.2:12730a73ce

#### 2017-06-16, 16:56:01 - Andras Lasso
fixed #1207: Save last used device set config file on connect

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/73fbec12b9d295b6e7de685d1bde6e9574defcb1|plus:73fbec12b9

#### 2017-06-16, 16:56:01 - Andras Lasso
status: changed from "Accepted" to "Fixed"


## #1208 Add support for OptiTrack hardware
Adding support for OptiTrack V120:Duo and Prime 17W cameras.

#### 2017-07-05, 12:30:12 - Mark Asselin
assigned_to_id: changed from null to "markasselin"

#### 2017-07-05, 12:30:30 - Mark Asselin
Component: changed from null to "PlusLib"

#### 2017-07-05, 12:30:42 - Mark Asselin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-07-12, 14:55:29 - Mark Asselin
re #1208: Updated config to work with NatNet SDK based OptiTrack device.
Commit: r:5107|plus:5107

#### 2017-07-12, 16:15:34 - Andras Lasso
re #1208: Replaced legacy OptiTrack device (used retired TrackingTools) with one using NatNet SDK.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0e0e4fc696bc6ed9f0069d37bcfa1a11bbc68030|plus:0e0e4fc696

#### 2017-07-12, 16:15:34 - Andras Lasso
Re #1208: Adding basic tracking functionality

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a7eca31ff821ec8f6ec477fd7680c932f2068804|plus:a7eca31ff8

#### 2017-07-12, 16:15:34 - Andras Lasso
re #1208: Added OptiTrack documentation

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/047909e5801d33fb4095f2e394a1018022b9273b|plus:047909e580

#### 2017-07-12, 16:23:12 - Andras Lasso
re #1208: Replaced legacy OptiTrack device (used retired TrackingTools SDK) with one using NatNet SDK.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/b4450588e40b9a18c8fb993bd98d08eb21da3a07|plus.3:b4450588e4

#### 2017-07-12, 16:23:12 - Andras Lasso
re #1208: Update FindOptiTrackSDK variable description

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/3c120fd9926d714aa8d8792cf6d46ad8afb8a358|plus.3:3c120fd992

#### 2017-07-12, 17:19:44 - Andras Lasso
re #1208: Added path hint to find NatNed SDK in PLTools

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/a785ac95abfbd4dc1994fb9211370ab2df212311|plus.3:a785ac95ab


## #1209 GenericSerialDevice should allow un-terminated responses
Support a case of a device attached to a serial port responding to some commands with CR terminated strings, and to other commands with non-terminated strings. The non-terminated string will be 'terminated' by a time-out of waiting.

#### 2017-07-13, 14:59:12 - Adam Rankin
So long as this is highly documented and config file options are self-explanatory by name, sounds good.

What's the use case? Any example device I can look up?

#### 2017-07-13, 15:04:14 - Dzenan Zukic
url:http://www.velmex.com/Downloads/Spec_Sheets/VXM%20-%20%20Command%20Summary%20Rev%20B%20814.pdf|Velmex VXM has commands `V` and `?` which are not CR terminated like the other commands.

#### 2017-07-13, 15:04:59 - Adam Rankin
Thanks! I'll check it out.

#### 2017-07-13, 15:06:05 - Dzenan Zukic
I already have a proposed url:https://github.com/dzenanz/PlusLib/commit/8fe583a310b916446bbad6fe76a6e5517b799a20|fix, I am waiting for my collaborator to confirm this works.

#### 2017-07-13, 15:43:34 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-07-13, 15:46:54 - Andras Lasso
The fix looks good to me.

#### 2017-07-27, 14:09:23 - Adam Rankin
Improvements to Serial device and US Digital encoders (#65)

* fixes #1209 allow non CR/LF terminated responses

* re #1211 Adding support for RTS and DTR signal control

* re #1146 transforms now follow standard naming {ID}to{ToolReferenceFrame}

* re #1211 minor code review

* re #1211 merging Clear RTS/DTR functions into Set with parameter

* re #1209 adding an option for acceptance of response

* re #1209 updating documentation

* re #1209 Adam's review suggestions

* re #1146 Adam's review suggestions

* re #1146 Device Id is a fallback for ToolReferenceFrame

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/982dd86bd54c1bb91e6891b57004c54f36c10c15|plus:982dd86bd5

#### 2017-07-27, 14:09:23 - Adam Rankin
status: changed from "New" to "Fixed"


## #1210 OpenIGTLinkIO build fails
Error C1083 Cannot open include file: 'igtlVideoMessage.h': No such file or directory [C:\\Dev\\PlusGit\\b32-17\\Deps\\OpenIGTLinkIO-bin\\Converter\\igtlioConverter.vcxproj] in c:\\dev\\plusgit\\b32-17\\deps\\openigtlinkio\\converter\\igtlioVideoConverter.h, line 20

This happens in both VS2015 x32 and VS2017 x32 with current master. Build log attached.
file:boCiNKz_8r5795acwqjQXA|Output-Build.txt




#### 2017-07-13, 19:25:50 - Dzenan Zukic
I am doing a clean build on 64-bit VS2015, just to see whether bitness has to do something with it.

#### 2017-07-13, 20:43:06 - Adam Rankin
No, the file is missing from OpenIGTLink. I have asked Longquan to investigate.

#### 2017-07-13, 21:30:26 - Dzenan Zukic
This happens with 64-bit build as well.

#### 2017-07-13, 21:30:33 - Dzenan Zukic
This bug is due to a relatively recent change, as some weeks ago it was building normally.

#### 2017-07-15, 03:58:22 - Andras Lasso
re #1210: Revert to last working OpenIGTLinkIO version

We can upgrade to latest master version when OpenIGTLink video support gets merged into OpenIGTLink master.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/124c9f577e9494a7dce741a87563b973ecee6ae9|plus.3:124c9f577e

#### 2017-07-15, 03:58:22 - Andras Lasso
assigned_to_id: changed from null to "lassoan"

#### 2017-07-27, 15:38:05 - Dzenan Zukic
I am trying to build the latest master, and run into:


~~~~
3>C:\\Dev\\PlusGit\\bin64d\\PlusLib\\src\\PlusOpenIGTLink\\vtkPlusIgtlMessageCommon.cxx(77): error C2039: 'VTKToIGTLTransform': is not a member of 'igtlio::TransformConverter'
3>  C:\\Dev\\PlusGit\\bin64d\\Deps\\OpenIGTLinkIO\\Converter\\igtlioTransformConverter.h(32): note: see declaration of 'igtlio::TransformConverter'
...
3>C:\\Dev\\PlusGit\\bin64d\\PlusLib\\src\\PlusOpenIGTLink\\vtkPlusIgtlMessageCommon.cxx(400): error C3861: 'VTKTransformToIGTLImage': identifier not found
3>C:\\Dev\\PlusGit\\bin64d\\PlusLib\\src\\PlusOpenIGTLink\\vtkPlusIgtlMessageCommon.cxx(499): error C2248: 'igtlio::PolyDataConverter::VTKPolyDataToIGTL': cannot access protected member declared in class 'igtlio::PolyDataConverter'
3>  C:\\Dev\\PlusGit\\bin64d\\Deps\\OpenIGTLinkIO\\Converter\\igtlioPolyDataConverter.h(57): note: see declaration of 'igtlio::PolyDataConverter::VTKPolyDataToIGTL'
3>  C:\\Dev\\PlusGit\\bin64d\\Deps\\OpenIGTLinkIO\\Converter\\igtlioPolyDataConverter.h(33): note: see declaration of 'igtlio::PolyDataConverter'

~~~~


@rankin You modified this file about 10 days ago.

#### 2017-07-27, 15:57:28 - Adam Rankin
Hmm... Is this from a clean build? Are you sure openigtlinkio is the latest and has been rebuilt?

#### 2017-07-27, 16:00:08 - Dzenan Zukic
This was after just updating PlusLib, without updating PlusBuild. When both are up to date, the build succeeds.

#### 2017-07-27, 16:00:08 - Dzenan Zukic
assigned_to_id: changed from "lassoan" to "rankin"

#### 2017-07-27, 16:00:08 - Dzenan Zukic
status: changed from "New" to "Fixed"


## #1211 Add support for RTS line for SerialDevice
Some devices listen to RTS and DTR signals, so support for these should be added.

#### 2017-07-14, 15:06:33 - Dzenan Zukic
status: changed from "New" to "Accepted"

#### 2017-07-27, 14:09:23 - Adam Rankin
Improvements to Serial device and US Digital encoders (#65)

* fixes #1209 allow non CR/LF terminated responses

* re #1211 Adding support for RTS and DTR signal control

* re #1146 transforms now follow standard naming {ID}to{ToolReferenceFrame}

* re #1211 minor code review

* re #1211 merging Clear RTS/DTR functions into Set with parameter

* re #1209 adding an option for acceptance of response

* re #1209 updating documentation

* re #1209 Adam's review suggestions

* re #1146 Adam's review suggestions

* re #1146 Device Id is a fallback for ToolReferenceFrame

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/982dd86bd54c1bb91e6891b57004c54f36c10c15|plus:982dd86bd5

#### 2017-07-27, 14:54:26 - Dzenan Zukic
status: changed from "Accepted" to "Fixed"


## #1212 TDATA handling in vtkPlusOpenIGTLinkTracker is not working
See messages 
url:https://app.assembla.com/spaces/plus/messages/5845403|https://app.assembla.com/spaces/plus/messages/5845403

Thanks to @gregorij for debugging!

#### 2017-07-14, 15:37:42 - Adam Rankin
test #1212 fixing error in TDATA handling in vtkPlusOpenIGTLinkTracker

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/601ee5017b81b89400c89a65cc14688da32cc45f|plus:601ee5017b

#### 2017-07-14, 15:37:42 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2017-07-14, 15:37:57 - Adam Rankin
@gregorij Could you test latest? This is probably the same as your local fixes.

#### 2017-07-14, 21:00:47 - gregorij
@rankin Confirming that the fix works. Thanks!

#### 2017-07-15, 22:30:29 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1213 Add OpenCV capture device
OpenCV capture for RTSP was implemented successfully.

Minimal effort to convert to a generic OpenCV capture device.

#### 2017-07-15, 23:11:59 - Anonymous
re #1213 Adding FindFFMPEG module

Adding cmake configuration of RTSP device to pass to PlusLib

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/2eccae4ff9a5b86775156f7fe5efb30f6fbbb8a7|plus.3:2eccae4ff9

#### 2017-07-15, 23:12:48 - Adam Rankin
re #1213 adding first pass configuration file for RTSP video device
Commit: r:5108|plus:5108

#### 2017-07-16, 13:35:01 - Adam Rankin
re #1213 minor correction to configuration file
Commit: r:5109|plus:5109

#### 2017-07-16, 13:38:34 - Anonymous
re #1213 adding first pass implementation of RTSP video device

currently crashes when trying to write frame to buffer (deep in vtkImageData deepcopy) so more investigation needed

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c9e99ecf9bddf6a2c215506a2c91193a77e05893|plus:c9e99ecf9b

#### 2017-07-16, 14:05:40 - Adam Rankin
re #1213 adding first pass implementation of RTSP video device

currently crashes when trying to write frame to buffer (deep in vtkImageData deepcopy) so more investigation needed

temporary change to include new volume query method

re #1138 converting from GET_POLYDATA v2 style query to Plus style command query

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/56dd24bcca14982ff1aacaf07a8a9904372f8ad8|plus:56dd24bcca

#### 2017-07-17, 00:31:42 - Andras Lasso
This will be useful. Thanks for working on this!

#### 2017-07-17, 15:07:06 - Adam Rankin
re #1213 refactoring IGT message packing to use igtlio converter classes

Updating NDI LogVolumeList to detect error when using new GETINFO:Features.Volumes.* and revert to SFLIST approach

Updating LogVolumeList to support properly writing out Polaris/Spectra/Vega values

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/48a31340cc1784715fa71622e65adb92af1b2a5e|plus:48a31340cc

#### 2017-07-19, 01:34:14 - Adam Rankin
description: changed from "Use FFMPEG backend" to "Tried FFMPEG. Nope.

OpenCV..."

#### 2017-07-19, 02:18:12 - Adam Rankin
re #1213 Configuring for OpenCV usage, updating code to use OpenCV

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/13721d5d829de631f574888bf24046066a36756e|plus:13721d5d82

#### 2017-07-19, 02:18:48 - Adam Rankin
re #1213 Updating CMake to ensure OpenCV is enabled when RTSP video is requested

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/b6ef647e2ac6a5a48f9b8a5024b19c42a87d4e9a|plus.3:b6ef647e2a

#### 2017-07-19, 04:58:23 - Andras Lasso
re #1213: Fixed build error on VS2010

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0f7b8b4ea4d9d3a11037262f8f008f4a59d73374|plus:0f7b8b4ea4

#### 2017-07-19, 05:07:04 - Andras Lasso
re #1213: Fixed build warning

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/6b3781ed54b252eddd945d8a09ee0c52b6f3b040|plus:6b3781ed54

#### 2017-07-22, 21:41:53 - Adam Rankin
re #1213 adding intelligent close function to reduce code copy-pasting

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8d21dfa9eab384af7e0de19f0747e34764174355|plus:8d21dfa9ea

#### 2017-07-22, 22:45:04 - Adam Rankin
re #1213 adding intelligent close function to reduce code copy-pasting

Adding NDITracker as device name in addition to PolarisTracker/AuroraTracker

Improving NDITracker probe code

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bdbe05a937c1f25c679d71522c2a98e750412329|plus:bdbe05a937

#### 2017-07-22, 22:46:57 - Adam Rankin
re #1213 cleaning up RTSP config file
Commit: r:5111|plus:5111

#### 2017-07-22, 22:48:42 - Adam Rankin
re #1213 adding devices to device list

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/9f9c55bff4203dd5d8a68fe5d549b3f039c3355c|plus.2:9f9c55bff4

#### 2017-07-24, 19:21:54 - Adam Rankin
re #1213 enabling potential to use VTK8

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/5864bb023a9ea1857cec589283bf782edf911713|plus.3:5864bb023a

#### 2017-07-25, 20:37:45 - Adam Rankin
re #1213 improving copy of ndicapi libraries to check for existence

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/9a4f1f7a9364490c00eea9febcbf5468bb0182f8|plus:9a4f1f7a93

#### 2017-07-25, 20:40:10 - Adam Rankin
re #1213 improving copy of ndicapi libraries to check for existence

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/60a1e2365d209bfa91cd67d9d3f9c61244a14330|plus:60a1e2365d

#### 2017-07-26, 04:52:01 - Adam Rankin
re #1213 forcing use of FFMPEG for rtsp streaming

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/4d88d42ed9ac4622f38747ef16b7eecc5127a732|plus:4d88d42ed9

#### 2017-07-26, 18:27:45 - Adam Rankin
re #1213 adding INIT call to tracker when using network interface

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/e5969542927d3e91cc59e83bade89e81a5d158e5|plus:e596954292

#### 2017-07-27, 19:03:42 - Adam Rankin
re #1213 preventing race condition by using a mutex for serial port access instead of re-using update mutex

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b1c33498340c6cc91345af697257c7f8117db0af|plus:b1c3349834

#### 2017-07-27, 20:54:31 - Adam Rankin
re #1213 Correct using CMAKE_RUNTIME_OUTPUT_DIRECTORY and related variables, and added the ability for downstream projects to set them externally

Branch: cmake_output_dirs
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/2182db6c50e3284b2f72f455fc1a8e72b99f9a4a|plus.3:2182db6c50

#### 2017-07-28, 17:44:59 - Adam Rankin
re #1213 reducing back to opencv 3.1.0 to enable compilation of ovrvision pro device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/2a36169bbed083514979cbe979abcc7fbb55d707|plus.3:2a36169bbe

#### 2017-07-28, 18:47:32 - Adam Rankin
Merge pull request #8 from PlusToolkit/cmake_output_dirs

re #1213 Correct using CMAKE_RUNTIME_OUTPUT_DIRECTORY and related var…

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/49c3bd282707762a0b4c70ba047fc7e55cecb221|plus.3:49c3bd2827

#### 2017-07-30, 17:26:02 - Adam Rankin
re #1213 Updating to OpenCV 3.2.0 after updating/fixing OvrvisionPro

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/d5b2ec460946155ec574b2179f2342917a456e85|plus.3:d5b2ec4609

#### 2017-07-30, 19:16:41 - Adam Rankin
re #1213 commiting rename changes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ab09f9e8168c742a43bca791f9fed11fe4b949c1|plus:ab09f9e816

#### 2017-07-30, 19:16:41 - Adam Rankin
re #1213 Altering contents of cxx for rename

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/07cf745a3497969e49274dfc7658d5be641e6c80|plus:07cf745a34

#### 2017-07-30, 19:16:41 - Adam Rankin
re #1213 renaming folder

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/8b4ff759e98e1f12da138a3ab5db8e130719ba47|plus:8b4ff759e9

#### 2017-07-30, 19:19:03 - Adam Rankin
re #1213 Finalizing rename of RTSP to OpenCV device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/f8afc39cb4a5c4e703ae996fdc2f106d7ec3561d|plus.3:f8afc39cb4

#### 2017-07-30, 19:19:21 - Adam Rankin
re #1213 PlusApp related changes for RTSP to OpenCV rename

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/adbfcbf38ae25489907cbe86aa6a8495e5081571|plus.2:adbfcbf38a

#### 2017-07-31, 01:39:30 - Adam Rankin
test #1213 Finishing conversion of RTSP to generic OpenCV capture device

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0234c49a1d16dcf2c5beee7792765edb4ff9e664|plus:0234c49a1d

#### 2017-07-31, 01:39:30 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-07-31, 14:24:31 - Adam Rankin
re #1213 updating config files
Commit: r:5112|plus:5112

#### 2017-07-31, 20:38:02 - Adam Rankin
re #1213 correcting error when adding a frame in OpenCVVideo/vtkPlusOpenCVCaptureVideoSource.cxx

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/befbd597292a5dee0f2daa6deb2a3fc83f20f279|plus:befbd59729

#### 2017-08-01, 19:52:59 - Adam Rankin
re #1213 adding overload of AddItem where US_IMG_ORIENTATION defaults to data source input orientation

Branch: add_item_documentation
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0456d59095a116c527fb782fa9f2fdccd3534a76|plus:0456d59095

#### 2017-08-04, 15:46:13 - Adam Rankin
summary: changed from "Add RTSP device" to "Add OpenCV capture device"

#### 2017-08-04, 15:46:42 - Adam Rankin
description: changed from "Tried FFMPEG. Nope.

OpenCV..." to "OpenCV capture for RTSP was..."

#### 2017-08-04, 15:47:02 - Adam Rankin
Confirmed working.

#### 2017-08-04, 15:47:02 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-08-23, 14:33:15 - Adam Rankin
re #1213 renaming opencvvideo source and fixing parameters
Commit: r:5119|plus:5119

#### 2017-08-24, 21:55:25 - Andras Lasso
re #1213: Force not to build OpenCV documentation

It just takes a lot of time and space to build and it is not necessary.

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/d7faad777c4261569a9e56979b3b61e62a95af4f|plus.3:d7faad777c


## #1214 Enable configurable output directories
Enable the option to configure where output is written too.

#### 2017-07-30, 23:24:16 - Adam Rankin
re #1214 Correctly setting output directories

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/c710693749d42e295749217bc9eb203b9ddf6a2a|plus.3:c710693749

#### 2017-07-31, 00:34:53 - Adam Rankin
re #1214 Upgrading to ITK 4.12.0 to support CMAKE_CXX_STANDARD 11 without --std=c++11

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/60df4f1021debb20ce92d4cfd7cbe39fbfce6c69|plus.3:60df4f1021

#### 2017-07-31, 00:50:06 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-07-31, 01:13:22 - Adam Rankin
re #1214 OpenCV CMake is still using outdated CMake variables

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/31f560ad1b5a08ae459c674c8f039c45c73d77f1|plus.3:31f560ad1b

#### 2017-07-31, 01:38:16 - Adam Rankin
Unable to force OpenCV to put output files where desired. LIBRARY_OUTPUT_PATH is overwritten.

#### 2017-07-31, 01:38:16 - Adam Rankin
status: changed from "Test" to "Fixed"

#### 2017-07-31, 16:29:46 - Adam Rankin
re #1214 correctly setting dependency when VTK_DIR is provided

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/107b77adbd3d82cd32d1dd5d558ae0c5902f1da1|plus.3:107b77adbd


## #1215 Update dashboard URL
CDash server is moved from crunch.cs.queensu.ca to perkdata.cs.queensu.ca.
Update CDash submission URLs and documentation accordingly.
Also change PlusLib's project name from PLUS to PlusLib for consistency.

#### 2017-08-04, 01:07:08 - Andras Lasso
re #1215: Updated dashboard URL

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/d9de447eb8741c554419962aa4910e6b34d5e526|plus.3:d9de447eb8

#### 2017-08-04, 01:09:18 - Andras Lasso
re #1215: Updated dashboard URL

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/442c91dae8fd0c5b20b5b48bad3cae1b0526f86f|plus:442c91dae8

#### 2017-08-04, 01:10:12 - Andras Lasso
re #1215: Updated dashboard URL

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/60626170cf2e4d02f60ce02df601f89c0f35d0a3|plus.2:60626170cf

#### 2017-08-04, 01:16:33 - Adam Rankin
Yeesss... the inconsistent naming has bugged me forever!


## #1216 CMake maintenance
This ticket is used to capture all minor fixes and improvements to CMake configuration of PlusBuild/PlusApp/PlusLib

Major changes or changes specific to a current task should be submitted under their respective tickets.

#### 2017-08-04, 15:50:00 - Adam Rankin
re #1216 Only producing Ultrasonix SDK versions if ultrasonix is selected

(cleaning up CMake interface when configuring)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusBuild/commit/9d6c2f07f5cd3f3a5013c82d18868bab82eba30b|plus.3:9d6c2f07f5

#### 2017-08-04, 15:50:00 - Adam Rankin
assigned_to_id: changed from null to "rankin"


## #1217 SegmentationParameterDialog crash on load
When the values of the wire configuration are in a certain configuration, a change call is made when the reference height and width are set.

This causes a crash in the handler because it references a spacing mode dialog that isn't created yet.

#### 2017-08-04, 22:34:57 - Adam Rankin
fixed #1217 disabling signal emission during readconfiguration

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/38db56185c9040ca2dc394dfd171393a4a91a6db|plus.2:38db56185c

#### 2017-08-04, 22:34:57 - Adam Rankin
status: changed from "New" to "Fixed"


## #1218 fCal crashes if File attribute of DisplayableObject tag is missing
To reproduce

In example config file, change Stylus_example.stl to anything that doesn't exist

#### 2017-08-06, 15:43:41 - Golafsoun Ameri
Correction, it's when stylusmodelid attribute is not defined in fCal tag

#### 2017-08-06, 15:43:41 - Golafsoun Ameri
CommentContent: changed from "Correction, it's when stylusmodelid attribute is not defined" to "Correction, it's when stylusmodelid attribute is not defined in fCal tag"

#### 2017-08-06, 16:45:46 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-08-06, 16:45:49 - Adam Rankin
Component: changed from null to "PlusApp-fCal"

#### 2017-08-06, 16:45:50 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-08-06, 16:51:14 - Adam Rankin
test #1218 adding necessary guards against null strings being passed in

only setting if a valid value is read from file

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusApp/commit/387b8ecc14ddbdae47903d967893da33da815ae9|plus.2:387b8ecc14

#### 2017-08-06, 16:51:14 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-08-07, 20:38:23 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1219 Device should double check that ToolReferenceFrame is not the same as a datasource
Currently not prevented, see if this is possible to do for all tracker devices

#### 2017-08-06, 20:22:14 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2017-08-06, 20:22:16 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-08-06, 20:22:19 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-08-07, 20:38:34 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-08-07, 20:38:38 - Adam Rankin
status: changed from "New" to "Accepted"

#### 2017-08-07, 21:39:37 - Adam Rankin
status: changed from "Accepted" to "Test"

#### 2017-08-07, 21:52:11 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1220 Latest PLUS cannot connect to Interson probe
I am using the Interson USB ultrasound probe (GV 5.0). I cannot connect to the the probe using the latest. Both the stable release PlusApp-2.4.0.5112-Interson-MTC-3.7-Win32 and the nightly PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32 exhibit this behaviour.

Note that I can successfully connect using an older version of PLUS: PlusApp-2.2.0.4177-Interson-MTC-3.6-Win32.

I am using the standard configuration file that is distributed with the download (I've attached it for convenience).file:b9hR0sFhar56xdacwqjQYw|PlusDeviceSet_Server_IntersonVideoCapture.xml

Error log:

~~~~

|INFO|000.042000| Software version: Plus-2.5.0.dbb84f3 - Win32| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(106)
|INFO|000.042000| Logging at level 3 to file: C:/Users/mholden8/PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32/data/080817_150945_PlusLog.txt| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(107)
|INFO|000.045000| Supported devices: - 3dConnexion (ver: Plus-2.5.0) - Ascension3DG (ver: Plus-2.5.0) - AuroraTracker (ver: NDICAPI-1.7) - BrachyTracker (ver: Plus-2.5.0) - CertusTracker (ver: Optotrak API (Win32 DLL Version) Version 3.01.03) - ChRobotics (ver: Plus-2.5.0) - Epiphan (ver: Plus-2.5.0) - FakeTracker (ver: Plus-2.5.0) - GenericSerialDevice (ver: Plus-2.5.0) - ICCapturing (ver: The Imaging Source UDSHL-3.4) - ImageProcessor (ver: Plus-2.5.0) - IntersonVideo (ver: Interson Bmode DLL v243, USB Probe DLL v163| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(111)
|INFO|000.047000| Server host name: aorta| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(131)
|INFO|000.052000| Server host domain: cisc| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(134)
|INFO|000.053000| Server IP addresses: 130.15.7.188, 127.0.0.1| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(151)
|INFO|000.053000| Start remote control server at port: 18904| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(160)
|INFO|004.978000| Connect using configuration file: C:\\Users\\mholden8\\PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32\\config\\PlusDeviceSet_Server_IntersonVideoCapture.xml| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(318)
|INFO|004.978000| Server process command line: 'C:/Users/mholden8/PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32/bin/PlusServer.exe' --config-file='C:\\Users\\mholden8\\PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32\\config\\PlusDeviceSet_Server_IntersonVideoCapture.xml' --verbose=3| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(209)
|INFO|005.611000| Server process started successfully| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(217)
|INFO|016.085000|SERVER> System start timestamp: 934349
|INFO|016.086000|SERVER> Software version: Plus-2.5.0.dbb84f3 - Win32
|INFO|016.086000|SERVER> Logging at level 3 (INFO) to file: C:/Users/mholden8/PlusApp-2.5.0.20170722-Interson-MTC-3.7-Win32/data/080817_151001_PlusLog.txt
|INFO|016.086000|SERVER> Server status: Reading configuration.
|INFO|016.087000|SERVER> Selected US image orientation: MF
|ERROR|016.087000|SERVER> VideoDevice: Unable to find data collection element in XML tree!| in :\\D\\PTNPIMT37b\\PlusLib\\src\\PlusDataCollection\\vtkPlusDevice.cxx(869)
|ERROR|016.101000|SERVER> Unable to continue configuration of vtkPlusIntersonVideoSource. Could not find corresponding element.| in :\\D\\PTNPIMT37b\\PlusLib\\src\\PlusDataCollection\\vtkPlusUsDevice.cxx(58)
|INFO|016.102000|SERVER> Server status: Connecting to devices.
|INFO|016.102000|SERVER> WDU_Init: error code: 0
|ERROR|018.743000| Server process error: Crashed| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(475)
|ERROR|018.743000| Server stopped unexpectedly. Return code: -1073741819| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(488)
|INFO|018.743000| Disconnect request successful| in D:\\D\\PTNPIMT37b\\PlusApp\\PlusServerLauncher\\PlusServerLauncherMainWindow.cxx(311)

~~~~



## #1221 Support for NDI Polaris broken in Plus-2.5


#### 2017-08-09, 14:28:12 - Adam Rankin
Can you be more specific? Which device? Which firmware?

#### 2017-08-09, 14:28:58 - Adam Rankin
And are you sure you're on the latest ndicapi?

#### 2017-08-09, 14:29:41 - Mark Asselin
@rankin I tried connecting to our Polaris Spectra using the latest nightly again this morning, both with and without specifying the COM port # in my config file.  To no avail.  I can connect to the tracker using NDITrack and the stable release of Plus using the same config file. The firmware revision is 015.

file:d3FkocFq4r54S6acwqjQYw|Plus-2.5-ComNotSpecified.txt
file:d3Hv0gFq4r54owdmr6QqzO|Plus-2.5-ComSpecified.txt
file:d7AsdeFq4r56Rddmr6bg7m|PlusDeviceSet_Server_NDIPolaris.xml


#### 2017-08-09, 14:30:02 - Adam Rankin
built or installed plus?

#### 2017-08-09, 14:30:32 - Mark Asselin
Installed from latest nightly.  Is there more up to date code not in the nightly packages yet?

#### 2017-08-09, 14:30:32 - Mark Asselin
CommentContent: changed from "Installed from latest nightly.  Is there more up to date code in not in the nightly packages yet?" to "Installed from latest nightly.  Is there more up to date code not in the nightly packages yet?"

#### 2017-08-09, 14:31:10 - Adam Rankin
I'll head in to work and test on our spectra. Give me 15 minutes

#### 2017-08-09, 14:32:36 - Mark Asselin
Sure.

#### 2017-08-09, 15:01:10 - Adam Rankin
Confirmed, fix on the way.

#### 2017-08-09, 15:01:52 - Mark Asselin
Great, thanks!

#### 2017-08-09, 15:02:11 - Mark Asselin
assigned_to_id: changed from null to "rankin"

#### 2017-08-09, 15:02:18 - Mark Asselin
Component: changed from null to "PlusLib"

#### 2017-08-09, 15:02:21 - Mark Asselin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-08-09, 15:02:29 - Mark Asselin
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-08-09, 15:02:59 - Adam Rankin
Hmm, I'll see if I can re-run the packaging

#### 2017-08-09, 15:03:18 - Adam Rankin
Ah, firewalled. Either wait until tomorrow, build your own Plus, or see if @lassoan can re-run packaging.

#### 2017-08-09, 15:03:18 - Adam Rankin
CommentContent: changed from "Ah, @lasso" to "Ah, firewalled. Either wait until tomorrow, build your own Plus, or see if @lassoan can re-run packaging."

#### 2017-08-09, 15:03:59 - Adam Rankin
assigned_to_id: changed from "rankin" to "markasselin"

#### 2017-08-09, 15:03:59 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-08-09, 15:04:55 - Mark Asselin
I'm working on a few time critical things today, so I will test this tomorrow morning using the latest nightly.

#### 2017-08-28, 22:56:39 - Adam Rankin
re #1221 adding support for 230400 baud rate for NDI aurora devices

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/1fcb98da5655dd5012b1677218e5381c198d5338|plus:1fcb98da56

#### 2017-08-29, 17:43:32 - Adam Rankin
re #1221 auto-selecting fastest available baud rate based on comm reply analysis

fixing openigtlink tracker test

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/76b9a61580e9b2fed4283182ba1b845760b990a4|plus:76b9a61580


## #1222 Probing for NDI serial ports is slow
Parallel probing of serial ports would speed things up

#### 2017-08-09, 16:25:00 - Adam Rankin
test #1222 Utilize std::async and std::future to probe serial ports in parallel

Branch: parallel_ndi_probe
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/787e9e8d056ae63b4d96c30ce1cc33651672b9b1|plus:787e9e8d05

#### 2017-08-09, 16:25:00 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-08-14, 19:37:01 - Adam Rankin
test #1222 Utilize std::async and std::future to probe serial ports in parallel

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/0420e2e5631ac3ce2759d4ebb9f2386a0f4d910d|plus:0420e2e563

#### 2017-08-14, 19:37:25 - Adam Rankin
test #1222 Utilize std::async and std::future to probe serial ports in parallel (#67)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/bdcea8c224a3f7abe421bc4c7b8ba488ab19bc4d|plus:bdcea8c224

#### 2017-08-16, 21:23:21 - Adam Rankin
fixed #1222 preventing race condition access same static char memory for device name when enumerating serial ports in parallel

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/ce9809b8f1a2e8c31b2fe5bf0eef9604f93507f4|plus:ce9809b8f1

#### 2017-08-16, 21:23:21 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1223 NDI Polaris (original) commands are incorrect
Investigate:


~~~~
080917_135857.468|DEBUG|000.560000| NDI Command:COMM:50000| in D:\\D\\PTNPS61b\\PlusLib\\src\\PlusDataCollection\
DICAPITracking\\vtkPlusNDITracker.cxx(233)
080917_135857.503|ERROR|000.595000| Invalid CRC calculated for command| in D:\\D\\PTNPS61b\\PlusLib\\src\\PlusDataCollection\
DICAPITracking\\vtkPlusNDITracker.cxx(332)

~~~~


#### 2017-08-09, 21:15:50 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-08-09, 21:15:53 - Adam Rankin
Component: changed from null to "PlusLib"

#### 2017-08-09, 21:15:55 - Adam Rankin
milestone_id: changed from null to "Plus-2.5.0"

#### 2017-08-09, 21:15:56 - Adam Rankin
Issue Type: changed from "Enhancement" to "Bug"

#### 2017-08-09, 21:15:58 - Adam Rankin
description: changed from "Investigate:

````
080917_1..." to "Investigate:

&lt;pre&gt;&lt;code&gt;08..."

#### 2017-08-09, 21:16:19 - Adam Rankin
re #1223 adding additional debug information to NDI command sending/receiving

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/d4c62af9cd3ec06d0936eebaf490cc2581a33152|plus:d4c62af9cd

#### 2017-08-14, 19:37:01 - Adam Rankin
re #1223 adding proper binary reply output for debugging purposes

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/c1e7a0c5c96734ac87207eb097e8cca0944bb5b3|plus:c1e7a0c5c9

#### 2017-08-18, 17:00:35 - Adam Rankin
status: changed from "New" to "Test"

#### 2017-08-28, 22:53:04 - Adam Rankin
status: changed from "Test" to "Fixed"


## #1224 vtkPlusOpenIGTLinkVideoSource not sending embedded image transform name in TRACKEDFRAME messages
Sending server is unable to send frames to the client as the embedded image transform name is mandatory

#### 2017-08-18, 14:21:19 - Adam Rankin
I see. Tracked frames might be sent without embedded image transform?

#### 2017-08-18, 14:35:52 - Adam Rankin
re #1224 cleaning up configuration files
Commit: r:5117|plus:5117

#### 2017-08-18, 14:37:54 - Adam Rankin
re #1224 refactoring tracked frame packing to treat image name as an optional argument to embed an image transform with each tracked frame (revert to identity if not specified)

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/486e7d22d2688a44b1618e7b2914c213e205919a|plus:486e7d22d2

#### 2017-08-18, 14:40:08 - Adam Rankin
re #1224 refactoring openigtlink devices to reduce code replication

clarifying variable names to indicate underlying purpose

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/b6a0be356539a12e2a0df2aa409569ee9b7fb7a2|plus:b6a0be3565

#### 2017-08-18, 14:40:18 - Adam Rankin
status: changed from "Accepted" to "Fixed"


## #1225 32->64 volume reconstruction is empty in Slicer
With example setup (saved data)

PlusDeviceSet_Server_Sim_NwirePhantomTrackedFrameProcessing.xml
PlusDeviceSet_Server_Sim_NwirePhantomTrackedFrameAcquisition.xml

scout scan produces data, live volume reconstruction does not

#### 2017-08-18, 19:34:09 - ppandey
What are the results with offline reconstruction on saved data?

#### 2017-08-21, 16:32:40 - ppandey
Origin (placement) of reconstructed volume is incorrect and physical dimensions of the reconstruction seems to be incorrectly dependant on the output spacing parameter when testing offline reconstruction.


## #1226 fCal records frames at 10fps, but device is running at 27fps
Ultrasonix, 9cm, 27Hz reported on console

#### 2017-08-26, 15:11:36 - Adam Rankin
re #1226 applying astyle formatting to SonixVideo/vtkPlusSonixVideoSource.cxx

Branch: master
Commit: url:https://github.com/PlusToolkit/PlusLib/commit/a5676e21edc2a0adc1ca565ab58d910b34138e91|plus:a5676e21ed

#### 2017-08-26, 15:11:36 - Adam Rankin
assigned_to_id: changed from null to "rankin"

#### 2017-08-26, 16:34:40 - Adam Rankin
assigned_to_id: changed from "rankin" to null

#### 2017-08-28, 16:36:56 - Adam Rankin
https://github.com/PlusToolkit/PlusLib/blob/master/src/PlusDataCollection/SonixVideo/vtkPlusSonixVideoSource.cxx#L136

This function is being called at the update rate indicated on the Ultrasonix console. This leads me to believe that the problem is somewhere in Plus.


## #1227 AcquisitionRate is not updated in vtkPlusSavedDataSource when UseOriginalTimestamps='TRUE'
AcquisitionRate remains 10, leading fCal to believe that the fastest it can record frames is 10FPS.

This should be updated to reflect the actual FPS of the original timestamps.


## #1228 Add support for compressed video transfer through OpenIGTLink
Imaging speed could be improved by using video compression methods.
Some support has been already added in OpenIGTLink and OpenIGTLinkIO.

https://na-mic.org/wiki/Project_Week_25/Tracked-Ultrasound-Standardization-IV



## #1229 Use Motive API instead of NatNet SDK for OptiTrack support
Using the Motive API allows us to track rigid bodies with OptiTrack tracking systems without having to run the Motive GUI application.

#### 2017-09-05, 20:34:43 - Zac Baum
re #1229: Updated config files to reflect OptiTrack changeover to Motive API
Commit: r:5123|plus:5123


## #1230 add RigidBodyAddFromFile() function from the ndi oapi
similar to how RigidBodyAddFromDeviceHandle is being used currently.


